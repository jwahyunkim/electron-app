function getDefaultExportFromCjs(x2) {
  return x2 && x2.__esModule && Object.prototype.hasOwnProperty.call(x2, "default") ? x2["default"] : x2;
}
var jsxRuntime = { exports: {} };
var reactJsxRuntime_production_min = {};
var react = { exports: {} };
var react_production_min = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReact_production_min;
function requireReact_production_min() {
  if (hasRequiredReact_production_min) return react_production_min;
  hasRequiredReact_production_min = 1;
  var l3 = Symbol.for("react.element"), n2 = Symbol.for("react.portal"), p3 = Symbol.for("react.fragment"), q2 = Symbol.for("react.strict_mode"), r3 = Symbol.for("react.profiler"), t3 = Symbol.for("react.provider"), u3 = Symbol.for("react.context"), v2 = Symbol.for("react.forward_ref"), w2 = Symbol.for("react.suspense"), x2 = Symbol.for("react.memo"), y2 = Symbol.for("react.lazy"), z3 = Symbol.iterator;
  function A2(a3) {
    if (null === a3 || "object" !== typeof a3) return null;
    a3 = z3 && a3[z3] || a3["@@iterator"];
    return "function" === typeof a3 ? a3 : null;
  }
  var B2 = { isMounted: function() {
    return false;
  }, enqueueForceUpdate: function() {
  }, enqueueReplaceState: function() {
  }, enqueueSetState: function() {
  } }, C2 = Object.assign, D2 = {};
  function E2(a3, b3, e2) {
    this.props = a3;
    this.context = b3;
    this.refs = D2;
    this.updater = e2 || B2;
  }
  E2.prototype.isReactComponent = {};
  E2.prototype.setState = function(a3, b3) {
    if ("object" !== typeof a3 && "function" !== typeof a3 && null != a3) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
    this.updater.enqueueSetState(this, a3, b3, "setState");
  };
  E2.prototype.forceUpdate = function(a3) {
    this.updater.enqueueForceUpdate(this, a3, "forceUpdate");
  };
  function F2() {
  }
  F2.prototype = E2.prototype;
  function G2(a3, b3, e2) {
    this.props = a3;
    this.context = b3;
    this.refs = D2;
    this.updater = e2 || B2;
  }
  var H3 = G2.prototype = new F2();
  H3.constructor = G2;
  C2(H3, E2.prototype);
  H3.isPureReactComponent = true;
  var I2 = Array.isArray, J2 = Object.prototype.hasOwnProperty, K2 = { current: null }, L3 = { key: true, ref: true, __self: true, __source: true };
  function M3(a3, b3, e2) {
    var d2, c2 = {}, k3 = null, h2 = null;
    if (null != b3) for (d2 in void 0 !== b3.ref && (h2 = b3.ref), void 0 !== b3.key && (k3 = "" + b3.key), b3) J2.call(b3, d2) && !L3.hasOwnProperty(d2) && (c2[d2] = b3[d2]);
    var g2 = arguments.length - 2;
    if (1 === g2) c2.children = e2;
    else if (1 < g2) {
      for (var f4 = Array(g2), m2 = 0; m2 < g2; m2++) f4[m2] = arguments[m2 + 2];
      c2.children = f4;
    }
    if (a3 && a3.defaultProps) for (d2 in g2 = a3.defaultProps, g2) void 0 === c2[d2] && (c2[d2] = g2[d2]);
    return { $$typeof: l3, type: a3, key: k3, ref: h2, props: c2, _owner: K2.current };
  }
  function N3(a3, b3) {
    return { $$typeof: l3, type: a3.type, key: b3, ref: a3.ref, props: a3.props, _owner: a3._owner };
  }
  function O2(a3) {
    return "object" === typeof a3 && null !== a3 && a3.$$typeof === l3;
  }
  function escape(a3) {
    var b3 = { "=": "=0", ":": "=2" };
    return "$" + a3.replace(/[=:]/g, function(a4) {
      return b3[a4];
    });
  }
  var P2 = /\/+/g;
  function Q2(a3, b3) {
    return "object" === typeof a3 && null !== a3 && null != a3.key ? escape("" + a3.key) : b3.toString(36);
  }
  function R3(a3, b3, e2, d2, c2) {
    var k3 = typeof a3;
    if ("undefined" === k3 || "boolean" === k3) a3 = null;
    var h2 = false;
    if (null === a3) h2 = true;
    else switch (k3) {
      case "string":
      case "number":
        h2 = true;
        break;
      case "object":
        switch (a3.$$typeof) {
          case l3:
          case n2:
            h2 = true;
        }
    }
    if (h2) return h2 = a3, c2 = c2(h2), a3 = "" === d2 ? "." + Q2(h2, 0) : d2, I2(c2) ? (e2 = "", null != a3 && (e2 = a3.replace(P2, "$&/") + "/"), R3(c2, b3, e2, "", function(a4) {
      return a4;
    })) : null != c2 && (O2(c2) && (c2 = N3(c2, e2 + (!c2.key || h2 && h2.key === c2.key ? "" : ("" + c2.key).replace(P2, "$&/") + "/") + a3)), b3.push(c2)), 1;
    h2 = 0;
    d2 = "" === d2 ? "." : d2 + ":";
    if (I2(a3)) for (var g2 = 0; g2 < a3.length; g2++) {
      k3 = a3[g2];
      var f4 = d2 + Q2(k3, g2);
      h2 += R3(k3, b3, e2, f4, c2);
    }
    else if (f4 = A2(a3), "function" === typeof f4) for (a3 = f4.call(a3), g2 = 0; !(k3 = a3.next()).done; ) k3 = k3.value, f4 = d2 + Q2(k3, g2++), h2 += R3(k3, b3, e2, f4, c2);
    else if ("object" === k3) throw b3 = String(a3), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b3 ? "object with keys {" + Object.keys(a3).join(", ") + "}" : b3) + "). If you meant to render a collection of children, use an array instead.");
    return h2;
  }
  function S2(a3, b3, e2) {
    if (null == a3) return a3;
    var d2 = [], c2 = 0;
    R3(a3, d2, "", "", function(a4) {
      return b3.call(e2, a4, c2++);
    });
    return d2;
  }
  function T2(a3) {
    if (-1 === a3._status) {
      var b3 = a3._result;
      b3 = b3();
      b3.then(function(b4) {
        if (0 === a3._status || -1 === a3._status) a3._status = 1, a3._result = b4;
      }, function(b4) {
        if (0 === a3._status || -1 === a3._status) a3._status = 2, a3._result = b4;
      });
      -1 === a3._status && (a3._status = 0, a3._result = b3);
    }
    if (1 === a3._status) return a3._result.default;
    throw a3._result;
  }
  var U2 = { current: null }, V2 = { transition: null }, W = { ReactCurrentDispatcher: U2, ReactCurrentBatchConfig: V2, ReactCurrentOwner: K2 };
  function X2() {
    throw Error("act(...) is not supported in production builds of React.");
  }
  react_production_min.Children = { map: S2, forEach: function(a3, b3, e2) {
    S2(a3, function() {
      b3.apply(this, arguments);
    }, e2);
  }, count: function(a3) {
    var b3 = 0;
    S2(a3, function() {
      b3++;
    });
    return b3;
  }, toArray: function(a3) {
    return S2(a3, function(a4) {
      return a4;
    }) || [];
  }, only: function(a3) {
    if (!O2(a3)) throw Error("React.Children.only expected to receive a single React element child.");
    return a3;
  } };
  react_production_min.Component = E2;
  react_production_min.Fragment = p3;
  react_production_min.Profiler = r3;
  react_production_min.PureComponent = G2;
  react_production_min.StrictMode = q2;
  react_production_min.Suspense = w2;
  react_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W;
  react_production_min.act = X2;
  react_production_min.cloneElement = function(a3, b3, e2) {
    if (null === a3 || void 0 === a3) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a3 + ".");
    var d2 = C2({}, a3.props), c2 = a3.key, k3 = a3.ref, h2 = a3._owner;
    if (null != b3) {
      void 0 !== b3.ref && (k3 = b3.ref, h2 = K2.current);
      void 0 !== b3.key && (c2 = "" + b3.key);
      if (a3.type && a3.type.defaultProps) var g2 = a3.type.defaultProps;
      for (f4 in b3) J2.call(b3, f4) && !L3.hasOwnProperty(f4) && (d2[f4] = void 0 === b3[f4] && void 0 !== g2 ? g2[f4] : b3[f4]);
    }
    var f4 = arguments.length - 2;
    if (1 === f4) d2.children = e2;
    else if (1 < f4) {
      g2 = Array(f4);
      for (var m2 = 0; m2 < f4; m2++) g2[m2] = arguments[m2 + 2];
      d2.children = g2;
    }
    return { $$typeof: l3, type: a3.type, key: c2, ref: k3, props: d2, _owner: h2 };
  };
  react_production_min.createContext = function(a3) {
    a3 = { $$typeof: u3, _currentValue: a3, _currentValue2: a3, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null };
    a3.Provider = { $$typeof: t3, _context: a3 };
    return a3.Consumer = a3;
  };
  react_production_min.createElement = M3;
  react_production_min.createFactory = function(a3) {
    var b3 = M3.bind(null, a3);
    b3.type = a3;
    return b3;
  };
  react_production_min.createRef = function() {
    return { current: null };
  };
  react_production_min.forwardRef = function(a3) {
    return { $$typeof: v2, render: a3 };
  };
  react_production_min.isValidElement = O2;
  react_production_min.lazy = function(a3) {
    return { $$typeof: y2, _payload: { _status: -1, _result: a3 }, _init: T2 };
  };
  react_production_min.memo = function(a3, b3) {
    return { $$typeof: x2, type: a3, compare: void 0 === b3 ? null : b3 };
  };
  react_production_min.startTransition = function(a3) {
    var b3 = V2.transition;
    V2.transition = {};
    try {
      a3();
    } finally {
      V2.transition = b3;
    }
  };
  react_production_min.unstable_act = X2;
  react_production_min.useCallback = function(a3, b3) {
    return U2.current.useCallback(a3, b3);
  };
  react_production_min.useContext = function(a3) {
    return U2.current.useContext(a3);
  };
  react_production_min.useDebugValue = function() {
  };
  react_production_min.useDeferredValue = function(a3) {
    return U2.current.useDeferredValue(a3);
  };
  react_production_min.useEffect = function(a3, b3) {
    return U2.current.useEffect(a3, b3);
  };
  react_production_min.useId = function() {
    return U2.current.useId();
  };
  react_production_min.useImperativeHandle = function(a3, b3, e2) {
    return U2.current.useImperativeHandle(a3, b3, e2);
  };
  react_production_min.useInsertionEffect = function(a3, b3) {
    return U2.current.useInsertionEffect(a3, b3);
  };
  react_production_min.useLayoutEffect = function(a3, b3) {
    return U2.current.useLayoutEffect(a3, b3);
  };
  react_production_min.useMemo = function(a3, b3) {
    return U2.current.useMemo(a3, b3);
  };
  react_production_min.useReducer = function(a3, b3, e2) {
    return U2.current.useReducer(a3, b3, e2);
  };
  react_production_min.useRef = function(a3) {
    return U2.current.useRef(a3);
  };
  react_production_min.useState = function(a3) {
    return U2.current.useState(a3);
  };
  react_production_min.useSyncExternalStore = function(a3, b3, e2) {
    return U2.current.useSyncExternalStore(a3, b3, e2);
  };
  react_production_min.useTransition = function() {
    return U2.current.useTransition();
  };
  react_production_min.version = "18.3.1";
  return react_production_min;
}
var hasRequiredReact;
function requireReact() {
  if (hasRequiredReact) return react.exports;
  hasRequiredReact = 1;
  {
    react.exports = requireReact_production_min();
  }
  return react.exports;
}
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactJsxRuntime_production_min;
function requireReactJsxRuntime_production_min() {
  if (hasRequiredReactJsxRuntime_production_min) return reactJsxRuntime_production_min;
  hasRequiredReactJsxRuntime_production_min = 1;
  var f4 = requireReact(), k3 = Symbol.for("react.element"), l3 = Symbol.for("react.fragment"), m2 = Object.prototype.hasOwnProperty, n2 = f4.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p3 = { key: true, ref: true, __self: true, __source: true };
  function q2(c2, a3, g2) {
    var b3, d2 = {}, e2 = null, h2 = null;
    void 0 !== g2 && (e2 = "" + g2);
    void 0 !== a3.key && (e2 = "" + a3.key);
    void 0 !== a3.ref && (h2 = a3.ref);
    for (b3 in a3) m2.call(a3, b3) && !p3.hasOwnProperty(b3) && (d2[b3] = a3[b3]);
    if (c2 && c2.defaultProps) for (b3 in a3 = c2.defaultProps, a3) void 0 === d2[b3] && (d2[b3] = a3[b3]);
    return { $$typeof: k3, type: c2, key: e2, ref: h2, props: d2, _owner: n2.current };
  }
  reactJsxRuntime_production_min.Fragment = l3;
  reactJsxRuntime_production_min.jsx = q2;
  reactJsxRuntime_production_min.jsxs = q2;
  return reactJsxRuntime_production_min;
}
var hasRequiredJsxRuntime;
function requireJsxRuntime() {
  if (hasRequiredJsxRuntime) return jsxRuntime.exports;
  hasRequiredJsxRuntime = 1;
  {
    jsxRuntime.exports = requireReactJsxRuntime_production_min();
  }
  return jsxRuntime.exports;
}
var jsxRuntimeExports = requireJsxRuntime();
var client = {};
var reactDom = { exports: {} };
var reactDom_production_min = {};
var scheduler = { exports: {} };
var scheduler_production_min = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredScheduler_production_min;
function requireScheduler_production_min() {
  if (hasRequiredScheduler_production_min) return scheduler_production_min;
  hasRequiredScheduler_production_min = 1;
  (function(exports) {
    function f4(a3, b3) {
      var c2 = a3.length;
      a3.push(b3);
      a: for (; 0 < c2; ) {
        var d2 = c2 - 1 >>> 1, e2 = a3[d2];
        if (0 < g2(e2, b3)) a3[d2] = b3, a3[c2] = e2, c2 = d2;
        else break a;
      }
    }
    function h2(a3) {
      return 0 === a3.length ? null : a3[0];
    }
    function k3(a3) {
      if (0 === a3.length) return null;
      var b3 = a3[0], c2 = a3.pop();
      if (c2 !== b3) {
        a3[0] = c2;
        a: for (var d2 = 0, e2 = a3.length, w2 = e2 >>> 1; d2 < w2; ) {
          var m2 = 2 * (d2 + 1) - 1, C2 = a3[m2], n2 = m2 + 1, x2 = a3[n2];
          if (0 > g2(C2, c2)) n2 < e2 && 0 > g2(x2, C2) ? (a3[d2] = x2, a3[n2] = c2, d2 = n2) : (a3[d2] = C2, a3[m2] = c2, d2 = m2);
          else if (n2 < e2 && 0 > g2(x2, c2)) a3[d2] = x2, a3[n2] = c2, d2 = n2;
          else break a;
        }
      }
      return b3;
    }
    function g2(a3, b3) {
      var c2 = a3.sortIndex - b3.sortIndex;
      return 0 !== c2 ? c2 : a3.id - b3.id;
    }
    if ("object" === typeof performance && "function" === typeof performance.now) {
      var l3 = performance;
      exports.unstable_now = function() {
        return l3.now();
      };
    } else {
      var p3 = Date, q2 = p3.now();
      exports.unstable_now = function() {
        return p3.now() - q2;
      };
    }
    var r3 = [], t3 = [], u3 = 1, v2 = null, y2 = 3, z3 = false, A2 = false, B2 = false, D2 = "function" === typeof setTimeout ? setTimeout : null, E2 = "function" === typeof clearTimeout ? clearTimeout : null, F2 = "undefined" !== typeof setImmediate ? setImmediate : null;
    "undefined" !== typeof navigator && void 0 !== navigator.scheduling && void 0 !== navigator.scheduling.isInputPending && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function G2(a3) {
      for (var b3 = h2(t3); null !== b3; ) {
        if (null === b3.callback) k3(t3);
        else if (b3.startTime <= a3) k3(t3), b3.sortIndex = b3.expirationTime, f4(r3, b3);
        else break;
        b3 = h2(t3);
      }
    }
    function H3(a3) {
      B2 = false;
      G2(a3);
      if (!A2) if (null !== h2(r3)) A2 = true, I2(J2);
      else {
        var b3 = h2(t3);
        null !== b3 && K2(H3, b3.startTime - a3);
      }
    }
    function J2(a3, b3) {
      A2 = false;
      B2 && (B2 = false, E2(L3), L3 = -1);
      z3 = true;
      var c2 = y2;
      try {
        G2(b3);
        for (v2 = h2(r3); null !== v2 && (!(v2.expirationTime > b3) || a3 && !M3()); ) {
          var d2 = v2.callback;
          if ("function" === typeof d2) {
            v2.callback = null;
            y2 = v2.priorityLevel;
            var e2 = d2(v2.expirationTime <= b3);
            b3 = exports.unstable_now();
            "function" === typeof e2 ? v2.callback = e2 : v2 === h2(r3) && k3(r3);
            G2(b3);
          } else k3(r3);
          v2 = h2(r3);
        }
        if (null !== v2) var w2 = true;
        else {
          var m2 = h2(t3);
          null !== m2 && K2(H3, m2.startTime - b3);
          w2 = false;
        }
        return w2;
      } finally {
        v2 = null, y2 = c2, z3 = false;
      }
    }
    var N3 = false, O2 = null, L3 = -1, P2 = 5, Q2 = -1;
    function M3() {
      return exports.unstable_now() - Q2 < P2 ? false : true;
    }
    function R3() {
      if (null !== O2) {
        var a3 = exports.unstable_now();
        Q2 = a3;
        var b3 = true;
        try {
          b3 = O2(true, a3);
        } finally {
          b3 ? S2() : (N3 = false, O2 = null);
        }
      } else N3 = false;
    }
    var S2;
    if ("function" === typeof F2) S2 = function() {
      F2(R3);
    };
    else if ("undefined" !== typeof MessageChannel) {
      var T2 = new MessageChannel(), U2 = T2.port2;
      T2.port1.onmessage = R3;
      S2 = function() {
        U2.postMessage(null);
      };
    } else S2 = function() {
      D2(R3, 0);
    };
    function I2(a3) {
      O2 = a3;
      N3 || (N3 = true, S2());
    }
    function K2(a3, b3) {
      L3 = D2(function() {
        a3(exports.unstable_now());
      }, b3);
    }
    exports.unstable_IdlePriority = 5;
    exports.unstable_ImmediatePriority = 1;
    exports.unstable_LowPriority = 4;
    exports.unstable_NormalPriority = 3;
    exports.unstable_Profiling = null;
    exports.unstable_UserBlockingPriority = 2;
    exports.unstable_cancelCallback = function(a3) {
      a3.callback = null;
    };
    exports.unstable_continueExecution = function() {
      A2 || z3 || (A2 = true, I2(J2));
    };
    exports.unstable_forceFrameRate = function(a3) {
      0 > a3 || 125 < a3 ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P2 = 0 < a3 ? Math.floor(1e3 / a3) : 5;
    };
    exports.unstable_getCurrentPriorityLevel = function() {
      return y2;
    };
    exports.unstable_getFirstCallbackNode = function() {
      return h2(r3);
    };
    exports.unstable_next = function(a3) {
      switch (y2) {
        case 1:
        case 2:
        case 3:
          var b3 = 3;
          break;
        default:
          b3 = y2;
      }
      var c2 = y2;
      y2 = b3;
      try {
        return a3();
      } finally {
        y2 = c2;
      }
    };
    exports.unstable_pauseExecution = function() {
    };
    exports.unstable_requestPaint = function() {
    };
    exports.unstable_runWithPriority = function(a3, b3) {
      switch (a3) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          a3 = 3;
      }
      var c2 = y2;
      y2 = a3;
      try {
        return b3();
      } finally {
        y2 = c2;
      }
    };
    exports.unstable_scheduleCallback = function(a3, b3, c2) {
      var d2 = exports.unstable_now();
      "object" === typeof c2 && null !== c2 ? (c2 = c2.delay, c2 = "number" === typeof c2 && 0 < c2 ? d2 + c2 : d2) : c2 = d2;
      switch (a3) {
        case 1:
          var e2 = -1;
          break;
        case 2:
          e2 = 250;
          break;
        case 5:
          e2 = 1073741823;
          break;
        case 4:
          e2 = 1e4;
          break;
        default:
          e2 = 5e3;
      }
      e2 = c2 + e2;
      a3 = { id: u3++, callback: b3, priorityLevel: a3, startTime: c2, expirationTime: e2, sortIndex: -1 };
      c2 > d2 ? (a3.sortIndex = c2, f4(t3, a3), null === h2(r3) && a3 === h2(t3) && (B2 ? (E2(L3), L3 = -1) : B2 = true, K2(H3, c2 - d2))) : (a3.sortIndex = e2, f4(r3, a3), A2 || z3 || (A2 = true, I2(J2)));
      return a3;
    };
    exports.unstable_shouldYield = M3;
    exports.unstable_wrapCallback = function(a3) {
      var b3 = y2;
      return function() {
        var c2 = y2;
        y2 = b3;
        try {
          return a3.apply(this, arguments);
        } finally {
          y2 = c2;
        }
      };
    };
  })(scheduler_production_min);
  return scheduler_production_min;
}
var hasRequiredScheduler;
function requireScheduler() {
  if (hasRequiredScheduler) return scheduler.exports;
  hasRequiredScheduler = 1;
  {
    scheduler.exports = requireScheduler_production_min();
  }
  return scheduler.exports;
}
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var hasRequiredReactDom_production_min;
function requireReactDom_production_min() {
  if (hasRequiredReactDom_production_min) return reactDom_production_min;
  hasRequiredReactDom_production_min = 1;
  var aa = requireReact(), ca = requireScheduler();
  function p3(a3) {
    for (var b3 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a3, c2 = 1; c2 < arguments.length; c2++) b3 += "&args[]=" + encodeURIComponent(arguments[c2]);
    return "Minified React error #" + a3 + "; visit " + b3 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
  }
  var da = /* @__PURE__ */ new Set(), ea = {};
  function fa(a3, b3) {
    ha(a3, b3);
    ha(a3 + "Capture", b3);
  }
  function ha(a3, b3) {
    ea[a3] = b3;
    for (a3 = 0; a3 < b3.length; a3++) da.add(b3[a3]);
  }
  var ia = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), ja = Object.prototype.hasOwnProperty, ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, la = {}, ma = {};
  function oa(a3) {
    if (ja.call(ma, a3)) return true;
    if (ja.call(la, a3)) return false;
    if (ka.test(a3)) return ma[a3] = true;
    la[a3] = true;
    return false;
  }
  function pa(a3, b3, c2, d2) {
    if (null !== c2 && 0 === c2.type) return false;
    switch (typeof b3) {
      case "function":
      case "symbol":
        return true;
      case "boolean":
        if (d2) return false;
        if (null !== c2) return !c2.acceptsBooleans;
        a3 = a3.toLowerCase().slice(0, 5);
        return "data-" !== a3 && "aria-" !== a3;
      default:
        return false;
    }
  }
  function qa(a3, b3, c2, d2) {
    if (null === b3 || "undefined" === typeof b3 || pa(a3, b3, c2, d2)) return true;
    if (d2) return false;
    if (null !== c2) switch (c2.type) {
      case 3:
        return !b3;
      case 4:
        return false === b3;
      case 5:
        return isNaN(b3);
      case 6:
        return isNaN(b3) || 1 > b3;
    }
    return false;
  }
  function v2(a3, b3, c2, d2, e2, f4, g2) {
    this.acceptsBooleans = 2 === b3 || 3 === b3 || 4 === b3;
    this.attributeName = d2;
    this.attributeNamespace = e2;
    this.mustUseProperty = c2;
    this.propertyName = a3;
    this.type = b3;
    this.sanitizeURL = f4;
    this.removeEmptyString = g2;
  }
  var z3 = {};
  "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a3) {
    z3[a3] = new v2(a3, 0, false, a3, null, false, false);
  });
  [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a3) {
    var b3 = a3[0];
    z3[b3] = new v2(b3, 1, false, a3[1], null, false, false);
  });
  ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a3) {
    z3[a3] = new v2(a3, 2, false, a3.toLowerCase(), null, false, false);
  });
  ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a3) {
    z3[a3] = new v2(a3, 2, false, a3, null, false, false);
  });
  "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a3) {
    z3[a3] = new v2(a3, 3, false, a3.toLowerCase(), null, false, false);
  });
  ["checked", "multiple", "muted", "selected"].forEach(function(a3) {
    z3[a3] = new v2(a3, 3, true, a3, null, false, false);
  });
  ["capture", "download"].forEach(function(a3) {
    z3[a3] = new v2(a3, 4, false, a3, null, false, false);
  });
  ["cols", "rows", "size", "span"].forEach(function(a3) {
    z3[a3] = new v2(a3, 6, false, a3, null, false, false);
  });
  ["rowSpan", "start"].forEach(function(a3) {
    z3[a3] = new v2(a3, 5, false, a3.toLowerCase(), null, false, false);
  });
  var ra = /[\-:]([a-z])/g;
  function sa(a3) {
    return a3[1].toUpperCase();
  }
  "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a3) {
    var b3 = a3.replace(
      ra,
      sa
    );
    z3[b3] = new v2(b3, 1, false, a3, null, false, false);
  });
  "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a3) {
    var b3 = a3.replace(ra, sa);
    z3[b3] = new v2(b3, 1, false, a3, "http://www.w3.org/1999/xlink", false, false);
  });
  ["xml:base", "xml:lang", "xml:space"].forEach(function(a3) {
    var b3 = a3.replace(ra, sa);
    z3[b3] = new v2(b3, 1, false, a3, "http://www.w3.org/XML/1998/namespace", false, false);
  });
  ["tabIndex", "crossOrigin"].forEach(function(a3) {
    z3[a3] = new v2(a3, 1, false, a3.toLowerCase(), null, false, false);
  });
  z3.xlinkHref = new v2("xlinkHref", 1, false, "xlink:href", "http://www.w3.org/1999/xlink", true, false);
  ["src", "href", "action", "formAction"].forEach(function(a3) {
    z3[a3] = new v2(a3, 1, false, a3.toLowerCase(), null, true, true);
  });
  function ta(a3, b3, c2, d2) {
    var e2 = z3.hasOwnProperty(b3) ? z3[b3] : null;
    if (null !== e2 ? 0 !== e2.type : d2 || !(2 < b3.length) || "o" !== b3[0] && "O" !== b3[0] || "n" !== b3[1] && "N" !== b3[1]) qa(b3, c2, e2, d2) && (c2 = null), d2 || null === e2 ? oa(b3) && (null === c2 ? a3.removeAttribute(b3) : a3.setAttribute(b3, "" + c2)) : e2.mustUseProperty ? a3[e2.propertyName] = null === c2 ? 3 === e2.type ? false : "" : c2 : (b3 = e2.attributeName, d2 = e2.attributeNamespace, null === c2 ? a3.removeAttribute(b3) : (e2 = e2.type, c2 = 3 === e2 || 4 === e2 && true === c2 ? "" : "" + c2, d2 ? a3.setAttributeNS(d2, b3, c2) : a3.setAttribute(b3, c2)));
  }
  var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, va = Symbol.for("react.element"), wa = Symbol.for("react.portal"), ya = Symbol.for("react.fragment"), za = Symbol.for("react.strict_mode"), Aa = Symbol.for("react.profiler"), Ba = Symbol.for("react.provider"), Ca = Symbol.for("react.context"), Da = Symbol.for("react.forward_ref"), Ea = Symbol.for("react.suspense"), Fa = Symbol.for("react.suspense_list"), Ga = Symbol.for("react.memo"), Ha = Symbol.for("react.lazy");
  var Ia = Symbol.for("react.offscreen");
  var Ja = Symbol.iterator;
  function Ka(a3) {
    if (null === a3 || "object" !== typeof a3) return null;
    a3 = Ja && a3[Ja] || a3["@@iterator"];
    return "function" === typeof a3 ? a3 : null;
  }
  var A2 = Object.assign, La;
  function Ma(a3) {
    if (void 0 === La) try {
      throw Error();
    } catch (c2) {
      var b3 = c2.stack.trim().match(/\n( *(at )?)/);
      La = b3 && b3[1] || "";
    }
    return "\n" + La + a3;
  }
  var Na = false;
  function Oa(a3, b3) {
    if (!a3 || Na) return "";
    Na = true;
    var c2 = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
      if (b3) if (b3 = function() {
        throw Error();
      }, Object.defineProperty(b3.prototype, "props", { set: function() {
        throw Error();
      } }), "object" === typeof Reflect && Reflect.construct) {
        try {
          Reflect.construct(b3, []);
        } catch (l3) {
          var d2 = l3;
        }
        Reflect.construct(a3, [], b3);
      } else {
        try {
          b3.call();
        } catch (l3) {
          d2 = l3;
        }
        a3.call(b3.prototype);
      }
      else {
        try {
          throw Error();
        } catch (l3) {
          d2 = l3;
        }
        a3();
      }
    } catch (l3) {
      if (l3 && d2 && "string" === typeof l3.stack) {
        for (var e2 = l3.stack.split("\n"), f4 = d2.stack.split("\n"), g2 = e2.length - 1, h2 = f4.length - 1; 1 <= g2 && 0 <= h2 && e2[g2] !== f4[h2]; ) h2--;
        for (; 1 <= g2 && 0 <= h2; g2--, h2--) if (e2[g2] !== f4[h2]) {
          if (1 !== g2 || 1 !== h2) {
            do
              if (g2--, h2--, 0 > h2 || e2[g2] !== f4[h2]) {
                var k3 = "\n" + e2[g2].replace(" at new ", " at ");
                a3.displayName && k3.includes("<anonymous>") && (k3 = k3.replace("<anonymous>", a3.displayName));
                return k3;
              }
            while (1 <= g2 && 0 <= h2);
          }
          break;
        }
      }
    } finally {
      Na = false, Error.prepareStackTrace = c2;
    }
    return (a3 = a3 ? a3.displayName || a3.name : "") ? Ma(a3) : "";
  }
  function Pa(a3) {
    switch (a3.tag) {
      case 5:
        return Ma(a3.type);
      case 16:
        return Ma("Lazy");
      case 13:
        return Ma("Suspense");
      case 19:
        return Ma("SuspenseList");
      case 0:
      case 2:
      case 15:
        return a3 = Oa(a3.type, false), a3;
      case 11:
        return a3 = Oa(a3.type.render, false), a3;
      case 1:
        return a3 = Oa(a3.type, true), a3;
      default:
        return "";
    }
  }
  function Qa(a3) {
    if (null == a3) return null;
    if ("function" === typeof a3) return a3.displayName || a3.name || null;
    if ("string" === typeof a3) return a3;
    switch (a3) {
      case ya:
        return "Fragment";
      case wa:
        return "Portal";
      case Aa:
        return "Profiler";
      case za:
        return "StrictMode";
      case Ea:
        return "Suspense";
      case Fa:
        return "SuspenseList";
    }
    if ("object" === typeof a3) switch (a3.$$typeof) {
      case Ca:
        return (a3.displayName || "Context") + ".Consumer";
      case Ba:
        return (a3._context.displayName || "Context") + ".Provider";
      case Da:
        var b3 = a3.render;
        a3 = a3.displayName;
        a3 || (a3 = b3.displayName || b3.name || "", a3 = "" !== a3 ? "ForwardRef(" + a3 + ")" : "ForwardRef");
        return a3;
      case Ga:
        return b3 = a3.displayName || null, null !== b3 ? b3 : Qa(a3.type) || "Memo";
      case Ha:
        b3 = a3._payload;
        a3 = a3._init;
        try {
          return Qa(a3(b3));
        } catch (c2) {
        }
    }
    return null;
  }
  function Ra(a3) {
    var b3 = a3.type;
    switch (a3.tag) {
      case 24:
        return "Cache";
      case 9:
        return (b3.displayName || "Context") + ".Consumer";
      case 10:
        return (b3._context.displayName || "Context") + ".Provider";
      case 18:
        return "DehydratedFragment";
      case 11:
        return a3 = b3.render, a3 = a3.displayName || a3.name || "", b3.displayName || ("" !== a3 ? "ForwardRef(" + a3 + ")" : "ForwardRef");
      case 7:
        return "Fragment";
      case 5:
        return b3;
      case 4:
        return "Portal";
      case 3:
        return "Root";
      case 6:
        return "Text";
      case 16:
        return Qa(b3);
      case 8:
        return b3 === za ? "StrictMode" : "Mode";
      case 22:
        return "Offscreen";
      case 12:
        return "Profiler";
      case 21:
        return "Scope";
      case 13:
        return "Suspense";
      case 19:
        return "SuspenseList";
      case 25:
        return "TracingMarker";
      case 1:
      case 0:
      case 17:
      case 2:
      case 14:
      case 15:
        if ("function" === typeof b3) return b3.displayName || b3.name || null;
        if ("string" === typeof b3) return b3;
    }
    return null;
  }
  function Sa(a3) {
    switch (typeof a3) {
      case "boolean":
      case "number":
      case "string":
      case "undefined":
        return a3;
      case "object":
        return a3;
      default:
        return "";
    }
  }
  function Ta(a3) {
    var b3 = a3.type;
    return (a3 = a3.nodeName) && "input" === a3.toLowerCase() && ("checkbox" === b3 || "radio" === b3);
  }
  function Ua(a3) {
    var b3 = Ta(a3) ? "checked" : "value", c2 = Object.getOwnPropertyDescriptor(a3.constructor.prototype, b3), d2 = "" + a3[b3];
    if (!a3.hasOwnProperty(b3) && "undefined" !== typeof c2 && "function" === typeof c2.get && "function" === typeof c2.set) {
      var e2 = c2.get, f4 = c2.set;
      Object.defineProperty(a3, b3, { configurable: true, get: function() {
        return e2.call(this);
      }, set: function(a4) {
        d2 = "" + a4;
        f4.call(this, a4);
      } });
      Object.defineProperty(a3, b3, { enumerable: c2.enumerable });
      return { getValue: function() {
        return d2;
      }, setValue: function(a4) {
        d2 = "" + a4;
      }, stopTracking: function() {
        a3._valueTracker = null;
        delete a3[b3];
      } };
    }
  }
  function Va(a3) {
    a3._valueTracker || (a3._valueTracker = Ua(a3));
  }
  function Wa(a3) {
    if (!a3) return false;
    var b3 = a3._valueTracker;
    if (!b3) return true;
    var c2 = b3.getValue();
    var d2 = "";
    a3 && (d2 = Ta(a3) ? a3.checked ? "true" : "false" : a3.value);
    a3 = d2;
    return a3 !== c2 ? (b3.setValue(a3), true) : false;
  }
  function Xa(a3) {
    a3 = a3 || ("undefined" !== typeof document ? document : void 0);
    if ("undefined" === typeof a3) return null;
    try {
      return a3.activeElement || a3.body;
    } catch (b3) {
      return a3.body;
    }
  }
  function Ya(a3, b3) {
    var c2 = b3.checked;
    return A2({}, b3, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: null != c2 ? c2 : a3._wrapperState.initialChecked });
  }
  function Za(a3, b3) {
    var c2 = null == b3.defaultValue ? "" : b3.defaultValue, d2 = null != b3.checked ? b3.checked : b3.defaultChecked;
    c2 = Sa(null != b3.value ? b3.value : c2);
    a3._wrapperState = { initialChecked: d2, initialValue: c2, controlled: "checkbox" === b3.type || "radio" === b3.type ? null != b3.checked : null != b3.value };
  }
  function ab(a3, b3) {
    b3 = b3.checked;
    null != b3 && ta(a3, "checked", b3, false);
  }
  function bb(a3, b3) {
    ab(a3, b3);
    var c2 = Sa(b3.value), d2 = b3.type;
    if (null != c2) if ("number" === d2) {
      if (0 === c2 && "" === a3.value || a3.value != c2) a3.value = "" + c2;
    } else a3.value !== "" + c2 && (a3.value = "" + c2);
    else if ("submit" === d2 || "reset" === d2) {
      a3.removeAttribute("value");
      return;
    }
    b3.hasOwnProperty("value") ? cb(a3, b3.type, c2) : b3.hasOwnProperty("defaultValue") && cb(a3, b3.type, Sa(b3.defaultValue));
    null == b3.checked && null != b3.defaultChecked && (a3.defaultChecked = !!b3.defaultChecked);
  }
  function db(a3, b3, c2) {
    if (b3.hasOwnProperty("value") || b3.hasOwnProperty("defaultValue")) {
      var d2 = b3.type;
      if (!("submit" !== d2 && "reset" !== d2 || void 0 !== b3.value && null !== b3.value)) return;
      b3 = "" + a3._wrapperState.initialValue;
      c2 || b3 === a3.value || (a3.value = b3);
      a3.defaultValue = b3;
    }
    c2 = a3.name;
    "" !== c2 && (a3.name = "");
    a3.defaultChecked = !!a3._wrapperState.initialChecked;
    "" !== c2 && (a3.name = c2);
  }
  function cb(a3, b3, c2) {
    if ("number" !== b3 || Xa(a3.ownerDocument) !== a3) null == c2 ? a3.defaultValue = "" + a3._wrapperState.initialValue : a3.defaultValue !== "" + c2 && (a3.defaultValue = "" + c2);
  }
  var eb = Array.isArray;
  function fb(a3, b3, c2, d2) {
    a3 = a3.options;
    if (b3) {
      b3 = {};
      for (var e2 = 0; e2 < c2.length; e2++) b3["$" + c2[e2]] = true;
      for (c2 = 0; c2 < a3.length; c2++) e2 = b3.hasOwnProperty("$" + a3[c2].value), a3[c2].selected !== e2 && (a3[c2].selected = e2), e2 && d2 && (a3[c2].defaultSelected = true);
    } else {
      c2 = "" + Sa(c2);
      b3 = null;
      for (e2 = 0; e2 < a3.length; e2++) {
        if (a3[e2].value === c2) {
          a3[e2].selected = true;
          d2 && (a3[e2].defaultSelected = true);
          return;
        }
        null !== b3 || a3[e2].disabled || (b3 = a3[e2]);
      }
      null !== b3 && (b3.selected = true);
    }
  }
  function gb(a3, b3) {
    if (null != b3.dangerouslySetInnerHTML) throw Error(p3(91));
    return A2({}, b3, { value: void 0, defaultValue: void 0, children: "" + a3._wrapperState.initialValue });
  }
  function hb(a3, b3) {
    var c2 = b3.value;
    if (null == c2) {
      c2 = b3.children;
      b3 = b3.defaultValue;
      if (null != c2) {
        if (null != b3) throw Error(p3(92));
        if (eb(c2)) {
          if (1 < c2.length) throw Error(p3(93));
          c2 = c2[0];
        }
        b3 = c2;
      }
      null == b3 && (b3 = "");
      c2 = b3;
    }
    a3._wrapperState = { initialValue: Sa(c2) };
  }
  function ib(a3, b3) {
    var c2 = Sa(b3.value), d2 = Sa(b3.defaultValue);
    null != c2 && (c2 = "" + c2, c2 !== a3.value && (a3.value = c2), null == b3.defaultValue && a3.defaultValue !== c2 && (a3.defaultValue = c2));
    null != d2 && (a3.defaultValue = "" + d2);
  }
  function jb(a3) {
    var b3 = a3.textContent;
    b3 === a3._wrapperState.initialValue && "" !== b3 && null !== b3 && (a3.value = b3);
  }
  function kb(a3) {
    switch (a3) {
      case "svg":
        return "http://www.w3.org/2000/svg";
      case "math":
        return "http://www.w3.org/1998/Math/MathML";
      default:
        return "http://www.w3.org/1999/xhtml";
    }
  }
  function lb(a3, b3) {
    return null == a3 || "http://www.w3.org/1999/xhtml" === a3 ? kb(b3) : "http://www.w3.org/2000/svg" === a3 && "foreignObject" === b3 ? "http://www.w3.org/1999/xhtml" : a3;
  }
  var mb, nb = (function(a3) {
    return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function(b3, c2, d2, e2) {
      MSApp.execUnsafeLocalFunction(function() {
        return a3(b3, c2, d2, e2);
      });
    } : a3;
  })(function(a3, b3) {
    if ("http://www.w3.org/2000/svg" !== a3.namespaceURI || "innerHTML" in a3) a3.innerHTML = b3;
    else {
      mb = mb || document.createElement("div");
      mb.innerHTML = "<svg>" + b3.valueOf().toString() + "</svg>";
      for (b3 = mb.firstChild; a3.firstChild; ) a3.removeChild(a3.firstChild);
      for (; b3.firstChild; ) a3.appendChild(b3.firstChild);
    }
  });
  function ob(a3, b3) {
    if (b3) {
      var c2 = a3.firstChild;
      if (c2 && c2 === a3.lastChild && 3 === c2.nodeType) {
        c2.nodeValue = b3;
        return;
      }
    }
    a3.textContent = b3;
  }
  var pb = {
    animationIterationCount: true,
    aspectRatio: true,
    borderImageOutset: true,
    borderImageSlice: true,
    borderImageWidth: true,
    boxFlex: true,
    boxFlexGroup: true,
    boxOrdinalGroup: true,
    columnCount: true,
    columns: true,
    flex: true,
    flexGrow: true,
    flexPositive: true,
    flexShrink: true,
    flexNegative: true,
    flexOrder: true,
    gridArea: true,
    gridRow: true,
    gridRowEnd: true,
    gridRowSpan: true,
    gridRowStart: true,
    gridColumn: true,
    gridColumnEnd: true,
    gridColumnSpan: true,
    gridColumnStart: true,
    fontWeight: true,
    lineClamp: true,
    lineHeight: true,
    opacity: true,
    order: true,
    orphans: true,
    tabSize: true,
    widows: true,
    zIndex: true,
    zoom: true,
    fillOpacity: true,
    floodOpacity: true,
    stopOpacity: true,
    strokeDasharray: true,
    strokeDashoffset: true,
    strokeMiterlimit: true,
    strokeOpacity: true,
    strokeWidth: true
  }, qb = ["Webkit", "ms", "Moz", "O"];
  Object.keys(pb).forEach(function(a3) {
    qb.forEach(function(b3) {
      b3 = b3 + a3.charAt(0).toUpperCase() + a3.substring(1);
      pb[b3] = pb[a3];
    });
  });
  function rb(a3, b3, c2) {
    return null == b3 || "boolean" === typeof b3 || "" === b3 ? "" : c2 || "number" !== typeof b3 || 0 === b3 || pb.hasOwnProperty(a3) && pb[a3] ? ("" + b3).trim() : b3 + "px";
  }
  function sb(a3, b3) {
    a3 = a3.style;
    for (var c2 in b3) if (b3.hasOwnProperty(c2)) {
      var d2 = 0 === c2.indexOf("--"), e2 = rb(c2, b3[c2], d2);
      "float" === c2 && (c2 = "cssFloat");
      d2 ? a3.setProperty(c2, e2) : a3[c2] = e2;
    }
  }
  var tb = A2({ menuitem: true }, { area: true, base: true, br: true, col: true, embed: true, hr: true, img: true, input: true, keygen: true, link: true, meta: true, param: true, source: true, track: true, wbr: true });
  function ub(a3, b3) {
    if (b3) {
      if (tb[a3] && (null != b3.children || null != b3.dangerouslySetInnerHTML)) throw Error(p3(137, a3));
      if (null != b3.dangerouslySetInnerHTML) {
        if (null != b3.children) throw Error(p3(60));
        if ("object" !== typeof b3.dangerouslySetInnerHTML || !("__html" in b3.dangerouslySetInnerHTML)) throw Error(p3(61));
      }
      if (null != b3.style && "object" !== typeof b3.style) throw Error(p3(62));
    }
  }
  function vb(a3, b3) {
    if (-1 === a3.indexOf("-")) return "string" === typeof b3.is;
    switch (a3) {
      case "annotation-xml":
      case "color-profile":
      case "font-face":
      case "font-face-src":
      case "font-face-uri":
      case "font-face-format":
      case "font-face-name":
      case "missing-glyph":
        return false;
      default:
        return true;
    }
  }
  var wb = null;
  function xb(a3) {
    a3 = a3.target || a3.srcElement || window;
    a3.correspondingUseElement && (a3 = a3.correspondingUseElement);
    return 3 === a3.nodeType ? a3.parentNode : a3;
  }
  var yb = null, zb = null, Ab = null;
  function Bb(a3) {
    if (a3 = Cb(a3)) {
      if ("function" !== typeof yb) throw Error(p3(280));
      var b3 = a3.stateNode;
      b3 && (b3 = Db(b3), yb(a3.stateNode, a3.type, b3));
    }
  }
  function Eb(a3) {
    zb ? Ab ? Ab.push(a3) : Ab = [a3] : zb = a3;
  }
  function Fb() {
    if (zb) {
      var a3 = zb, b3 = Ab;
      Ab = zb = null;
      Bb(a3);
      if (b3) for (a3 = 0; a3 < b3.length; a3++) Bb(b3[a3]);
    }
  }
  function Gb(a3, b3) {
    return a3(b3);
  }
  function Hb() {
  }
  var Ib = false;
  function Jb(a3, b3, c2) {
    if (Ib) return a3(b3, c2);
    Ib = true;
    try {
      return Gb(a3, b3, c2);
    } finally {
      if (Ib = false, null !== zb || null !== Ab) Hb(), Fb();
    }
  }
  function Kb(a3, b3) {
    var c2 = a3.stateNode;
    if (null === c2) return null;
    var d2 = Db(c2);
    if (null === d2) return null;
    c2 = d2[b3];
    a: switch (b3) {
      case "onClick":
      case "onClickCapture":
      case "onDoubleClick":
      case "onDoubleClickCapture":
      case "onMouseDown":
      case "onMouseDownCapture":
      case "onMouseMove":
      case "onMouseMoveCapture":
      case "onMouseUp":
      case "onMouseUpCapture":
      case "onMouseEnter":
        (d2 = !d2.disabled) || (a3 = a3.type, d2 = !("button" === a3 || "input" === a3 || "select" === a3 || "textarea" === a3));
        a3 = !d2;
        break a;
      default:
        a3 = false;
    }
    if (a3) return null;
    if (c2 && "function" !== typeof c2) throw Error(p3(231, b3, typeof c2));
    return c2;
  }
  var Lb = false;
  if (ia) try {
    var Mb = {};
    Object.defineProperty(Mb, "passive", { get: function() {
      Lb = true;
    } });
    window.addEventListener("test", Mb, Mb);
    window.removeEventListener("test", Mb, Mb);
  } catch (a3) {
    Lb = false;
  }
  function Nb(a3, b3, c2, d2, e2, f4, g2, h2, k3) {
    var l3 = Array.prototype.slice.call(arguments, 3);
    try {
      b3.apply(c2, l3);
    } catch (m2) {
      this.onError(m2);
    }
  }
  var Ob = false, Pb = null, Qb = false, Rb = null, Sb = { onError: function(a3) {
    Ob = true;
    Pb = a3;
  } };
  function Tb(a3, b3, c2, d2, e2, f4, g2, h2, k3) {
    Ob = false;
    Pb = null;
    Nb.apply(Sb, arguments);
  }
  function Ub(a3, b3, c2, d2, e2, f4, g2, h2, k3) {
    Tb.apply(this, arguments);
    if (Ob) {
      if (Ob) {
        var l3 = Pb;
        Ob = false;
        Pb = null;
      } else throw Error(p3(198));
      Qb || (Qb = true, Rb = l3);
    }
  }
  function Vb(a3) {
    var b3 = a3, c2 = a3;
    if (a3.alternate) for (; b3.return; ) b3 = b3.return;
    else {
      a3 = b3;
      do
        b3 = a3, 0 !== (b3.flags & 4098) && (c2 = b3.return), a3 = b3.return;
      while (a3);
    }
    return 3 === b3.tag ? c2 : null;
  }
  function Wb(a3) {
    if (13 === a3.tag) {
      var b3 = a3.memoizedState;
      null === b3 && (a3 = a3.alternate, null !== a3 && (b3 = a3.memoizedState));
      if (null !== b3) return b3.dehydrated;
    }
    return null;
  }
  function Xb(a3) {
    if (Vb(a3) !== a3) throw Error(p3(188));
  }
  function Yb(a3) {
    var b3 = a3.alternate;
    if (!b3) {
      b3 = Vb(a3);
      if (null === b3) throw Error(p3(188));
      return b3 !== a3 ? null : a3;
    }
    for (var c2 = a3, d2 = b3; ; ) {
      var e2 = c2.return;
      if (null === e2) break;
      var f4 = e2.alternate;
      if (null === f4) {
        d2 = e2.return;
        if (null !== d2) {
          c2 = d2;
          continue;
        }
        break;
      }
      if (e2.child === f4.child) {
        for (f4 = e2.child; f4; ) {
          if (f4 === c2) return Xb(e2), a3;
          if (f4 === d2) return Xb(e2), b3;
          f4 = f4.sibling;
        }
        throw Error(p3(188));
      }
      if (c2.return !== d2.return) c2 = e2, d2 = f4;
      else {
        for (var g2 = false, h2 = e2.child; h2; ) {
          if (h2 === c2) {
            g2 = true;
            c2 = e2;
            d2 = f4;
            break;
          }
          if (h2 === d2) {
            g2 = true;
            d2 = e2;
            c2 = f4;
            break;
          }
          h2 = h2.sibling;
        }
        if (!g2) {
          for (h2 = f4.child; h2; ) {
            if (h2 === c2) {
              g2 = true;
              c2 = f4;
              d2 = e2;
              break;
            }
            if (h2 === d2) {
              g2 = true;
              d2 = f4;
              c2 = e2;
              break;
            }
            h2 = h2.sibling;
          }
          if (!g2) throw Error(p3(189));
        }
      }
      if (c2.alternate !== d2) throw Error(p3(190));
    }
    if (3 !== c2.tag) throw Error(p3(188));
    return c2.stateNode.current === c2 ? a3 : b3;
  }
  function Zb(a3) {
    a3 = Yb(a3);
    return null !== a3 ? $b(a3) : null;
  }
  function $b(a3) {
    if (5 === a3.tag || 6 === a3.tag) return a3;
    for (a3 = a3.child; null !== a3; ) {
      var b3 = $b(a3);
      if (null !== b3) return b3;
      a3 = a3.sibling;
    }
    return null;
  }
  var ac = ca.unstable_scheduleCallback, bc = ca.unstable_cancelCallback, cc = ca.unstable_shouldYield, dc = ca.unstable_requestPaint, B2 = ca.unstable_now, ec = ca.unstable_getCurrentPriorityLevel, fc = ca.unstable_ImmediatePriority, gc = ca.unstable_UserBlockingPriority, hc = ca.unstable_NormalPriority, ic = ca.unstable_LowPriority, jc = ca.unstable_IdlePriority, kc = null, lc = null;
  function mc(a3) {
    if (lc && "function" === typeof lc.onCommitFiberRoot) try {
      lc.onCommitFiberRoot(kc, a3, void 0, 128 === (a3.current.flags & 128));
    } catch (b3) {
    }
  }
  var oc = Math.clz32 ? Math.clz32 : nc, pc = Math.log, qc = Math.LN2;
  function nc(a3) {
    a3 >>>= 0;
    return 0 === a3 ? 32 : 31 - (pc(a3) / qc | 0) | 0;
  }
  var rc = 64, sc = 4194304;
  function tc(a3) {
    switch (a3 & -a3) {
      case 1:
        return 1;
      case 2:
        return 2;
      case 4:
        return 4;
      case 8:
        return 8;
      case 16:
        return 16;
      case 32:
        return 32;
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return a3 & 4194240;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return a3 & 130023424;
      case 134217728:
        return 134217728;
      case 268435456:
        return 268435456;
      case 536870912:
        return 536870912;
      case 1073741824:
        return 1073741824;
      default:
        return a3;
    }
  }
  function uc(a3, b3) {
    var c2 = a3.pendingLanes;
    if (0 === c2) return 0;
    var d2 = 0, e2 = a3.suspendedLanes, f4 = a3.pingedLanes, g2 = c2 & 268435455;
    if (0 !== g2) {
      var h2 = g2 & ~e2;
      0 !== h2 ? d2 = tc(h2) : (f4 &= g2, 0 !== f4 && (d2 = tc(f4)));
    } else g2 = c2 & ~e2, 0 !== g2 ? d2 = tc(g2) : 0 !== f4 && (d2 = tc(f4));
    if (0 === d2) return 0;
    if (0 !== b3 && b3 !== d2 && 0 === (b3 & e2) && (e2 = d2 & -d2, f4 = b3 & -b3, e2 >= f4 || 16 === e2 && 0 !== (f4 & 4194240))) return b3;
    0 !== (d2 & 4) && (d2 |= c2 & 16);
    b3 = a3.entangledLanes;
    if (0 !== b3) for (a3 = a3.entanglements, b3 &= d2; 0 < b3; ) c2 = 31 - oc(b3), e2 = 1 << c2, d2 |= a3[c2], b3 &= ~e2;
    return d2;
  }
  function vc(a3, b3) {
    switch (a3) {
      case 1:
      case 2:
      case 4:
        return b3 + 250;
      case 8:
      case 16:
      case 32:
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return b3 + 5e3;
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return -1;
      case 134217728:
      case 268435456:
      case 536870912:
      case 1073741824:
        return -1;
      default:
        return -1;
    }
  }
  function wc(a3, b3) {
    for (var c2 = a3.suspendedLanes, d2 = a3.pingedLanes, e2 = a3.expirationTimes, f4 = a3.pendingLanes; 0 < f4; ) {
      var g2 = 31 - oc(f4), h2 = 1 << g2, k3 = e2[g2];
      if (-1 === k3) {
        if (0 === (h2 & c2) || 0 !== (h2 & d2)) e2[g2] = vc(h2, b3);
      } else k3 <= b3 && (a3.expiredLanes |= h2);
      f4 &= ~h2;
    }
  }
  function xc(a3) {
    a3 = a3.pendingLanes & -1073741825;
    return 0 !== a3 ? a3 : a3 & 1073741824 ? 1073741824 : 0;
  }
  function yc() {
    var a3 = rc;
    rc <<= 1;
    0 === (rc & 4194240) && (rc = 64);
    return a3;
  }
  function zc(a3) {
    for (var b3 = [], c2 = 0; 31 > c2; c2++) b3.push(a3);
    return b3;
  }
  function Ac(a3, b3, c2) {
    a3.pendingLanes |= b3;
    536870912 !== b3 && (a3.suspendedLanes = 0, a3.pingedLanes = 0);
    a3 = a3.eventTimes;
    b3 = 31 - oc(b3);
    a3[b3] = c2;
  }
  function Bc(a3, b3) {
    var c2 = a3.pendingLanes & ~b3;
    a3.pendingLanes = b3;
    a3.suspendedLanes = 0;
    a3.pingedLanes = 0;
    a3.expiredLanes &= b3;
    a3.mutableReadLanes &= b3;
    a3.entangledLanes &= b3;
    b3 = a3.entanglements;
    var d2 = a3.eventTimes;
    for (a3 = a3.expirationTimes; 0 < c2; ) {
      var e2 = 31 - oc(c2), f4 = 1 << e2;
      b3[e2] = 0;
      d2[e2] = -1;
      a3[e2] = -1;
      c2 &= ~f4;
    }
  }
  function Cc(a3, b3) {
    var c2 = a3.entangledLanes |= b3;
    for (a3 = a3.entanglements; c2; ) {
      var d2 = 31 - oc(c2), e2 = 1 << d2;
      e2 & b3 | a3[d2] & b3 && (a3[d2] |= b3);
      c2 &= ~e2;
    }
  }
  var C2 = 0;
  function Dc(a3) {
    a3 &= -a3;
    return 1 < a3 ? 4 < a3 ? 0 !== (a3 & 268435455) ? 16 : 536870912 : 4 : 1;
  }
  var Ec, Fc, Gc, Hc, Ic, Jc = false, Kc = [], Lc = null, Mc = null, Nc = null, Oc = /* @__PURE__ */ new Map(), Pc = /* @__PURE__ */ new Map(), Qc = [], Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
  function Sc(a3, b3) {
    switch (a3) {
      case "focusin":
      case "focusout":
        Lc = null;
        break;
      case "dragenter":
      case "dragleave":
        Mc = null;
        break;
      case "mouseover":
      case "mouseout":
        Nc = null;
        break;
      case "pointerover":
      case "pointerout":
        Oc.delete(b3.pointerId);
        break;
      case "gotpointercapture":
      case "lostpointercapture":
        Pc.delete(b3.pointerId);
    }
  }
  function Tc(a3, b3, c2, d2, e2, f4) {
    if (null === a3 || a3.nativeEvent !== f4) return a3 = { blockedOn: b3, domEventName: c2, eventSystemFlags: d2, nativeEvent: f4, targetContainers: [e2] }, null !== b3 && (b3 = Cb(b3), null !== b3 && Fc(b3)), a3;
    a3.eventSystemFlags |= d2;
    b3 = a3.targetContainers;
    null !== e2 && -1 === b3.indexOf(e2) && b3.push(e2);
    return a3;
  }
  function Uc(a3, b3, c2, d2, e2) {
    switch (b3) {
      case "focusin":
        return Lc = Tc(Lc, a3, b3, c2, d2, e2), true;
      case "dragenter":
        return Mc = Tc(Mc, a3, b3, c2, d2, e2), true;
      case "mouseover":
        return Nc = Tc(Nc, a3, b3, c2, d2, e2), true;
      case "pointerover":
        var f4 = e2.pointerId;
        Oc.set(f4, Tc(Oc.get(f4) || null, a3, b3, c2, d2, e2));
        return true;
      case "gotpointercapture":
        return f4 = e2.pointerId, Pc.set(f4, Tc(Pc.get(f4) || null, a3, b3, c2, d2, e2)), true;
    }
    return false;
  }
  function Vc(a3) {
    var b3 = Wc(a3.target);
    if (null !== b3) {
      var c2 = Vb(b3);
      if (null !== c2) {
        if (b3 = c2.tag, 13 === b3) {
          if (b3 = Wb(c2), null !== b3) {
            a3.blockedOn = b3;
            Ic(a3.priority, function() {
              Gc(c2);
            });
            return;
          }
        } else if (3 === b3 && c2.stateNode.current.memoizedState.isDehydrated) {
          a3.blockedOn = 3 === c2.tag ? c2.stateNode.containerInfo : null;
          return;
        }
      }
    }
    a3.blockedOn = null;
  }
  function Xc(a3) {
    if (null !== a3.blockedOn) return false;
    for (var b3 = a3.targetContainers; 0 < b3.length; ) {
      var c2 = Yc(a3.domEventName, a3.eventSystemFlags, b3[0], a3.nativeEvent);
      if (null === c2) {
        c2 = a3.nativeEvent;
        var d2 = new c2.constructor(c2.type, c2);
        wb = d2;
        c2.target.dispatchEvent(d2);
        wb = null;
      } else return b3 = Cb(c2), null !== b3 && Fc(b3), a3.blockedOn = c2, false;
      b3.shift();
    }
    return true;
  }
  function Zc(a3, b3, c2) {
    Xc(a3) && c2.delete(b3);
  }
  function $c() {
    Jc = false;
    null !== Lc && Xc(Lc) && (Lc = null);
    null !== Mc && Xc(Mc) && (Mc = null);
    null !== Nc && Xc(Nc) && (Nc = null);
    Oc.forEach(Zc);
    Pc.forEach(Zc);
  }
  function ad(a3, b3) {
    a3.blockedOn === b3 && (a3.blockedOn = null, Jc || (Jc = true, ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
  }
  function bd(a3) {
    function b3(b4) {
      return ad(b4, a3);
    }
    if (0 < Kc.length) {
      ad(Kc[0], a3);
      for (var c2 = 1; c2 < Kc.length; c2++) {
        var d2 = Kc[c2];
        d2.blockedOn === a3 && (d2.blockedOn = null);
      }
    }
    null !== Lc && ad(Lc, a3);
    null !== Mc && ad(Mc, a3);
    null !== Nc && ad(Nc, a3);
    Oc.forEach(b3);
    Pc.forEach(b3);
    for (c2 = 0; c2 < Qc.length; c2++) d2 = Qc[c2], d2.blockedOn === a3 && (d2.blockedOn = null);
    for (; 0 < Qc.length && (c2 = Qc[0], null === c2.blockedOn); ) Vc(c2), null === c2.blockedOn && Qc.shift();
  }
  var cd = ua.ReactCurrentBatchConfig, dd = true;
  function ed(a3, b3, c2, d2) {
    var e2 = C2, f4 = cd.transition;
    cd.transition = null;
    try {
      C2 = 1, fd(a3, b3, c2, d2);
    } finally {
      C2 = e2, cd.transition = f4;
    }
  }
  function gd(a3, b3, c2, d2) {
    var e2 = C2, f4 = cd.transition;
    cd.transition = null;
    try {
      C2 = 4, fd(a3, b3, c2, d2);
    } finally {
      C2 = e2, cd.transition = f4;
    }
  }
  function fd(a3, b3, c2, d2) {
    if (dd) {
      var e2 = Yc(a3, b3, c2, d2);
      if (null === e2) hd(a3, b3, d2, id, c2), Sc(a3, d2);
      else if (Uc(e2, a3, b3, c2, d2)) d2.stopPropagation();
      else if (Sc(a3, d2), b3 & 4 && -1 < Rc.indexOf(a3)) {
        for (; null !== e2; ) {
          var f4 = Cb(e2);
          null !== f4 && Ec(f4);
          f4 = Yc(a3, b3, c2, d2);
          null === f4 && hd(a3, b3, d2, id, c2);
          if (f4 === e2) break;
          e2 = f4;
        }
        null !== e2 && d2.stopPropagation();
      } else hd(a3, b3, d2, null, c2);
    }
  }
  var id = null;
  function Yc(a3, b3, c2, d2) {
    id = null;
    a3 = xb(d2);
    a3 = Wc(a3);
    if (null !== a3) if (b3 = Vb(a3), null === b3) a3 = null;
    else if (c2 = b3.tag, 13 === c2) {
      a3 = Wb(b3);
      if (null !== a3) return a3;
      a3 = null;
    } else if (3 === c2) {
      if (b3.stateNode.current.memoizedState.isDehydrated) return 3 === b3.tag ? b3.stateNode.containerInfo : null;
      a3 = null;
    } else b3 !== a3 && (a3 = null);
    id = a3;
    return null;
  }
  function jd(a3) {
    switch (a3) {
      case "cancel":
      case "click":
      case "close":
      case "contextmenu":
      case "copy":
      case "cut":
      case "auxclick":
      case "dblclick":
      case "dragend":
      case "dragstart":
      case "drop":
      case "focusin":
      case "focusout":
      case "input":
      case "invalid":
      case "keydown":
      case "keypress":
      case "keyup":
      case "mousedown":
      case "mouseup":
      case "paste":
      case "pause":
      case "play":
      case "pointercancel":
      case "pointerdown":
      case "pointerup":
      case "ratechange":
      case "reset":
      case "resize":
      case "seeked":
      case "submit":
      case "touchcancel":
      case "touchend":
      case "touchstart":
      case "volumechange":
      case "change":
      case "selectionchange":
      case "textInput":
      case "compositionstart":
      case "compositionend":
      case "compositionupdate":
      case "beforeblur":
      case "afterblur":
      case "beforeinput":
      case "blur":
      case "fullscreenchange":
      case "focus":
      case "hashchange":
      case "popstate":
      case "select":
      case "selectstart":
        return 1;
      case "drag":
      case "dragenter":
      case "dragexit":
      case "dragleave":
      case "dragover":
      case "mousemove":
      case "mouseout":
      case "mouseover":
      case "pointermove":
      case "pointerout":
      case "pointerover":
      case "scroll":
      case "toggle":
      case "touchmove":
      case "wheel":
      case "mouseenter":
      case "mouseleave":
      case "pointerenter":
      case "pointerleave":
        return 4;
      case "message":
        switch (ec()) {
          case fc:
            return 1;
          case gc:
            return 4;
          case hc:
          case ic:
            return 16;
          case jc:
            return 536870912;
          default:
            return 16;
        }
      default:
        return 16;
    }
  }
  var kd = null, ld = null, md = null;
  function nd() {
    if (md) return md;
    var a3, b3 = ld, c2 = b3.length, d2, e2 = "value" in kd ? kd.value : kd.textContent, f4 = e2.length;
    for (a3 = 0; a3 < c2 && b3[a3] === e2[a3]; a3++) ;
    var g2 = c2 - a3;
    for (d2 = 1; d2 <= g2 && b3[c2 - d2] === e2[f4 - d2]; d2++) ;
    return md = e2.slice(a3, 1 < d2 ? 1 - d2 : void 0);
  }
  function od(a3) {
    var b3 = a3.keyCode;
    "charCode" in a3 ? (a3 = a3.charCode, 0 === a3 && 13 === b3 && (a3 = 13)) : a3 = b3;
    10 === a3 && (a3 = 13);
    return 32 <= a3 || 13 === a3 ? a3 : 0;
  }
  function pd() {
    return true;
  }
  function qd() {
    return false;
  }
  function rd(a3) {
    function b3(b4, d2, e2, f4, g2) {
      this._reactName = b4;
      this._targetInst = e2;
      this.type = d2;
      this.nativeEvent = f4;
      this.target = g2;
      this.currentTarget = null;
      for (var c2 in a3) a3.hasOwnProperty(c2) && (b4 = a3[c2], this[c2] = b4 ? b4(f4) : f4[c2]);
      this.isDefaultPrevented = (null != f4.defaultPrevented ? f4.defaultPrevented : false === f4.returnValue) ? pd : qd;
      this.isPropagationStopped = qd;
      return this;
    }
    A2(b3.prototype, { preventDefault: function() {
      this.defaultPrevented = true;
      var a4 = this.nativeEvent;
      a4 && (a4.preventDefault ? a4.preventDefault() : "unknown" !== typeof a4.returnValue && (a4.returnValue = false), this.isDefaultPrevented = pd);
    }, stopPropagation: function() {
      var a4 = this.nativeEvent;
      a4 && (a4.stopPropagation ? a4.stopPropagation() : "unknown" !== typeof a4.cancelBubble && (a4.cancelBubble = true), this.isPropagationStopped = pd);
    }, persist: function() {
    }, isPersistent: pd });
    return b3;
  }
  var sd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a3) {
    return a3.timeStamp || Date.now();
  }, defaultPrevented: 0, isTrusted: 0 }, td = rd(sd), ud = A2({}, sd, { view: 0, detail: 0 }), vd = rd(ud), wd, xd, yd, Ad = A2({}, ud, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: zd, button: 0, buttons: 0, relatedTarget: function(a3) {
    return void 0 === a3.relatedTarget ? a3.fromElement === a3.srcElement ? a3.toElement : a3.fromElement : a3.relatedTarget;
  }, movementX: function(a3) {
    if ("movementX" in a3) return a3.movementX;
    a3 !== yd && (yd && "mousemove" === a3.type ? (wd = a3.screenX - yd.screenX, xd = a3.screenY - yd.screenY) : xd = wd = 0, yd = a3);
    return wd;
  }, movementY: function(a3) {
    return "movementY" in a3 ? a3.movementY : xd;
  } }), Bd = rd(Ad), Cd = A2({}, Ad, { dataTransfer: 0 }), Dd = rd(Cd), Ed = A2({}, ud, { relatedTarget: 0 }), Fd = rd(Ed), Gd = A2({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Hd = rd(Gd), Id = A2({}, sd, { clipboardData: function(a3) {
    return "clipboardData" in a3 ? a3.clipboardData : window.clipboardData;
  } }), Jd = rd(Id), Kd = A2({}, sd, { data: 0 }), Ld = rd(Kd), Md = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
  }, Nd = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
  }, Od = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
  function Pd(a3) {
    var b3 = this.nativeEvent;
    return b3.getModifierState ? b3.getModifierState(a3) : (a3 = Od[a3]) ? !!b3[a3] : false;
  }
  function zd() {
    return Pd;
  }
  var Qd = A2({}, ud, { key: function(a3) {
    if (a3.key) {
      var b3 = Md[a3.key] || a3.key;
      if ("Unidentified" !== b3) return b3;
    }
    return "keypress" === a3.type ? (a3 = od(a3), 13 === a3 ? "Enter" : String.fromCharCode(a3)) : "keydown" === a3.type || "keyup" === a3.type ? Nd[a3.keyCode] || "Unidentified" : "";
  }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: zd, charCode: function(a3) {
    return "keypress" === a3.type ? od(a3) : 0;
  }, keyCode: function(a3) {
    return "keydown" === a3.type || "keyup" === a3.type ? a3.keyCode : 0;
  }, which: function(a3) {
    return "keypress" === a3.type ? od(a3) : "keydown" === a3.type || "keyup" === a3.type ? a3.keyCode : 0;
  } }), Rd = rd(Qd), Sd = A2({}, Ad, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Td = rd(Sd), Ud = A2({}, ud, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd }), Vd = rd(Ud), Wd = A2({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Xd = rd(Wd), Yd = A2({}, Ad, {
    deltaX: function(a3) {
      return "deltaX" in a3 ? a3.deltaX : "wheelDeltaX" in a3 ? -a3.wheelDeltaX : 0;
    },
    deltaY: function(a3) {
      return "deltaY" in a3 ? a3.deltaY : "wheelDeltaY" in a3 ? -a3.wheelDeltaY : "wheelDelta" in a3 ? -a3.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
  }), Zd = rd(Yd), $d = [9, 13, 27, 32], ae = ia && "CompositionEvent" in window, be = null;
  ia && "documentMode" in document && (be = document.documentMode);
  var ce = ia && "TextEvent" in window && !be, de = ia && (!ae || be && 8 < be && 11 >= be), ee = String.fromCharCode(32), fe = false;
  function ge(a3, b3) {
    switch (a3) {
      case "keyup":
        return -1 !== $d.indexOf(b3.keyCode);
      case "keydown":
        return 229 !== b3.keyCode;
      case "keypress":
      case "mousedown":
      case "focusout":
        return true;
      default:
        return false;
    }
  }
  function he(a3) {
    a3 = a3.detail;
    return "object" === typeof a3 && "data" in a3 ? a3.data : null;
  }
  var ie = false;
  function je(a3, b3) {
    switch (a3) {
      case "compositionend":
        return he(b3);
      case "keypress":
        if (32 !== b3.which) return null;
        fe = true;
        return ee;
      case "textInput":
        return a3 = b3.data, a3 === ee && fe ? null : a3;
      default:
        return null;
    }
  }
  function ke(a3, b3) {
    if (ie) return "compositionend" === a3 || !ae && ge(a3, b3) ? (a3 = nd(), md = ld = kd = null, ie = false, a3) : null;
    switch (a3) {
      case "paste":
        return null;
      case "keypress":
        if (!(b3.ctrlKey || b3.altKey || b3.metaKey) || b3.ctrlKey && b3.altKey) {
          if (b3.char && 1 < b3.char.length) return b3.char;
          if (b3.which) return String.fromCharCode(b3.which);
        }
        return null;
      case "compositionend":
        return de && "ko" !== b3.locale ? null : b3.data;
      default:
        return null;
    }
  }
  var le = { color: true, date: true, datetime: true, "datetime-local": true, email: true, month: true, number: true, password: true, range: true, search: true, tel: true, text: true, time: true, url: true, week: true };
  function me(a3) {
    var b3 = a3 && a3.nodeName && a3.nodeName.toLowerCase();
    return "input" === b3 ? !!le[a3.type] : "textarea" === b3 ? true : false;
  }
  function ne(a3, b3, c2, d2) {
    Eb(d2);
    b3 = oe(b3, "onChange");
    0 < b3.length && (c2 = new td("onChange", "change", null, c2, d2), a3.push({ event: c2, listeners: b3 }));
  }
  var pe = null, qe = null;
  function re(a3) {
    se(a3, 0);
  }
  function te(a3) {
    var b3 = ue(a3);
    if (Wa(b3)) return a3;
  }
  function ve(a3, b3) {
    if ("change" === a3) return b3;
  }
  var we = false;
  if (ia) {
    var xe;
    if (ia) {
      var ye = "oninput" in document;
      if (!ye) {
        var ze = document.createElement("div");
        ze.setAttribute("oninput", "return;");
        ye = "function" === typeof ze.oninput;
      }
      xe = ye;
    } else xe = false;
    we = xe && (!document.documentMode || 9 < document.documentMode);
  }
  function Ae() {
    pe && (pe.detachEvent("onpropertychange", Be), qe = pe = null);
  }
  function Be(a3) {
    if ("value" === a3.propertyName && te(qe)) {
      var b3 = [];
      ne(b3, qe, a3, xb(a3));
      Jb(re, b3);
    }
  }
  function Ce(a3, b3, c2) {
    "focusin" === a3 ? (Ae(), pe = b3, qe = c2, pe.attachEvent("onpropertychange", Be)) : "focusout" === a3 && Ae();
  }
  function De(a3) {
    if ("selectionchange" === a3 || "keyup" === a3 || "keydown" === a3) return te(qe);
  }
  function Ee(a3, b3) {
    if ("click" === a3) return te(b3);
  }
  function Fe(a3, b3) {
    if ("input" === a3 || "change" === a3) return te(b3);
  }
  function Ge(a3, b3) {
    return a3 === b3 && (0 !== a3 || 1 / a3 === 1 / b3) || a3 !== a3 && b3 !== b3;
  }
  var He = "function" === typeof Object.is ? Object.is : Ge;
  function Ie(a3, b3) {
    if (He(a3, b3)) return true;
    if ("object" !== typeof a3 || null === a3 || "object" !== typeof b3 || null === b3) return false;
    var c2 = Object.keys(a3), d2 = Object.keys(b3);
    if (c2.length !== d2.length) return false;
    for (d2 = 0; d2 < c2.length; d2++) {
      var e2 = c2[d2];
      if (!ja.call(b3, e2) || !He(a3[e2], b3[e2])) return false;
    }
    return true;
  }
  function Je(a3) {
    for (; a3 && a3.firstChild; ) a3 = a3.firstChild;
    return a3;
  }
  function Ke(a3, b3) {
    var c2 = Je(a3);
    a3 = 0;
    for (var d2; c2; ) {
      if (3 === c2.nodeType) {
        d2 = a3 + c2.textContent.length;
        if (a3 <= b3 && d2 >= b3) return { node: c2, offset: b3 - a3 };
        a3 = d2;
      }
      a: {
        for (; c2; ) {
          if (c2.nextSibling) {
            c2 = c2.nextSibling;
            break a;
          }
          c2 = c2.parentNode;
        }
        c2 = void 0;
      }
      c2 = Je(c2);
    }
  }
  function Le(a3, b3) {
    return a3 && b3 ? a3 === b3 ? true : a3 && 3 === a3.nodeType ? false : b3 && 3 === b3.nodeType ? Le(a3, b3.parentNode) : "contains" in a3 ? a3.contains(b3) : a3.compareDocumentPosition ? !!(a3.compareDocumentPosition(b3) & 16) : false : false;
  }
  function Me() {
    for (var a3 = window, b3 = Xa(); b3 instanceof a3.HTMLIFrameElement; ) {
      try {
        var c2 = "string" === typeof b3.contentWindow.location.href;
      } catch (d2) {
        c2 = false;
      }
      if (c2) a3 = b3.contentWindow;
      else break;
      b3 = Xa(a3.document);
    }
    return b3;
  }
  function Ne(a3) {
    var b3 = a3 && a3.nodeName && a3.nodeName.toLowerCase();
    return b3 && ("input" === b3 && ("text" === a3.type || "search" === a3.type || "tel" === a3.type || "url" === a3.type || "password" === a3.type) || "textarea" === b3 || "true" === a3.contentEditable);
  }
  function Oe(a3) {
    var b3 = Me(), c2 = a3.focusedElem, d2 = a3.selectionRange;
    if (b3 !== c2 && c2 && c2.ownerDocument && Le(c2.ownerDocument.documentElement, c2)) {
      if (null !== d2 && Ne(c2)) {
        if (b3 = d2.start, a3 = d2.end, void 0 === a3 && (a3 = b3), "selectionStart" in c2) c2.selectionStart = b3, c2.selectionEnd = Math.min(a3, c2.value.length);
        else if (a3 = (b3 = c2.ownerDocument || document) && b3.defaultView || window, a3.getSelection) {
          a3 = a3.getSelection();
          var e2 = c2.textContent.length, f4 = Math.min(d2.start, e2);
          d2 = void 0 === d2.end ? f4 : Math.min(d2.end, e2);
          !a3.extend && f4 > d2 && (e2 = d2, d2 = f4, f4 = e2);
          e2 = Ke(c2, f4);
          var g2 = Ke(
            c2,
            d2
          );
          e2 && g2 && (1 !== a3.rangeCount || a3.anchorNode !== e2.node || a3.anchorOffset !== e2.offset || a3.focusNode !== g2.node || a3.focusOffset !== g2.offset) && (b3 = b3.createRange(), b3.setStart(e2.node, e2.offset), a3.removeAllRanges(), f4 > d2 ? (a3.addRange(b3), a3.extend(g2.node, g2.offset)) : (b3.setEnd(g2.node, g2.offset), a3.addRange(b3)));
        }
      }
      b3 = [];
      for (a3 = c2; a3 = a3.parentNode; ) 1 === a3.nodeType && b3.push({ element: a3, left: a3.scrollLeft, top: a3.scrollTop });
      "function" === typeof c2.focus && c2.focus();
      for (c2 = 0; c2 < b3.length; c2++) a3 = b3[c2], a3.element.scrollLeft = a3.left, a3.element.scrollTop = a3.top;
    }
  }
  var Pe = ia && "documentMode" in document && 11 >= document.documentMode, Qe = null, Re = null, Se = null, Te = false;
  function Ue(a3, b3, c2) {
    var d2 = c2.window === c2 ? c2.document : 9 === c2.nodeType ? c2 : c2.ownerDocument;
    Te || null == Qe || Qe !== Xa(d2) || (d2 = Qe, "selectionStart" in d2 && Ne(d2) ? d2 = { start: d2.selectionStart, end: d2.selectionEnd } : (d2 = (d2.ownerDocument && d2.ownerDocument.defaultView || window).getSelection(), d2 = { anchorNode: d2.anchorNode, anchorOffset: d2.anchorOffset, focusNode: d2.focusNode, focusOffset: d2.focusOffset }), Se && Ie(Se, d2) || (Se = d2, d2 = oe(Re, "onSelect"), 0 < d2.length && (b3 = new td("onSelect", "select", null, b3, c2), a3.push({ event: b3, listeners: d2 }), b3.target = Qe)));
  }
  function Ve(a3, b3) {
    var c2 = {};
    c2[a3.toLowerCase()] = b3.toLowerCase();
    c2["Webkit" + a3] = "webkit" + b3;
    c2["Moz" + a3] = "moz" + b3;
    return c2;
  }
  var We = { animationend: Ve("Animation", "AnimationEnd"), animationiteration: Ve("Animation", "AnimationIteration"), animationstart: Ve("Animation", "AnimationStart"), transitionend: Ve("Transition", "TransitionEnd") }, Xe = {}, Ye = {};
  ia && (Ye = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);
  function Ze(a3) {
    if (Xe[a3]) return Xe[a3];
    if (!We[a3]) return a3;
    var b3 = We[a3], c2;
    for (c2 in b3) if (b3.hasOwnProperty(c2) && c2 in Ye) return Xe[a3] = b3[c2];
    return a3;
  }
  var $e = Ze("animationend"), af = Ze("animationiteration"), bf = Ze("animationstart"), cf = Ze("transitionend"), df = /* @__PURE__ */ new Map(), ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
  function ff(a3, b3) {
    df.set(a3, b3);
    fa(b3, [a3]);
  }
  for (var gf = 0; gf < ef.length; gf++) {
    var hf = ef[gf], jf = hf.toLowerCase(), kf = hf[0].toUpperCase() + hf.slice(1);
    ff(jf, "on" + kf);
  }
  ff($e, "onAnimationEnd");
  ff(af, "onAnimationIteration");
  ff(bf, "onAnimationStart");
  ff("dblclick", "onDoubleClick");
  ff("focusin", "onFocus");
  ff("focusout", "onBlur");
  ff(cf, "onTransitionEnd");
  ha("onMouseEnter", ["mouseout", "mouseover"]);
  ha("onMouseLeave", ["mouseout", "mouseover"]);
  ha("onPointerEnter", ["pointerout", "pointerover"]);
  ha("onPointerLeave", ["pointerout", "pointerover"]);
  fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
  fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
  fa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
  fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
  fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
  fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
  var lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
  function nf(a3, b3, c2) {
    var d2 = a3.type || "unknown-event";
    a3.currentTarget = c2;
    Ub(d2, b3, void 0, a3);
    a3.currentTarget = null;
  }
  function se(a3, b3) {
    b3 = 0 !== (b3 & 4);
    for (var c2 = 0; c2 < a3.length; c2++) {
      var d2 = a3[c2], e2 = d2.event;
      d2 = d2.listeners;
      a: {
        var f4 = void 0;
        if (b3) for (var g2 = d2.length - 1; 0 <= g2; g2--) {
          var h2 = d2[g2], k3 = h2.instance, l3 = h2.currentTarget;
          h2 = h2.listener;
          if (k3 !== f4 && e2.isPropagationStopped()) break a;
          nf(e2, h2, l3);
          f4 = k3;
        }
        else for (g2 = 0; g2 < d2.length; g2++) {
          h2 = d2[g2];
          k3 = h2.instance;
          l3 = h2.currentTarget;
          h2 = h2.listener;
          if (k3 !== f4 && e2.isPropagationStopped()) break a;
          nf(e2, h2, l3);
          f4 = k3;
        }
      }
    }
    if (Qb) throw a3 = Rb, Qb = false, Rb = null, a3;
  }
  function D2(a3, b3) {
    var c2 = b3[of];
    void 0 === c2 && (c2 = b3[of] = /* @__PURE__ */ new Set());
    var d2 = a3 + "__bubble";
    c2.has(d2) || (pf(b3, a3, 2, false), c2.add(d2));
  }
  function qf(a3, b3, c2) {
    var d2 = 0;
    b3 && (d2 |= 4);
    pf(c2, a3, d2, b3);
  }
  var rf = "_reactListening" + Math.random().toString(36).slice(2);
  function sf(a3) {
    if (!a3[rf]) {
      a3[rf] = true;
      da.forEach(function(b4) {
        "selectionchange" !== b4 && (mf.has(b4) || qf(b4, false, a3), qf(b4, true, a3));
      });
      var b3 = 9 === a3.nodeType ? a3 : a3.ownerDocument;
      null === b3 || b3[rf] || (b3[rf] = true, qf("selectionchange", false, b3));
    }
  }
  function pf(a3, b3, c2, d2) {
    switch (jd(b3)) {
      case 1:
        var e2 = ed;
        break;
      case 4:
        e2 = gd;
        break;
      default:
        e2 = fd;
    }
    c2 = e2.bind(null, b3, c2, a3);
    e2 = void 0;
    !Lb || "touchstart" !== b3 && "touchmove" !== b3 && "wheel" !== b3 || (e2 = true);
    d2 ? void 0 !== e2 ? a3.addEventListener(b3, c2, { capture: true, passive: e2 }) : a3.addEventListener(b3, c2, true) : void 0 !== e2 ? a3.addEventListener(b3, c2, { passive: e2 }) : a3.addEventListener(b3, c2, false);
  }
  function hd(a3, b3, c2, d2, e2) {
    var f4 = d2;
    if (0 === (b3 & 1) && 0 === (b3 & 2) && null !== d2) a: for (; ; ) {
      if (null === d2) return;
      var g2 = d2.tag;
      if (3 === g2 || 4 === g2) {
        var h2 = d2.stateNode.containerInfo;
        if (h2 === e2 || 8 === h2.nodeType && h2.parentNode === e2) break;
        if (4 === g2) for (g2 = d2.return; null !== g2; ) {
          var k3 = g2.tag;
          if (3 === k3 || 4 === k3) {
            if (k3 = g2.stateNode.containerInfo, k3 === e2 || 8 === k3.nodeType && k3.parentNode === e2) return;
          }
          g2 = g2.return;
        }
        for (; null !== h2; ) {
          g2 = Wc(h2);
          if (null === g2) return;
          k3 = g2.tag;
          if (5 === k3 || 6 === k3) {
            d2 = f4 = g2;
            continue a;
          }
          h2 = h2.parentNode;
        }
      }
      d2 = d2.return;
    }
    Jb(function() {
      var d3 = f4, e3 = xb(c2), g3 = [];
      a: {
        var h3 = df.get(a3);
        if (void 0 !== h3) {
          var k4 = td, n2 = a3;
          switch (a3) {
            case "keypress":
              if (0 === od(c2)) break a;
            case "keydown":
            case "keyup":
              k4 = Rd;
              break;
            case "focusin":
              n2 = "focus";
              k4 = Fd;
              break;
            case "focusout":
              n2 = "blur";
              k4 = Fd;
              break;
            case "beforeblur":
            case "afterblur":
              k4 = Fd;
              break;
            case "click":
              if (2 === c2.button) break a;
            case "auxclick":
            case "dblclick":
            case "mousedown":
            case "mousemove":
            case "mouseup":
            case "mouseout":
            case "mouseover":
            case "contextmenu":
              k4 = Bd;
              break;
            case "drag":
            case "dragend":
            case "dragenter":
            case "dragexit":
            case "dragleave":
            case "dragover":
            case "dragstart":
            case "drop":
              k4 = Dd;
              break;
            case "touchcancel":
            case "touchend":
            case "touchmove":
            case "touchstart":
              k4 = Vd;
              break;
            case $e:
            case af:
            case bf:
              k4 = Hd;
              break;
            case cf:
              k4 = Xd;
              break;
            case "scroll":
              k4 = vd;
              break;
            case "wheel":
              k4 = Zd;
              break;
            case "copy":
            case "cut":
            case "paste":
              k4 = Jd;
              break;
            case "gotpointercapture":
            case "lostpointercapture":
            case "pointercancel":
            case "pointerdown":
            case "pointermove":
            case "pointerout":
            case "pointerover":
            case "pointerup":
              k4 = Td;
          }
          var t3 = 0 !== (b3 & 4), J2 = !t3 && "scroll" === a3, x2 = t3 ? null !== h3 ? h3 + "Capture" : null : h3;
          t3 = [];
          for (var w2 = d3, u3; null !== w2; ) {
            u3 = w2;
            var F2 = u3.stateNode;
            5 === u3.tag && null !== F2 && (u3 = F2, null !== x2 && (F2 = Kb(w2, x2), null != F2 && t3.push(tf(w2, F2, u3))));
            if (J2) break;
            w2 = w2.return;
          }
          0 < t3.length && (h3 = new k4(h3, n2, null, c2, e3), g3.push({ event: h3, listeners: t3 }));
        }
      }
      if (0 === (b3 & 7)) {
        a: {
          h3 = "mouseover" === a3 || "pointerover" === a3;
          k4 = "mouseout" === a3 || "pointerout" === a3;
          if (h3 && c2 !== wb && (n2 = c2.relatedTarget || c2.fromElement) && (Wc(n2) || n2[uf])) break a;
          if (k4 || h3) {
            h3 = e3.window === e3 ? e3 : (h3 = e3.ownerDocument) ? h3.defaultView || h3.parentWindow : window;
            if (k4) {
              if (n2 = c2.relatedTarget || c2.toElement, k4 = d3, n2 = n2 ? Wc(n2) : null, null !== n2 && (J2 = Vb(n2), n2 !== J2 || 5 !== n2.tag && 6 !== n2.tag)) n2 = null;
            } else k4 = null, n2 = d3;
            if (k4 !== n2) {
              t3 = Bd;
              F2 = "onMouseLeave";
              x2 = "onMouseEnter";
              w2 = "mouse";
              if ("pointerout" === a3 || "pointerover" === a3) t3 = Td, F2 = "onPointerLeave", x2 = "onPointerEnter", w2 = "pointer";
              J2 = null == k4 ? h3 : ue(k4);
              u3 = null == n2 ? h3 : ue(n2);
              h3 = new t3(F2, w2 + "leave", k4, c2, e3);
              h3.target = J2;
              h3.relatedTarget = u3;
              F2 = null;
              Wc(e3) === d3 && (t3 = new t3(x2, w2 + "enter", n2, c2, e3), t3.target = u3, t3.relatedTarget = J2, F2 = t3);
              J2 = F2;
              if (k4 && n2) b: {
                t3 = k4;
                x2 = n2;
                w2 = 0;
                for (u3 = t3; u3; u3 = vf(u3)) w2++;
                u3 = 0;
                for (F2 = x2; F2; F2 = vf(F2)) u3++;
                for (; 0 < w2 - u3; ) t3 = vf(t3), w2--;
                for (; 0 < u3 - w2; ) x2 = vf(x2), u3--;
                for (; w2--; ) {
                  if (t3 === x2 || null !== x2 && t3 === x2.alternate) break b;
                  t3 = vf(t3);
                  x2 = vf(x2);
                }
                t3 = null;
              }
              else t3 = null;
              null !== k4 && wf(g3, h3, k4, t3, false);
              null !== n2 && null !== J2 && wf(g3, J2, n2, t3, true);
            }
          }
        }
        a: {
          h3 = d3 ? ue(d3) : window;
          k4 = h3.nodeName && h3.nodeName.toLowerCase();
          if ("select" === k4 || "input" === k4 && "file" === h3.type) var na = ve;
          else if (me(h3)) if (we) na = Fe;
          else {
            na = De;
            var xa = Ce;
          }
          else (k4 = h3.nodeName) && "input" === k4.toLowerCase() && ("checkbox" === h3.type || "radio" === h3.type) && (na = Ee);
          if (na && (na = na(a3, d3))) {
            ne(g3, na, c2, e3);
            break a;
          }
          xa && xa(a3, h3, d3);
          "focusout" === a3 && (xa = h3._wrapperState) && xa.controlled && "number" === h3.type && cb(h3, "number", h3.value);
        }
        xa = d3 ? ue(d3) : window;
        switch (a3) {
          case "focusin":
            if (me(xa) || "true" === xa.contentEditable) Qe = xa, Re = d3, Se = null;
            break;
          case "focusout":
            Se = Re = Qe = null;
            break;
          case "mousedown":
            Te = true;
            break;
          case "contextmenu":
          case "mouseup":
          case "dragend":
            Te = false;
            Ue(g3, c2, e3);
            break;
          case "selectionchange":
            if (Pe) break;
          case "keydown":
          case "keyup":
            Ue(g3, c2, e3);
        }
        var $a;
        if (ae) b: {
          switch (a3) {
            case "compositionstart":
              var ba = "onCompositionStart";
              break b;
            case "compositionend":
              ba = "onCompositionEnd";
              break b;
            case "compositionupdate":
              ba = "onCompositionUpdate";
              break b;
          }
          ba = void 0;
        }
        else ie ? ge(a3, c2) && (ba = "onCompositionEnd") : "keydown" === a3 && 229 === c2.keyCode && (ba = "onCompositionStart");
        ba && (de && "ko" !== c2.locale && (ie || "onCompositionStart" !== ba ? "onCompositionEnd" === ba && ie && ($a = nd()) : (kd = e3, ld = "value" in kd ? kd.value : kd.textContent, ie = true)), xa = oe(d3, ba), 0 < xa.length && (ba = new Ld(ba, a3, null, c2, e3), g3.push({ event: ba, listeners: xa }), $a ? ba.data = $a : ($a = he(c2), null !== $a && (ba.data = $a))));
        if ($a = ce ? je(a3, c2) : ke(a3, c2)) d3 = oe(d3, "onBeforeInput"), 0 < d3.length && (e3 = new Ld("onBeforeInput", "beforeinput", null, c2, e3), g3.push({ event: e3, listeners: d3 }), e3.data = $a);
      }
      se(g3, b3);
    });
  }
  function tf(a3, b3, c2) {
    return { instance: a3, listener: b3, currentTarget: c2 };
  }
  function oe(a3, b3) {
    for (var c2 = b3 + "Capture", d2 = []; null !== a3; ) {
      var e2 = a3, f4 = e2.stateNode;
      5 === e2.tag && null !== f4 && (e2 = f4, f4 = Kb(a3, c2), null != f4 && d2.unshift(tf(a3, f4, e2)), f4 = Kb(a3, b3), null != f4 && d2.push(tf(a3, f4, e2)));
      a3 = a3.return;
    }
    return d2;
  }
  function vf(a3) {
    if (null === a3) return null;
    do
      a3 = a3.return;
    while (a3 && 5 !== a3.tag);
    return a3 ? a3 : null;
  }
  function wf(a3, b3, c2, d2, e2) {
    for (var f4 = b3._reactName, g2 = []; null !== c2 && c2 !== d2; ) {
      var h2 = c2, k3 = h2.alternate, l3 = h2.stateNode;
      if (null !== k3 && k3 === d2) break;
      5 === h2.tag && null !== l3 && (h2 = l3, e2 ? (k3 = Kb(c2, f4), null != k3 && g2.unshift(tf(c2, k3, h2))) : e2 || (k3 = Kb(c2, f4), null != k3 && g2.push(tf(c2, k3, h2))));
      c2 = c2.return;
    }
    0 !== g2.length && a3.push({ event: b3, listeners: g2 });
  }
  var xf = /\r\n?/g, yf = /\u0000|\uFFFD/g;
  function zf(a3) {
    return ("string" === typeof a3 ? a3 : "" + a3).replace(xf, "\n").replace(yf, "");
  }
  function Af(a3, b3, c2) {
    b3 = zf(b3);
    if (zf(a3) !== b3 && c2) throw Error(p3(425));
  }
  function Bf() {
  }
  var Cf = null, Df = null;
  function Ef(a3, b3) {
    return "textarea" === a3 || "noscript" === a3 || "string" === typeof b3.children || "number" === typeof b3.children || "object" === typeof b3.dangerouslySetInnerHTML && null !== b3.dangerouslySetInnerHTML && null != b3.dangerouslySetInnerHTML.__html;
  }
  var Ff = "function" === typeof setTimeout ? setTimeout : void 0, Gf = "function" === typeof clearTimeout ? clearTimeout : void 0, Hf = "function" === typeof Promise ? Promise : void 0, Jf = "function" === typeof queueMicrotask ? queueMicrotask : "undefined" !== typeof Hf ? function(a3) {
    return Hf.resolve(null).then(a3).catch(If);
  } : Ff;
  function If(a3) {
    setTimeout(function() {
      throw a3;
    });
  }
  function Kf(a3, b3) {
    var c2 = b3, d2 = 0;
    do {
      var e2 = c2.nextSibling;
      a3.removeChild(c2);
      if (e2 && 8 === e2.nodeType) if (c2 = e2.data, "/$" === c2) {
        if (0 === d2) {
          a3.removeChild(e2);
          bd(b3);
          return;
        }
        d2--;
      } else "$" !== c2 && "$?" !== c2 && "$!" !== c2 || d2++;
      c2 = e2;
    } while (c2);
    bd(b3);
  }
  function Lf(a3) {
    for (; null != a3; a3 = a3.nextSibling) {
      var b3 = a3.nodeType;
      if (1 === b3 || 3 === b3) break;
      if (8 === b3) {
        b3 = a3.data;
        if ("$" === b3 || "$!" === b3 || "$?" === b3) break;
        if ("/$" === b3) return null;
      }
    }
    return a3;
  }
  function Mf(a3) {
    a3 = a3.previousSibling;
    for (var b3 = 0; a3; ) {
      if (8 === a3.nodeType) {
        var c2 = a3.data;
        if ("$" === c2 || "$!" === c2 || "$?" === c2) {
          if (0 === b3) return a3;
          b3--;
        } else "/$" === c2 && b3++;
      }
      a3 = a3.previousSibling;
    }
    return null;
  }
  var Nf = Math.random().toString(36).slice(2), Of = "__reactFiber$" + Nf, Pf = "__reactProps$" + Nf, uf = "__reactContainer$" + Nf, of = "__reactEvents$" + Nf, Qf = "__reactListeners$" + Nf, Rf = "__reactHandles$" + Nf;
  function Wc(a3) {
    var b3 = a3[Of];
    if (b3) return b3;
    for (var c2 = a3.parentNode; c2; ) {
      if (b3 = c2[uf] || c2[Of]) {
        c2 = b3.alternate;
        if (null !== b3.child || null !== c2 && null !== c2.child) for (a3 = Mf(a3); null !== a3; ) {
          if (c2 = a3[Of]) return c2;
          a3 = Mf(a3);
        }
        return b3;
      }
      a3 = c2;
      c2 = a3.parentNode;
    }
    return null;
  }
  function Cb(a3) {
    a3 = a3[Of] || a3[uf];
    return !a3 || 5 !== a3.tag && 6 !== a3.tag && 13 !== a3.tag && 3 !== a3.tag ? null : a3;
  }
  function ue(a3) {
    if (5 === a3.tag || 6 === a3.tag) return a3.stateNode;
    throw Error(p3(33));
  }
  function Db(a3) {
    return a3[Pf] || null;
  }
  var Sf = [], Tf = -1;
  function Uf(a3) {
    return { current: a3 };
  }
  function E2(a3) {
    0 > Tf || (a3.current = Sf[Tf], Sf[Tf] = null, Tf--);
  }
  function G2(a3, b3) {
    Tf++;
    Sf[Tf] = a3.current;
    a3.current = b3;
  }
  var Vf = {}, H3 = Uf(Vf), Wf = Uf(false), Xf = Vf;
  function Yf(a3, b3) {
    var c2 = a3.type.contextTypes;
    if (!c2) return Vf;
    var d2 = a3.stateNode;
    if (d2 && d2.__reactInternalMemoizedUnmaskedChildContext === b3) return d2.__reactInternalMemoizedMaskedChildContext;
    var e2 = {}, f4;
    for (f4 in c2) e2[f4] = b3[f4];
    d2 && (a3 = a3.stateNode, a3.__reactInternalMemoizedUnmaskedChildContext = b3, a3.__reactInternalMemoizedMaskedChildContext = e2);
    return e2;
  }
  function Zf(a3) {
    a3 = a3.childContextTypes;
    return null !== a3 && void 0 !== a3;
  }
  function $f() {
    E2(Wf);
    E2(H3);
  }
  function ag(a3, b3, c2) {
    if (H3.current !== Vf) throw Error(p3(168));
    G2(H3, b3);
    G2(Wf, c2);
  }
  function bg(a3, b3, c2) {
    var d2 = a3.stateNode;
    b3 = b3.childContextTypes;
    if ("function" !== typeof d2.getChildContext) return c2;
    d2 = d2.getChildContext();
    for (var e2 in d2) if (!(e2 in b3)) throw Error(p3(108, Ra(a3) || "Unknown", e2));
    return A2({}, c2, d2);
  }
  function cg(a3) {
    a3 = (a3 = a3.stateNode) && a3.__reactInternalMemoizedMergedChildContext || Vf;
    Xf = H3.current;
    G2(H3, a3);
    G2(Wf, Wf.current);
    return true;
  }
  function dg(a3, b3, c2) {
    var d2 = a3.stateNode;
    if (!d2) throw Error(p3(169));
    c2 ? (a3 = bg(a3, b3, Xf), d2.__reactInternalMemoizedMergedChildContext = a3, E2(Wf), E2(H3), G2(H3, a3)) : E2(Wf);
    G2(Wf, c2);
  }
  var eg = null, fg = false, gg = false;
  function hg(a3) {
    null === eg ? eg = [a3] : eg.push(a3);
  }
  function ig(a3) {
    fg = true;
    hg(a3);
  }
  function jg() {
    if (!gg && null !== eg) {
      gg = true;
      var a3 = 0, b3 = C2;
      try {
        var c2 = eg;
        for (C2 = 1; a3 < c2.length; a3++) {
          var d2 = c2[a3];
          do
            d2 = d2(true);
          while (null !== d2);
        }
        eg = null;
        fg = false;
      } catch (e2) {
        throw null !== eg && (eg = eg.slice(a3 + 1)), ac(fc, jg), e2;
      } finally {
        C2 = b3, gg = false;
      }
    }
    return null;
  }
  var kg = [], lg = 0, mg = null, ng = 0, og = [], pg = 0, qg = null, rg = 1, sg = "";
  function tg(a3, b3) {
    kg[lg++] = ng;
    kg[lg++] = mg;
    mg = a3;
    ng = b3;
  }
  function ug(a3, b3, c2) {
    og[pg++] = rg;
    og[pg++] = sg;
    og[pg++] = qg;
    qg = a3;
    var d2 = rg;
    a3 = sg;
    var e2 = 32 - oc(d2) - 1;
    d2 &= ~(1 << e2);
    c2 += 1;
    var f4 = 32 - oc(b3) + e2;
    if (30 < f4) {
      var g2 = e2 - e2 % 5;
      f4 = (d2 & (1 << g2) - 1).toString(32);
      d2 >>= g2;
      e2 -= g2;
      rg = 1 << 32 - oc(b3) + e2 | c2 << e2 | d2;
      sg = f4 + a3;
    } else rg = 1 << f4 | c2 << e2 | d2, sg = a3;
  }
  function vg(a3) {
    null !== a3.return && (tg(a3, 1), ug(a3, 1, 0));
  }
  function wg(a3) {
    for (; a3 === mg; ) mg = kg[--lg], kg[lg] = null, ng = kg[--lg], kg[lg] = null;
    for (; a3 === qg; ) qg = og[--pg], og[pg] = null, sg = og[--pg], og[pg] = null, rg = og[--pg], og[pg] = null;
  }
  var xg = null, yg = null, I2 = false, zg = null;
  function Ag(a3, b3) {
    var c2 = Bg(5, null, null, 0);
    c2.elementType = "DELETED";
    c2.stateNode = b3;
    c2.return = a3;
    b3 = a3.deletions;
    null === b3 ? (a3.deletions = [c2], a3.flags |= 16) : b3.push(c2);
  }
  function Cg(a3, b3) {
    switch (a3.tag) {
      case 5:
        var c2 = a3.type;
        b3 = 1 !== b3.nodeType || c2.toLowerCase() !== b3.nodeName.toLowerCase() ? null : b3;
        return null !== b3 ? (a3.stateNode = b3, xg = a3, yg = Lf(b3.firstChild), true) : false;
      case 6:
        return b3 = "" === a3.pendingProps || 3 !== b3.nodeType ? null : b3, null !== b3 ? (a3.stateNode = b3, xg = a3, yg = null, true) : false;
      case 13:
        return b3 = 8 !== b3.nodeType ? null : b3, null !== b3 ? (c2 = null !== qg ? { id: rg, overflow: sg } : null, a3.memoizedState = { dehydrated: b3, treeContext: c2, retryLane: 1073741824 }, c2 = Bg(18, null, null, 0), c2.stateNode = b3, c2.return = a3, a3.child = c2, xg = a3, yg = null, true) : false;
      default:
        return false;
    }
  }
  function Dg(a3) {
    return 0 !== (a3.mode & 1) && 0 === (a3.flags & 128);
  }
  function Eg(a3) {
    if (I2) {
      var b3 = yg;
      if (b3) {
        var c2 = b3;
        if (!Cg(a3, b3)) {
          if (Dg(a3)) throw Error(p3(418));
          b3 = Lf(c2.nextSibling);
          var d2 = xg;
          b3 && Cg(a3, b3) ? Ag(d2, c2) : (a3.flags = a3.flags & -4097 | 2, I2 = false, xg = a3);
        }
      } else {
        if (Dg(a3)) throw Error(p3(418));
        a3.flags = a3.flags & -4097 | 2;
        I2 = false;
        xg = a3;
      }
    }
  }
  function Fg(a3) {
    for (a3 = a3.return; null !== a3 && 5 !== a3.tag && 3 !== a3.tag && 13 !== a3.tag; ) a3 = a3.return;
    xg = a3;
  }
  function Gg(a3) {
    if (a3 !== xg) return false;
    if (!I2) return Fg(a3), I2 = true, false;
    var b3;
    (b3 = 3 !== a3.tag) && !(b3 = 5 !== a3.tag) && (b3 = a3.type, b3 = "head" !== b3 && "body" !== b3 && !Ef(a3.type, a3.memoizedProps));
    if (b3 && (b3 = yg)) {
      if (Dg(a3)) throw Hg(), Error(p3(418));
      for (; b3; ) Ag(a3, b3), b3 = Lf(b3.nextSibling);
    }
    Fg(a3);
    if (13 === a3.tag) {
      a3 = a3.memoizedState;
      a3 = null !== a3 ? a3.dehydrated : null;
      if (!a3) throw Error(p3(317));
      a: {
        a3 = a3.nextSibling;
        for (b3 = 0; a3; ) {
          if (8 === a3.nodeType) {
            var c2 = a3.data;
            if ("/$" === c2) {
              if (0 === b3) {
                yg = Lf(a3.nextSibling);
                break a;
              }
              b3--;
            } else "$" !== c2 && "$!" !== c2 && "$?" !== c2 || b3++;
          }
          a3 = a3.nextSibling;
        }
        yg = null;
      }
    } else yg = xg ? Lf(a3.stateNode.nextSibling) : null;
    return true;
  }
  function Hg() {
    for (var a3 = yg; a3; ) a3 = Lf(a3.nextSibling);
  }
  function Ig() {
    yg = xg = null;
    I2 = false;
  }
  function Jg(a3) {
    null === zg ? zg = [a3] : zg.push(a3);
  }
  var Kg = ua.ReactCurrentBatchConfig;
  function Lg(a3, b3, c2) {
    a3 = c2.ref;
    if (null !== a3 && "function" !== typeof a3 && "object" !== typeof a3) {
      if (c2._owner) {
        c2 = c2._owner;
        if (c2) {
          if (1 !== c2.tag) throw Error(p3(309));
          var d2 = c2.stateNode;
        }
        if (!d2) throw Error(p3(147, a3));
        var e2 = d2, f4 = "" + a3;
        if (null !== b3 && null !== b3.ref && "function" === typeof b3.ref && b3.ref._stringRef === f4) return b3.ref;
        b3 = function(a4) {
          var b4 = e2.refs;
          null === a4 ? delete b4[f4] : b4[f4] = a4;
        };
        b3._stringRef = f4;
        return b3;
      }
      if ("string" !== typeof a3) throw Error(p3(284));
      if (!c2._owner) throw Error(p3(290, a3));
    }
    return a3;
  }
  function Mg(a3, b3) {
    a3 = Object.prototype.toString.call(b3);
    throw Error(p3(31, "[object Object]" === a3 ? "object with keys {" + Object.keys(b3).join(", ") + "}" : a3));
  }
  function Ng(a3) {
    var b3 = a3._init;
    return b3(a3._payload);
  }
  function Og(a3) {
    function b3(b4, c3) {
      if (a3) {
        var d3 = b4.deletions;
        null === d3 ? (b4.deletions = [c3], b4.flags |= 16) : d3.push(c3);
      }
    }
    function c2(c3, d3) {
      if (!a3) return null;
      for (; null !== d3; ) b3(c3, d3), d3 = d3.sibling;
      return null;
    }
    function d2(a4, b4) {
      for (a4 = /* @__PURE__ */ new Map(); null !== b4; ) null !== b4.key ? a4.set(b4.key, b4) : a4.set(b4.index, b4), b4 = b4.sibling;
      return a4;
    }
    function e2(a4, b4) {
      a4 = Pg(a4, b4);
      a4.index = 0;
      a4.sibling = null;
      return a4;
    }
    function f4(b4, c3, d3) {
      b4.index = d3;
      if (!a3) return b4.flags |= 1048576, c3;
      d3 = b4.alternate;
      if (null !== d3) return d3 = d3.index, d3 < c3 ? (b4.flags |= 2, c3) : d3;
      b4.flags |= 2;
      return c3;
    }
    function g2(b4) {
      a3 && null === b4.alternate && (b4.flags |= 2);
      return b4;
    }
    function h2(a4, b4, c3, d3) {
      if (null === b4 || 6 !== b4.tag) return b4 = Qg(c3, a4.mode, d3), b4.return = a4, b4;
      b4 = e2(b4, c3);
      b4.return = a4;
      return b4;
    }
    function k3(a4, b4, c3, d3) {
      var f5 = c3.type;
      if (f5 === ya) return m2(a4, b4, c3.props.children, d3, c3.key);
      if (null !== b4 && (b4.elementType === f5 || "object" === typeof f5 && null !== f5 && f5.$$typeof === Ha && Ng(f5) === b4.type)) return d3 = e2(b4, c3.props), d3.ref = Lg(a4, b4, c3), d3.return = a4, d3;
      d3 = Rg(c3.type, c3.key, c3.props, null, a4.mode, d3);
      d3.ref = Lg(a4, b4, c3);
      d3.return = a4;
      return d3;
    }
    function l3(a4, b4, c3, d3) {
      if (null === b4 || 4 !== b4.tag || b4.stateNode.containerInfo !== c3.containerInfo || b4.stateNode.implementation !== c3.implementation) return b4 = Sg(c3, a4.mode, d3), b4.return = a4, b4;
      b4 = e2(b4, c3.children || []);
      b4.return = a4;
      return b4;
    }
    function m2(a4, b4, c3, d3, f5) {
      if (null === b4 || 7 !== b4.tag) return b4 = Tg(c3, a4.mode, d3, f5), b4.return = a4, b4;
      b4 = e2(b4, c3);
      b4.return = a4;
      return b4;
    }
    function q2(a4, b4, c3) {
      if ("string" === typeof b4 && "" !== b4 || "number" === typeof b4) return b4 = Qg("" + b4, a4.mode, c3), b4.return = a4, b4;
      if ("object" === typeof b4 && null !== b4) {
        switch (b4.$$typeof) {
          case va:
            return c3 = Rg(b4.type, b4.key, b4.props, null, a4.mode, c3), c3.ref = Lg(a4, null, b4), c3.return = a4, c3;
          case wa:
            return b4 = Sg(b4, a4.mode, c3), b4.return = a4, b4;
          case Ha:
            var d3 = b4._init;
            return q2(a4, d3(b4._payload), c3);
        }
        if (eb(b4) || Ka(b4)) return b4 = Tg(b4, a4.mode, c3, null), b4.return = a4, b4;
        Mg(a4, b4);
      }
      return null;
    }
    function r3(a4, b4, c3, d3) {
      var e3 = null !== b4 ? b4.key : null;
      if ("string" === typeof c3 && "" !== c3 || "number" === typeof c3) return null !== e3 ? null : h2(a4, b4, "" + c3, d3);
      if ("object" === typeof c3 && null !== c3) {
        switch (c3.$$typeof) {
          case va:
            return c3.key === e3 ? k3(a4, b4, c3, d3) : null;
          case wa:
            return c3.key === e3 ? l3(a4, b4, c3, d3) : null;
          case Ha:
            return e3 = c3._init, r3(
              a4,
              b4,
              e3(c3._payload),
              d3
            );
        }
        if (eb(c3) || Ka(c3)) return null !== e3 ? null : m2(a4, b4, c3, d3, null);
        Mg(a4, c3);
      }
      return null;
    }
    function y2(a4, b4, c3, d3, e3) {
      if ("string" === typeof d3 && "" !== d3 || "number" === typeof d3) return a4 = a4.get(c3) || null, h2(b4, a4, "" + d3, e3);
      if ("object" === typeof d3 && null !== d3) {
        switch (d3.$$typeof) {
          case va:
            return a4 = a4.get(null === d3.key ? c3 : d3.key) || null, k3(b4, a4, d3, e3);
          case wa:
            return a4 = a4.get(null === d3.key ? c3 : d3.key) || null, l3(b4, a4, d3, e3);
          case Ha:
            var f5 = d3._init;
            return y2(a4, b4, c3, f5(d3._payload), e3);
        }
        if (eb(d3) || Ka(d3)) return a4 = a4.get(c3) || null, m2(b4, a4, d3, e3, null);
        Mg(b4, d3);
      }
      return null;
    }
    function n2(e3, g3, h3, k4) {
      for (var l4 = null, m3 = null, u3 = g3, w2 = g3 = 0, x2 = null; null !== u3 && w2 < h3.length; w2++) {
        u3.index > w2 ? (x2 = u3, u3 = null) : x2 = u3.sibling;
        var n3 = r3(e3, u3, h3[w2], k4);
        if (null === n3) {
          null === u3 && (u3 = x2);
          break;
        }
        a3 && u3 && null === n3.alternate && b3(e3, u3);
        g3 = f4(n3, g3, w2);
        null === m3 ? l4 = n3 : m3.sibling = n3;
        m3 = n3;
        u3 = x2;
      }
      if (w2 === h3.length) return c2(e3, u3), I2 && tg(e3, w2), l4;
      if (null === u3) {
        for (; w2 < h3.length; w2++) u3 = q2(e3, h3[w2], k4), null !== u3 && (g3 = f4(u3, g3, w2), null === m3 ? l4 = u3 : m3.sibling = u3, m3 = u3);
        I2 && tg(e3, w2);
        return l4;
      }
      for (u3 = d2(e3, u3); w2 < h3.length; w2++) x2 = y2(u3, e3, w2, h3[w2], k4), null !== x2 && (a3 && null !== x2.alternate && u3.delete(null === x2.key ? w2 : x2.key), g3 = f4(x2, g3, w2), null === m3 ? l4 = x2 : m3.sibling = x2, m3 = x2);
      a3 && u3.forEach(function(a4) {
        return b3(e3, a4);
      });
      I2 && tg(e3, w2);
      return l4;
    }
    function t3(e3, g3, h3, k4) {
      var l4 = Ka(h3);
      if ("function" !== typeof l4) throw Error(p3(150));
      h3 = l4.call(h3);
      if (null == h3) throw Error(p3(151));
      for (var u3 = l4 = null, m3 = g3, w2 = g3 = 0, x2 = null, n3 = h3.next(); null !== m3 && !n3.done; w2++, n3 = h3.next()) {
        m3.index > w2 ? (x2 = m3, m3 = null) : x2 = m3.sibling;
        var t4 = r3(e3, m3, n3.value, k4);
        if (null === t4) {
          null === m3 && (m3 = x2);
          break;
        }
        a3 && m3 && null === t4.alternate && b3(e3, m3);
        g3 = f4(t4, g3, w2);
        null === u3 ? l4 = t4 : u3.sibling = t4;
        u3 = t4;
        m3 = x2;
      }
      if (n3.done) return c2(
        e3,
        m3
      ), I2 && tg(e3, w2), l4;
      if (null === m3) {
        for (; !n3.done; w2++, n3 = h3.next()) n3 = q2(e3, n3.value, k4), null !== n3 && (g3 = f4(n3, g3, w2), null === u3 ? l4 = n3 : u3.sibling = n3, u3 = n3);
        I2 && tg(e3, w2);
        return l4;
      }
      for (m3 = d2(e3, m3); !n3.done; w2++, n3 = h3.next()) n3 = y2(m3, e3, w2, n3.value, k4), null !== n3 && (a3 && null !== n3.alternate && m3.delete(null === n3.key ? w2 : n3.key), g3 = f4(n3, g3, w2), null === u3 ? l4 = n3 : u3.sibling = n3, u3 = n3);
      a3 && m3.forEach(function(a4) {
        return b3(e3, a4);
      });
      I2 && tg(e3, w2);
      return l4;
    }
    function J2(a4, d3, f5, h3) {
      "object" === typeof f5 && null !== f5 && f5.type === ya && null === f5.key && (f5 = f5.props.children);
      if ("object" === typeof f5 && null !== f5) {
        switch (f5.$$typeof) {
          case va:
            a: {
              for (var k4 = f5.key, l4 = d3; null !== l4; ) {
                if (l4.key === k4) {
                  k4 = f5.type;
                  if (k4 === ya) {
                    if (7 === l4.tag) {
                      c2(a4, l4.sibling);
                      d3 = e2(l4, f5.props.children);
                      d3.return = a4;
                      a4 = d3;
                      break a;
                    }
                  } else if (l4.elementType === k4 || "object" === typeof k4 && null !== k4 && k4.$$typeof === Ha && Ng(k4) === l4.type) {
                    c2(a4, l4.sibling);
                    d3 = e2(l4, f5.props);
                    d3.ref = Lg(a4, l4, f5);
                    d3.return = a4;
                    a4 = d3;
                    break a;
                  }
                  c2(a4, l4);
                  break;
                } else b3(a4, l4);
                l4 = l4.sibling;
              }
              f5.type === ya ? (d3 = Tg(f5.props.children, a4.mode, h3, f5.key), d3.return = a4, a4 = d3) : (h3 = Rg(f5.type, f5.key, f5.props, null, a4.mode, h3), h3.ref = Lg(a4, d3, f5), h3.return = a4, a4 = h3);
            }
            return g2(a4);
          case wa:
            a: {
              for (l4 = f5.key; null !== d3; ) {
                if (d3.key === l4) if (4 === d3.tag && d3.stateNode.containerInfo === f5.containerInfo && d3.stateNode.implementation === f5.implementation) {
                  c2(a4, d3.sibling);
                  d3 = e2(d3, f5.children || []);
                  d3.return = a4;
                  a4 = d3;
                  break a;
                } else {
                  c2(a4, d3);
                  break;
                }
                else b3(a4, d3);
                d3 = d3.sibling;
              }
              d3 = Sg(f5, a4.mode, h3);
              d3.return = a4;
              a4 = d3;
            }
            return g2(a4);
          case Ha:
            return l4 = f5._init, J2(a4, d3, l4(f5._payload), h3);
        }
        if (eb(f5)) return n2(a4, d3, f5, h3);
        if (Ka(f5)) return t3(a4, d3, f5, h3);
        Mg(a4, f5);
      }
      return "string" === typeof f5 && "" !== f5 || "number" === typeof f5 ? (f5 = "" + f5, null !== d3 && 6 === d3.tag ? (c2(a4, d3.sibling), d3 = e2(d3, f5), d3.return = a4, a4 = d3) : (c2(a4, d3), d3 = Qg(f5, a4.mode, h3), d3.return = a4, a4 = d3), g2(a4)) : c2(a4, d3);
    }
    return J2;
  }
  var Ug = Og(true), Vg = Og(false), Wg = Uf(null), Xg = null, Yg = null, Zg = null;
  function $g() {
    Zg = Yg = Xg = null;
  }
  function ah(a3) {
    var b3 = Wg.current;
    E2(Wg);
    a3._currentValue = b3;
  }
  function bh(a3, b3, c2) {
    for (; null !== a3; ) {
      var d2 = a3.alternate;
      (a3.childLanes & b3) !== b3 ? (a3.childLanes |= b3, null !== d2 && (d2.childLanes |= b3)) : null !== d2 && (d2.childLanes & b3) !== b3 && (d2.childLanes |= b3);
      if (a3 === c2) break;
      a3 = a3.return;
    }
  }
  function ch(a3, b3) {
    Xg = a3;
    Zg = Yg = null;
    a3 = a3.dependencies;
    null !== a3 && null !== a3.firstContext && (0 !== (a3.lanes & b3) && (dh = true), a3.firstContext = null);
  }
  function eh(a3) {
    var b3 = a3._currentValue;
    if (Zg !== a3) if (a3 = { context: a3, memoizedValue: b3, next: null }, null === Yg) {
      if (null === Xg) throw Error(p3(308));
      Yg = a3;
      Xg.dependencies = { lanes: 0, firstContext: a3 };
    } else Yg = Yg.next = a3;
    return b3;
  }
  var fh = null;
  function gh(a3) {
    null === fh ? fh = [a3] : fh.push(a3);
  }
  function hh(a3, b3, c2, d2) {
    var e2 = b3.interleaved;
    null === e2 ? (c2.next = c2, gh(b3)) : (c2.next = e2.next, e2.next = c2);
    b3.interleaved = c2;
    return ih(a3, d2);
  }
  function ih(a3, b3) {
    a3.lanes |= b3;
    var c2 = a3.alternate;
    null !== c2 && (c2.lanes |= b3);
    c2 = a3;
    for (a3 = a3.return; null !== a3; ) a3.childLanes |= b3, c2 = a3.alternate, null !== c2 && (c2.childLanes |= b3), c2 = a3, a3 = a3.return;
    return 3 === c2.tag ? c2.stateNode : null;
  }
  var jh = false;
  function kh(a3) {
    a3.updateQueue = { baseState: a3.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
  }
  function lh(a3, b3) {
    a3 = a3.updateQueue;
    b3.updateQueue === a3 && (b3.updateQueue = { baseState: a3.baseState, firstBaseUpdate: a3.firstBaseUpdate, lastBaseUpdate: a3.lastBaseUpdate, shared: a3.shared, effects: a3.effects });
  }
  function mh(a3, b3) {
    return { eventTime: a3, lane: b3, tag: 0, payload: null, callback: null, next: null };
  }
  function nh(a3, b3, c2) {
    var d2 = a3.updateQueue;
    if (null === d2) return null;
    d2 = d2.shared;
    if (0 !== (K2 & 2)) {
      var e2 = d2.pending;
      null === e2 ? b3.next = b3 : (b3.next = e2.next, e2.next = b3);
      d2.pending = b3;
      return ih(a3, c2);
    }
    e2 = d2.interleaved;
    null === e2 ? (b3.next = b3, gh(d2)) : (b3.next = e2.next, e2.next = b3);
    d2.interleaved = b3;
    return ih(a3, c2);
  }
  function oh(a3, b3, c2) {
    b3 = b3.updateQueue;
    if (null !== b3 && (b3 = b3.shared, 0 !== (c2 & 4194240))) {
      var d2 = b3.lanes;
      d2 &= a3.pendingLanes;
      c2 |= d2;
      b3.lanes = c2;
      Cc(a3, c2);
    }
  }
  function ph(a3, b3) {
    var c2 = a3.updateQueue, d2 = a3.alternate;
    if (null !== d2 && (d2 = d2.updateQueue, c2 === d2)) {
      var e2 = null, f4 = null;
      c2 = c2.firstBaseUpdate;
      if (null !== c2) {
        do {
          var g2 = { eventTime: c2.eventTime, lane: c2.lane, tag: c2.tag, payload: c2.payload, callback: c2.callback, next: null };
          null === f4 ? e2 = f4 = g2 : f4 = f4.next = g2;
          c2 = c2.next;
        } while (null !== c2);
        null === f4 ? e2 = f4 = b3 : f4 = f4.next = b3;
      } else e2 = f4 = b3;
      c2 = { baseState: d2.baseState, firstBaseUpdate: e2, lastBaseUpdate: f4, shared: d2.shared, effects: d2.effects };
      a3.updateQueue = c2;
      return;
    }
    a3 = c2.lastBaseUpdate;
    null === a3 ? c2.firstBaseUpdate = b3 : a3.next = b3;
    c2.lastBaseUpdate = b3;
  }
  function qh(a3, b3, c2, d2) {
    var e2 = a3.updateQueue;
    jh = false;
    var f4 = e2.firstBaseUpdate, g2 = e2.lastBaseUpdate, h2 = e2.shared.pending;
    if (null !== h2) {
      e2.shared.pending = null;
      var k3 = h2, l3 = k3.next;
      k3.next = null;
      null === g2 ? f4 = l3 : g2.next = l3;
      g2 = k3;
      var m2 = a3.alternate;
      null !== m2 && (m2 = m2.updateQueue, h2 = m2.lastBaseUpdate, h2 !== g2 && (null === h2 ? m2.firstBaseUpdate = l3 : h2.next = l3, m2.lastBaseUpdate = k3));
    }
    if (null !== f4) {
      var q2 = e2.baseState;
      g2 = 0;
      m2 = l3 = k3 = null;
      h2 = f4;
      do {
        var r3 = h2.lane, y2 = h2.eventTime;
        if ((d2 & r3) === r3) {
          null !== m2 && (m2 = m2.next = {
            eventTime: y2,
            lane: 0,
            tag: h2.tag,
            payload: h2.payload,
            callback: h2.callback,
            next: null
          });
          a: {
            var n2 = a3, t3 = h2;
            r3 = b3;
            y2 = c2;
            switch (t3.tag) {
              case 1:
                n2 = t3.payload;
                if ("function" === typeof n2) {
                  q2 = n2.call(y2, q2, r3);
                  break a;
                }
                q2 = n2;
                break a;
              case 3:
                n2.flags = n2.flags & -65537 | 128;
              case 0:
                n2 = t3.payload;
                r3 = "function" === typeof n2 ? n2.call(y2, q2, r3) : n2;
                if (null === r3 || void 0 === r3) break a;
                q2 = A2({}, q2, r3);
                break a;
              case 2:
                jh = true;
            }
          }
          null !== h2.callback && 0 !== h2.lane && (a3.flags |= 64, r3 = e2.effects, null === r3 ? e2.effects = [h2] : r3.push(h2));
        } else y2 = { eventTime: y2, lane: r3, tag: h2.tag, payload: h2.payload, callback: h2.callback, next: null }, null === m2 ? (l3 = m2 = y2, k3 = q2) : m2 = m2.next = y2, g2 |= r3;
        h2 = h2.next;
        if (null === h2) if (h2 = e2.shared.pending, null === h2) break;
        else r3 = h2, h2 = r3.next, r3.next = null, e2.lastBaseUpdate = r3, e2.shared.pending = null;
      } while (1);
      null === m2 && (k3 = q2);
      e2.baseState = k3;
      e2.firstBaseUpdate = l3;
      e2.lastBaseUpdate = m2;
      b3 = e2.shared.interleaved;
      if (null !== b3) {
        e2 = b3;
        do
          g2 |= e2.lane, e2 = e2.next;
        while (e2 !== b3);
      } else null === f4 && (e2.shared.lanes = 0);
      rh |= g2;
      a3.lanes = g2;
      a3.memoizedState = q2;
    }
  }
  function sh(a3, b3, c2) {
    a3 = b3.effects;
    b3.effects = null;
    if (null !== a3) for (b3 = 0; b3 < a3.length; b3++) {
      var d2 = a3[b3], e2 = d2.callback;
      if (null !== e2) {
        d2.callback = null;
        d2 = c2;
        if ("function" !== typeof e2) throw Error(p3(191, e2));
        e2.call(d2);
      }
    }
  }
  var th = {}, uh = Uf(th), vh = Uf(th), wh = Uf(th);
  function xh(a3) {
    if (a3 === th) throw Error(p3(174));
    return a3;
  }
  function yh(a3, b3) {
    G2(wh, b3);
    G2(vh, a3);
    G2(uh, th);
    a3 = b3.nodeType;
    switch (a3) {
      case 9:
      case 11:
        b3 = (b3 = b3.documentElement) ? b3.namespaceURI : lb(null, "");
        break;
      default:
        a3 = 8 === a3 ? b3.parentNode : b3, b3 = a3.namespaceURI || null, a3 = a3.tagName, b3 = lb(b3, a3);
    }
    E2(uh);
    G2(uh, b3);
  }
  function zh() {
    E2(uh);
    E2(vh);
    E2(wh);
  }
  function Ah(a3) {
    xh(wh.current);
    var b3 = xh(uh.current);
    var c2 = lb(b3, a3.type);
    b3 !== c2 && (G2(vh, a3), G2(uh, c2));
  }
  function Bh(a3) {
    vh.current === a3 && (E2(uh), E2(vh));
  }
  var L3 = Uf(0);
  function Ch(a3) {
    for (var b3 = a3; null !== b3; ) {
      if (13 === b3.tag) {
        var c2 = b3.memoizedState;
        if (null !== c2 && (c2 = c2.dehydrated, null === c2 || "$?" === c2.data || "$!" === c2.data)) return b3;
      } else if (19 === b3.tag && void 0 !== b3.memoizedProps.revealOrder) {
        if (0 !== (b3.flags & 128)) return b3;
      } else if (null !== b3.child) {
        b3.child.return = b3;
        b3 = b3.child;
        continue;
      }
      if (b3 === a3) break;
      for (; null === b3.sibling; ) {
        if (null === b3.return || b3.return === a3) return null;
        b3 = b3.return;
      }
      b3.sibling.return = b3.return;
      b3 = b3.sibling;
    }
    return null;
  }
  var Dh = [];
  function Eh() {
    for (var a3 = 0; a3 < Dh.length; a3++) Dh[a3]._workInProgressVersionPrimary = null;
    Dh.length = 0;
  }
  var Fh = ua.ReactCurrentDispatcher, Gh = ua.ReactCurrentBatchConfig, Hh = 0, M3 = null, N3 = null, O2 = null, Ih = false, Jh = false, Kh = 0, Lh = 0;
  function P2() {
    throw Error(p3(321));
  }
  function Mh(a3, b3) {
    if (null === b3) return false;
    for (var c2 = 0; c2 < b3.length && c2 < a3.length; c2++) if (!He(a3[c2], b3[c2])) return false;
    return true;
  }
  function Nh(a3, b3, c2, d2, e2, f4) {
    Hh = f4;
    M3 = b3;
    b3.memoizedState = null;
    b3.updateQueue = null;
    b3.lanes = 0;
    Fh.current = null === a3 || null === a3.memoizedState ? Oh : Ph;
    a3 = c2(d2, e2);
    if (Jh) {
      f4 = 0;
      do {
        Jh = false;
        Kh = 0;
        if (25 <= f4) throw Error(p3(301));
        f4 += 1;
        O2 = N3 = null;
        b3.updateQueue = null;
        Fh.current = Qh;
        a3 = c2(d2, e2);
      } while (Jh);
    }
    Fh.current = Rh;
    b3 = null !== N3 && null !== N3.next;
    Hh = 0;
    O2 = N3 = M3 = null;
    Ih = false;
    if (b3) throw Error(p3(300));
    return a3;
  }
  function Sh() {
    var a3 = 0 !== Kh;
    Kh = 0;
    return a3;
  }
  function Th() {
    var a3 = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
    null === O2 ? M3.memoizedState = O2 = a3 : O2 = O2.next = a3;
    return O2;
  }
  function Uh() {
    if (null === N3) {
      var a3 = M3.alternate;
      a3 = null !== a3 ? a3.memoizedState : null;
    } else a3 = N3.next;
    var b3 = null === O2 ? M3.memoizedState : O2.next;
    if (null !== b3) O2 = b3, N3 = a3;
    else {
      if (null === a3) throw Error(p3(310));
      N3 = a3;
      a3 = { memoizedState: N3.memoizedState, baseState: N3.baseState, baseQueue: N3.baseQueue, queue: N3.queue, next: null };
      null === O2 ? M3.memoizedState = O2 = a3 : O2 = O2.next = a3;
    }
    return O2;
  }
  function Vh(a3, b3) {
    return "function" === typeof b3 ? b3(a3) : b3;
  }
  function Wh(a3) {
    var b3 = Uh(), c2 = b3.queue;
    if (null === c2) throw Error(p3(311));
    c2.lastRenderedReducer = a3;
    var d2 = N3, e2 = d2.baseQueue, f4 = c2.pending;
    if (null !== f4) {
      if (null !== e2) {
        var g2 = e2.next;
        e2.next = f4.next;
        f4.next = g2;
      }
      d2.baseQueue = e2 = f4;
      c2.pending = null;
    }
    if (null !== e2) {
      f4 = e2.next;
      d2 = d2.baseState;
      var h2 = g2 = null, k3 = null, l3 = f4;
      do {
        var m2 = l3.lane;
        if ((Hh & m2) === m2) null !== k3 && (k3 = k3.next = { lane: 0, action: l3.action, hasEagerState: l3.hasEagerState, eagerState: l3.eagerState, next: null }), d2 = l3.hasEagerState ? l3.eagerState : a3(d2, l3.action);
        else {
          var q2 = {
            lane: m2,
            action: l3.action,
            hasEagerState: l3.hasEagerState,
            eagerState: l3.eagerState,
            next: null
          };
          null === k3 ? (h2 = k3 = q2, g2 = d2) : k3 = k3.next = q2;
          M3.lanes |= m2;
          rh |= m2;
        }
        l3 = l3.next;
      } while (null !== l3 && l3 !== f4);
      null === k3 ? g2 = d2 : k3.next = h2;
      He(d2, b3.memoizedState) || (dh = true);
      b3.memoizedState = d2;
      b3.baseState = g2;
      b3.baseQueue = k3;
      c2.lastRenderedState = d2;
    }
    a3 = c2.interleaved;
    if (null !== a3) {
      e2 = a3;
      do
        f4 = e2.lane, M3.lanes |= f4, rh |= f4, e2 = e2.next;
      while (e2 !== a3);
    } else null === e2 && (c2.lanes = 0);
    return [b3.memoizedState, c2.dispatch];
  }
  function Xh(a3) {
    var b3 = Uh(), c2 = b3.queue;
    if (null === c2) throw Error(p3(311));
    c2.lastRenderedReducer = a3;
    var d2 = c2.dispatch, e2 = c2.pending, f4 = b3.memoizedState;
    if (null !== e2) {
      c2.pending = null;
      var g2 = e2 = e2.next;
      do
        f4 = a3(f4, g2.action), g2 = g2.next;
      while (g2 !== e2);
      He(f4, b3.memoizedState) || (dh = true);
      b3.memoizedState = f4;
      null === b3.baseQueue && (b3.baseState = f4);
      c2.lastRenderedState = f4;
    }
    return [f4, d2];
  }
  function Yh() {
  }
  function Zh(a3, b3) {
    var c2 = M3, d2 = Uh(), e2 = b3(), f4 = !He(d2.memoizedState, e2);
    f4 && (d2.memoizedState = e2, dh = true);
    d2 = d2.queue;
    $h(ai.bind(null, c2, d2, a3), [a3]);
    if (d2.getSnapshot !== b3 || f4 || null !== O2 && O2.memoizedState.tag & 1) {
      c2.flags |= 2048;
      bi(9, ci.bind(null, c2, d2, e2, b3), void 0, null);
      if (null === Q2) throw Error(p3(349));
      0 !== (Hh & 30) || di(c2, b3, e2);
    }
    return e2;
  }
  function di(a3, b3, c2) {
    a3.flags |= 16384;
    a3 = { getSnapshot: b3, value: c2 };
    b3 = M3.updateQueue;
    null === b3 ? (b3 = { lastEffect: null, stores: null }, M3.updateQueue = b3, b3.stores = [a3]) : (c2 = b3.stores, null === c2 ? b3.stores = [a3] : c2.push(a3));
  }
  function ci(a3, b3, c2, d2) {
    b3.value = c2;
    b3.getSnapshot = d2;
    ei(b3) && fi(a3);
  }
  function ai(a3, b3, c2) {
    return c2(function() {
      ei(b3) && fi(a3);
    });
  }
  function ei(a3) {
    var b3 = a3.getSnapshot;
    a3 = a3.value;
    try {
      var c2 = b3();
      return !He(a3, c2);
    } catch (d2) {
      return true;
    }
  }
  function fi(a3) {
    var b3 = ih(a3, 1);
    null !== b3 && gi(b3, a3, 1, -1);
  }
  function hi(a3) {
    var b3 = Th();
    "function" === typeof a3 && (a3 = a3());
    b3.memoizedState = b3.baseState = a3;
    a3 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: Vh, lastRenderedState: a3 };
    b3.queue = a3;
    a3 = a3.dispatch = ii.bind(null, M3, a3);
    return [b3.memoizedState, a3];
  }
  function bi(a3, b3, c2, d2) {
    a3 = { tag: a3, create: b3, destroy: c2, deps: d2, next: null };
    b3 = M3.updateQueue;
    null === b3 ? (b3 = { lastEffect: null, stores: null }, M3.updateQueue = b3, b3.lastEffect = a3.next = a3) : (c2 = b3.lastEffect, null === c2 ? b3.lastEffect = a3.next = a3 : (d2 = c2.next, c2.next = a3, a3.next = d2, b3.lastEffect = a3));
    return a3;
  }
  function ji() {
    return Uh().memoizedState;
  }
  function ki(a3, b3, c2, d2) {
    var e2 = Th();
    M3.flags |= a3;
    e2.memoizedState = bi(1 | b3, c2, void 0, void 0 === d2 ? null : d2);
  }
  function li(a3, b3, c2, d2) {
    var e2 = Uh();
    d2 = void 0 === d2 ? null : d2;
    var f4 = void 0;
    if (null !== N3) {
      var g2 = N3.memoizedState;
      f4 = g2.destroy;
      if (null !== d2 && Mh(d2, g2.deps)) {
        e2.memoizedState = bi(b3, c2, f4, d2);
        return;
      }
    }
    M3.flags |= a3;
    e2.memoizedState = bi(1 | b3, c2, f4, d2);
  }
  function mi(a3, b3) {
    return ki(8390656, 8, a3, b3);
  }
  function $h(a3, b3) {
    return li(2048, 8, a3, b3);
  }
  function ni(a3, b3) {
    return li(4, 2, a3, b3);
  }
  function oi(a3, b3) {
    return li(4, 4, a3, b3);
  }
  function pi(a3, b3) {
    if ("function" === typeof b3) return a3 = a3(), b3(a3), function() {
      b3(null);
    };
    if (null !== b3 && void 0 !== b3) return a3 = a3(), b3.current = a3, function() {
      b3.current = null;
    };
  }
  function qi(a3, b3, c2) {
    c2 = null !== c2 && void 0 !== c2 ? c2.concat([a3]) : null;
    return li(4, 4, pi.bind(null, b3, a3), c2);
  }
  function ri() {
  }
  function si(a3, b3) {
    var c2 = Uh();
    b3 = void 0 === b3 ? null : b3;
    var d2 = c2.memoizedState;
    if (null !== d2 && null !== b3 && Mh(b3, d2[1])) return d2[0];
    c2.memoizedState = [a3, b3];
    return a3;
  }
  function ti(a3, b3) {
    var c2 = Uh();
    b3 = void 0 === b3 ? null : b3;
    var d2 = c2.memoizedState;
    if (null !== d2 && null !== b3 && Mh(b3, d2[1])) return d2[0];
    a3 = a3();
    c2.memoizedState = [a3, b3];
    return a3;
  }
  function ui(a3, b3, c2) {
    if (0 === (Hh & 21)) return a3.baseState && (a3.baseState = false, dh = true), a3.memoizedState = c2;
    He(c2, b3) || (c2 = yc(), M3.lanes |= c2, rh |= c2, a3.baseState = true);
    return b3;
  }
  function vi(a3, b3) {
    var c2 = C2;
    C2 = 0 !== c2 && 4 > c2 ? c2 : 4;
    a3(true);
    var d2 = Gh.transition;
    Gh.transition = {};
    try {
      a3(false), b3();
    } finally {
      C2 = c2, Gh.transition = d2;
    }
  }
  function wi() {
    return Uh().memoizedState;
  }
  function xi(a3, b3, c2) {
    var d2 = yi(a3);
    c2 = { lane: d2, action: c2, hasEagerState: false, eagerState: null, next: null };
    if (zi(a3)) Ai(b3, c2);
    else if (c2 = hh(a3, b3, c2, d2), null !== c2) {
      var e2 = R3();
      gi(c2, a3, d2, e2);
      Bi(c2, b3, d2);
    }
  }
  function ii(a3, b3, c2) {
    var d2 = yi(a3), e2 = { lane: d2, action: c2, hasEagerState: false, eagerState: null, next: null };
    if (zi(a3)) Ai(b3, e2);
    else {
      var f4 = a3.alternate;
      if (0 === a3.lanes && (null === f4 || 0 === f4.lanes) && (f4 = b3.lastRenderedReducer, null !== f4)) try {
        var g2 = b3.lastRenderedState, h2 = f4(g2, c2);
        e2.hasEagerState = true;
        e2.eagerState = h2;
        if (He(h2, g2)) {
          var k3 = b3.interleaved;
          null === k3 ? (e2.next = e2, gh(b3)) : (e2.next = k3.next, k3.next = e2);
          b3.interleaved = e2;
          return;
        }
      } catch (l3) {
      } finally {
      }
      c2 = hh(a3, b3, e2, d2);
      null !== c2 && (e2 = R3(), gi(c2, a3, d2, e2), Bi(c2, b3, d2));
    }
  }
  function zi(a3) {
    var b3 = a3.alternate;
    return a3 === M3 || null !== b3 && b3 === M3;
  }
  function Ai(a3, b3) {
    Jh = Ih = true;
    var c2 = a3.pending;
    null === c2 ? b3.next = b3 : (b3.next = c2.next, c2.next = b3);
    a3.pending = b3;
  }
  function Bi(a3, b3, c2) {
    if (0 !== (c2 & 4194240)) {
      var d2 = b3.lanes;
      d2 &= a3.pendingLanes;
      c2 |= d2;
      b3.lanes = c2;
      Cc(a3, c2);
    }
  }
  var Rh = { readContext: eh, useCallback: P2, useContext: P2, useEffect: P2, useImperativeHandle: P2, useInsertionEffect: P2, useLayoutEffect: P2, useMemo: P2, useReducer: P2, useRef: P2, useState: P2, useDebugValue: P2, useDeferredValue: P2, useTransition: P2, useMutableSource: P2, useSyncExternalStore: P2, useId: P2, unstable_isNewReconciler: false }, Oh = { readContext: eh, useCallback: function(a3, b3) {
    Th().memoizedState = [a3, void 0 === b3 ? null : b3];
    return a3;
  }, useContext: eh, useEffect: mi, useImperativeHandle: function(a3, b3, c2) {
    c2 = null !== c2 && void 0 !== c2 ? c2.concat([a3]) : null;
    return ki(
      4194308,
      4,
      pi.bind(null, b3, a3),
      c2
    );
  }, useLayoutEffect: function(a3, b3) {
    return ki(4194308, 4, a3, b3);
  }, useInsertionEffect: function(a3, b3) {
    return ki(4, 2, a3, b3);
  }, useMemo: function(a3, b3) {
    var c2 = Th();
    b3 = void 0 === b3 ? null : b3;
    a3 = a3();
    c2.memoizedState = [a3, b3];
    return a3;
  }, useReducer: function(a3, b3, c2) {
    var d2 = Th();
    b3 = void 0 !== c2 ? c2(b3) : b3;
    d2.memoizedState = d2.baseState = b3;
    a3 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a3, lastRenderedState: b3 };
    d2.queue = a3;
    a3 = a3.dispatch = xi.bind(null, M3, a3);
    return [d2.memoizedState, a3];
  }, useRef: function(a3) {
    var b3 = Th();
    a3 = { current: a3 };
    return b3.memoizedState = a3;
  }, useState: hi, useDebugValue: ri, useDeferredValue: function(a3) {
    return Th().memoizedState = a3;
  }, useTransition: function() {
    var a3 = hi(false), b3 = a3[0];
    a3 = vi.bind(null, a3[1]);
    Th().memoizedState = a3;
    return [b3, a3];
  }, useMutableSource: function() {
  }, useSyncExternalStore: function(a3, b3, c2) {
    var d2 = M3, e2 = Th();
    if (I2) {
      if (void 0 === c2) throw Error(p3(407));
      c2 = c2();
    } else {
      c2 = b3();
      if (null === Q2) throw Error(p3(349));
      0 !== (Hh & 30) || di(d2, b3, c2);
    }
    e2.memoizedState = c2;
    var f4 = { value: c2, getSnapshot: b3 };
    e2.queue = f4;
    mi(ai.bind(
      null,
      d2,
      f4,
      a3
    ), [a3]);
    d2.flags |= 2048;
    bi(9, ci.bind(null, d2, f4, c2, b3), void 0, null);
    return c2;
  }, useId: function() {
    var a3 = Th(), b3 = Q2.identifierPrefix;
    if (I2) {
      var c2 = sg;
      var d2 = rg;
      c2 = (d2 & ~(1 << 32 - oc(d2) - 1)).toString(32) + c2;
      b3 = ":" + b3 + "R" + c2;
      c2 = Kh++;
      0 < c2 && (b3 += "H" + c2.toString(32));
      b3 += ":";
    } else c2 = Lh++, b3 = ":" + b3 + "r" + c2.toString(32) + ":";
    return a3.memoizedState = b3;
  }, unstable_isNewReconciler: false }, Ph = {
    readContext: eh,
    useCallback: si,
    useContext: eh,
    useEffect: $h,
    useImperativeHandle: qi,
    useInsertionEffect: ni,
    useLayoutEffect: oi,
    useMemo: ti,
    useReducer: Wh,
    useRef: ji,
    useState: function() {
      return Wh(Vh);
    },
    useDebugValue: ri,
    useDeferredValue: function(a3) {
      var b3 = Uh();
      return ui(b3, N3.memoizedState, a3);
    },
    useTransition: function() {
      var a3 = Wh(Vh)[0], b3 = Uh().memoizedState;
      return [a3, b3];
    },
    useMutableSource: Yh,
    useSyncExternalStore: Zh,
    useId: wi,
    unstable_isNewReconciler: false
  }, Qh = { readContext: eh, useCallback: si, useContext: eh, useEffect: $h, useImperativeHandle: qi, useInsertionEffect: ni, useLayoutEffect: oi, useMemo: ti, useReducer: Xh, useRef: ji, useState: function() {
    return Xh(Vh);
  }, useDebugValue: ri, useDeferredValue: function(a3) {
    var b3 = Uh();
    return null === N3 ? b3.memoizedState = a3 : ui(b3, N3.memoizedState, a3);
  }, useTransition: function() {
    var a3 = Xh(Vh)[0], b3 = Uh().memoizedState;
    return [a3, b3];
  }, useMutableSource: Yh, useSyncExternalStore: Zh, useId: wi, unstable_isNewReconciler: false };
  function Ci(a3, b3) {
    if (a3 && a3.defaultProps) {
      b3 = A2({}, b3);
      a3 = a3.defaultProps;
      for (var c2 in a3) void 0 === b3[c2] && (b3[c2] = a3[c2]);
      return b3;
    }
    return b3;
  }
  function Di(a3, b3, c2, d2) {
    b3 = a3.memoizedState;
    c2 = c2(d2, b3);
    c2 = null === c2 || void 0 === c2 ? b3 : A2({}, b3, c2);
    a3.memoizedState = c2;
    0 === a3.lanes && (a3.updateQueue.baseState = c2);
  }
  var Ei = { isMounted: function(a3) {
    return (a3 = a3._reactInternals) ? Vb(a3) === a3 : false;
  }, enqueueSetState: function(a3, b3, c2) {
    a3 = a3._reactInternals;
    var d2 = R3(), e2 = yi(a3), f4 = mh(d2, e2);
    f4.payload = b3;
    void 0 !== c2 && null !== c2 && (f4.callback = c2);
    b3 = nh(a3, f4, e2);
    null !== b3 && (gi(b3, a3, e2, d2), oh(b3, a3, e2));
  }, enqueueReplaceState: function(a3, b3, c2) {
    a3 = a3._reactInternals;
    var d2 = R3(), e2 = yi(a3), f4 = mh(d2, e2);
    f4.tag = 1;
    f4.payload = b3;
    void 0 !== c2 && null !== c2 && (f4.callback = c2);
    b3 = nh(a3, f4, e2);
    null !== b3 && (gi(b3, a3, e2, d2), oh(b3, a3, e2));
  }, enqueueForceUpdate: function(a3, b3) {
    a3 = a3._reactInternals;
    var c2 = R3(), d2 = yi(a3), e2 = mh(c2, d2);
    e2.tag = 2;
    void 0 !== b3 && null !== b3 && (e2.callback = b3);
    b3 = nh(a3, e2, d2);
    null !== b3 && (gi(b3, a3, d2, c2), oh(b3, a3, d2));
  } };
  function Fi(a3, b3, c2, d2, e2, f4, g2) {
    a3 = a3.stateNode;
    return "function" === typeof a3.shouldComponentUpdate ? a3.shouldComponentUpdate(d2, f4, g2) : b3.prototype && b3.prototype.isPureReactComponent ? !Ie(c2, d2) || !Ie(e2, f4) : true;
  }
  function Gi(a3, b3, c2) {
    var d2 = false, e2 = Vf;
    var f4 = b3.contextType;
    "object" === typeof f4 && null !== f4 ? f4 = eh(f4) : (e2 = Zf(b3) ? Xf : H3.current, d2 = b3.contextTypes, f4 = (d2 = null !== d2 && void 0 !== d2) ? Yf(a3, e2) : Vf);
    b3 = new b3(c2, f4);
    a3.memoizedState = null !== b3.state && void 0 !== b3.state ? b3.state : null;
    b3.updater = Ei;
    a3.stateNode = b3;
    b3._reactInternals = a3;
    d2 && (a3 = a3.stateNode, a3.__reactInternalMemoizedUnmaskedChildContext = e2, a3.__reactInternalMemoizedMaskedChildContext = f4);
    return b3;
  }
  function Hi(a3, b3, c2, d2) {
    a3 = b3.state;
    "function" === typeof b3.componentWillReceiveProps && b3.componentWillReceiveProps(c2, d2);
    "function" === typeof b3.UNSAFE_componentWillReceiveProps && b3.UNSAFE_componentWillReceiveProps(c2, d2);
    b3.state !== a3 && Ei.enqueueReplaceState(b3, b3.state, null);
  }
  function Ii(a3, b3, c2, d2) {
    var e2 = a3.stateNode;
    e2.props = c2;
    e2.state = a3.memoizedState;
    e2.refs = {};
    kh(a3);
    var f4 = b3.contextType;
    "object" === typeof f4 && null !== f4 ? e2.context = eh(f4) : (f4 = Zf(b3) ? Xf : H3.current, e2.context = Yf(a3, f4));
    e2.state = a3.memoizedState;
    f4 = b3.getDerivedStateFromProps;
    "function" === typeof f4 && (Di(a3, b3, f4, c2), e2.state = a3.memoizedState);
    "function" === typeof b3.getDerivedStateFromProps || "function" === typeof e2.getSnapshotBeforeUpdate || "function" !== typeof e2.UNSAFE_componentWillMount && "function" !== typeof e2.componentWillMount || (b3 = e2.state, "function" === typeof e2.componentWillMount && e2.componentWillMount(), "function" === typeof e2.UNSAFE_componentWillMount && e2.UNSAFE_componentWillMount(), b3 !== e2.state && Ei.enqueueReplaceState(e2, e2.state, null), qh(a3, c2, e2, d2), e2.state = a3.memoizedState);
    "function" === typeof e2.componentDidMount && (a3.flags |= 4194308);
  }
  function Ji(a3, b3) {
    try {
      var c2 = "", d2 = b3;
      do
        c2 += Pa(d2), d2 = d2.return;
      while (d2);
      var e2 = c2;
    } catch (f4) {
      e2 = "\nError generating stack: " + f4.message + "\n" + f4.stack;
    }
    return { value: a3, source: b3, stack: e2, digest: null };
  }
  function Ki(a3, b3, c2) {
    return { value: a3, source: null, stack: null != c2 ? c2 : null, digest: null != b3 ? b3 : null };
  }
  function Li(a3, b3) {
    try {
      console.error(b3.value);
    } catch (c2) {
      setTimeout(function() {
        throw c2;
      });
    }
  }
  var Mi = "function" === typeof WeakMap ? WeakMap : Map;
  function Ni(a3, b3, c2) {
    c2 = mh(-1, c2);
    c2.tag = 3;
    c2.payload = { element: null };
    var d2 = b3.value;
    c2.callback = function() {
      Oi || (Oi = true, Pi = d2);
      Li(a3, b3);
    };
    return c2;
  }
  function Qi(a3, b3, c2) {
    c2 = mh(-1, c2);
    c2.tag = 3;
    var d2 = a3.type.getDerivedStateFromError;
    if ("function" === typeof d2) {
      var e2 = b3.value;
      c2.payload = function() {
        return d2(e2);
      };
      c2.callback = function() {
        Li(a3, b3);
      };
    }
    var f4 = a3.stateNode;
    null !== f4 && "function" === typeof f4.componentDidCatch && (c2.callback = function() {
      Li(a3, b3);
      "function" !== typeof d2 && (null === Ri ? Ri = /* @__PURE__ */ new Set([this]) : Ri.add(this));
      var c3 = b3.stack;
      this.componentDidCatch(b3.value, { componentStack: null !== c3 ? c3 : "" });
    });
    return c2;
  }
  function Si(a3, b3, c2) {
    var d2 = a3.pingCache;
    if (null === d2) {
      d2 = a3.pingCache = new Mi();
      var e2 = /* @__PURE__ */ new Set();
      d2.set(b3, e2);
    } else e2 = d2.get(b3), void 0 === e2 && (e2 = /* @__PURE__ */ new Set(), d2.set(b3, e2));
    e2.has(c2) || (e2.add(c2), a3 = Ti.bind(null, a3, b3, c2), b3.then(a3, a3));
  }
  function Ui(a3) {
    do {
      var b3;
      if (b3 = 13 === a3.tag) b3 = a3.memoizedState, b3 = null !== b3 ? null !== b3.dehydrated ? true : false : true;
      if (b3) return a3;
      a3 = a3.return;
    } while (null !== a3);
    return null;
  }
  function Vi(a3, b3, c2, d2, e2) {
    if (0 === (a3.mode & 1)) return a3 === b3 ? a3.flags |= 65536 : (a3.flags |= 128, c2.flags |= 131072, c2.flags &= -52805, 1 === c2.tag && (null === c2.alternate ? c2.tag = 17 : (b3 = mh(-1, 1), b3.tag = 2, nh(c2, b3, 1))), c2.lanes |= 1), a3;
    a3.flags |= 65536;
    a3.lanes = e2;
    return a3;
  }
  var Wi = ua.ReactCurrentOwner, dh = false;
  function Xi(a3, b3, c2, d2) {
    b3.child = null === a3 ? Vg(b3, null, c2, d2) : Ug(b3, a3.child, c2, d2);
  }
  function Yi(a3, b3, c2, d2, e2) {
    c2 = c2.render;
    var f4 = b3.ref;
    ch(b3, e2);
    d2 = Nh(a3, b3, c2, d2, f4, e2);
    c2 = Sh();
    if (null !== a3 && !dh) return b3.updateQueue = a3.updateQueue, b3.flags &= -2053, a3.lanes &= ~e2, Zi(a3, b3, e2);
    I2 && c2 && vg(b3);
    b3.flags |= 1;
    Xi(a3, b3, d2, e2);
    return b3.child;
  }
  function $i(a3, b3, c2, d2, e2) {
    if (null === a3) {
      var f4 = c2.type;
      if ("function" === typeof f4 && !aj(f4) && void 0 === f4.defaultProps && null === c2.compare && void 0 === c2.defaultProps) return b3.tag = 15, b3.type = f4, bj(a3, b3, f4, d2, e2);
      a3 = Rg(c2.type, null, d2, b3, b3.mode, e2);
      a3.ref = b3.ref;
      a3.return = b3;
      return b3.child = a3;
    }
    f4 = a3.child;
    if (0 === (a3.lanes & e2)) {
      var g2 = f4.memoizedProps;
      c2 = c2.compare;
      c2 = null !== c2 ? c2 : Ie;
      if (c2(g2, d2) && a3.ref === b3.ref) return Zi(a3, b3, e2);
    }
    b3.flags |= 1;
    a3 = Pg(f4, d2);
    a3.ref = b3.ref;
    a3.return = b3;
    return b3.child = a3;
  }
  function bj(a3, b3, c2, d2, e2) {
    if (null !== a3) {
      var f4 = a3.memoizedProps;
      if (Ie(f4, d2) && a3.ref === b3.ref) if (dh = false, b3.pendingProps = d2 = f4, 0 !== (a3.lanes & e2)) 0 !== (a3.flags & 131072) && (dh = true);
      else return b3.lanes = a3.lanes, Zi(a3, b3, e2);
    }
    return cj(a3, b3, c2, d2, e2);
  }
  function dj(a3, b3, c2) {
    var d2 = b3.pendingProps, e2 = d2.children, f4 = null !== a3 ? a3.memoizedState : null;
    if ("hidden" === d2.mode) if (0 === (b3.mode & 1)) b3.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, G2(ej, fj), fj |= c2;
    else {
      if (0 === (c2 & 1073741824)) return a3 = null !== f4 ? f4.baseLanes | c2 : c2, b3.lanes = b3.childLanes = 1073741824, b3.memoizedState = { baseLanes: a3, cachePool: null, transitions: null }, b3.updateQueue = null, G2(ej, fj), fj |= a3, null;
      b3.memoizedState = { baseLanes: 0, cachePool: null, transitions: null };
      d2 = null !== f4 ? f4.baseLanes : c2;
      G2(ej, fj);
      fj |= d2;
    }
    else null !== f4 ? (d2 = f4.baseLanes | c2, b3.memoizedState = null) : d2 = c2, G2(ej, fj), fj |= d2;
    Xi(a3, b3, e2, c2);
    return b3.child;
  }
  function gj(a3, b3) {
    var c2 = b3.ref;
    if (null === a3 && null !== c2 || null !== a3 && a3.ref !== c2) b3.flags |= 512, b3.flags |= 2097152;
  }
  function cj(a3, b3, c2, d2, e2) {
    var f4 = Zf(c2) ? Xf : H3.current;
    f4 = Yf(b3, f4);
    ch(b3, e2);
    c2 = Nh(a3, b3, c2, d2, f4, e2);
    d2 = Sh();
    if (null !== a3 && !dh) return b3.updateQueue = a3.updateQueue, b3.flags &= -2053, a3.lanes &= ~e2, Zi(a3, b3, e2);
    I2 && d2 && vg(b3);
    b3.flags |= 1;
    Xi(a3, b3, c2, e2);
    return b3.child;
  }
  function hj(a3, b3, c2, d2, e2) {
    if (Zf(c2)) {
      var f4 = true;
      cg(b3);
    } else f4 = false;
    ch(b3, e2);
    if (null === b3.stateNode) ij(a3, b3), Gi(b3, c2, d2), Ii(b3, c2, d2, e2), d2 = true;
    else if (null === a3) {
      var g2 = b3.stateNode, h2 = b3.memoizedProps;
      g2.props = h2;
      var k3 = g2.context, l3 = c2.contextType;
      "object" === typeof l3 && null !== l3 ? l3 = eh(l3) : (l3 = Zf(c2) ? Xf : H3.current, l3 = Yf(b3, l3));
      var m2 = c2.getDerivedStateFromProps, q2 = "function" === typeof m2 || "function" === typeof g2.getSnapshotBeforeUpdate;
      q2 || "function" !== typeof g2.UNSAFE_componentWillReceiveProps && "function" !== typeof g2.componentWillReceiveProps || (h2 !== d2 || k3 !== l3) && Hi(b3, g2, d2, l3);
      jh = false;
      var r3 = b3.memoizedState;
      g2.state = r3;
      qh(b3, d2, g2, e2);
      k3 = b3.memoizedState;
      h2 !== d2 || r3 !== k3 || Wf.current || jh ? ("function" === typeof m2 && (Di(b3, c2, m2, d2), k3 = b3.memoizedState), (h2 = jh || Fi(b3, c2, h2, d2, r3, k3, l3)) ? (q2 || "function" !== typeof g2.UNSAFE_componentWillMount && "function" !== typeof g2.componentWillMount || ("function" === typeof g2.componentWillMount && g2.componentWillMount(), "function" === typeof g2.UNSAFE_componentWillMount && g2.UNSAFE_componentWillMount()), "function" === typeof g2.componentDidMount && (b3.flags |= 4194308)) : ("function" === typeof g2.componentDidMount && (b3.flags |= 4194308), b3.memoizedProps = d2, b3.memoizedState = k3), g2.props = d2, g2.state = k3, g2.context = l3, d2 = h2) : ("function" === typeof g2.componentDidMount && (b3.flags |= 4194308), d2 = false);
    } else {
      g2 = b3.stateNode;
      lh(a3, b3);
      h2 = b3.memoizedProps;
      l3 = b3.type === b3.elementType ? h2 : Ci(b3.type, h2);
      g2.props = l3;
      q2 = b3.pendingProps;
      r3 = g2.context;
      k3 = c2.contextType;
      "object" === typeof k3 && null !== k3 ? k3 = eh(k3) : (k3 = Zf(c2) ? Xf : H3.current, k3 = Yf(b3, k3));
      var y2 = c2.getDerivedStateFromProps;
      (m2 = "function" === typeof y2 || "function" === typeof g2.getSnapshotBeforeUpdate) || "function" !== typeof g2.UNSAFE_componentWillReceiveProps && "function" !== typeof g2.componentWillReceiveProps || (h2 !== q2 || r3 !== k3) && Hi(b3, g2, d2, k3);
      jh = false;
      r3 = b3.memoizedState;
      g2.state = r3;
      qh(b3, d2, g2, e2);
      var n2 = b3.memoizedState;
      h2 !== q2 || r3 !== n2 || Wf.current || jh ? ("function" === typeof y2 && (Di(b3, c2, y2, d2), n2 = b3.memoizedState), (l3 = jh || Fi(b3, c2, l3, d2, r3, n2, k3) || false) ? (m2 || "function" !== typeof g2.UNSAFE_componentWillUpdate && "function" !== typeof g2.componentWillUpdate || ("function" === typeof g2.componentWillUpdate && g2.componentWillUpdate(d2, n2, k3), "function" === typeof g2.UNSAFE_componentWillUpdate && g2.UNSAFE_componentWillUpdate(d2, n2, k3)), "function" === typeof g2.componentDidUpdate && (b3.flags |= 4), "function" === typeof g2.getSnapshotBeforeUpdate && (b3.flags |= 1024)) : ("function" !== typeof g2.componentDidUpdate || h2 === a3.memoizedProps && r3 === a3.memoizedState || (b3.flags |= 4), "function" !== typeof g2.getSnapshotBeforeUpdate || h2 === a3.memoizedProps && r3 === a3.memoizedState || (b3.flags |= 1024), b3.memoizedProps = d2, b3.memoizedState = n2), g2.props = d2, g2.state = n2, g2.context = k3, d2 = l3) : ("function" !== typeof g2.componentDidUpdate || h2 === a3.memoizedProps && r3 === a3.memoizedState || (b3.flags |= 4), "function" !== typeof g2.getSnapshotBeforeUpdate || h2 === a3.memoizedProps && r3 === a3.memoizedState || (b3.flags |= 1024), d2 = false);
    }
    return jj(a3, b3, c2, d2, f4, e2);
  }
  function jj(a3, b3, c2, d2, e2, f4) {
    gj(a3, b3);
    var g2 = 0 !== (b3.flags & 128);
    if (!d2 && !g2) return e2 && dg(b3, c2, false), Zi(a3, b3, f4);
    d2 = b3.stateNode;
    Wi.current = b3;
    var h2 = g2 && "function" !== typeof c2.getDerivedStateFromError ? null : d2.render();
    b3.flags |= 1;
    null !== a3 && g2 ? (b3.child = Ug(b3, a3.child, null, f4), b3.child = Ug(b3, null, h2, f4)) : Xi(a3, b3, h2, f4);
    b3.memoizedState = d2.state;
    e2 && dg(b3, c2, true);
    return b3.child;
  }
  function kj(a3) {
    var b3 = a3.stateNode;
    b3.pendingContext ? ag(a3, b3.pendingContext, b3.pendingContext !== b3.context) : b3.context && ag(a3, b3.context, false);
    yh(a3, b3.containerInfo);
  }
  function lj(a3, b3, c2, d2, e2) {
    Ig();
    Jg(e2);
    b3.flags |= 256;
    Xi(a3, b3, c2, d2);
    return b3.child;
  }
  var mj = { dehydrated: null, treeContext: null, retryLane: 0 };
  function nj(a3) {
    return { baseLanes: a3, cachePool: null, transitions: null };
  }
  function oj(a3, b3, c2) {
    var d2 = b3.pendingProps, e2 = L3.current, f4 = false, g2 = 0 !== (b3.flags & 128), h2;
    (h2 = g2) || (h2 = null !== a3 && null === a3.memoizedState ? false : 0 !== (e2 & 2));
    if (h2) f4 = true, b3.flags &= -129;
    else if (null === a3 || null !== a3.memoizedState) e2 |= 1;
    G2(L3, e2 & 1);
    if (null === a3) {
      Eg(b3);
      a3 = b3.memoizedState;
      if (null !== a3 && (a3 = a3.dehydrated, null !== a3)) return 0 === (b3.mode & 1) ? b3.lanes = 1 : "$!" === a3.data ? b3.lanes = 8 : b3.lanes = 1073741824, null;
      g2 = d2.children;
      a3 = d2.fallback;
      return f4 ? (d2 = b3.mode, f4 = b3.child, g2 = { mode: "hidden", children: g2 }, 0 === (d2 & 1) && null !== f4 ? (f4.childLanes = 0, f4.pendingProps = g2) : f4 = pj(g2, d2, 0, null), a3 = Tg(a3, d2, c2, null), f4.return = b3, a3.return = b3, f4.sibling = a3, b3.child = f4, b3.child.memoizedState = nj(c2), b3.memoizedState = mj, a3) : qj(b3, g2);
    }
    e2 = a3.memoizedState;
    if (null !== e2 && (h2 = e2.dehydrated, null !== h2)) return rj(a3, b3, g2, d2, h2, e2, c2);
    if (f4) {
      f4 = d2.fallback;
      g2 = b3.mode;
      e2 = a3.child;
      h2 = e2.sibling;
      var k3 = { mode: "hidden", children: d2.children };
      0 === (g2 & 1) && b3.child !== e2 ? (d2 = b3.child, d2.childLanes = 0, d2.pendingProps = k3, b3.deletions = null) : (d2 = Pg(e2, k3), d2.subtreeFlags = e2.subtreeFlags & 14680064);
      null !== h2 ? f4 = Pg(h2, f4) : (f4 = Tg(f4, g2, c2, null), f4.flags |= 2);
      f4.return = b3;
      d2.return = b3;
      d2.sibling = f4;
      b3.child = d2;
      d2 = f4;
      f4 = b3.child;
      g2 = a3.child.memoizedState;
      g2 = null === g2 ? nj(c2) : { baseLanes: g2.baseLanes | c2, cachePool: null, transitions: g2.transitions };
      f4.memoizedState = g2;
      f4.childLanes = a3.childLanes & ~c2;
      b3.memoizedState = mj;
      return d2;
    }
    f4 = a3.child;
    a3 = f4.sibling;
    d2 = Pg(f4, { mode: "visible", children: d2.children });
    0 === (b3.mode & 1) && (d2.lanes = c2);
    d2.return = b3;
    d2.sibling = null;
    null !== a3 && (c2 = b3.deletions, null === c2 ? (b3.deletions = [a3], b3.flags |= 16) : c2.push(a3));
    b3.child = d2;
    b3.memoizedState = null;
    return d2;
  }
  function qj(a3, b3) {
    b3 = pj({ mode: "visible", children: b3 }, a3.mode, 0, null);
    b3.return = a3;
    return a3.child = b3;
  }
  function sj(a3, b3, c2, d2) {
    null !== d2 && Jg(d2);
    Ug(b3, a3.child, null, c2);
    a3 = qj(b3, b3.pendingProps.children);
    a3.flags |= 2;
    b3.memoizedState = null;
    return a3;
  }
  function rj(a3, b3, c2, d2, e2, f4, g2) {
    if (c2) {
      if (b3.flags & 256) return b3.flags &= -257, d2 = Ki(Error(p3(422))), sj(a3, b3, g2, d2);
      if (null !== b3.memoizedState) return b3.child = a3.child, b3.flags |= 128, null;
      f4 = d2.fallback;
      e2 = b3.mode;
      d2 = pj({ mode: "visible", children: d2.children }, e2, 0, null);
      f4 = Tg(f4, e2, g2, null);
      f4.flags |= 2;
      d2.return = b3;
      f4.return = b3;
      d2.sibling = f4;
      b3.child = d2;
      0 !== (b3.mode & 1) && Ug(b3, a3.child, null, g2);
      b3.child.memoizedState = nj(g2);
      b3.memoizedState = mj;
      return f4;
    }
    if (0 === (b3.mode & 1)) return sj(a3, b3, g2, null);
    if ("$!" === e2.data) {
      d2 = e2.nextSibling && e2.nextSibling.dataset;
      if (d2) var h2 = d2.dgst;
      d2 = h2;
      f4 = Error(p3(419));
      d2 = Ki(f4, d2, void 0);
      return sj(a3, b3, g2, d2);
    }
    h2 = 0 !== (g2 & a3.childLanes);
    if (dh || h2) {
      d2 = Q2;
      if (null !== d2) {
        switch (g2 & -g2) {
          case 4:
            e2 = 2;
            break;
          case 16:
            e2 = 8;
            break;
          case 64:
          case 128:
          case 256:
          case 512:
          case 1024:
          case 2048:
          case 4096:
          case 8192:
          case 16384:
          case 32768:
          case 65536:
          case 131072:
          case 262144:
          case 524288:
          case 1048576:
          case 2097152:
          case 4194304:
          case 8388608:
          case 16777216:
          case 33554432:
          case 67108864:
            e2 = 32;
            break;
          case 536870912:
            e2 = 268435456;
            break;
          default:
            e2 = 0;
        }
        e2 = 0 !== (e2 & (d2.suspendedLanes | g2)) ? 0 : e2;
        0 !== e2 && e2 !== f4.retryLane && (f4.retryLane = e2, ih(a3, e2), gi(d2, a3, e2, -1));
      }
      tj();
      d2 = Ki(Error(p3(421)));
      return sj(a3, b3, g2, d2);
    }
    if ("$?" === e2.data) return b3.flags |= 128, b3.child = a3.child, b3 = uj.bind(null, a3), e2._reactRetry = b3, null;
    a3 = f4.treeContext;
    yg = Lf(e2.nextSibling);
    xg = b3;
    I2 = true;
    zg = null;
    null !== a3 && (og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, rg = a3.id, sg = a3.overflow, qg = b3);
    b3 = qj(b3, d2.children);
    b3.flags |= 4096;
    return b3;
  }
  function vj(a3, b3, c2) {
    a3.lanes |= b3;
    var d2 = a3.alternate;
    null !== d2 && (d2.lanes |= b3);
    bh(a3.return, b3, c2);
  }
  function wj(a3, b3, c2, d2, e2) {
    var f4 = a3.memoizedState;
    null === f4 ? a3.memoizedState = { isBackwards: b3, rendering: null, renderingStartTime: 0, last: d2, tail: c2, tailMode: e2 } : (f4.isBackwards = b3, f4.rendering = null, f4.renderingStartTime = 0, f4.last = d2, f4.tail = c2, f4.tailMode = e2);
  }
  function xj(a3, b3, c2) {
    var d2 = b3.pendingProps, e2 = d2.revealOrder, f4 = d2.tail;
    Xi(a3, b3, d2.children, c2);
    d2 = L3.current;
    if (0 !== (d2 & 2)) d2 = d2 & 1 | 2, b3.flags |= 128;
    else {
      if (null !== a3 && 0 !== (a3.flags & 128)) a: for (a3 = b3.child; null !== a3; ) {
        if (13 === a3.tag) null !== a3.memoizedState && vj(a3, c2, b3);
        else if (19 === a3.tag) vj(a3, c2, b3);
        else if (null !== a3.child) {
          a3.child.return = a3;
          a3 = a3.child;
          continue;
        }
        if (a3 === b3) break a;
        for (; null === a3.sibling; ) {
          if (null === a3.return || a3.return === b3) break a;
          a3 = a3.return;
        }
        a3.sibling.return = a3.return;
        a3 = a3.sibling;
      }
      d2 &= 1;
    }
    G2(L3, d2);
    if (0 === (b3.mode & 1)) b3.memoizedState = null;
    else switch (e2) {
      case "forwards":
        c2 = b3.child;
        for (e2 = null; null !== c2; ) a3 = c2.alternate, null !== a3 && null === Ch(a3) && (e2 = c2), c2 = c2.sibling;
        c2 = e2;
        null === c2 ? (e2 = b3.child, b3.child = null) : (e2 = c2.sibling, c2.sibling = null);
        wj(b3, false, e2, c2, f4);
        break;
      case "backwards":
        c2 = null;
        e2 = b3.child;
        for (b3.child = null; null !== e2; ) {
          a3 = e2.alternate;
          if (null !== a3 && null === Ch(a3)) {
            b3.child = e2;
            break;
          }
          a3 = e2.sibling;
          e2.sibling = c2;
          c2 = e2;
          e2 = a3;
        }
        wj(b3, true, c2, null, f4);
        break;
      case "together":
        wj(b3, false, null, null, void 0);
        break;
      default:
        b3.memoizedState = null;
    }
    return b3.child;
  }
  function ij(a3, b3) {
    0 === (b3.mode & 1) && null !== a3 && (a3.alternate = null, b3.alternate = null, b3.flags |= 2);
  }
  function Zi(a3, b3, c2) {
    null !== a3 && (b3.dependencies = a3.dependencies);
    rh |= b3.lanes;
    if (0 === (c2 & b3.childLanes)) return null;
    if (null !== a3 && b3.child !== a3.child) throw Error(p3(153));
    if (null !== b3.child) {
      a3 = b3.child;
      c2 = Pg(a3, a3.pendingProps);
      b3.child = c2;
      for (c2.return = b3; null !== a3.sibling; ) a3 = a3.sibling, c2 = c2.sibling = Pg(a3, a3.pendingProps), c2.return = b3;
      c2.sibling = null;
    }
    return b3.child;
  }
  function yj(a3, b3, c2) {
    switch (b3.tag) {
      case 3:
        kj(b3);
        Ig();
        break;
      case 5:
        Ah(b3);
        break;
      case 1:
        Zf(b3.type) && cg(b3);
        break;
      case 4:
        yh(b3, b3.stateNode.containerInfo);
        break;
      case 10:
        var d2 = b3.type._context, e2 = b3.memoizedProps.value;
        G2(Wg, d2._currentValue);
        d2._currentValue = e2;
        break;
      case 13:
        d2 = b3.memoizedState;
        if (null !== d2) {
          if (null !== d2.dehydrated) return G2(L3, L3.current & 1), b3.flags |= 128, null;
          if (0 !== (c2 & b3.child.childLanes)) return oj(a3, b3, c2);
          G2(L3, L3.current & 1);
          a3 = Zi(a3, b3, c2);
          return null !== a3 ? a3.sibling : null;
        }
        G2(L3, L3.current & 1);
        break;
      case 19:
        d2 = 0 !== (c2 & b3.childLanes);
        if (0 !== (a3.flags & 128)) {
          if (d2) return xj(a3, b3, c2);
          b3.flags |= 128;
        }
        e2 = b3.memoizedState;
        null !== e2 && (e2.rendering = null, e2.tail = null, e2.lastEffect = null);
        G2(L3, L3.current);
        if (d2) break;
        else return null;
      case 22:
      case 23:
        return b3.lanes = 0, dj(a3, b3, c2);
    }
    return Zi(a3, b3, c2);
  }
  var zj, Aj, Bj, Cj;
  zj = function(a3, b3) {
    for (var c2 = b3.child; null !== c2; ) {
      if (5 === c2.tag || 6 === c2.tag) a3.appendChild(c2.stateNode);
      else if (4 !== c2.tag && null !== c2.child) {
        c2.child.return = c2;
        c2 = c2.child;
        continue;
      }
      if (c2 === b3) break;
      for (; null === c2.sibling; ) {
        if (null === c2.return || c2.return === b3) return;
        c2 = c2.return;
      }
      c2.sibling.return = c2.return;
      c2 = c2.sibling;
    }
  };
  Aj = function() {
  };
  Bj = function(a3, b3, c2, d2) {
    var e2 = a3.memoizedProps;
    if (e2 !== d2) {
      a3 = b3.stateNode;
      xh(uh.current);
      var f4 = null;
      switch (c2) {
        case "input":
          e2 = Ya(a3, e2);
          d2 = Ya(a3, d2);
          f4 = [];
          break;
        case "select":
          e2 = A2({}, e2, { value: void 0 });
          d2 = A2({}, d2, { value: void 0 });
          f4 = [];
          break;
        case "textarea":
          e2 = gb(a3, e2);
          d2 = gb(a3, d2);
          f4 = [];
          break;
        default:
          "function" !== typeof e2.onClick && "function" === typeof d2.onClick && (a3.onclick = Bf);
      }
      ub(c2, d2);
      var g2;
      c2 = null;
      for (l3 in e2) if (!d2.hasOwnProperty(l3) && e2.hasOwnProperty(l3) && null != e2[l3]) if ("style" === l3) {
        var h2 = e2[l3];
        for (g2 in h2) h2.hasOwnProperty(g2) && (c2 || (c2 = {}), c2[g2] = "");
      } else "dangerouslySetInnerHTML" !== l3 && "children" !== l3 && "suppressContentEditableWarning" !== l3 && "suppressHydrationWarning" !== l3 && "autoFocus" !== l3 && (ea.hasOwnProperty(l3) ? f4 || (f4 = []) : (f4 = f4 || []).push(l3, null));
      for (l3 in d2) {
        var k3 = d2[l3];
        h2 = null != e2 ? e2[l3] : void 0;
        if (d2.hasOwnProperty(l3) && k3 !== h2 && (null != k3 || null != h2)) if ("style" === l3) if (h2) {
          for (g2 in h2) !h2.hasOwnProperty(g2) || k3 && k3.hasOwnProperty(g2) || (c2 || (c2 = {}), c2[g2] = "");
          for (g2 in k3) k3.hasOwnProperty(g2) && h2[g2] !== k3[g2] && (c2 || (c2 = {}), c2[g2] = k3[g2]);
        } else c2 || (f4 || (f4 = []), f4.push(
          l3,
          c2
        )), c2 = k3;
        else "dangerouslySetInnerHTML" === l3 ? (k3 = k3 ? k3.__html : void 0, h2 = h2 ? h2.__html : void 0, null != k3 && h2 !== k3 && (f4 = f4 || []).push(l3, k3)) : "children" === l3 ? "string" !== typeof k3 && "number" !== typeof k3 || (f4 = f4 || []).push(l3, "" + k3) : "suppressContentEditableWarning" !== l3 && "suppressHydrationWarning" !== l3 && (ea.hasOwnProperty(l3) ? (null != k3 && "onScroll" === l3 && D2("scroll", a3), f4 || h2 === k3 || (f4 = [])) : (f4 = f4 || []).push(l3, k3));
      }
      c2 && (f4 = f4 || []).push("style", c2);
      var l3 = f4;
      if (b3.updateQueue = l3) b3.flags |= 4;
    }
  };
  Cj = function(a3, b3, c2, d2) {
    c2 !== d2 && (b3.flags |= 4);
  };
  function Dj(a3, b3) {
    if (!I2) switch (a3.tailMode) {
      case "hidden":
        b3 = a3.tail;
        for (var c2 = null; null !== b3; ) null !== b3.alternate && (c2 = b3), b3 = b3.sibling;
        null === c2 ? a3.tail = null : c2.sibling = null;
        break;
      case "collapsed":
        c2 = a3.tail;
        for (var d2 = null; null !== c2; ) null !== c2.alternate && (d2 = c2), c2 = c2.sibling;
        null === d2 ? b3 || null === a3.tail ? a3.tail = null : a3.tail.sibling = null : d2.sibling = null;
    }
  }
  function S2(a3) {
    var b3 = null !== a3.alternate && a3.alternate.child === a3.child, c2 = 0, d2 = 0;
    if (b3) for (var e2 = a3.child; null !== e2; ) c2 |= e2.lanes | e2.childLanes, d2 |= e2.subtreeFlags & 14680064, d2 |= e2.flags & 14680064, e2.return = a3, e2 = e2.sibling;
    else for (e2 = a3.child; null !== e2; ) c2 |= e2.lanes | e2.childLanes, d2 |= e2.subtreeFlags, d2 |= e2.flags, e2.return = a3, e2 = e2.sibling;
    a3.subtreeFlags |= d2;
    a3.childLanes = c2;
    return b3;
  }
  function Ej(a3, b3, c2) {
    var d2 = b3.pendingProps;
    wg(b3);
    switch (b3.tag) {
      case 2:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return S2(b3), null;
      case 1:
        return Zf(b3.type) && $f(), S2(b3), null;
      case 3:
        d2 = b3.stateNode;
        zh();
        E2(Wf);
        E2(H3);
        Eh();
        d2.pendingContext && (d2.context = d2.pendingContext, d2.pendingContext = null);
        if (null === a3 || null === a3.child) Gg(b3) ? b3.flags |= 4 : null === a3 || a3.memoizedState.isDehydrated && 0 === (b3.flags & 256) || (b3.flags |= 1024, null !== zg && (Fj(zg), zg = null));
        Aj(a3, b3);
        S2(b3);
        return null;
      case 5:
        Bh(b3);
        var e2 = xh(wh.current);
        c2 = b3.type;
        if (null !== a3 && null != b3.stateNode) Bj(a3, b3, c2, d2, e2), a3.ref !== b3.ref && (b3.flags |= 512, b3.flags |= 2097152);
        else {
          if (!d2) {
            if (null === b3.stateNode) throw Error(p3(166));
            S2(b3);
            return null;
          }
          a3 = xh(uh.current);
          if (Gg(b3)) {
            d2 = b3.stateNode;
            c2 = b3.type;
            var f4 = b3.memoizedProps;
            d2[Of] = b3;
            d2[Pf] = f4;
            a3 = 0 !== (b3.mode & 1);
            switch (c2) {
              case "dialog":
                D2("cancel", d2);
                D2("close", d2);
                break;
              case "iframe":
              case "object":
              case "embed":
                D2("load", d2);
                break;
              case "video":
              case "audio":
                for (e2 = 0; e2 < lf.length; e2++) D2(lf[e2], d2);
                break;
              case "source":
                D2("error", d2);
                break;
              case "img":
              case "image":
              case "link":
                D2(
                  "error",
                  d2
                );
                D2("load", d2);
                break;
              case "details":
                D2("toggle", d2);
                break;
              case "input":
                Za(d2, f4);
                D2("invalid", d2);
                break;
              case "select":
                d2._wrapperState = { wasMultiple: !!f4.multiple };
                D2("invalid", d2);
                break;
              case "textarea":
                hb(d2, f4), D2("invalid", d2);
            }
            ub(c2, f4);
            e2 = null;
            for (var g2 in f4) if (f4.hasOwnProperty(g2)) {
              var h2 = f4[g2];
              "children" === g2 ? "string" === typeof h2 ? d2.textContent !== h2 && (true !== f4.suppressHydrationWarning && Af(d2.textContent, h2, a3), e2 = ["children", h2]) : "number" === typeof h2 && d2.textContent !== "" + h2 && (true !== f4.suppressHydrationWarning && Af(
                d2.textContent,
                h2,
                a3
              ), e2 = ["children", "" + h2]) : ea.hasOwnProperty(g2) && null != h2 && "onScroll" === g2 && D2("scroll", d2);
            }
            switch (c2) {
              case "input":
                Va(d2);
                db(d2, f4, true);
                break;
              case "textarea":
                Va(d2);
                jb(d2);
                break;
              case "select":
              case "option":
                break;
              default:
                "function" === typeof f4.onClick && (d2.onclick = Bf);
            }
            d2 = e2;
            b3.updateQueue = d2;
            null !== d2 && (b3.flags |= 4);
          } else {
            g2 = 9 === e2.nodeType ? e2 : e2.ownerDocument;
            "http://www.w3.org/1999/xhtml" === a3 && (a3 = kb(c2));
            "http://www.w3.org/1999/xhtml" === a3 ? "script" === c2 ? (a3 = g2.createElement("div"), a3.innerHTML = "<script><\/script>", a3 = a3.removeChild(a3.firstChild)) : "string" === typeof d2.is ? a3 = g2.createElement(c2, { is: d2.is }) : (a3 = g2.createElement(c2), "select" === c2 && (g2 = a3, d2.multiple ? g2.multiple = true : d2.size && (g2.size = d2.size))) : a3 = g2.createElementNS(a3, c2);
            a3[Of] = b3;
            a3[Pf] = d2;
            zj(a3, b3, false, false);
            b3.stateNode = a3;
            a: {
              g2 = vb(c2, d2);
              switch (c2) {
                case "dialog":
                  D2("cancel", a3);
                  D2("close", a3);
                  e2 = d2;
                  break;
                case "iframe":
                case "object":
                case "embed":
                  D2("load", a3);
                  e2 = d2;
                  break;
                case "video":
                case "audio":
                  for (e2 = 0; e2 < lf.length; e2++) D2(lf[e2], a3);
                  e2 = d2;
                  break;
                case "source":
                  D2("error", a3);
                  e2 = d2;
                  break;
                case "img":
                case "image":
                case "link":
                  D2(
                    "error",
                    a3
                  );
                  D2("load", a3);
                  e2 = d2;
                  break;
                case "details":
                  D2("toggle", a3);
                  e2 = d2;
                  break;
                case "input":
                  Za(a3, d2);
                  e2 = Ya(a3, d2);
                  D2("invalid", a3);
                  break;
                case "option":
                  e2 = d2;
                  break;
                case "select":
                  a3._wrapperState = { wasMultiple: !!d2.multiple };
                  e2 = A2({}, d2, { value: void 0 });
                  D2("invalid", a3);
                  break;
                case "textarea":
                  hb(a3, d2);
                  e2 = gb(a3, d2);
                  D2("invalid", a3);
                  break;
                default:
                  e2 = d2;
              }
              ub(c2, e2);
              h2 = e2;
              for (f4 in h2) if (h2.hasOwnProperty(f4)) {
                var k3 = h2[f4];
                "style" === f4 ? sb(a3, k3) : "dangerouslySetInnerHTML" === f4 ? (k3 = k3 ? k3.__html : void 0, null != k3 && nb(a3, k3)) : "children" === f4 ? "string" === typeof k3 ? ("textarea" !== c2 || "" !== k3) && ob(a3, k3) : "number" === typeof k3 && ob(a3, "" + k3) : "suppressContentEditableWarning" !== f4 && "suppressHydrationWarning" !== f4 && "autoFocus" !== f4 && (ea.hasOwnProperty(f4) ? null != k3 && "onScroll" === f4 && D2("scroll", a3) : null != k3 && ta(a3, f4, k3, g2));
              }
              switch (c2) {
                case "input":
                  Va(a3);
                  db(a3, d2, false);
                  break;
                case "textarea":
                  Va(a3);
                  jb(a3);
                  break;
                case "option":
                  null != d2.value && a3.setAttribute("value", "" + Sa(d2.value));
                  break;
                case "select":
                  a3.multiple = !!d2.multiple;
                  f4 = d2.value;
                  null != f4 ? fb(a3, !!d2.multiple, f4, false) : null != d2.defaultValue && fb(
                    a3,
                    !!d2.multiple,
                    d2.defaultValue,
                    true
                  );
                  break;
                default:
                  "function" === typeof e2.onClick && (a3.onclick = Bf);
              }
              switch (c2) {
                case "button":
                case "input":
                case "select":
                case "textarea":
                  d2 = !!d2.autoFocus;
                  break a;
                case "img":
                  d2 = true;
                  break a;
                default:
                  d2 = false;
              }
            }
            d2 && (b3.flags |= 4);
          }
          null !== b3.ref && (b3.flags |= 512, b3.flags |= 2097152);
        }
        S2(b3);
        return null;
      case 6:
        if (a3 && null != b3.stateNode) Cj(a3, b3, a3.memoizedProps, d2);
        else {
          if ("string" !== typeof d2 && null === b3.stateNode) throw Error(p3(166));
          c2 = xh(wh.current);
          xh(uh.current);
          if (Gg(b3)) {
            d2 = b3.stateNode;
            c2 = b3.memoizedProps;
            d2[Of] = b3;
            if (f4 = d2.nodeValue !== c2) {
              if (a3 = xg, null !== a3) switch (a3.tag) {
                case 3:
                  Af(d2.nodeValue, c2, 0 !== (a3.mode & 1));
                  break;
                case 5:
                  true !== a3.memoizedProps.suppressHydrationWarning && Af(d2.nodeValue, c2, 0 !== (a3.mode & 1));
              }
            }
            f4 && (b3.flags |= 4);
          } else d2 = (9 === c2.nodeType ? c2 : c2.ownerDocument).createTextNode(d2), d2[Of] = b3, b3.stateNode = d2;
        }
        S2(b3);
        return null;
      case 13:
        E2(L3);
        d2 = b3.memoizedState;
        if (null === a3 || null !== a3.memoizedState && null !== a3.memoizedState.dehydrated) {
          if (I2 && null !== yg && 0 !== (b3.mode & 1) && 0 === (b3.flags & 128)) Hg(), Ig(), b3.flags |= 98560, f4 = false;
          else if (f4 = Gg(b3), null !== d2 && null !== d2.dehydrated) {
            if (null === a3) {
              if (!f4) throw Error(p3(318));
              f4 = b3.memoizedState;
              f4 = null !== f4 ? f4.dehydrated : null;
              if (!f4) throw Error(p3(317));
              f4[Of] = b3;
            } else Ig(), 0 === (b3.flags & 128) && (b3.memoizedState = null), b3.flags |= 4;
            S2(b3);
            f4 = false;
          } else null !== zg && (Fj(zg), zg = null), f4 = true;
          if (!f4) return b3.flags & 65536 ? b3 : null;
        }
        if (0 !== (b3.flags & 128)) return b3.lanes = c2, b3;
        d2 = null !== d2;
        d2 !== (null !== a3 && null !== a3.memoizedState) && d2 && (b3.child.flags |= 8192, 0 !== (b3.mode & 1) && (null === a3 || 0 !== (L3.current & 1) ? 0 === T2 && (T2 = 3) : tj()));
        null !== b3.updateQueue && (b3.flags |= 4);
        S2(b3);
        return null;
      case 4:
        return zh(), Aj(a3, b3), null === a3 && sf(b3.stateNode.containerInfo), S2(b3), null;
      case 10:
        return ah(b3.type._context), S2(b3), null;
      case 17:
        return Zf(b3.type) && $f(), S2(b3), null;
      case 19:
        E2(L3);
        f4 = b3.memoizedState;
        if (null === f4) return S2(b3), null;
        d2 = 0 !== (b3.flags & 128);
        g2 = f4.rendering;
        if (null === g2) if (d2) Dj(f4, false);
        else {
          if (0 !== T2 || null !== a3 && 0 !== (a3.flags & 128)) for (a3 = b3.child; null !== a3; ) {
            g2 = Ch(a3);
            if (null !== g2) {
              b3.flags |= 128;
              Dj(f4, false);
              d2 = g2.updateQueue;
              null !== d2 && (b3.updateQueue = d2, b3.flags |= 4);
              b3.subtreeFlags = 0;
              d2 = c2;
              for (c2 = b3.child; null !== c2; ) f4 = c2, a3 = d2, f4.flags &= 14680066, g2 = f4.alternate, null === g2 ? (f4.childLanes = 0, f4.lanes = a3, f4.child = null, f4.subtreeFlags = 0, f4.memoizedProps = null, f4.memoizedState = null, f4.updateQueue = null, f4.dependencies = null, f4.stateNode = null) : (f4.childLanes = g2.childLanes, f4.lanes = g2.lanes, f4.child = g2.child, f4.subtreeFlags = 0, f4.deletions = null, f4.memoizedProps = g2.memoizedProps, f4.memoizedState = g2.memoizedState, f4.updateQueue = g2.updateQueue, f4.type = g2.type, a3 = g2.dependencies, f4.dependencies = null === a3 ? null : { lanes: a3.lanes, firstContext: a3.firstContext }), c2 = c2.sibling;
              G2(L3, L3.current & 1 | 2);
              return b3.child;
            }
            a3 = a3.sibling;
          }
          null !== f4.tail && B2() > Gj && (b3.flags |= 128, d2 = true, Dj(f4, false), b3.lanes = 4194304);
        }
        else {
          if (!d2) if (a3 = Ch(g2), null !== a3) {
            if (b3.flags |= 128, d2 = true, c2 = a3.updateQueue, null !== c2 && (b3.updateQueue = c2, b3.flags |= 4), Dj(f4, true), null === f4.tail && "hidden" === f4.tailMode && !g2.alternate && !I2) return S2(b3), null;
          } else 2 * B2() - f4.renderingStartTime > Gj && 1073741824 !== c2 && (b3.flags |= 128, d2 = true, Dj(f4, false), b3.lanes = 4194304);
          f4.isBackwards ? (g2.sibling = b3.child, b3.child = g2) : (c2 = f4.last, null !== c2 ? c2.sibling = g2 : b3.child = g2, f4.last = g2);
        }
        if (null !== f4.tail) return b3 = f4.tail, f4.rendering = b3, f4.tail = b3.sibling, f4.renderingStartTime = B2(), b3.sibling = null, c2 = L3.current, G2(L3, d2 ? c2 & 1 | 2 : c2 & 1), b3;
        S2(b3);
        return null;
      case 22:
      case 23:
        return Hj(), d2 = null !== b3.memoizedState, null !== a3 && null !== a3.memoizedState !== d2 && (b3.flags |= 8192), d2 && 0 !== (b3.mode & 1) ? 0 !== (fj & 1073741824) && (S2(b3), b3.subtreeFlags & 6 && (b3.flags |= 8192)) : S2(b3), null;
      case 24:
        return null;
      case 25:
        return null;
    }
    throw Error(p3(156, b3.tag));
  }
  function Ij(a3, b3) {
    wg(b3);
    switch (b3.tag) {
      case 1:
        return Zf(b3.type) && $f(), a3 = b3.flags, a3 & 65536 ? (b3.flags = a3 & -65537 | 128, b3) : null;
      case 3:
        return zh(), E2(Wf), E2(H3), Eh(), a3 = b3.flags, 0 !== (a3 & 65536) && 0 === (a3 & 128) ? (b3.flags = a3 & -65537 | 128, b3) : null;
      case 5:
        return Bh(b3), null;
      case 13:
        E2(L3);
        a3 = b3.memoizedState;
        if (null !== a3 && null !== a3.dehydrated) {
          if (null === b3.alternate) throw Error(p3(340));
          Ig();
        }
        a3 = b3.flags;
        return a3 & 65536 ? (b3.flags = a3 & -65537 | 128, b3) : null;
      case 19:
        return E2(L3), null;
      case 4:
        return zh(), null;
      case 10:
        return ah(b3.type._context), null;
      case 22:
      case 23:
        return Hj(), null;
      case 24:
        return null;
      default:
        return null;
    }
  }
  var Jj = false, U2 = false, Kj = "function" === typeof WeakSet ? WeakSet : Set, V2 = null;
  function Lj(a3, b3) {
    var c2 = a3.ref;
    if (null !== c2) if ("function" === typeof c2) try {
      c2(null);
    } catch (d2) {
      W(a3, b3, d2);
    }
    else c2.current = null;
  }
  function Mj(a3, b3, c2) {
    try {
      c2();
    } catch (d2) {
      W(a3, b3, d2);
    }
  }
  var Nj = false;
  function Oj(a3, b3) {
    Cf = dd;
    a3 = Me();
    if (Ne(a3)) {
      if ("selectionStart" in a3) var c2 = { start: a3.selectionStart, end: a3.selectionEnd };
      else a: {
        c2 = (c2 = a3.ownerDocument) && c2.defaultView || window;
        var d2 = c2.getSelection && c2.getSelection();
        if (d2 && 0 !== d2.rangeCount) {
          c2 = d2.anchorNode;
          var e2 = d2.anchorOffset, f4 = d2.focusNode;
          d2 = d2.focusOffset;
          try {
            c2.nodeType, f4.nodeType;
          } catch (F2) {
            c2 = null;
            break a;
          }
          var g2 = 0, h2 = -1, k3 = -1, l3 = 0, m2 = 0, q2 = a3, r3 = null;
          b: for (; ; ) {
            for (var y2; ; ) {
              q2 !== c2 || 0 !== e2 && 3 !== q2.nodeType || (h2 = g2 + e2);
              q2 !== f4 || 0 !== d2 && 3 !== q2.nodeType || (k3 = g2 + d2);
              3 === q2.nodeType && (g2 += q2.nodeValue.length);
              if (null === (y2 = q2.firstChild)) break;
              r3 = q2;
              q2 = y2;
            }
            for (; ; ) {
              if (q2 === a3) break b;
              r3 === c2 && ++l3 === e2 && (h2 = g2);
              r3 === f4 && ++m2 === d2 && (k3 = g2);
              if (null !== (y2 = q2.nextSibling)) break;
              q2 = r3;
              r3 = q2.parentNode;
            }
            q2 = y2;
          }
          c2 = -1 === h2 || -1 === k3 ? null : { start: h2, end: k3 };
        } else c2 = null;
      }
      c2 = c2 || { start: 0, end: 0 };
    } else c2 = null;
    Df = { focusedElem: a3, selectionRange: c2 };
    dd = false;
    for (V2 = b3; null !== V2; ) if (b3 = V2, a3 = b3.child, 0 !== (b3.subtreeFlags & 1028) && null !== a3) a3.return = b3, V2 = a3;
    else for (; null !== V2; ) {
      b3 = V2;
      try {
        var n2 = b3.alternate;
        if (0 !== (b3.flags & 1024)) switch (b3.tag) {
          case 0:
          case 11:
          case 15:
            break;
          case 1:
            if (null !== n2) {
              var t3 = n2.memoizedProps, J2 = n2.memoizedState, x2 = b3.stateNode, w2 = x2.getSnapshotBeforeUpdate(b3.elementType === b3.type ? t3 : Ci(b3.type, t3), J2);
              x2.__reactInternalSnapshotBeforeUpdate = w2;
            }
            break;
          case 3:
            var u3 = b3.stateNode.containerInfo;
            1 === u3.nodeType ? u3.textContent = "" : 9 === u3.nodeType && u3.documentElement && u3.removeChild(u3.documentElement);
            break;
          case 5:
          case 6:
          case 4:
          case 17:
            break;
          default:
            throw Error(p3(163));
        }
      } catch (F2) {
        W(b3, b3.return, F2);
      }
      a3 = b3.sibling;
      if (null !== a3) {
        a3.return = b3.return;
        V2 = a3;
        break;
      }
      V2 = b3.return;
    }
    n2 = Nj;
    Nj = false;
    return n2;
  }
  function Pj(a3, b3, c2) {
    var d2 = b3.updateQueue;
    d2 = null !== d2 ? d2.lastEffect : null;
    if (null !== d2) {
      var e2 = d2 = d2.next;
      do {
        if ((e2.tag & a3) === a3) {
          var f4 = e2.destroy;
          e2.destroy = void 0;
          void 0 !== f4 && Mj(b3, c2, f4);
        }
        e2 = e2.next;
      } while (e2 !== d2);
    }
  }
  function Qj(a3, b3) {
    b3 = b3.updateQueue;
    b3 = null !== b3 ? b3.lastEffect : null;
    if (null !== b3) {
      var c2 = b3 = b3.next;
      do {
        if ((c2.tag & a3) === a3) {
          var d2 = c2.create;
          c2.destroy = d2();
        }
        c2 = c2.next;
      } while (c2 !== b3);
    }
  }
  function Rj(a3) {
    var b3 = a3.ref;
    if (null !== b3) {
      var c2 = a3.stateNode;
      switch (a3.tag) {
        case 5:
          a3 = c2;
          break;
        default:
          a3 = c2;
      }
      "function" === typeof b3 ? b3(a3) : b3.current = a3;
    }
  }
  function Sj(a3) {
    var b3 = a3.alternate;
    null !== b3 && (a3.alternate = null, Sj(b3));
    a3.child = null;
    a3.deletions = null;
    a3.sibling = null;
    5 === a3.tag && (b3 = a3.stateNode, null !== b3 && (delete b3[Of], delete b3[Pf], delete b3[of], delete b3[Qf], delete b3[Rf]));
    a3.stateNode = null;
    a3.return = null;
    a3.dependencies = null;
    a3.memoizedProps = null;
    a3.memoizedState = null;
    a3.pendingProps = null;
    a3.stateNode = null;
    a3.updateQueue = null;
  }
  function Tj(a3) {
    return 5 === a3.tag || 3 === a3.tag || 4 === a3.tag;
  }
  function Uj(a3) {
    a: for (; ; ) {
      for (; null === a3.sibling; ) {
        if (null === a3.return || Tj(a3.return)) return null;
        a3 = a3.return;
      }
      a3.sibling.return = a3.return;
      for (a3 = a3.sibling; 5 !== a3.tag && 6 !== a3.tag && 18 !== a3.tag; ) {
        if (a3.flags & 2) continue a;
        if (null === a3.child || 4 === a3.tag) continue a;
        else a3.child.return = a3, a3 = a3.child;
      }
      if (!(a3.flags & 2)) return a3.stateNode;
    }
  }
  function Vj(a3, b3, c2) {
    var d2 = a3.tag;
    if (5 === d2 || 6 === d2) a3 = a3.stateNode, b3 ? 8 === c2.nodeType ? c2.parentNode.insertBefore(a3, b3) : c2.insertBefore(a3, b3) : (8 === c2.nodeType ? (b3 = c2.parentNode, b3.insertBefore(a3, c2)) : (b3 = c2, b3.appendChild(a3)), c2 = c2._reactRootContainer, null !== c2 && void 0 !== c2 || null !== b3.onclick || (b3.onclick = Bf));
    else if (4 !== d2 && (a3 = a3.child, null !== a3)) for (Vj(a3, b3, c2), a3 = a3.sibling; null !== a3; ) Vj(a3, b3, c2), a3 = a3.sibling;
  }
  function Wj(a3, b3, c2) {
    var d2 = a3.tag;
    if (5 === d2 || 6 === d2) a3 = a3.stateNode, b3 ? c2.insertBefore(a3, b3) : c2.appendChild(a3);
    else if (4 !== d2 && (a3 = a3.child, null !== a3)) for (Wj(a3, b3, c2), a3 = a3.sibling; null !== a3; ) Wj(a3, b3, c2), a3 = a3.sibling;
  }
  var X2 = null, Xj = false;
  function Yj(a3, b3, c2) {
    for (c2 = c2.child; null !== c2; ) Zj(a3, b3, c2), c2 = c2.sibling;
  }
  function Zj(a3, b3, c2) {
    if (lc && "function" === typeof lc.onCommitFiberUnmount) try {
      lc.onCommitFiberUnmount(kc, c2);
    } catch (h2) {
    }
    switch (c2.tag) {
      case 5:
        U2 || Lj(c2, b3);
      case 6:
        var d2 = X2, e2 = Xj;
        X2 = null;
        Yj(a3, b3, c2);
        X2 = d2;
        Xj = e2;
        null !== X2 && (Xj ? (a3 = X2, c2 = c2.stateNode, 8 === a3.nodeType ? a3.parentNode.removeChild(c2) : a3.removeChild(c2)) : X2.removeChild(c2.stateNode));
        break;
      case 18:
        null !== X2 && (Xj ? (a3 = X2, c2 = c2.stateNode, 8 === a3.nodeType ? Kf(a3.parentNode, c2) : 1 === a3.nodeType && Kf(a3, c2), bd(a3)) : Kf(X2, c2.stateNode));
        break;
      case 4:
        d2 = X2;
        e2 = Xj;
        X2 = c2.stateNode.containerInfo;
        Xj = true;
        Yj(a3, b3, c2);
        X2 = d2;
        Xj = e2;
        break;
      case 0:
      case 11:
      case 14:
      case 15:
        if (!U2 && (d2 = c2.updateQueue, null !== d2 && (d2 = d2.lastEffect, null !== d2))) {
          e2 = d2 = d2.next;
          do {
            var f4 = e2, g2 = f4.destroy;
            f4 = f4.tag;
            void 0 !== g2 && (0 !== (f4 & 2) ? Mj(c2, b3, g2) : 0 !== (f4 & 4) && Mj(c2, b3, g2));
            e2 = e2.next;
          } while (e2 !== d2);
        }
        Yj(a3, b3, c2);
        break;
      case 1:
        if (!U2 && (Lj(c2, b3), d2 = c2.stateNode, "function" === typeof d2.componentWillUnmount)) try {
          d2.props = c2.memoizedProps, d2.state = c2.memoizedState, d2.componentWillUnmount();
        } catch (h2) {
          W(c2, b3, h2);
        }
        Yj(a3, b3, c2);
        break;
      case 21:
        Yj(a3, b3, c2);
        break;
      case 22:
        c2.mode & 1 ? (U2 = (d2 = U2) || null !== c2.memoizedState, Yj(a3, b3, c2), U2 = d2) : Yj(a3, b3, c2);
        break;
      default:
        Yj(a3, b3, c2);
    }
  }
  function ak(a3) {
    var b3 = a3.updateQueue;
    if (null !== b3) {
      a3.updateQueue = null;
      var c2 = a3.stateNode;
      null === c2 && (c2 = a3.stateNode = new Kj());
      b3.forEach(function(b4) {
        var d2 = bk.bind(null, a3, b4);
        c2.has(b4) || (c2.add(b4), b4.then(d2, d2));
      });
    }
  }
  function ck(a3, b3) {
    var c2 = b3.deletions;
    if (null !== c2) for (var d2 = 0; d2 < c2.length; d2++) {
      var e2 = c2[d2];
      try {
        var f4 = a3, g2 = b3, h2 = g2;
        a: for (; null !== h2; ) {
          switch (h2.tag) {
            case 5:
              X2 = h2.stateNode;
              Xj = false;
              break a;
            case 3:
              X2 = h2.stateNode.containerInfo;
              Xj = true;
              break a;
            case 4:
              X2 = h2.stateNode.containerInfo;
              Xj = true;
              break a;
          }
          h2 = h2.return;
        }
        if (null === X2) throw Error(p3(160));
        Zj(f4, g2, e2);
        X2 = null;
        Xj = false;
        var k3 = e2.alternate;
        null !== k3 && (k3.return = null);
        e2.return = null;
      } catch (l3) {
        W(e2, b3, l3);
      }
    }
    if (b3.subtreeFlags & 12854) for (b3 = b3.child; null !== b3; ) dk(b3, a3), b3 = b3.sibling;
  }
  function dk(a3, b3) {
    var c2 = a3.alternate, d2 = a3.flags;
    switch (a3.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        ck(b3, a3);
        ek(a3);
        if (d2 & 4) {
          try {
            Pj(3, a3, a3.return), Qj(3, a3);
          } catch (t3) {
            W(a3, a3.return, t3);
          }
          try {
            Pj(5, a3, a3.return);
          } catch (t3) {
            W(a3, a3.return, t3);
          }
        }
        break;
      case 1:
        ck(b3, a3);
        ek(a3);
        d2 & 512 && null !== c2 && Lj(c2, c2.return);
        break;
      case 5:
        ck(b3, a3);
        ek(a3);
        d2 & 512 && null !== c2 && Lj(c2, c2.return);
        if (a3.flags & 32) {
          var e2 = a3.stateNode;
          try {
            ob(e2, "");
          } catch (t3) {
            W(a3, a3.return, t3);
          }
        }
        if (d2 & 4 && (e2 = a3.stateNode, null != e2)) {
          var f4 = a3.memoizedProps, g2 = null !== c2 ? c2.memoizedProps : f4, h2 = a3.type, k3 = a3.updateQueue;
          a3.updateQueue = null;
          if (null !== k3) try {
            "input" === h2 && "radio" === f4.type && null != f4.name && ab(e2, f4);
            vb(h2, g2);
            var l3 = vb(h2, f4);
            for (g2 = 0; g2 < k3.length; g2 += 2) {
              var m2 = k3[g2], q2 = k3[g2 + 1];
              "style" === m2 ? sb(e2, q2) : "dangerouslySetInnerHTML" === m2 ? nb(e2, q2) : "children" === m2 ? ob(e2, q2) : ta(e2, m2, q2, l3);
            }
            switch (h2) {
              case "input":
                bb(e2, f4);
                break;
              case "textarea":
                ib(e2, f4);
                break;
              case "select":
                var r3 = e2._wrapperState.wasMultiple;
                e2._wrapperState.wasMultiple = !!f4.multiple;
                var y2 = f4.value;
                null != y2 ? fb(e2, !!f4.multiple, y2, false) : r3 !== !!f4.multiple && (null != f4.defaultValue ? fb(
                  e2,
                  !!f4.multiple,
                  f4.defaultValue,
                  true
                ) : fb(e2, !!f4.multiple, f4.multiple ? [] : "", false));
            }
            e2[Pf] = f4;
          } catch (t3) {
            W(a3, a3.return, t3);
          }
        }
        break;
      case 6:
        ck(b3, a3);
        ek(a3);
        if (d2 & 4) {
          if (null === a3.stateNode) throw Error(p3(162));
          e2 = a3.stateNode;
          f4 = a3.memoizedProps;
          try {
            e2.nodeValue = f4;
          } catch (t3) {
            W(a3, a3.return, t3);
          }
        }
        break;
      case 3:
        ck(b3, a3);
        ek(a3);
        if (d2 & 4 && null !== c2 && c2.memoizedState.isDehydrated) try {
          bd(b3.containerInfo);
        } catch (t3) {
          W(a3, a3.return, t3);
        }
        break;
      case 4:
        ck(b3, a3);
        ek(a3);
        break;
      case 13:
        ck(b3, a3);
        ek(a3);
        e2 = a3.child;
        e2.flags & 8192 && (f4 = null !== e2.memoizedState, e2.stateNode.isHidden = f4, !f4 || null !== e2.alternate && null !== e2.alternate.memoizedState || (fk = B2()));
        d2 & 4 && ak(a3);
        break;
      case 22:
        m2 = null !== c2 && null !== c2.memoizedState;
        a3.mode & 1 ? (U2 = (l3 = U2) || m2, ck(b3, a3), U2 = l3) : ck(b3, a3);
        ek(a3);
        if (d2 & 8192) {
          l3 = null !== a3.memoizedState;
          if ((a3.stateNode.isHidden = l3) && !m2 && 0 !== (a3.mode & 1)) for (V2 = a3, m2 = a3.child; null !== m2; ) {
            for (q2 = V2 = m2; null !== V2; ) {
              r3 = V2;
              y2 = r3.child;
              switch (r3.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                  Pj(4, r3, r3.return);
                  break;
                case 1:
                  Lj(r3, r3.return);
                  var n2 = r3.stateNode;
                  if ("function" === typeof n2.componentWillUnmount) {
                    d2 = r3;
                    c2 = r3.return;
                    try {
                      b3 = d2, n2.props = b3.memoizedProps, n2.state = b3.memoizedState, n2.componentWillUnmount();
                    } catch (t3) {
                      W(d2, c2, t3);
                    }
                  }
                  break;
                case 5:
                  Lj(r3, r3.return);
                  break;
                case 22:
                  if (null !== r3.memoizedState) {
                    gk(q2);
                    continue;
                  }
              }
              null !== y2 ? (y2.return = r3, V2 = y2) : gk(q2);
            }
            m2 = m2.sibling;
          }
          a: for (m2 = null, q2 = a3; ; ) {
            if (5 === q2.tag) {
              if (null === m2) {
                m2 = q2;
                try {
                  e2 = q2.stateNode, l3 ? (f4 = e2.style, "function" === typeof f4.setProperty ? f4.setProperty("display", "none", "important") : f4.display = "none") : (h2 = q2.stateNode, k3 = q2.memoizedProps.style, g2 = void 0 !== k3 && null !== k3 && k3.hasOwnProperty("display") ? k3.display : null, h2.style.display = rb("display", g2));
                } catch (t3) {
                  W(a3, a3.return, t3);
                }
              }
            } else if (6 === q2.tag) {
              if (null === m2) try {
                q2.stateNode.nodeValue = l3 ? "" : q2.memoizedProps;
              } catch (t3) {
                W(a3, a3.return, t3);
              }
            } else if ((22 !== q2.tag && 23 !== q2.tag || null === q2.memoizedState || q2 === a3) && null !== q2.child) {
              q2.child.return = q2;
              q2 = q2.child;
              continue;
            }
            if (q2 === a3) break a;
            for (; null === q2.sibling; ) {
              if (null === q2.return || q2.return === a3) break a;
              m2 === q2 && (m2 = null);
              q2 = q2.return;
            }
            m2 === q2 && (m2 = null);
            q2.sibling.return = q2.return;
            q2 = q2.sibling;
          }
        }
        break;
      case 19:
        ck(b3, a3);
        ek(a3);
        d2 & 4 && ak(a3);
        break;
      case 21:
        break;
      default:
        ck(
          b3,
          a3
        ), ek(a3);
    }
  }
  function ek(a3) {
    var b3 = a3.flags;
    if (b3 & 2) {
      try {
        a: {
          for (var c2 = a3.return; null !== c2; ) {
            if (Tj(c2)) {
              var d2 = c2;
              break a;
            }
            c2 = c2.return;
          }
          throw Error(p3(160));
        }
        switch (d2.tag) {
          case 5:
            var e2 = d2.stateNode;
            d2.flags & 32 && (ob(e2, ""), d2.flags &= -33);
            var f4 = Uj(a3);
            Wj(a3, f4, e2);
            break;
          case 3:
          case 4:
            var g2 = d2.stateNode.containerInfo, h2 = Uj(a3);
            Vj(a3, h2, g2);
            break;
          default:
            throw Error(p3(161));
        }
      } catch (k3) {
        W(a3, a3.return, k3);
      }
      a3.flags &= -3;
    }
    b3 & 4096 && (a3.flags &= -4097);
  }
  function hk(a3, b3, c2) {
    V2 = a3;
    ik(a3);
  }
  function ik(a3, b3, c2) {
    for (var d2 = 0 !== (a3.mode & 1); null !== V2; ) {
      var e2 = V2, f4 = e2.child;
      if (22 === e2.tag && d2) {
        var g2 = null !== e2.memoizedState || Jj;
        if (!g2) {
          var h2 = e2.alternate, k3 = null !== h2 && null !== h2.memoizedState || U2;
          h2 = Jj;
          var l3 = U2;
          Jj = g2;
          if ((U2 = k3) && !l3) for (V2 = e2; null !== V2; ) g2 = V2, k3 = g2.child, 22 === g2.tag && null !== g2.memoizedState ? jk(e2) : null !== k3 ? (k3.return = g2, V2 = k3) : jk(e2);
          for (; null !== f4; ) V2 = f4, ik(f4), f4 = f4.sibling;
          V2 = e2;
          Jj = h2;
          U2 = l3;
        }
        kk(a3);
      } else 0 !== (e2.subtreeFlags & 8772) && null !== f4 ? (f4.return = e2, V2 = f4) : kk(a3);
    }
  }
  function kk(a3) {
    for (; null !== V2; ) {
      var b3 = V2;
      if (0 !== (b3.flags & 8772)) {
        var c2 = b3.alternate;
        try {
          if (0 !== (b3.flags & 8772)) switch (b3.tag) {
            case 0:
            case 11:
            case 15:
              U2 || Qj(5, b3);
              break;
            case 1:
              var d2 = b3.stateNode;
              if (b3.flags & 4 && !U2) if (null === c2) d2.componentDidMount();
              else {
                var e2 = b3.elementType === b3.type ? c2.memoizedProps : Ci(b3.type, c2.memoizedProps);
                d2.componentDidUpdate(e2, c2.memoizedState, d2.__reactInternalSnapshotBeforeUpdate);
              }
              var f4 = b3.updateQueue;
              null !== f4 && sh(b3, f4, d2);
              break;
            case 3:
              var g2 = b3.updateQueue;
              if (null !== g2) {
                c2 = null;
                if (null !== b3.child) switch (b3.child.tag) {
                  case 5:
                    c2 = b3.child.stateNode;
                    break;
                  case 1:
                    c2 = b3.child.stateNode;
                }
                sh(b3, g2, c2);
              }
              break;
            case 5:
              var h2 = b3.stateNode;
              if (null === c2 && b3.flags & 4) {
                c2 = h2;
                var k3 = b3.memoizedProps;
                switch (b3.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    k3.autoFocus && c2.focus();
                    break;
                  case "img":
                    k3.src && (c2.src = k3.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (null === b3.memoizedState) {
                var l3 = b3.alternate;
                if (null !== l3) {
                  var m2 = l3.memoizedState;
                  if (null !== m2) {
                    var q2 = m2.dehydrated;
                    null !== q2 && bd(q2);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(p3(163));
          }
          U2 || b3.flags & 512 && Rj(b3);
        } catch (r3) {
          W(b3, b3.return, r3);
        }
      }
      if (b3 === a3) {
        V2 = null;
        break;
      }
      c2 = b3.sibling;
      if (null !== c2) {
        c2.return = b3.return;
        V2 = c2;
        break;
      }
      V2 = b3.return;
    }
  }
  function gk(a3) {
    for (; null !== V2; ) {
      var b3 = V2;
      if (b3 === a3) {
        V2 = null;
        break;
      }
      var c2 = b3.sibling;
      if (null !== c2) {
        c2.return = b3.return;
        V2 = c2;
        break;
      }
      V2 = b3.return;
    }
  }
  function jk(a3) {
    for (; null !== V2; ) {
      var b3 = V2;
      try {
        switch (b3.tag) {
          case 0:
          case 11:
          case 15:
            var c2 = b3.return;
            try {
              Qj(4, b3);
            } catch (k3) {
              W(b3, c2, k3);
            }
            break;
          case 1:
            var d2 = b3.stateNode;
            if ("function" === typeof d2.componentDidMount) {
              var e2 = b3.return;
              try {
                d2.componentDidMount();
              } catch (k3) {
                W(b3, e2, k3);
              }
            }
            var f4 = b3.return;
            try {
              Rj(b3);
            } catch (k3) {
              W(b3, f4, k3);
            }
            break;
          case 5:
            var g2 = b3.return;
            try {
              Rj(b3);
            } catch (k3) {
              W(b3, g2, k3);
            }
        }
      } catch (k3) {
        W(b3, b3.return, k3);
      }
      if (b3 === a3) {
        V2 = null;
        break;
      }
      var h2 = b3.sibling;
      if (null !== h2) {
        h2.return = b3.return;
        V2 = h2;
        break;
      }
      V2 = b3.return;
    }
  }
  var lk = Math.ceil, mk = ua.ReactCurrentDispatcher, nk = ua.ReactCurrentOwner, ok = ua.ReactCurrentBatchConfig, K2 = 0, Q2 = null, Y = null, Z2 = 0, fj = 0, ej = Uf(0), T2 = 0, pk = null, rh = 0, qk = 0, rk = 0, sk = null, tk = null, fk = 0, Gj = Infinity, uk = null, Oi = false, Pi = null, Ri = null, vk = false, wk = null, xk = 0, yk = 0, zk = null, Ak = -1, Bk = 0;
  function R3() {
    return 0 !== (K2 & 6) ? B2() : -1 !== Ak ? Ak : Ak = B2();
  }
  function yi(a3) {
    if (0 === (a3.mode & 1)) return 1;
    if (0 !== (K2 & 2) && 0 !== Z2) return Z2 & -Z2;
    if (null !== Kg.transition) return 0 === Bk && (Bk = yc()), Bk;
    a3 = C2;
    if (0 !== a3) return a3;
    a3 = window.event;
    a3 = void 0 === a3 ? 16 : jd(a3.type);
    return a3;
  }
  function gi(a3, b3, c2, d2) {
    if (50 < yk) throw yk = 0, zk = null, Error(p3(185));
    Ac(a3, c2, d2);
    if (0 === (K2 & 2) || a3 !== Q2) a3 === Q2 && (0 === (K2 & 2) && (qk |= c2), 4 === T2 && Ck(a3, Z2)), Dk(a3, d2), 1 === c2 && 0 === K2 && 0 === (b3.mode & 1) && (Gj = B2() + 500, fg && jg());
  }
  function Dk(a3, b3) {
    var c2 = a3.callbackNode;
    wc(a3, b3);
    var d2 = uc(a3, a3 === Q2 ? Z2 : 0);
    if (0 === d2) null !== c2 && bc(c2), a3.callbackNode = null, a3.callbackPriority = 0;
    else if (b3 = d2 & -d2, a3.callbackPriority !== b3) {
      null != c2 && bc(c2);
      if (1 === b3) 0 === a3.tag ? ig(Ek.bind(null, a3)) : hg(Ek.bind(null, a3)), Jf(function() {
        0 === (K2 & 6) && jg();
      }), c2 = null;
      else {
        switch (Dc(d2)) {
          case 1:
            c2 = fc;
            break;
          case 4:
            c2 = gc;
            break;
          case 16:
            c2 = hc;
            break;
          case 536870912:
            c2 = jc;
            break;
          default:
            c2 = hc;
        }
        c2 = Fk(c2, Gk.bind(null, a3));
      }
      a3.callbackPriority = b3;
      a3.callbackNode = c2;
    }
  }
  function Gk(a3, b3) {
    Ak = -1;
    Bk = 0;
    if (0 !== (K2 & 6)) throw Error(p3(327));
    var c2 = a3.callbackNode;
    if (Hk() && a3.callbackNode !== c2) return null;
    var d2 = uc(a3, a3 === Q2 ? Z2 : 0);
    if (0 === d2) return null;
    if (0 !== (d2 & 30) || 0 !== (d2 & a3.expiredLanes) || b3) b3 = Ik(a3, d2);
    else {
      b3 = d2;
      var e2 = K2;
      K2 |= 2;
      var f4 = Jk();
      if (Q2 !== a3 || Z2 !== b3) uk = null, Gj = B2() + 500, Kk(a3, b3);
      do
        try {
          Lk();
          break;
        } catch (h2) {
          Mk(a3, h2);
        }
      while (1);
      $g();
      mk.current = f4;
      K2 = e2;
      null !== Y ? b3 = 0 : (Q2 = null, Z2 = 0, b3 = T2);
    }
    if (0 !== b3) {
      2 === b3 && (e2 = xc(a3), 0 !== e2 && (d2 = e2, b3 = Nk(a3, e2)));
      if (1 === b3) throw c2 = pk, Kk(a3, 0), Ck(a3, d2), Dk(a3, B2()), c2;
      if (6 === b3) Ck(a3, d2);
      else {
        e2 = a3.current.alternate;
        if (0 === (d2 & 30) && !Ok(e2) && (b3 = Ik(a3, d2), 2 === b3 && (f4 = xc(a3), 0 !== f4 && (d2 = f4, b3 = Nk(a3, f4))), 1 === b3)) throw c2 = pk, Kk(a3, 0), Ck(a3, d2), Dk(a3, B2()), c2;
        a3.finishedWork = e2;
        a3.finishedLanes = d2;
        switch (b3) {
          case 0:
          case 1:
            throw Error(p3(345));
          case 2:
            Pk(a3, tk, uk);
            break;
          case 3:
            Ck(a3, d2);
            if ((d2 & 130023424) === d2 && (b3 = fk + 500 - B2(), 10 < b3)) {
              if (0 !== uc(a3, 0)) break;
              e2 = a3.suspendedLanes;
              if ((e2 & d2) !== d2) {
                R3();
                a3.pingedLanes |= a3.suspendedLanes & e2;
                break;
              }
              a3.timeoutHandle = Ff(Pk.bind(null, a3, tk, uk), b3);
              break;
            }
            Pk(a3, tk, uk);
            break;
          case 4:
            Ck(a3, d2);
            if ((d2 & 4194240) === d2) break;
            b3 = a3.eventTimes;
            for (e2 = -1; 0 < d2; ) {
              var g2 = 31 - oc(d2);
              f4 = 1 << g2;
              g2 = b3[g2];
              g2 > e2 && (e2 = g2);
              d2 &= ~f4;
            }
            d2 = e2;
            d2 = B2() - d2;
            d2 = (120 > d2 ? 120 : 480 > d2 ? 480 : 1080 > d2 ? 1080 : 1920 > d2 ? 1920 : 3e3 > d2 ? 3e3 : 4320 > d2 ? 4320 : 1960 * lk(d2 / 1960)) - d2;
            if (10 < d2) {
              a3.timeoutHandle = Ff(Pk.bind(null, a3, tk, uk), d2);
              break;
            }
            Pk(a3, tk, uk);
            break;
          case 5:
            Pk(a3, tk, uk);
            break;
          default:
            throw Error(p3(329));
        }
      }
    }
    Dk(a3, B2());
    return a3.callbackNode === c2 ? Gk.bind(null, a3) : null;
  }
  function Nk(a3, b3) {
    var c2 = sk;
    a3.current.memoizedState.isDehydrated && (Kk(a3, b3).flags |= 256);
    a3 = Ik(a3, b3);
    2 !== a3 && (b3 = tk, tk = c2, null !== b3 && Fj(b3));
    return a3;
  }
  function Fj(a3) {
    null === tk ? tk = a3 : tk.push.apply(tk, a3);
  }
  function Ok(a3) {
    for (var b3 = a3; ; ) {
      if (b3.flags & 16384) {
        var c2 = b3.updateQueue;
        if (null !== c2 && (c2 = c2.stores, null !== c2)) for (var d2 = 0; d2 < c2.length; d2++) {
          var e2 = c2[d2], f4 = e2.getSnapshot;
          e2 = e2.value;
          try {
            if (!He(f4(), e2)) return false;
          } catch (g2) {
            return false;
          }
        }
      }
      c2 = b3.child;
      if (b3.subtreeFlags & 16384 && null !== c2) c2.return = b3, b3 = c2;
      else {
        if (b3 === a3) break;
        for (; null === b3.sibling; ) {
          if (null === b3.return || b3.return === a3) return true;
          b3 = b3.return;
        }
        b3.sibling.return = b3.return;
        b3 = b3.sibling;
      }
    }
    return true;
  }
  function Ck(a3, b3) {
    b3 &= ~rk;
    b3 &= ~qk;
    a3.suspendedLanes |= b3;
    a3.pingedLanes &= ~b3;
    for (a3 = a3.expirationTimes; 0 < b3; ) {
      var c2 = 31 - oc(b3), d2 = 1 << c2;
      a3[c2] = -1;
      b3 &= ~d2;
    }
  }
  function Ek(a3) {
    if (0 !== (K2 & 6)) throw Error(p3(327));
    Hk();
    var b3 = uc(a3, 0);
    if (0 === (b3 & 1)) return Dk(a3, B2()), null;
    var c2 = Ik(a3, b3);
    if (0 !== a3.tag && 2 === c2) {
      var d2 = xc(a3);
      0 !== d2 && (b3 = d2, c2 = Nk(a3, d2));
    }
    if (1 === c2) throw c2 = pk, Kk(a3, 0), Ck(a3, b3), Dk(a3, B2()), c2;
    if (6 === c2) throw Error(p3(345));
    a3.finishedWork = a3.current.alternate;
    a3.finishedLanes = b3;
    Pk(a3, tk, uk);
    Dk(a3, B2());
    return null;
  }
  function Qk(a3, b3) {
    var c2 = K2;
    K2 |= 1;
    try {
      return a3(b3);
    } finally {
      K2 = c2, 0 === K2 && (Gj = B2() + 500, fg && jg());
    }
  }
  function Rk(a3) {
    null !== wk && 0 === wk.tag && 0 === (K2 & 6) && Hk();
    var b3 = K2;
    K2 |= 1;
    var c2 = ok.transition, d2 = C2;
    try {
      if (ok.transition = null, C2 = 1, a3) return a3();
    } finally {
      C2 = d2, ok.transition = c2, K2 = b3, 0 === (K2 & 6) && jg();
    }
  }
  function Hj() {
    fj = ej.current;
    E2(ej);
  }
  function Kk(a3, b3) {
    a3.finishedWork = null;
    a3.finishedLanes = 0;
    var c2 = a3.timeoutHandle;
    -1 !== c2 && (a3.timeoutHandle = -1, Gf(c2));
    if (null !== Y) for (c2 = Y.return; null !== c2; ) {
      var d2 = c2;
      wg(d2);
      switch (d2.tag) {
        case 1:
          d2 = d2.type.childContextTypes;
          null !== d2 && void 0 !== d2 && $f();
          break;
        case 3:
          zh();
          E2(Wf);
          E2(H3);
          Eh();
          break;
        case 5:
          Bh(d2);
          break;
        case 4:
          zh();
          break;
        case 13:
          E2(L3);
          break;
        case 19:
          E2(L3);
          break;
        case 10:
          ah(d2.type._context);
          break;
        case 22:
        case 23:
          Hj();
      }
      c2 = c2.return;
    }
    Q2 = a3;
    Y = a3 = Pg(a3.current, null);
    Z2 = fj = b3;
    T2 = 0;
    pk = null;
    rk = qk = rh = 0;
    tk = sk = null;
    if (null !== fh) {
      for (b3 = 0; b3 < fh.length; b3++) if (c2 = fh[b3], d2 = c2.interleaved, null !== d2) {
        c2.interleaved = null;
        var e2 = d2.next, f4 = c2.pending;
        if (null !== f4) {
          var g2 = f4.next;
          f4.next = e2;
          d2.next = g2;
        }
        c2.pending = d2;
      }
      fh = null;
    }
    return a3;
  }
  function Mk(a3, b3) {
    do {
      var c2 = Y;
      try {
        $g();
        Fh.current = Rh;
        if (Ih) {
          for (var d2 = M3.memoizedState; null !== d2; ) {
            var e2 = d2.queue;
            null !== e2 && (e2.pending = null);
            d2 = d2.next;
          }
          Ih = false;
        }
        Hh = 0;
        O2 = N3 = M3 = null;
        Jh = false;
        Kh = 0;
        nk.current = null;
        if (null === c2 || null === c2.return) {
          T2 = 1;
          pk = b3;
          Y = null;
          break;
        }
        a: {
          var f4 = a3, g2 = c2.return, h2 = c2, k3 = b3;
          b3 = Z2;
          h2.flags |= 32768;
          if (null !== k3 && "object" === typeof k3 && "function" === typeof k3.then) {
            var l3 = k3, m2 = h2, q2 = m2.tag;
            if (0 === (m2.mode & 1) && (0 === q2 || 11 === q2 || 15 === q2)) {
              var r3 = m2.alternate;
              r3 ? (m2.updateQueue = r3.updateQueue, m2.memoizedState = r3.memoizedState, m2.lanes = r3.lanes) : (m2.updateQueue = null, m2.memoizedState = null);
            }
            var y2 = Ui(g2);
            if (null !== y2) {
              y2.flags &= -257;
              Vi(y2, g2, h2, f4, b3);
              y2.mode & 1 && Si(f4, l3, b3);
              b3 = y2;
              k3 = l3;
              var n2 = b3.updateQueue;
              if (null === n2) {
                var t3 = /* @__PURE__ */ new Set();
                t3.add(k3);
                b3.updateQueue = t3;
              } else n2.add(k3);
              break a;
            } else {
              if (0 === (b3 & 1)) {
                Si(f4, l3, b3);
                tj();
                break a;
              }
              k3 = Error(p3(426));
            }
          } else if (I2 && h2.mode & 1) {
            var J2 = Ui(g2);
            if (null !== J2) {
              0 === (J2.flags & 65536) && (J2.flags |= 256);
              Vi(J2, g2, h2, f4, b3);
              Jg(Ji(k3, h2));
              break a;
            }
          }
          f4 = k3 = Ji(k3, h2);
          4 !== T2 && (T2 = 2);
          null === sk ? sk = [f4] : sk.push(f4);
          f4 = g2;
          do {
            switch (f4.tag) {
              case 3:
                f4.flags |= 65536;
                b3 &= -b3;
                f4.lanes |= b3;
                var x2 = Ni(f4, k3, b3);
                ph(f4, x2);
                break a;
              case 1:
                h2 = k3;
                var w2 = f4.type, u3 = f4.stateNode;
                if (0 === (f4.flags & 128) && ("function" === typeof w2.getDerivedStateFromError || null !== u3 && "function" === typeof u3.componentDidCatch && (null === Ri || !Ri.has(u3)))) {
                  f4.flags |= 65536;
                  b3 &= -b3;
                  f4.lanes |= b3;
                  var F2 = Qi(f4, h2, b3);
                  ph(f4, F2);
                  break a;
                }
            }
            f4 = f4.return;
          } while (null !== f4);
        }
        Sk(c2);
      } catch (na) {
        b3 = na;
        Y === c2 && null !== c2 && (Y = c2 = c2.return);
        continue;
      }
      break;
    } while (1);
  }
  function Jk() {
    var a3 = mk.current;
    mk.current = Rh;
    return null === a3 ? Rh : a3;
  }
  function tj() {
    if (0 === T2 || 3 === T2 || 2 === T2) T2 = 4;
    null === Q2 || 0 === (rh & 268435455) && 0 === (qk & 268435455) || Ck(Q2, Z2);
  }
  function Ik(a3, b3) {
    var c2 = K2;
    K2 |= 2;
    var d2 = Jk();
    if (Q2 !== a3 || Z2 !== b3) uk = null, Kk(a3, b3);
    do
      try {
        Tk();
        break;
      } catch (e2) {
        Mk(a3, e2);
      }
    while (1);
    $g();
    K2 = c2;
    mk.current = d2;
    if (null !== Y) throw Error(p3(261));
    Q2 = null;
    Z2 = 0;
    return T2;
  }
  function Tk() {
    for (; null !== Y; ) Uk(Y);
  }
  function Lk() {
    for (; null !== Y && !cc(); ) Uk(Y);
  }
  function Uk(a3) {
    var b3 = Vk(a3.alternate, a3, fj);
    a3.memoizedProps = a3.pendingProps;
    null === b3 ? Sk(a3) : Y = b3;
    nk.current = null;
  }
  function Sk(a3) {
    var b3 = a3;
    do {
      var c2 = b3.alternate;
      a3 = b3.return;
      if (0 === (b3.flags & 32768)) {
        if (c2 = Ej(c2, b3, fj), null !== c2) {
          Y = c2;
          return;
        }
      } else {
        c2 = Ij(c2, b3);
        if (null !== c2) {
          c2.flags &= 32767;
          Y = c2;
          return;
        }
        if (null !== a3) a3.flags |= 32768, a3.subtreeFlags = 0, a3.deletions = null;
        else {
          T2 = 6;
          Y = null;
          return;
        }
      }
      b3 = b3.sibling;
      if (null !== b3) {
        Y = b3;
        return;
      }
      Y = b3 = a3;
    } while (null !== b3);
    0 === T2 && (T2 = 5);
  }
  function Pk(a3, b3, c2) {
    var d2 = C2, e2 = ok.transition;
    try {
      ok.transition = null, C2 = 1, Wk(a3, b3, c2, d2);
    } finally {
      ok.transition = e2, C2 = d2;
    }
    return null;
  }
  function Wk(a3, b3, c2, d2) {
    do
      Hk();
    while (null !== wk);
    if (0 !== (K2 & 6)) throw Error(p3(327));
    c2 = a3.finishedWork;
    var e2 = a3.finishedLanes;
    if (null === c2) return null;
    a3.finishedWork = null;
    a3.finishedLanes = 0;
    if (c2 === a3.current) throw Error(p3(177));
    a3.callbackNode = null;
    a3.callbackPriority = 0;
    var f4 = c2.lanes | c2.childLanes;
    Bc(a3, f4);
    a3 === Q2 && (Y = Q2 = null, Z2 = 0);
    0 === (c2.subtreeFlags & 2064) && 0 === (c2.flags & 2064) || vk || (vk = true, Fk(hc, function() {
      Hk();
      return null;
    }));
    f4 = 0 !== (c2.flags & 15990);
    if (0 !== (c2.subtreeFlags & 15990) || f4) {
      f4 = ok.transition;
      ok.transition = null;
      var g2 = C2;
      C2 = 1;
      var h2 = K2;
      K2 |= 4;
      nk.current = null;
      Oj(a3, c2);
      dk(c2, a3);
      Oe(Df);
      dd = !!Cf;
      Df = Cf = null;
      a3.current = c2;
      hk(c2);
      dc();
      K2 = h2;
      C2 = g2;
      ok.transition = f4;
    } else a3.current = c2;
    vk && (vk = false, wk = a3, xk = e2);
    f4 = a3.pendingLanes;
    0 === f4 && (Ri = null);
    mc(c2.stateNode);
    Dk(a3, B2());
    if (null !== b3) for (d2 = a3.onRecoverableError, c2 = 0; c2 < b3.length; c2++) e2 = b3[c2], d2(e2.value, { componentStack: e2.stack, digest: e2.digest });
    if (Oi) throw Oi = false, a3 = Pi, Pi = null, a3;
    0 !== (xk & 1) && 0 !== a3.tag && Hk();
    f4 = a3.pendingLanes;
    0 !== (f4 & 1) ? a3 === zk ? yk++ : (yk = 0, zk = a3) : yk = 0;
    jg();
    return null;
  }
  function Hk() {
    if (null !== wk) {
      var a3 = Dc(xk), b3 = ok.transition, c2 = C2;
      try {
        ok.transition = null;
        C2 = 16 > a3 ? 16 : a3;
        if (null === wk) var d2 = false;
        else {
          a3 = wk;
          wk = null;
          xk = 0;
          if (0 !== (K2 & 6)) throw Error(p3(331));
          var e2 = K2;
          K2 |= 4;
          for (V2 = a3.current; null !== V2; ) {
            var f4 = V2, g2 = f4.child;
            if (0 !== (V2.flags & 16)) {
              var h2 = f4.deletions;
              if (null !== h2) {
                for (var k3 = 0; k3 < h2.length; k3++) {
                  var l3 = h2[k3];
                  for (V2 = l3; null !== V2; ) {
                    var m2 = V2;
                    switch (m2.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Pj(8, m2, f4);
                    }
                    var q2 = m2.child;
                    if (null !== q2) q2.return = m2, V2 = q2;
                    else for (; null !== V2; ) {
                      m2 = V2;
                      var r3 = m2.sibling, y2 = m2.return;
                      Sj(m2);
                      if (m2 === l3) {
                        V2 = null;
                        break;
                      }
                      if (null !== r3) {
                        r3.return = y2;
                        V2 = r3;
                        break;
                      }
                      V2 = y2;
                    }
                  }
                }
                var n2 = f4.alternate;
                if (null !== n2) {
                  var t3 = n2.child;
                  if (null !== t3) {
                    n2.child = null;
                    do {
                      var J2 = t3.sibling;
                      t3.sibling = null;
                      t3 = J2;
                    } while (null !== t3);
                  }
                }
                V2 = f4;
              }
            }
            if (0 !== (f4.subtreeFlags & 2064) && null !== g2) g2.return = f4, V2 = g2;
            else b: for (; null !== V2; ) {
              f4 = V2;
              if (0 !== (f4.flags & 2048)) switch (f4.tag) {
                case 0:
                case 11:
                case 15:
                  Pj(9, f4, f4.return);
              }
              var x2 = f4.sibling;
              if (null !== x2) {
                x2.return = f4.return;
                V2 = x2;
                break b;
              }
              V2 = f4.return;
            }
          }
          var w2 = a3.current;
          for (V2 = w2; null !== V2; ) {
            g2 = V2;
            var u3 = g2.child;
            if (0 !== (g2.subtreeFlags & 2064) && null !== u3) u3.return = g2, V2 = u3;
            else b: for (g2 = w2; null !== V2; ) {
              h2 = V2;
              if (0 !== (h2.flags & 2048)) try {
                switch (h2.tag) {
                  case 0:
                  case 11:
                  case 15:
                    Qj(9, h2);
                }
              } catch (na) {
                W(h2, h2.return, na);
              }
              if (h2 === g2) {
                V2 = null;
                break b;
              }
              var F2 = h2.sibling;
              if (null !== F2) {
                F2.return = h2.return;
                V2 = F2;
                break b;
              }
              V2 = h2.return;
            }
          }
          K2 = e2;
          jg();
          if (lc && "function" === typeof lc.onPostCommitFiberRoot) try {
            lc.onPostCommitFiberRoot(kc, a3);
          } catch (na) {
          }
          d2 = true;
        }
        return d2;
      } finally {
        C2 = c2, ok.transition = b3;
      }
    }
    return false;
  }
  function Xk(a3, b3, c2) {
    b3 = Ji(c2, b3);
    b3 = Ni(a3, b3, 1);
    a3 = nh(a3, b3, 1);
    b3 = R3();
    null !== a3 && (Ac(a3, 1, b3), Dk(a3, b3));
  }
  function W(a3, b3, c2) {
    if (3 === a3.tag) Xk(a3, a3, c2);
    else for (; null !== b3; ) {
      if (3 === b3.tag) {
        Xk(b3, a3, c2);
        break;
      } else if (1 === b3.tag) {
        var d2 = b3.stateNode;
        if ("function" === typeof b3.type.getDerivedStateFromError || "function" === typeof d2.componentDidCatch && (null === Ri || !Ri.has(d2))) {
          a3 = Ji(c2, a3);
          a3 = Qi(b3, a3, 1);
          b3 = nh(b3, a3, 1);
          a3 = R3();
          null !== b3 && (Ac(b3, 1, a3), Dk(b3, a3));
          break;
        }
      }
      b3 = b3.return;
    }
  }
  function Ti(a3, b3, c2) {
    var d2 = a3.pingCache;
    null !== d2 && d2.delete(b3);
    b3 = R3();
    a3.pingedLanes |= a3.suspendedLanes & c2;
    Q2 === a3 && (Z2 & c2) === c2 && (4 === T2 || 3 === T2 && (Z2 & 130023424) === Z2 && 500 > B2() - fk ? Kk(a3, 0) : rk |= c2);
    Dk(a3, b3);
  }
  function Yk(a3, b3) {
    0 === b3 && (0 === (a3.mode & 1) ? b3 = 1 : (b3 = sc, sc <<= 1, 0 === (sc & 130023424) && (sc = 4194304)));
    var c2 = R3();
    a3 = ih(a3, b3);
    null !== a3 && (Ac(a3, b3, c2), Dk(a3, c2));
  }
  function uj(a3) {
    var b3 = a3.memoizedState, c2 = 0;
    null !== b3 && (c2 = b3.retryLane);
    Yk(a3, c2);
  }
  function bk(a3, b3) {
    var c2 = 0;
    switch (a3.tag) {
      case 13:
        var d2 = a3.stateNode;
        var e2 = a3.memoizedState;
        null !== e2 && (c2 = e2.retryLane);
        break;
      case 19:
        d2 = a3.stateNode;
        break;
      default:
        throw Error(p3(314));
    }
    null !== d2 && d2.delete(b3);
    Yk(a3, c2);
  }
  var Vk;
  Vk = function(a3, b3, c2) {
    if (null !== a3) if (a3.memoizedProps !== b3.pendingProps || Wf.current) dh = true;
    else {
      if (0 === (a3.lanes & c2) && 0 === (b3.flags & 128)) return dh = false, yj(a3, b3, c2);
      dh = 0 !== (a3.flags & 131072) ? true : false;
    }
    else dh = false, I2 && 0 !== (b3.flags & 1048576) && ug(b3, ng, b3.index);
    b3.lanes = 0;
    switch (b3.tag) {
      case 2:
        var d2 = b3.type;
        ij(a3, b3);
        a3 = b3.pendingProps;
        var e2 = Yf(b3, H3.current);
        ch(b3, c2);
        e2 = Nh(null, b3, d2, a3, e2, c2);
        var f4 = Sh();
        b3.flags |= 1;
        "object" === typeof e2 && null !== e2 && "function" === typeof e2.render && void 0 === e2.$$typeof ? (b3.tag = 1, b3.memoizedState = null, b3.updateQueue = null, Zf(d2) ? (f4 = true, cg(b3)) : f4 = false, b3.memoizedState = null !== e2.state && void 0 !== e2.state ? e2.state : null, kh(b3), e2.updater = Ei, b3.stateNode = e2, e2._reactInternals = b3, Ii(b3, d2, a3, c2), b3 = jj(null, b3, d2, true, f4, c2)) : (b3.tag = 0, I2 && f4 && vg(b3), Xi(null, b3, e2, c2), b3 = b3.child);
        return b3;
      case 16:
        d2 = b3.elementType;
        a: {
          ij(a3, b3);
          a3 = b3.pendingProps;
          e2 = d2._init;
          d2 = e2(d2._payload);
          b3.type = d2;
          e2 = b3.tag = Zk(d2);
          a3 = Ci(d2, a3);
          switch (e2) {
            case 0:
              b3 = cj(null, b3, d2, a3, c2);
              break a;
            case 1:
              b3 = hj(null, b3, d2, a3, c2);
              break a;
            case 11:
              b3 = Yi(null, b3, d2, a3, c2);
              break a;
            case 14:
              b3 = $i(null, b3, d2, Ci(d2.type, a3), c2);
              break a;
          }
          throw Error(p3(
            306,
            d2,
            ""
          ));
        }
        return b3;
      case 0:
        return d2 = b3.type, e2 = b3.pendingProps, e2 = b3.elementType === d2 ? e2 : Ci(d2, e2), cj(a3, b3, d2, e2, c2);
      case 1:
        return d2 = b3.type, e2 = b3.pendingProps, e2 = b3.elementType === d2 ? e2 : Ci(d2, e2), hj(a3, b3, d2, e2, c2);
      case 3:
        a: {
          kj(b3);
          if (null === a3) throw Error(p3(387));
          d2 = b3.pendingProps;
          f4 = b3.memoizedState;
          e2 = f4.element;
          lh(a3, b3);
          qh(b3, d2, null, c2);
          var g2 = b3.memoizedState;
          d2 = g2.element;
          if (f4.isDehydrated) if (f4 = { element: d2, isDehydrated: false, cache: g2.cache, pendingSuspenseBoundaries: g2.pendingSuspenseBoundaries, transitions: g2.transitions }, b3.updateQueue.baseState = f4, b3.memoizedState = f4, b3.flags & 256) {
            e2 = Ji(Error(p3(423)), b3);
            b3 = lj(a3, b3, d2, c2, e2);
            break a;
          } else if (d2 !== e2) {
            e2 = Ji(Error(p3(424)), b3);
            b3 = lj(a3, b3, d2, c2, e2);
            break a;
          } else for (yg = Lf(b3.stateNode.containerInfo.firstChild), xg = b3, I2 = true, zg = null, c2 = Vg(b3, null, d2, c2), b3.child = c2; c2; ) c2.flags = c2.flags & -3 | 4096, c2 = c2.sibling;
          else {
            Ig();
            if (d2 === e2) {
              b3 = Zi(a3, b3, c2);
              break a;
            }
            Xi(a3, b3, d2, c2);
          }
          b3 = b3.child;
        }
        return b3;
      case 5:
        return Ah(b3), null === a3 && Eg(b3), d2 = b3.type, e2 = b3.pendingProps, f4 = null !== a3 ? a3.memoizedProps : null, g2 = e2.children, Ef(d2, e2) ? g2 = null : null !== f4 && Ef(d2, f4) && (b3.flags |= 32), gj(a3, b3), Xi(a3, b3, g2, c2), b3.child;
      case 6:
        return null === a3 && Eg(b3), null;
      case 13:
        return oj(a3, b3, c2);
      case 4:
        return yh(b3, b3.stateNode.containerInfo), d2 = b3.pendingProps, null === a3 ? b3.child = Ug(b3, null, d2, c2) : Xi(a3, b3, d2, c2), b3.child;
      case 11:
        return d2 = b3.type, e2 = b3.pendingProps, e2 = b3.elementType === d2 ? e2 : Ci(d2, e2), Yi(a3, b3, d2, e2, c2);
      case 7:
        return Xi(a3, b3, b3.pendingProps, c2), b3.child;
      case 8:
        return Xi(a3, b3, b3.pendingProps.children, c2), b3.child;
      case 12:
        return Xi(a3, b3, b3.pendingProps.children, c2), b3.child;
      case 10:
        a: {
          d2 = b3.type._context;
          e2 = b3.pendingProps;
          f4 = b3.memoizedProps;
          g2 = e2.value;
          G2(Wg, d2._currentValue);
          d2._currentValue = g2;
          if (null !== f4) if (He(f4.value, g2)) {
            if (f4.children === e2.children && !Wf.current) {
              b3 = Zi(a3, b3, c2);
              break a;
            }
          } else for (f4 = b3.child, null !== f4 && (f4.return = b3); null !== f4; ) {
            var h2 = f4.dependencies;
            if (null !== h2) {
              g2 = f4.child;
              for (var k3 = h2.firstContext; null !== k3; ) {
                if (k3.context === d2) {
                  if (1 === f4.tag) {
                    k3 = mh(-1, c2 & -c2);
                    k3.tag = 2;
                    var l3 = f4.updateQueue;
                    if (null !== l3) {
                      l3 = l3.shared;
                      var m2 = l3.pending;
                      null === m2 ? k3.next = k3 : (k3.next = m2.next, m2.next = k3);
                      l3.pending = k3;
                    }
                  }
                  f4.lanes |= c2;
                  k3 = f4.alternate;
                  null !== k3 && (k3.lanes |= c2);
                  bh(
                    f4.return,
                    c2,
                    b3
                  );
                  h2.lanes |= c2;
                  break;
                }
                k3 = k3.next;
              }
            } else if (10 === f4.tag) g2 = f4.type === b3.type ? null : f4.child;
            else if (18 === f4.tag) {
              g2 = f4.return;
              if (null === g2) throw Error(p3(341));
              g2.lanes |= c2;
              h2 = g2.alternate;
              null !== h2 && (h2.lanes |= c2);
              bh(g2, c2, b3);
              g2 = f4.sibling;
            } else g2 = f4.child;
            if (null !== g2) g2.return = f4;
            else for (g2 = f4; null !== g2; ) {
              if (g2 === b3) {
                g2 = null;
                break;
              }
              f4 = g2.sibling;
              if (null !== f4) {
                f4.return = g2.return;
                g2 = f4;
                break;
              }
              g2 = g2.return;
            }
            f4 = g2;
          }
          Xi(a3, b3, e2.children, c2);
          b3 = b3.child;
        }
        return b3;
      case 9:
        return e2 = b3.type, d2 = b3.pendingProps.children, ch(b3, c2), e2 = eh(e2), d2 = d2(e2), b3.flags |= 1, Xi(a3, b3, d2, c2), b3.child;
      case 14:
        return d2 = b3.type, e2 = Ci(d2, b3.pendingProps), e2 = Ci(d2.type, e2), $i(a3, b3, d2, e2, c2);
      case 15:
        return bj(a3, b3, b3.type, b3.pendingProps, c2);
      case 17:
        return d2 = b3.type, e2 = b3.pendingProps, e2 = b3.elementType === d2 ? e2 : Ci(d2, e2), ij(a3, b3), b3.tag = 1, Zf(d2) ? (a3 = true, cg(b3)) : a3 = false, ch(b3, c2), Gi(b3, d2, e2), Ii(b3, d2, e2, c2), jj(null, b3, d2, true, a3, c2);
      case 19:
        return xj(a3, b3, c2);
      case 22:
        return dj(a3, b3, c2);
    }
    throw Error(p3(156, b3.tag));
  };
  function Fk(a3, b3) {
    return ac(a3, b3);
  }
  function $k(a3, b3, c2, d2) {
    this.tag = a3;
    this.key = c2;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = b3;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = d2;
    this.subtreeFlags = this.flags = 0;
    this.deletions = null;
    this.childLanes = this.lanes = 0;
    this.alternate = null;
  }
  function Bg(a3, b3, c2, d2) {
    return new $k(a3, b3, c2, d2);
  }
  function aj(a3) {
    a3 = a3.prototype;
    return !(!a3 || !a3.isReactComponent);
  }
  function Zk(a3) {
    if ("function" === typeof a3) return aj(a3) ? 1 : 0;
    if (void 0 !== a3 && null !== a3) {
      a3 = a3.$$typeof;
      if (a3 === Da) return 11;
      if (a3 === Ga) return 14;
    }
    return 2;
  }
  function Pg(a3, b3) {
    var c2 = a3.alternate;
    null === c2 ? (c2 = Bg(a3.tag, b3, a3.key, a3.mode), c2.elementType = a3.elementType, c2.type = a3.type, c2.stateNode = a3.stateNode, c2.alternate = a3, a3.alternate = c2) : (c2.pendingProps = b3, c2.type = a3.type, c2.flags = 0, c2.subtreeFlags = 0, c2.deletions = null);
    c2.flags = a3.flags & 14680064;
    c2.childLanes = a3.childLanes;
    c2.lanes = a3.lanes;
    c2.child = a3.child;
    c2.memoizedProps = a3.memoizedProps;
    c2.memoizedState = a3.memoizedState;
    c2.updateQueue = a3.updateQueue;
    b3 = a3.dependencies;
    c2.dependencies = null === b3 ? null : { lanes: b3.lanes, firstContext: b3.firstContext };
    c2.sibling = a3.sibling;
    c2.index = a3.index;
    c2.ref = a3.ref;
    return c2;
  }
  function Rg(a3, b3, c2, d2, e2, f4) {
    var g2 = 2;
    d2 = a3;
    if ("function" === typeof a3) aj(a3) && (g2 = 1);
    else if ("string" === typeof a3) g2 = 5;
    else a: switch (a3) {
      case ya:
        return Tg(c2.children, e2, f4, b3);
      case za:
        g2 = 8;
        e2 |= 8;
        break;
      case Aa:
        return a3 = Bg(12, c2, b3, e2 | 2), a3.elementType = Aa, a3.lanes = f4, a3;
      case Ea:
        return a3 = Bg(13, c2, b3, e2), a3.elementType = Ea, a3.lanes = f4, a3;
      case Fa:
        return a3 = Bg(19, c2, b3, e2), a3.elementType = Fa, a3.lanes = f4, a3;
      case Ia:
        return pj(c2, e2, f4, b3);
      default:
        if ("object" === typeof a3 && null !== a3) switch (a3.$$typeof) {
          case Ba:
            g2 = 10;
            break a;
          case Ca:
            g2 = 9;
            break a;
          case Da:
            g2 = 11;
            break a;
          case Ga:
            g2 = 14;
            break a;
          case Ha:
            g2 = 16;
            d2 = null;
            break a;
        }
        throw Error(p3(130, null == a3 ? a3 : typeof a3, ""));
    }
    b3 = Bg(g2, c2, b3, e2);
    b3.elementType = a3;
    b3.type = d2;
    b3.lanes = f4;
    return b3;
  }
  function Tg(a3, b3, c2, d2) {
    a3 = Bg(7, a3, d2, b3);
    a3.lanes = c2;
    return a3;
  }
  function pj(a3, b3, c2, d2) {
    a3 = Bg(22, a3, d2, b3);
    a3.elementType = Ia;
    a3.lanes = c2;
    a3.stateNode = { isHidden: false };
    return a3;
  }
  function Qg(a3, b3, c2) {
    a3 = Bg(6, a3, null, b3);
    a3.lanes = c2;
    return a3;
  }
  function Sg(a3, b3, c2) {
    b3 = Bg(4, null !== a3.children ? a3.children : [], a3.key, b3);
    b3.lanes = c2;
    b3.stateNode = { containerInfo: a3.containerInfo, pendingChildren: null, implementation: a3.implementation };
    return b3;
  }
  function al(a3, b3, c2, d2, e2) {
    this.tag = b3;
    this.containerInfo = a3;
    this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
    this.timeoutHandle = -1;
    this.callbackNode = this.pendingContext = this.context = null;
    this.callbackPriority = 0;
    this.eventTimes = zc(0);
    this.expirationTimes = zc(-1);
    this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
    this.entanglements = zc(0);
    this.identifierPrefix = d2;
    this.onRecoverableError = e2;
    this.mutableSourceEagerHydrationData = null;
  }
  function bl(a3, b3, c2, d2, e2, f4, g2, h2, k3) {
    a3 = new al(a3, b3, c2, h2, k3);
    1 === b3 ? (b3 = 1, true === f4 && (b3 |= 8)) : b3 = 0;
    f4 = Bg(3, null, null, b3);
    a3.current = f4;
    f4.stateNode = a3;
    f4.memoizedState = { element: d2, isDehydrated: c2, cache: null, transitions: null, pendingSuspenseBoundaries: null };
    kh(f4);
    return a3;
  }
  function cl(a3, b3, c2) {
    var d2 = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
    return { $$typeof: wa, key: null == d2 ? null : "" + d2, children: a3, containerInfo: b3, implementation: c2 };
  }
  function dl(a3) {
    if (!a3) return Vf;
    a3 = a3._reactInternals;
    a: {
      if (Vb(a3) !== a3 || 1 !== a3.tag) throw Error(p3(170));
      var b3 = a3;
      do {
        switch (b3.tag) {
          case 3:
            b3 = b3.stateNode.context;
            break a;
          case 1:
            if (Zf(b3.type)) {
              b3 = b3.stateNode.__reactInternalMemoizedMergedChildContext;
              break a;
            }
        }
        b3 = b3.return;
      } while (null !== b3);
      throw Error(p3(171));
    }
    if (1 === a3.tag) {
      var c2 = a3.type;
      if (Zf(c2)) return bg(a3, c2, b3);
    }
    return b3;
  }
  function el(a3, b3, c2, d2, e2, f4, g2, h2, k3) {
    a3 = bl(c2, d2, true, a3, e2, f4, g2, h2, k3);
    a3.context = dl(null);
    c2 = a3.current;
    d2 = R3();
    e2 = yi(c2);
    f4 = mh(d2, e2);
    f4.callback = void 0 !== b3 && null !== b3 ? b3 : null;
    nh(c2, f4, e2);
    a3.current.lanes = e2;
    Ac(a3, e2, d2);
    Dk(a3, d2);
    return a3;
  }
  function fl(a3, b3, c2, d2) {
    var e2 = b3.current, f4 = R3(), g2 = yi(e2);
    c2 = dl(c2);
    null === b3.context ? b3.context = c2 : b3.pendingContext = c2;
    b3 = mh(f4, g2);
    b3.payload = { element: a3 };
    d2 = void 0 === d2 ? null : d2;
    null !== d2 && (b3.callback = d2);
    a3 = nh(e2, b3, g2);
    null !== a3 && (gi(a3, e2, g2, f4), oh(a3, e2, g2));
    return g2;
  }
  function gl(a3) {
    a3 = a3.current;
    if (!a3.child) return null;
    switch (a3.child.tag) {
      case 5:
        return a3.child.stateNode;
      default:
        return a3.child.stateNode;
    }
  }
  function hl(a3, b3) {
    a3 = a3.memoizedState;
    if (null !== a3 && null !== a3.dehydrated) {
      var c2 = a3.retryLane;
      a3.retryLane = 0 !== c2 && c2 < b3 ? c2 : b3;
    }
  }
  function il(a3, b3) {
    hl(a3, b3);
    (a3 = a3.alternate) && hl(a3, b3);
  }
  function jl() {
    return null;
  }
  var kl = "function" === typeof reportError ? reportError : function(a3) {
    console.error(a3);
  };
  function ll(a3) {
    this._internalRoot = a3;
  }
  ml.prototype.render = ll.prototype.render = function(a3) {
    var b3 = this._internalRoot;
    if (null === b3) throw Error(p3(409));
    fl(a3, b3, null, null);
  };
  ml.prototype.unmount = ll.prototype.unmount = function() {
    var a3 = this._internalRoot;
    if (null !== a3) {
      this._internalRoot = null;
      var b3 = a3.containerInfo;
      Rk(function() {
        fl(null, a3, null, null);
      });
      b3[uf] = null;
    }
  };
  function ml(a3) {
    this._internalRoot = a3;
  }
  ml.prototype.unstable_scheduleHydration = function(a3) {
    if (a3) {
      var b3 = Hc();
      a3 = { blockedOn: null, target: a3, priority: b3 };
      for (var c2 = 0; c2 < Qc.length && 0 !== b3 && b3 < Qc[c2].priority; c2++) ;
      Qc.splice(c2, 0, a3);
      0 === c2 && Vc(a3);
    }
  };
  function nl(a3) {
    return !(!a3 || 1 !== a3.nodeType && 9 !== a3.nodeType && 11 !== a3.nodeType);
  }
  function ol(a3) {
    return !(!a3 || 1 !== a3.nodeType && 9 !== a3.nodeType && 11 !== a3.nodeType && (8 !== a3.nodeType || " react-mount-point-unstable " !== a3.nodeValue));
  }
  function pl() {
  }
  function ql(a3, b3, c2, d2, e2) {
    if (e2) {
      if ("function" === typeof d2) {
        var f4 = d2;
        d2 = function() {
          var a4 = gl(g2);
          f4.call(a4);
        };
      }
      var g2 = el(b3, d2, a3, 0, null, false, false, "", pl);
      a3._reactRootContainer = g2;
      a3[uf] = g2.current;
      sf(8 === a3.nodeType ? a3.parentNode : a3);
      Rk();
      return g2;
    }
    for (; e2 = a3.lastChild; ) a3.removeChild(e2);
    if ("function" === typeof d2) {
      var h2 = d2;
      d2 = function() {
        var a4 = gl(k3);
        h2.call(a4);
      };
    }
    var k3 = bl(a3, 0, false, null, null, false, false, "", pl);
    a3._reactRootContainer = k3;
    a3[uf] = k3.current;
    sf(8 === a3.nodeType ? a3.parentNode : a3);
    Rk(function() {
      fl(b3, k3, c2, d2);
    });
    return k3;
  }
  function rl(a3, b3, c2, d2, e2) {
    var f4 = c2._reactRootContainer;
    if (f4) {
      var g2 = f4;
      if ("function" === typeof e2) {
        var h2 = e2;
        e2 = function() {
          var a4 = gl(g2);
          h2.call(a4);
        };
      }
      fl(b3, g2, a3, e2);
    } else g2 = ql(c2, b3, a3, e2, d2);
    return gl(g2);
  }
  Ec = function(a3) {
    switch (a3.tag) {
      case 3:
        var b3 = a3.stateNode;
        if (b3.current.memoizedState.isDehydrated) {
          var c2 = tc(b3.pendingLanes);
          0 !== c2 && (Cc(b3, c2 | 1), Dk(b3, B2()), 0 === (K2 & 6) && (Gj = B2() + 500, jg()));
        }
        break;
      case 13:
        Rk(function() {
          var b4 = ih(a3, 1);
          if (null !== b4) {
            var c3 = R3();
            gi(b4, a3, 1, c3);
          }
        }), il(a3, 1);
    }
  };
  Fc = function(a3) {
    if (13 === a3.tag) {
      var b3 = ih(a3, 134217728);
      if (null !== b3) {
        var c2 = R3();
        gi(b3, a3, 134217728, c2);
      }
      il(a3, 134217728);
    }
  };
  Gc = function(a3) {
    if (13 === a3.tag) {
      var b3 = yi(a3), c2 = ih(a3, b3);
      if (null !== c2) {
        var d2 = R3();
        gi(c2, a3, b3, d2);
      }
      il(a3, b3);
    }
  };
  Hc = function() {
    return C2;
  };
  Ic = function(a3, b3) {
    var c2 = C2;
    try {
      return C2 = a3, b3();
    } finally {
      C2 = c2;
    }
  };
  yb = function(a3, b3, c2) {
    switch (b3) {
      case "input":
        bb(a3, c2);
        b3 = c2.name;
        if ("radio" === c2.type && null != b3) {
          for (c2 = a3; c2.parentNode; ) c2 = c2.parentNode;
          c2 = c2.querySelectorAll("input[name=" + JSON.stringify("" + b3) + '][type="radio"]');
          for (b3 = 0; b3 < c2.length; b3++) {
            var d2 = c2[b3];
            if (d2 !== a3 && d2.form === a3.form) {
              var e2 = Db(d2);
              if (!e2) throw Error(p3(90));
              Wa(d2);
              bb(d2, e2);
            }
          }
        }
        break;
      case "textarea":
        ib(a3, c2);
        break;
      case "select":
        b3 = c2.value, null != b3 && fb(a3, !!c2.multiple, b3, false);
    }
  };
  Gb = Qk;
  Hb = Rk;
  var sl = { usingClientEntryPoint: false, Events: [Cb, ue, Db, Eb, Fb, Qk] }, tl = { findFiberByHostInstance: Wc, bundleType: 0, version: "18.3.1", rendererPackageName: "react-dom" };
  var ul = { bundleType: tl.bundleType, version: tl.version, rendererPackageName: tl.rendererPackageName, rendererConfig: tl.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ua.ReactCurrentDispatcher, findHostInstanceByFiber: function(a3) {
    a3 = Zb(a3);
    return null === a3 ? null : a3.stateNode;
  }, findFiberByHostInstance: tl.findFiberByHostInstance || jl, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.3.1-next-f1338f8080-20240426" };
  if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
    var vl = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!vl.isDisabled && vl.supportsFiber) try {
      kc = vl.inject(ul), lc = vl;
    } catch (a3) {
    }
  }
  reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = sl;
  reactDom_production_min.createPortal = function(a3, b3) {
    var c2 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
    if (!nl(b3)) throw Error(p3(200));
    return cl(a3, b3, null, c2);
  };
  reactDom_production_min.createRoot = function(a3, b3) {
    if (!nl(a3)) throw Error(p3(299));
    var c2 = false, d2 = "", e2 = kl;
    null !== b3 && void 0 !== b3 && (true === b3.unstable_strictMode && (c2 = true), void 0 !== b3.identifierPrefix && (d2 = b3.identifierPrefix), void 0 !== b3.onRecoverableError && (e2 = b3.onRecoverableError));
    b3 = bl(a3, 1, false, null, null, c2, false, d2, e2);
    a3[uf] = b3.current;
    sf(8 === a3.nodeType ? a3.parentNode : a3);
    return new ll(b3);
  };
  reactDom_production_min.findDOMNode = function(a3) {
    if (null == a3) return null;
    if (1 === a3.nodeType) return a3;
    var b3 = a3._reactInternals;
    if (void 0 === b3) {
      if ("function" === typeof a3.render) throw Error(p3(188));
      a3 = Object.keys(a3).join(",");
      throw Error(p3(268, a3));
    }
    a3 = Zb(b3);
    a3 = null === a3 ? null : a3.stateNode;
    return a3;
  };
  reactDom_production_min.flushSync = function(a3) {
    return Rk(a3);
  };
  reactDom_production_min.hydrate = function(a3, b3, c2) {
    if (!ol(b3)) throw Error(p3(200));
    return rl(null, a3, b3, true, c2);
  };
  reactDom_production_min.hydrateRoot = function(a3, b3, c2) {
    if (!nl(a3)) throw Error(p3(405));
    var d2 = null != c2 && c2.hydratedSources || null, e2 = false, f4 = "", g2 = kl;
    null !== c2 && void 0 !== c2 && (true === c2.unstable_strictMode && (e2 = true), void 0 !== c2.identifierPrefix && (f4 = c2.identifierPrefix), void 0 !== c2.onRecoverableError && (g2 = c2.onRecoverableError));
    b3 = el(b3, null, a3, 1, null != c2 ? c2 : null, e2, false, f4, g2);
    a3[uf] = b3.current;
    sf(a3);
    if (d2) for (a3 = 0; a3 < d2.length; a3++) c2 = d2[a3], e2 = c2._getVersion, e2 = e2(c2._source), null == b3.mutableSourceEagerHydrationData ? b3.mutableSourceEagerHydrationData = [c2, e2] : b3.mutableSourceEagerHydrationData.push(
      c2,
      e2
    );
    return new ml(b3);
  };
  reactDom_production_min.render = function(a3, b3, c2) {
    if (!ol(b3)) throw Error(p3(200));
    return rl(null, a3, b3, false, c2);
  };
  reactDom_production_min.unmountComponentAtNode = function(a3) {
    if (!ol(a3)) throw Error(p3(40));
    return a3._reactRootContainer ? (Rk(function() {
      rl(null, null, a3, false, function() {
        a3._reactRootContainer = null;
        a3[uf] = null;
      });
    }), true) : false;
  };
  reactDom_production_min.unstable_batchedUpdates = Qk;
  reactDom_production_min.unstable_renderSubtreeIntoContainer = function(a3, b3, c2, d2) {
    if (!ol(c2)) throw Error(p3(200));
    if (null == a3 || void 0 === a3._reactInternals) throw Error(p3(38));
    return rl(a3, b3, c2, false, d2);
  };
  reactDom_production_min.version = "18.3.1-next-f1338f8080-20240426";
  return reactDom_production_min;
}
var hasRequiredReactDom;
function requireReactDom() {
  if (hasRequiredReactDom) return reactDom.exports;
  hasRequiredReactDom = 1;
  function checkDCE() {
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== "function") {
      return;
    }
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
    } catch (err) {
      console.error(err);
    }
  }
  {
    checkDCE();
    reactDom.exports = requireReactDom_production_min();
  }
  return reactDom.exports;
}
var hasRequiredClient;
function requireClient() {
  if (hasRequiredClient) return client;
  hasRequiredClient = 1;
  var m2 = requireReactDom();
  {
    client.createRoot = m2.createRoot;
    client.hydrateRoot = m2.hydrateRoot;
  }
  return client;
}
var clientExports = requireClient();
var reactExports = requireReact();
const React = /* @__PURE__ */ getDefaultExportFromCjs(reactExports);
/**
 * react-router v7.9.2
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */
var PopStateEventType = "popstate";
function createHashHistory(options = {}) {
  function createHashLocation(window2, globalHistory) {
    let {
      pathname = "/",
      search = "",
      hash = ""
    } = parsePath(window2.location.hash.substring(1));
    if (!pathname.startsWith("/") && !pathname.startsWith(".")) {
      pathname = "/" + pathname;
    }
    return createLocation(
      "",
      { pathname, search, hash },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createHashHref(window2, to) {
    let base = window2.document.querySelector("base");
    let href = "";
    if (base && base.getAttribute("href")) {
      let url = window2.location.href;
      let hashIndex = url.indexOf("#");
      href = hashIndex === -1 ? url : url.slice(0, hashIndex);
    }
    return href + "#" + (typeof to === "string" ? to : createPath(to));
  }
  function validateHashLocation(location, to) {
    warning(
      location.pathname.charAt(0) === "/",
      `relative pathnames are not supported in hash history.push(${JSON.stringify(
        to
      )})`
    );
  }
  return getUrlBasedHistory(
    createHashLocation,
    createHashHref,
    validateHashLocation,
    options
  );
}
function invariant(value, message) {
  if (value === false || value === null || typeof value === "undefined") {
    throw new Error(message);
  }
}
function warning(cond, message) {
  if (!cond) {
    if (typeof console !== "undefined") console.warn(message);
    try {
      throw new Error(message);
    } catch (e2) {
    }
  }
}
function createKey() {
  return Math.random().toString(36).substring(2, 10);
}
function getHistoryState(location, index) {
  return {
    usr: location.state,
    key: location.key,
    idx: index
  };
}
function createLocation(current, to, state = null, key) {
  let location = {
    pathname: typeof current === "string" ? current : current.pathname,
    search: "",
    hash: "",
    ...typeof to === "string" ? parsePath(to) : to,
    state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to && to.key || key || createKey()
  };
  return location;
}
function createPath({
  pathname = "/",
  search = "",
  hash = ""
}) {
  if (search && search !== "?")
    pathname += search.charAt(0) === "?" ? search : "?" + search;
  if (hash && hash !== "#")
    pathname += hash.charAt(0) === "#" ? hash : "#" + hash;
  return pathname;
}
function parsePath(path) {
  let parsedPath = {};
  if (path) {
    let hashIndex = path.indexOf("#");
    if (hashIndex >= 0) {
      parsedPath.hash = path.substring(hashIndex);
      path = path.substring(0, hashIndex);
    }
    let searchIndex = path.indexOf("?");
    if (searchIndex >= 0) {
      parsedPath.search = path.substring(searchIndex);
      path = path.substring(0, searchIndex);
    }
    if (path) {
      parsedPath.pathname = path;
    }
  }
  return parsedPath;
}
function getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {
  let { window: window2 = document.defaultView, v5Compat = false } = options;
  let globalHistory = window2.history;
  let action = "POP";
  let listener = null;
  let index = getIndex();
  if (index == null) {
    index = 0;
    globalHistory.replaceState({ ...globalHistory.state, idx: index }, "");
  }
  function getIndex() {
    let state = globalHistory.state || { idx: null };
    return state.idx;
  }
  function handlePop() {
    action = "POP";
    let nextIndex = getIndex();
    let delta = nextIndex == null ? null : nextIndex - index;
    index = nextIndex;
    if (listener) {
      listener({ action, location: history.location, delta });
    }
  }
  function push(to, state) {
    action = "PUSH";
    let location = createLocation(history.location, to, state);
    if (validateLocation) validateLocation(location, to);
    index = getIndex() + 1;
    let historyState = getHistoryState(location, index);
    let url = history.createHref(location);
    try {
      globalHistory.pushState(historyState, "", url);
    } catch (error) {
      if (error instanceof DOMException && error.name === "DataCloneError") {
        throw error;
      }
      window2.location.assign(url);
    }
    if (v5Compat && listener) {
      listener({ action, location: history.location, delta: 1 });
    }
  }
  function replace2(to, state) {
    action = "REPLACE";
    let location = createLocation(history.location, to, state);
    if (validateLocation) validateLocation(location, to);
    index = getIndex();
    let historyState = getHistoryState(location, index);
    let url = history.createHref(location);
    globalHistory.replaceState(historyState, "", url);
    if (v5Compat && listener) {
      listener({ action, location: history.location, delta: 0 });
    }
  }
  function createURL(to) {
    return createBrowserURLImpl(to);
  }
  let history = {
    get action() {
      return action;
    },
    get location() {
      return getLocation(window2, globalHistory);
    },
    listen(fn) {
      if (listener) {
        throw new Error("A history only accepts one active listener");
      }
      window2.addEventListener(PopStateEventType, handlePop);
      listener = fn;
      return () => {
        window2.removeEventListener(PopStateEventType, handlePop);
        listener = null;
      };
    },
    createHref(to) {
      return createHref2(window2, to);
    },
    createURL,
    encodeLocation(to) {
      let url = createURL(to);
      return {
        pathname: url.pathname,
        search: url.search,
        hash: url.hash
      };
    },
    push,
    replace: replace2,
    go(n2) {
      return globalHistory.go(n2);
    }
  };
  return history;
}
function createBrowserURLImpl(to, isAbsolute = false) {
  let base = "http://localhost";
  if (typeof window !== "undefined") {
    base = window.location.origin !== "null" ? window.location.origin : window.location.href;
  }
  invariant(base, "No window.location.(origin|href) available to create URL");
  let href = typeof to === "string" ? to : createPath(to);
  href = href.replace(/ $/, "%20");
  if (!isAbsolute && href.startsWith("//")) {
    href = base + href;
  }
  return new URL(href, base);
}
function matchRoutes(routes, locationArg, basename = "/") {
  return matchRoutesImpl(routes, locationArg, basename, false);
}
function matchRoutesImpl(routes, locationArg, basename, allowPartial) {
  let location = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
  let pathname = stripBasename(location.pathname || "/", basename);
  if (pathname == null) {
    return null;
  }
  let branches = flattenRoutes(routes);
  rankRouteBranches(branches);
  let matches = null;
  for (let i3 = 0; matches == null && i3 < branches.length; ++i3) {
    let decoded = decodePath(pathname);
    matches = matchRouteBranch(
      branches[i3],
      decoded,
      allowPartial
    );
  }
  return matches;
}
function flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = "", _hasParentOptionalSegments = false) {
  let flattenRoute = (route, index, hasParentOptionalSegments = _hasParentOptionalSegments, relativePath) => {
    let meta = {
      relativePath: relativePath === void 0 ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === true,
      childrenIndex: index,
      route
    };
    if (meta.relativePath.startsWith("/")) {
      if (!meta.relativePath.startsWith(parentPath) && hasParentOptionalSegments) {
        return;
      }
      invariant(
        meta.relativePath.startsWith(parentPath),
        `Absolute route path "${meta.relativePath}" nested under path "${parentPath}" is not valid. An absolute child route path must start with the combined path of all its parent routes.`
      );
      meta.relativePath = meta.relativePath.slice(parentPath.length);
    }
    let path = joinPaths([parentPath, meta.relativePath]);
    let routesMeta = parentsMeta.concat(meta);
    if (route.children && route.children.length > 0) {
      invariant(
        // Our types know better, but runtime JS may not!
        // @ts-expect-error
        route.index !== true,
        `Index routes must not have child routes. Please remove all child routes from route path "${path}".`
      );
      flattenRoutes(
        route.children,
        branches,
        routesMeta,
        path,
        hasParentOptionalSegments
      );
    }
    if (route.path == null && !route.index) {
      return;
    }
    branches.push({
      path,
      score: computeScore(path, route.index),
      routesMeta
    });
  };
  routes.forEach((route, index) => {
    if (route.path === "" || !route.path?.includes("?")) {
      flattenRoute(route, index);
    } else {
      for (let exploded of explodeOptionalSegments(route.path)) {
        flattenRoute(route, index, true, exploded);
      }
    }
  });
  return branches;
}
function explodeOptionalSegments(path) {
  let segments = path.split("/");
  if (segments.length === 0) return [];
  let [first, ...rest] = segments;
  let isOptional = first.endsWith("?");
  let required = first.replace(/\?$/, "");
  if (rest.length === 0) {
    return isOptional ? [required, ""] : [required];
  }
  let restExploded = explodeOptionalSegments(rest.join("/"));
  let result = [];
  result.push(
    ...restExploded.map(
      (subpath) => subpath === "" ? required : [required, subpath].join("/")
    )
  );
  if (isOptional) {
    result.push(...restExploded);
  }
  return result.map(
    (exploded) => path.startsWith("/") && exploded === "" ? "/" : exploded
  );
}
function rankRouteBranches(branches) {
  branches.sort(
    (a3, b3) => a3.score !== b3.score ? b3.score - a3.score : compareIndexes(
      a3.routesMeta.map((meta) => meta.childrenIndex),
      b3.routesMeta.map((meta) => meta.childrenIndex)
    )
  );
}
var paramRe = /^:[\w-]+$/;
var dynamicSegmentValue = 3;
var indexRouteValue = 2;
var emptySegmentValue = 1;
var staticSegmentValue = 10;
var splatPenalty = -2;
var isSplat = (s2) => s2 === "*";
function computeScore(path, index) {
  let segments = path.split("/");
  let initialScore = segments.length;
  if (segments.some(isSplat)) {
    initialScore += splatPenalty;
  }
  if (index) {
    initialScore += indexRouteValue;
  }
  return segments.filter((s2) => !isSplat(s2)).reduce(
    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue),
    initialScore
  );
}
function compareIndexes(a3, b3) {
  let siblings = a3.length === b3.length && a3.slice(0, -1).every((n2, i3) => n2 === b3[i3]);
  return siblings ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a3[a3.length - 1] - b3[b3.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function matchRouteBranch(branch, pathname, allowPartial = false) {
  let { routesMeta } = branch;
  let matchedParams = {};
  let matchedPathname = "/";
  let matches = [];
  for (let i3 = 0; i3 < routesMeta.length; ++i3) {
    let meta = routesMeta[i3];
    let end = i3 === routesMeta.length - 1;
    let remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/";
    let match = matchPath(
      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },
      remainingPathname
    );
    let route = meta.route;
    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {
      match = matchPath(
        {
          path: meta.relativePath,
          caseSensitive: meta.caseSensitive,
          end: false
        },
        remainingPathname
      );
    }
    if (!match) {
      return null;
    }
    Object.assign(matchedParams, match.params);
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match.pathname]),
      pathnameBase: normalizePathname(
        joinPaths([matchedPathname, match.pathnameBase])
      ),
      route
    });
    if (match.pathnameBase !== "/") {
      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);
    }
  }
  return matches;
}
function matchPath(pattern, pathname) {
  if (typeof pattern === "string") {
    pattern = { path: pattern, caseSensitive: false, end: true };
  }
  let [matcher, compiledParams] = compilePath(
    pattern.path,
    pattern.caseSensitive,
    pattern.end
  );
  let match = pathname.match(matcher);
  if (!match) return null;
  let matchedPathname = match[0];
  let pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1");
  let captureGroups = match.slice(1);
  let params = compiledParams.reduce(
    (memo2, { paramName, isOptional }, index) => {
      if (paramName === "*") {
        let splatValue = captureGroups[index] || "";
        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
      }
      const value = captureGroups[index];
      if (isOptional && !value) {
        memo2[paramName] = void 0;
      } else {
        memo2[paramName] = (value || "").replace(/%2F/g, "/");
      }
      return memo2;
    },
    {}
  );
  return {
    params,
    pathname: matchedPathname,
    pathnameBase,
    pattern
  };
}
function compilePath(path, caseSensitive = false, end = true) {
  warning(
    path === "*" || !path.endsWith("*") || path.endsWith("/*"),
    `Route path "${path}" will be treated as if it were "${path.replace(/\*$/, "/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${path.replace(/\*$/, "/*")}".`
  );
  let params = [];
  let regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(
    /\/:([\w-]+)(\?)?/g,
    (_2, paramName, isOptional) => {
      params.push({ paramName, isOptional: isOptional != null });
      return isOptional ? "/?([^\\/]+)?" : "/([^\\/]+)";
    }
  ).replace(/\/([\w-]+)\?(\/|$)/g, "(/$1)?$2");
  if (path.endsWith("*")) {
    params.push({ paramName: "*" });
    regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$";
  } else if (end) {
    regexpSource += "\\/*$";
  } else if (path !== "" && path !== "/") {
    regexpSource += "(?:(?=\\/|$))";
  } else ;
  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : "i");
  return [matcher, params];
}
function decodePath(value) {
  try {
    return value.split("/").map((v2) => decodeURIComponent(v2).replace(/\//g, "%2F")).join("/");
  } catch (error) {
    warning(
      false,
      `The URL path "${value}" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`
    );
    return value;
  }
}
function stripBasename(pathname, basename) {
  if (basename === "/") return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {
    return null;
  }
  let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length;
  let nextChar = pathname.charAt(startIndex);
  if (nextChar && nextChar !== "/") {
    return null;
  }
  return pathname.slice(startIndex) || "/";
}
function resolvePath(to, fromPathname = "/") {
  let {
    pathname: toPathname,
    search = "",
    hash = ""
  } = typeof to === "string" ? parsePath(to) : to;
  let pathname = toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;
  return {
    pathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash)
  };
}
function resolvePathname(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  let relativeSegments = relativePath.split("/");
  relativeSegments.forEach((segment) => {
    if (segment === "..") {
      if (segments.length > 1) segments.pop();
    } else if (segment !== ".") {
      segments.push(segment);
    }
  });
  return segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path) {
  return `Cannot include a '${char}' character in a manually specified \`to.${field}\` field [${JSON.stringify(
    path
  )}].  Please separate it out to the \`to.${dest}\` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.`;
}
function getPathContributingMatches(matches) {
  return matches.filter(
    (match, index) => index === 0 || match.route.path && match.route.path.length > 0
  );
}
function getResolveToMatches(matches) {
  let pathMatches = getPathContributingMatches(matches);
  return pathMatches.map(
    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase
  );
}
function resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {
  let to;
  if (typeof toArg === "string") {
    to = parsePath(toArg);
  } else {
    to = { ...toArg };
    invariant(
      !to.pathname || !to.pathname.includes("?"),
      getInvalidPathError("?", "pathname", "search", to)
    );
    invariant(
      !to.pathname || !to.pathname.includes("#"),
      getInvalidPathError("#", "pathname", "hash", to)
    );
    invariant(
      !to.search || !to.search.includes("#"),
      getInvalidPathError("#", "search", "hash", to)
    );
  }
  let isEmptyPath = toArg === "" || to.pathname === "";
  let toPathname = isEmptyPath ? "/" : to.pathname;
  let from;
  if (toPathname == null) {
    from = locationPathname;
  } else {
    let routePathnameIndex = routePathnames.length - 1;
    if (!isPathRelative && toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/");
      while (toSegments[0] === "..") {
        toSegments.shift();
        routePathnameIndex -= 1;
      }
      to.pathname = toSegments.join("/");
    }
    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }
  let path = resolvePath(to, from);
  let hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/");
  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
  if (!path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {
    path.pathname += "/";
  }
  return path;
}
var joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/");
var normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/");
var normalizeSearch = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search;
var normalizeHash = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash;
function isRouteErrorResponse(error) {
  return error != null && typeof error.status === "number" && typeof error.statusText === "string" && typeof error.internal === "boolean" && "data" in error;
}
var validMutationMethodsArr = [
  "POST",
  "PUT",
  "PATCH",
  "DELETE"
];
new Set(
  validMutationMethodsArr
);
var validRequestMethodsArr = [
  "GET",
  ...validMutationMethodsArr
];
new Set(validRequestMethodsArr);
var DataRouterContext = reactExports.createContext(null);
DataRouterContext.displayName = "DataRouter";
var DataRouterStateContext = reactExports.createContext(null);
DataRouterStateContext.displayName = "DataRouterState";
reactExports.createContext(false);
var ViewTransitionContext = reactExports.createContext({
  isTransitioning: false
});
ViewTransitionContext.displayName = "ViewTransition";
var FetchersContext = reactExports.createContext(
  /* @__PURE__ */ new Map()
);
FetchersContext.displayName = "Fetchers";
var AwaitContext = reactExports.createContext(null);
AwaitContext.displayName = "Await";
var NavigationContext = reactExports.createContext(
  null
);
NavigationContext.displayName = "Navigation";
var LocationContext = reactExports.createContext(
  null
);
LocationContext.displayName = "Location";
var RouteContext = reactExports.createContext({
  outlet: null,
  matches: [],
  isDataRoute: false
});
RouteContext.displayName = "Route";
var RouteErrorContext = reactExports.createContext(null);
RouteErrorContext.displayName = "RouteError";
function useHref(to, { relative } = {}) {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useHref() may be used only in the context of a <Router> component.`
  );
  let { basename, navigator: navigator2 } = reactExports.useContext(NavigationContext);
  let { hash, pathname, search } = useResolvedPath(to, { relative });
  let joinedPathname = pathname;
  if (basename !== "/") {
    joinedPathname = pathname === "/" ? basename : joinPaths([basename, pathname]);
  }
  return navigator2.createHref({ pathname: joinedPathname, search, hash });
}
function useInRouterContext() {
  return reactExports.useContext(LocationContext) != null;
}
function useLocation() {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useLocation() may be used only in the context of a <Router> component.`
  );
  return reactExports.useContext(LocationContext).location;
}
var navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;
function useIsomorphicLayoutEffect$1(cb) {
  let isStatic = reactExports.useContext(NavigationContext).static;
  if (!isStatic) {
    reactExports.useLayoutEffect(cb);
  }
}
function useNavigate() {
  let { isDataRoute } = reactExports.useContext(RouteContext);
  return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useNavigate() may be used only in the context of a <Router> component.`
  );
  let dataRouterContext = reactExports.useContext(DataRouterContext);
  let { basename, navigator: navigator2 } = reactExports.useContext(NavigationContext);
  let { matches } = reactExports.useContext(RouteContext);
  let { pathname: locationPathname } = useLocation();
  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));
  let activeRef = reactExports.useRef(false);
  useIsomorphicLayoutEffect$1(() => {
    activeRef.current = true;
  });
  let navigate = reactExports.useCallback(
    (to, options = {}) => {
      warning(activeRef.current, navigateEffectWarning);
      if (!activeRef.current) return;
      if (typeof to === "number") {
        navigator2.go(to);
        return;
      }
      let path = resolveTo(
        to,
        JSON.parse(routePathnamesJson),
        locationPathname,
        options.relative === "path"
      );
      if (dataRouterContext == null && basename !== "/") {
        path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
      }
      (!!options.replace ? navigator2.replace : navigator2.push)(
        path,
        options.state,
        options
      );
    },
    [
      basename,
      navigator2,
      routePathnamesJson,
      locationPathname,
      dataRouterContext
    ]
  );
  return navigate;
}
reactExports.createContext(null);
function useResolvedPath(to, { relative } = {}) {
  let { matches } = reactExports.useContext(RouteContext);
  let { pathname: locationPathname } = useLocation();
  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));
  return reactExports.useMemo(
    () => resolveTo(
      to,
      JSON.parse(routePathnamesJson),
      locationPathname,
      relative === "path"
    ),
    [to, routePathnamesJson, locationPathname, relative]
  );
}
function useRoutes(routes, locationArg) {
  return useRoutesImpl(routes, locationArg);
}
function useRoutesImpl(routes, locationArg, dataRouterState, unstable_onError, future) {
  invariant(
    useInRouterContext(),
    // TODO: This error is probably because they somehow have 2 versions of the
    // router loaded. We can help them understand how to avoid that.
    `useRoutes() may be used only in the context of a <Router> component.`
  );
  let { navigator: navigator2 } = reactExports.useContext(NavigationContext);
  let { matches: parentMatches } = reactExports.useContext(RouteContext);
  let routeMatch = parentMatches[parentMatches.length - 1];
  let parentParams = routeMatch ? routeMatch.params : {};
  let parentPathname = routeMatch ? routeMatch.pathname : "/";
  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/";
  let parentRoute = routeMatch && routeMatch.route;
  {
    let parentPath = parentRoute && parentRoute.path || "";
    warningOnce(
      parentPathname,
      !parentRoute || parentPath.endsWith("*") || parentPath.endsWith("*?"),
      `You rendered descendant <Routes> (or called \`useRoutes()\`) at "${parentPathname}" (under <Route path="${parentPath}">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

Please change the parent <Route path="${parentPath}"> to <Route path="${parentPath === "/" ? "*" : `${parentPath}/*`}">.`
    );
  }
  let locationFromContext = useLocation();
  let location;
  if (locationArg) {
    let parsedLocationArg = typeof locationArg === "string" ? parsePath(locationArg) : locationArg;
    invariant(
      parentPathnameBase === "/" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),
      `When overriding the location using \`<Routes location>\` or \`useRoutes(routes, location)\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is "${parentPathnameBase}" but pathname "${parsedLocationArg.pathname}" was given in the \`location\` prop.`
    );
    location = parsedLocationArg;
  } else {
    location = locationFromContext;
  }
  let pathname = location.pathname || "/";
  let remainingPathname = pathname;
  if (parentPathnameBase !== "/") {
    let parentSegments = parentPathnameBase.replace(/^\//, "").split("/");
    let segments = pathname.replace(/^\//, "").split("/");
    remainingPathname = "/" + segments.slice(parentSegments.length).join("/");
  }
  let matches = matchRoutes(routes, { pathname: remainingPathname });
  {
    warning(
      parentRoute || matches != null,
      `No routes matched location "${location.pathname}${location.search}${location.hash}" `
    );
    warning(
      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,
      `Matched leaf route at location "${location.pathname}${location.search}${location.hash}" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`
    );
  }
  let renderedMatches = _renderMatches(
    matches && matches.map(
      (match) => Object.assign({}, match, {
        params: Object.assign({}, parentParams, match.params),
        pathname: joinPaths([
          parentPathnameBase,
          // Re-encode pathnames that were decoded inside matchRoutes.
          // Pre-encode `?` and `#` ahead of `encodeLocation` because it uses
          // `new URL()` internally and we need to prevent it from treating
          // them as separators
          navigator2.encodeLocation ? navigator2.encodeLocation(
            match.pathname.replace(/\?/g, "%3F").replace(/#/g, "%23")
          ).pathname : match.pathname
        ]),
        pathnameBase: match.pathnameBase === "/" ? parentPathnameBase : joinPaths([
          parentPathnameBase,
          // Re-encode pathnames that were decoded inside matchRoutes
          // Pre-encode `?` and `#` ahead of `encodeLocation` because it uses
          // `new URL()` internally and we need to prevent it from treating
          // them as separators
          navigator2.encodeLocation ? navigator2.encodeLocation(
            match.pathnameBase.replace(/\?/g, "%3F").replace(/#/g, "%23")
          ).pathname : match.pathnameBase
        ])
      })
    ),
    parentMatches,
    dataRouterState,
    unstable_onError,
    future
  );
  if (locationArg && renderedMatches) {
    return /* @__PURE__ */ reactExports.createElement(
      LocationContext.Provider,
      {
        value: {
          location: {
            pathname: "/",
            search: "",
            hash: "",
            state: null,
            key: "default",
            ...location
          },
          navigationType: "POP"
          /* Pop */
        }
      },
      renderedMatches
    );
  }
  return renderedMatches;
}
function DefaultErrorComponent() {
  let error = useRouteError();
  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);
  let stack = error instanceof Error ? error.stack : null;
  let lightgrey = "rgba(200,200,200, 0.5)";
  let preStyles = { padding: "0.5rem", backgroundColor: lightgrey };
  let codeStyles = { padding: "2px 4px", backgroundColor: lightgrey };
  let devInfo = null;
  {
    console.error(
      "Error handled by React Router default ErrorBoundary:",
      error
    );
    devInfo = /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement("p", null, "💿 Hey developer 👋"), /* @__PURE__ */ reactExports.createElement("p", null, "You can provide a way better UX than this when your app throws errors by providing your own ", /* @__PURE__ */ reactExports.createElement("code", { style: codeStyles }, "ErrorBoundary"), " or", " ", /* @__PURE__ */ reactExports.createElement("code", { style: codeStyles }, "errorElement"), " prop on your route."));
  }
  return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, /* @__PURE__ */ reactExports.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ reactExports.createElement("h3", { style: { fontStyle: "italic" } }, message), stack ? /* @__PURE__ */ reactExports.createElement("pre", { style: preStyles }, stack) : null, devInfo);
}
var defaultErrorElement = /* @__PURE__ */ reactExports.createElement(DefaultErrorComponent, null);
var RenderErrorBoundary = class extends reactExports.Component {
  constructor(props) {
    super(props);
    this.state = {
      location: props.location,
      revalidation: props.revalidation,
      error: props.error
    };
  }
  static getDerivedStateFromError(error) {
    return { error };
  }
  static getDerivedStateFromProps(props, state) {
    if (state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle") {
      return {
        error: props.error,
        location: props.location,
        revalidation: props.revalidation
      };
    }
    return {
      error: props.error !== void 0 ? props.error : state.error,
      location: state.location,
      revalidation: props.revalidation || state.revalidation
    };
  }
  componentDidCatch(error, errorInfo) {
    if (this.props.unstable_onError) {
      this.props.unstable_onError(error, errorInfo);
    } else {
      console.error(
        "React Router caught the following error during render",
        error
      );
    }
  }
  render() {
    return this.state.error !== void 0 ? /* @__PURE__ */ reactExports.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ reactExports.createElement(
      RouteErrorContext.Provider,
      {
        value: this.state.error,
        children: this.props.component
      }
    )) : this.props.children;
  }
};
function RenderedRoute({ routeContext, match, children }) {
  let dataRouterContext = reactExports.useContext(DataRouterContext);
  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {
    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;
  }
  return /* @__PURE__ */ reactExports.createElement(RouteContext.Provider, { value: routeContext }, children);
}
function _renderMatches(matches, parentMatches = [], dataRouterState = null, unstable_onError = null, future = null) {
  if (matches == null) {
    if (!dataRouterState) {
      return null;
    }
    if (dataRouterState.errors) {
      matches = dataRouterState.matches;
    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {
      matches = dataRouterState.matches;
    } else {
      return null;
    }
  }
  let renderedMatches = matches;
  let errors = dataRouterState?.errors;
  if (errors != null) {
    let errorIndex = renderedMatches.findIndex(
      (m2) => m2.route.id && errors?.[m2.route.id] !== void 0
    );
    invariant(
      errorIndex >= 0,
      `Could not find a matching route for errors on route IDs: ${Object.keys(
        errors
      ).join(",")}`
    );
    renderedMatches = renderedMatches.slice(
      0,
      Math.min(renderedMatches.length, errorIndex + 1)
    );
  }
  let renderFallback = false;
  let fallbackIndex = -1;
  if (dataRouterState) {
    for (let i3 = 0; i3 < renderedMatches.length; i3++) {
      let match = renderedMatches[i3];
      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {
        fallbackIndex = i3;
      }
      if (match.route.id) {
        let { loaderData, errors: errors2 } = dataRouterState;
        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);
        if (match.route.lazy || needsToRunLoader) {
          renderFallback = true;
          if (fallbackIndex >= 0) {
            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);
          } else {
            renderedMatches = [renderedMatches[0]];
          }
          break;
        }
      }
    }
  }
  return renderedMatches.reduceRight(
    (outlet, match, index) => {
      let error;
      let shouldRenderHydrateFallback = false;
      let errorElement = null;
      let hydrateFallbackElement = null;
      if (dataRouterState) {
        error = errors && match.route.id ? errors[match.route.id] : void 0;
        errorElement = match.route.errorElement || defaultErrorElement;
        if (renderFallback) {
          if (fallbackIndex < 0 && index === 0) {
            warningOnce(
              "route-fallback",
              false,
              "No `HydrateFallback` element provided to render during initial hydration"
            );
            shouldRenderHydrateFallback = true;
            hydrateFallbackElement = null;
          } else if (fallbackIndex === index) {
            shouldRenderHydrateFallback = true;
            hydrateFallbackElement = match.route.hydrateFallbackElement || null;
          }
        }
      }
      let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));
      let getChildren = () => {
        let children;
        if (error) {
          children = errorElement;
        } else if (shouldRenderHydrateFallback) {
          children = hydrateFallbackElement;
        } else if (match.route.Component) {
          children = /* @__PURE__ */ reactExports.createElement(match.route.Component, null);
        } else if (match.route.element) {
          children = match.route.element;
        } else {
          children = outlet;
        }
        return /* @__PURE__ */ reactExports.createElement(
          RenderedRoute,
          {
            match,
            routeContext: {
              outlet,
              matches: matches2,
              isDataRoute: dataRouterState != null
            },
            children
          }
        );
      };
      return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ reactExports.createElement(
        RenderErrorBoundary,
        {
          location: dataRouterState.location,
          revalidation: dataRouterState.revalidation,
          component: errorElement,
          error,
          children: getChildren(),
          routeContext: { outlet: null, matches: matches2, isDataRoute: true },
          unstable_onError
        }
      ) : getChildren();
    },
    null
  );
}
function getDataRouterConsoleError(hookName) {
  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function useDataRouterContext(hookName) {
  let ctx = reactExports.useContext(DataRouterContext);
  invariant(ctx, getDataRouterConsoleError(hookName));
  return ctx;
}
function useDataRouterState(hookName) {
  let state = reactExports.useContext(DataRouterStateContext);
  invariant(state, getDataRouterConsoleError(hookName));
  return state;
}
function useRouteContext(hookName) {
  let route = reactExports.useContext(RouteContext);
  invariant(route, getDataRouterConsoleError(hookName));
  return route;
}
function useCurrentRouteId(hookName) {
  let route = useRouteContext(hookName);
  let thisRoute = route.matches[route.matches.length - 1];
  invariant(
    thisRoute.route.id,
    `${hookName} can only be used on routes that contain a unique "id"`
  );
  return thisRoute.route.id;
}
function useRouteId() {
  return useCurrentRouteId(
    "useRouteId"
    /* UseRouteId */
  );
}
function useRouteError() {
  let error = reactExports.useContext(RouteErrorContext);
  let state = useDataRouterState(
    "useRouteError"
    /* UseRouteError */
  );
  let routeId = useCurrentRouteId(
    "useRouteError"
    /* UseRouteError */
  );
  if (error !== void 0) {
    return error;
  }
  return state.errors?.[routeId];
}
function useNavigateStable() {
  let { router } = useDataRouterContext(
    "useNavigate"
    /* UseNavigateStable */
  );
  let id = useCurrentRouteId(
    "useNavigate"
    /* UseNavigateStable */
  );
  let activeRef = reactExports.useRef(false);
  useIsomorphicLayoutEffect$1(() => {
    activeRef.current = true;
  });
  let navigate = reactExports.useCallback(
    async (to, options = {}) => {
      warning(activeRef.current, navigateEffectWarning);
      if (!activeRef.current) return;
      if (typeof to === "number") {
        router.navigate(to);
      } else {
        await router.navigate(to, { fromRouteId: id, ...options });
      }
    },
    [router, id]
  );
  return navigate;
}
var alreadyWarned = {};
function warningOnce(key, cond, message) {
  if (!cond && !alreadyWarned[key]) {
    alreadyWarned[key] = true;
    warning(false, message);
  }
}
reactExports.memo(DataRoutes);
function DataRoutes({
  routes,
  future,
  state,
  unstable_onError
}) {
  return useRoutesImpl(routes, void 0, state, unstable_onError, future);
}
function Route(props) {
  invariant(
    false,
    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`
  );
}
function Router({
  basename: basenameProp = "/",
  children = null,
  location: locationProp,
  navigationType = "POP",
  navigator: navigator2,
  static: staticProp = false
}) {
  invariant(
    !useInRouterContext(),
    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`
  );
  let basename = basenameProp.replace(/^\/*/, "/");
  let navigationContext = reactExports.useMemo(
    () => ({
      basename,
      navigator: navigator2,
      static: staticProp,
      future: {}
    }),
    [basename, navigator2, staticProp]
  );
  if (typeof locationProp === "string") {
    locationProp = parsePath(locationProp);
  }
  let {
    pathname = "/",
    search = "",
    hash = "",
    state = null,
    key = "default"
  } = locationProp;
  let locationContext = reactExports.useMemo(() => {
    let trailingPathname = stripBasename(pathname, basename);
    if (trailingPathname == null) {
      return null;
    }
    return {
      location: {
        pathname: trailingPathname,
        search,
        hash,
        state,
        key
      },
      navigationType
    };
  }, [basename, pathname, search, hash, state, key, navigationType]);
  warning(
    locationContext != null,
    `<Router basename="${basename}"> is not able to match the URL "${pathname}${search}${hash}" because it does not start with the basename, so the <Router> won't render anything.`
  );
  if (locationContext == null) {
    return null;
  }
  return /* @__PURE__ */ reactExports.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ reactExports.createElement(LocationContext.Provider, { children, value: locationContext }));
}
function Routes({
  children,
  location
}) {
  return useRoutes(createRoutesFromChildren(children), location);
}
function createRoutesFromChildren(children, parentPath = []) {
  let routes = [];
  reactExports.Children.forEach(children, (element, index) => {
    if (!reactExports.isValidElement(element)) {
      return;
    }
    let treePath = [...parentPath, index];
    if (element.type === reactExports.Fragment) {
      routes.push.apply(
        routes,
        createRoutesFromChildren(element.props.children, treePath)
      );
      return;
    }
    invariant(
      element.type === Route,
      `[${typeof element.type === "string" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`
    );
    invariant(
      !element.props.index || !element.props.children,
      "An index route cannot have child routes."
    );
    let route = {
      id: element.props.id || treePath.join("-"),
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      Component: element.props.Component,
      index: element.props.index,
      path: element.props.path,
      middleware: element.props.middleware,
      loader: element.props.loader,
      action: element.props.action,
      hydrateFallbackElement: element.props.hydrateFallbackElement,
      HydrateFallback: element.props.HydrateFallback,
      errorElement: element.props.errorElement,
      ErrorBoundary: element.props.ErrorBoundary,
      hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,
      shouldRevalidate: element.props.shouldRevalidate,
      handle: element.props.handle,
      lazy: element.props.lazy
    };
    if (element.props.children) {
      route.children = createRoutesFromChildren(
        element.props.children,
        treePath
      );
    }
    routes.push(route);
  });
  return routes;
}
var defaultMethod = "get";
var defaultEncType = "application/x-www-form-urlencoded";
function isHtmlElement(object) {
  return object != null && typeof object.tagName === "string";
}
function isButtonElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "button";
}
function isFormElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "form";
}
function isInputElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "input";
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function shouldProcessLinkClick(event, target) {
  return event.button === 0 && // Ignore everything but left clicks
  (!target || target === "_self") && // Let browser handle "target=_blank" etc.
  !isModifiedEvent(event);
}
var _formDataSupportsSubmitter = null;
function isFormDataSubmitterSupported() {
  if (_formDataSupportsSubmitter === null) {
    try {
      new FormData(
        document.createElement("form"),
        // @ts-expect-error if FormData supports the submitter parameter, this will throw
        0
      );
      _formDataSupportsSubmitter = false;
    } catch (e2) {
      _formDataSupportsSubmitter = true;
    }
  }
  return _formDataSupportsSubmitter;
}
var supportedFormEncTypes = /* @__PURE__ */ new Set([
  "application/x-www-form-urlencoded",
  "multipart/form-data",
  "text/plain"
]);
function getFormEncType(encType) {
  if (encType != null && !supportedFormEncTypes.has(encType)) {
    warning(
      false,
      `"${encType}" is not a valid \`encType\` for \`<Form>\`/\`<fetcher.Form>\` and will default to "${defaultEncType}"`
    );
    return null;
  }
  return encType;
}
function getFormSubmissionInfo(target, basename) {
  let method;
  let action;
  let encType;
  let formData;
  let body;
  if (isFormElement(target)) {
    let attr = target.getAttribute("action");
    action = attr ? stripBasename(attr, basename) : null;
    method = target.getAttribute("method") || defaultMethod;
    encType = getFormEncType(target.getAttribute("enctype")) || defaultEncType;
    formData = new FormData(target);
  } else if (isButtonElement(target) || isInputElement(target) && (target.type === "submit" || target.type === "image")) {
    let form = target.form;
    if (form == null) {
      throw new Error(
        `Cannot submit a <button> or <input type="submit"> without a <form>`
      );
    }
    let attr = target.getAttribute("formaction") || form.getAttribute("action");
    action = attr ? stripBasename(attr, basename) : null;
    method = target.getAttribute("formmethod") || form.getAttribute("method") || defaultMethod;
    encType = getFormEncType(target.getAttribute("formenctype")) || getFormEncType(form.getAttribute("enctype")) || defaultEncType;
    formData = new FormData(form, target);
    if (!isFormDataSubmitterSupported()) {
      let { name: name2, type, value } = target;
      if (type === "image") {
        let prefix = name2 ? `${name2}.` : "";
        formData.append(`${prefix}x`, "0");
        formData.append(`${prefix}y`, "0");
      } else if (name2) {
        formData.append(name2, value);
      }
    }
  } else if (isHtmlElement(target)) {
    throw new Error(
      `Cannot submit element that is not <form>, <button>, or <input type="submit|image">`
    );
  } else {
    method = defaultMethod;
    action = null;
    encType = defaultEncType;
    body = target;
  }
  if (formData && encType === "text/plain") {
    body = formData;
    formData = void 0;
  }
  return { action, method: method.toLowerCase(), encType, formData, body };
}
Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
function invariant2(value, message) {
  if (value === false || value === null || typeof value === "undefined") {
    throw new Error(message);
  }
}
function singleFetchUrl(reqUrl, basename, extension) {
  let url = typeof reqUrl === "string" ? new URL(
    reqUrl,
    // This can be called during the SSR flow via PrefetchPageLinksImpl so
    // don't assume window is available
    typeof window === "undefined" ? "server://singlefetch/" : window.location.origin
  ) : reqUrl;
  if (url.pathname === "/") {
    url.pathname = `_root.${extension}`;
  } else if (basename && stripBasename(url.pathname, basename) === "/") {
    url.pathname = `${basename.replace(/\/$/, "")}/_root.${extension}`;
  } else {
    url.pathname = `${url.pathname.replace(/\/$/, "")}.${extension}`;
  }
  return url;
}
async function loadRouteModule(route, routeModulesCache) {
  if (route.id in routeModulesCache) {
    return routeModulesCache[route.id];
  }
  try {
    let routeModule = await import(
      /* @vite-ignore */
      /* webpackIgnore: true */
      route.module
    );
    routeModulesCache[route.id] = routeModule;
    return routeModule;
  } catch (error) {
    console.error(
      `Error loading route module \`${route.module}\`, reloading page...`
    );
    console.error(error);
    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error
    void 0) ;
    window.location.reload();
    return new Promise(() => {
    });
  }
}
function isHtmlLinkDescriptor(object) {
  if (object == null) {
    return false;
  }
  if (object.href == null) {
    return object.rel === "preload" && typeof object.imageSrcSet === "string" && typeof object.imageSizes === "string";
  }
  return typeof object.rel === "string" && typeof object.href === "string";
}
async function getKeyedPrefetchLinks(matches, manifest, routeModules) {
  let links = await Promise.all(
    matches.map(async (match) => {
      let route = manifest.routes[match.route.id];
      if (route) {
        let mod = await loadRouteModule(route, routeModules);
        return mod.links ? mod.links() : [];
      }
      return [];
    })
  );
  return dedupeLinkDescriptors(
    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === "stylesheet" || link.rel === "preload").map(
      (link) => link.rel === "stylesheet" ? { ...link, rel: "prefetch", as: "style" } : { ...link, rel: "prefetch" }
    )
  );
}
function getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {
  let isNew = (match, index) => {
    if (!currentMatches[index]) return true;
    return match.route.id !== currentMatches[index].route.id;
  };
  let matchPathChanged = (match, index) => {
    return (
      // param change, /users/123 -> /users/456
      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path
      // e.g. /files/images/avatar.jpg -> files/finances.xls
      currentMatches[index].route.path?.endsWith("*") && currentMatches[index].params["*"] !== match.params["*"]
    );
  };
  if (mode === "assets") {
    return nextMatches.filter(
      (match, index) => isNew(match, index) || matchPathChanged(match, index)
    );
  }
  if (mode === "data") {
    return nextMatches.filter((match, index) => {
      let manifestRoute = manifest.routes[match.route.id];
      if (!manifestRoute || !manifestRoute.hasLoader) {
        return false;
      }
      if (isNew(match, index) || matchPathChanged(match, index)) {
        return true;
      }
      if (match.route.shouldRevalidate) {
        let routeChoice = match.route.shouldRevalidate({
          currentUrl: new URL(
            location.pathname + location.search + location.hash,
            window.origin
          ),
          currentParams: currentMatches[0]?.params || {},
          nextUrl: new URL(page, window.origin),
          nextParams: match.params,
          defaultShouldRevalidate: true
        });
        if (typeof routeChoice === "boolean") {
          return routeChoice;
        }
      }
      return true;
    });
  }
  return [];
}
function getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {
  return dedupeHrefs(
    matches.map((match) => {
      let route = manifest.routes[match.route.id];
      if (!route) return [];
      let hrefs = [route.module];
      if (route.clientActionModule) {
        hrefs = hrefs.concat(route.clientActionModule);
      }
      if (route.clientLoaderModule) {
        hrefs = hrefs.concat(route.clientLoaderModule);
      }
      if (includeHydrateFallback && route.hydrateFallbackModule) {
        hrefs = hrefs.concat(route.hydrateFallbackModule);
      }
      if (route.imports) {
        hrefs = hrefs.concat(route.imports);
      }
      return hrefs;
    }).flat(1)
  );
}
function dedupeHrefs(hrefs) {
  return [...new Set(hrefs)];
}
function sortKeys(obj) {
  let sorted = {};
  let keys = Object.keys(obj).sort();
  for (let key of keys) {
    sorted[key] = obj[key];
  }
  return sorted;
}
function dedupeLinkDescriptors(descriptors2, preloads) {
  let set = /* @__PURE__ */ new Set();
  new Set(preloads);
  return descriptors2.reduce((deduped, descriptor) => {
    let key = JSON.stringify(sortKeys(descriptor));
    if (!set.has(key)) {
      set.add(key);
      deduped.push({ key, link: descriptor });
    }
    return deduped;
  }, []);
}
function useDataRouterContext2() {
  let context = reactExports.useContext(DataRouterContext);
  invariant2(
    context,
    "You must render this element inside a <DataRouterContext.Provider> element"
  );
  return context;
}
function useDataRouterStateContext() {
  let context = reactExports.useContext(DataRouterStateContext);
  invariant2(
    context,
    "You must render this element inside a <DataRouterStateContext.Provider> element"
  );
  return context;
}
var FrameworkContext = reactExports.createContext(void 0);
FrameworkContext.displayName = "FrameworkContext";
function useFrameworkContext() {
  let context = reactExports.useContext(FrameworkContext);
  invariant2(
    context,
    "You must render this element inside a <HydratedRouter> element"
  );
  return context;
}
function usePrefetchBehavior(prefetch, theirElementProps) {
  let frameworkContext = reactExports.useContext(FrameworkContext);
  let [maybePrefetch, setMaybePrefetch] = reactExports.useState(false);
  let [shouldPrefetch, setShouldPrefetch] = reactExports.useState(false);
  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;
  let ref = reactExports.useRef(null);
  reactExports.useEffect(() => {
    if (prefetch === "render") {
      setShouldPrefetch(true);
    }
    if (prefetch === "viewport") {
      let callback = (entries) => {
        entries.forEach((entry) => {
          setShouldPrefetch(entry.isIntersecting);
        });
      };
      let observer = new IntersectionObserver(callback, { threshold: 0.5 });
      if (ref.current) observer.observe(ref.current);
      return () => {
        observer.disconnect();
      };
    }
  }, [prefetch]);
  reactExports.useEffect(() => {
    if (maybePrefetch) {
      let id = setTimeout(() => {
        setShouldPrefetch(true);
      }, 100);
      return () => {
        clearTimeout(id);
      };
    }
  }, [maybePrefetch]);
  let setIntent = () => {
    setMaybePrefetch(true);
  };
  let cancelIntent = () => {
    setMaybePrefetch(false);
    setShouldPrefetch(false);
  };
  if (!frameworkContext) {
    return [false, ref, {}];
  }
  if (prefetch !== "intent") {
    return [shouldPrefetch, ref, {}];
  }
  return [
    shouldPrefetch,
    ref,
    {
      onFocus: composeEventHandlers(onFocus, setIntent),
      onBlur: composeEventHandlers(onBlur, cancelIntent),
      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),
      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),
      onTouchStart: composeEventHandlers(onTouchStart, setIntent)
    }
  ];
}
function composeEventHandlers(theirHandler, ourHandler) {
  return (event) => {
    theirHandler && theirHandler(event);
    if (!event.defaultPrevented) {
      ourHandler(event);
    }
  };
}
function PrefetchPageLinks({ page, ...linkProps }) {
  let { router } = useDataRouterContext2();
  let matches = reactExports.useMemo(
    () => matchRoutes(router.routes, page, router.basename),
    [router.routes, page, router.basename]
  );
  if (!matches) {
    return null;
  }
  return /* @__PURE__ */ reactExports.createElement(PrefetchPageLinksImpl, { page, matches, ...linkProps });
}
function useKeyedPrefetchLinks(matches) {
  let { manifest, routeModules } = useFrameworkContext();
  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = reactExports.useState([]);
  reactExports.useEffect(() => {
    let interrupted = false;
    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(
      (links) => {
        if (!interrupted) {
          setKeyedPrefetchLinks(links);
        }
      }
    );
    return () => {
      interrupted = true;
    };
  }, [matches, manifest, routeModules]);
  return keyedPrefetchLinks;
}
function PrefetchPageLinksImpl({
  page,
  matches: nextMatches,
  ...linkProps
}) {
  let location = useLocation();
  let { manifest, routeModules } = useFrameworkContext();
  let { basename } = useDataRouterContext2();
  let { loaderData, matches } = useDataRouterStateContext();
  let newMatchesForData = reactExports.useMemo(
    () => getNewMatchesForLinks(
      page,
      nextMatches,
      matches,
      manifest,
      location,
      "data"
    ),
    [page, nextMatches, matches, manifest, location]
  );
  let newMatchesForAssets = reactExports.useMemo(
    () => getNewMatchesForLinks(
      page,
      nextMatches,
      matches,
      manifest,
      location,
      "assets"
    ),
    [page, nextMatches, matches, manifest, location]
  );
  let dataHrefs = reactExports.useMemo(() => {
    if (page === location.pathname + location.search + location.hash) {
      return [];
    }
    let routesParams = /* @__PURE__ */ new Set();
    let foundOptOutRoute = false;
    nextMatches.forEach((m2) => {
      let manifestRoute = manifest.routes[m2.route.id];
      if (!manifestRoute || !manifestRoute.hasLoader) {
        return;
      }
      if (!newMatchesForData.some((m22) => m22.route.id === m2.route.id) && m2.route.id in loaderData && routeModules[m2.route.id]?.shouldRevalidate) {
        foundOptOutRoute = true;
      } else if (manifestRoute.hasClientLoader) {
        foundOptOutRoute = true;
      } else {
        routesParams.add(m2.route.id);
      }
    });
    if (routesParams.size === 0) {
      return [];
    }
    let url = singleFetchUrl(page, basename, "data");
    if (foundOptOutRoute && routesParams.size > 0) {
      url.searchParams.set(
        "_routes",
        nextMatches.filter((m2) => routesParams.has(m2.route.id)).map((m2) => m2.route.id).join(",")
      );
    }
    return [url.pathname + url.search];
  }, [
    basename,
    loaderData,
    location,
    manifest,
    newMatchesForData,
    nextMatches,
    page,
    routeModules
  ]);
  let moduleHrefs = reactExports.useMemo(
    () => getModuleLinkHrefs(newMatchesForAssets, manifest),
    [newMatchesForAssets, manifest]
  );
  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);
  return /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, dataHrefs.map((href) => /* @__PURE__ */ reactExports.createElement("link", { key: href, rel: "prefetch", as: "fetch", href, ...linkProps })), moduleHrefs.map((href) => /* @__PURE__ */ reactExports.createElement("link", { key: href, rel: "modulepreload", href, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (
    // these don't spread `linkProps` because they are full link descriptors
    // already with their own props
    /* @__PURE__ */ reactExports.createElement("link", { key, nonce: linkProps.nonce, ...link })
  )));
}
function mergeRefs(...refs) {
  return (value) => {
    refs.forEach((ref) => {
      if (typeof ref === "function") {
        ref(value);
      } else if (ref != null) {
        ref.current = value;
      }
    });
  };
}
var isBrowser = typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined";
try {
  if (isBrowser) {
    window.__reactRouterVersion = // @ts-expect-error
    "7.9.2";
  }
} catch (e2) {
}
function HashRouter({ basename, children, window: window2 }) {
  let historyRef = reactExports.useRef();
  if (historyRef.current == null) {
    historyRef.current = createHashHistory({ window: window2, v5Compat: true });
  }
  let history = historyRef.current;
  let [state, setStateImpl] = reactExports.useState({
    action: history.action,
    location: history.location
  });
  let setState = reactExports.useCallback(
    (newState) => {
      reactExports.startTransition(() => setStateImpl(newState));
    },
    [setStateImpl]
  );
  reactExports.useLayoutEffect(() => history.listen(setState), [history, setState]);
  return /* @__PURE__ */ reactExports.createElement(
    Router,
    {
      basename,
      children,
      location: state.location,
      navigationType: state.action,
      navigator: history
    }
  );
}
var ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i;
var Link = reactExports.forwardRef(
  function LinkWithRef({
    onClick,
    discover = "render",
    prefetch = "none",
    relative,
    reloadDocument,
    replace: replace2,
    state,
    target,
    to,
    preventScrollReset,
    viewTransition,
    ...rest
  }, forwardedRef) {
    let { basename } = reactExports.useContext(NavigationContext);
    let isAbsolute = typeof to === "string" && ABSOLUTE_URL_REGEX2.test(to);
    let absoluteHref;
    let isExternal = false;
    if (typeof to === "string" && isAbsolute) {
      absoluteHref = to;
      if (isBrowser) {
        try {
          let currentUrl = new URL(window.location.href);
          let targetUrl = to.startsWith("//") ? new URL(currentUrl.protocol + to) : new URL(to);
          let path = stripBasename(targetUrl.pathname, basename);
          if (targetUrl.origin === currentUrl.origin && path != null) {
            to = path + targetUrl.search + targetUrl.hash;
          } else {
            isExternal = true;
          }
        } catch (e2) {
          warning(
            false,
            `<Link to="${to}"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`
          );
        }
      }
    }
    let href = useHref(to, { relative });
    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(
      prefetch,
      rest
    );
    let internalOnClick = useLinkClickHandler(to, {
      replace: replace2,
      state,
      target,
      preventScrollReset,
      relative,
      viewTransition
    });
    function handleClick(event) {
      if (onClick) onClick(event);
      if (!event.defaultPrevented) {
        internalOnClick(event);
      }
    }
    let link = (
      // eslint-disable-next-line jsx-a11y/anchor-has-content
      /* @__PURE__ */ reactExports.createElement(
        "a",
        {
          ...rest,
          ...prefetchHandlers,
          href: absoluteHref || href,
          onClick: isExternal || reloadDocument ? onClick : handleClick,
          ref: mergeRefs(forwardedRef, prefetchRef),
          target,
          "data-discover": !isAbsolute && discover === "render" ? "true" : void 0
        }
      )
    );
    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ reactExports.createElement(reactExports.Fragment, null, link, /* @__PURE__ */ reactExports.createElement(PrefetchPageLinks, { page: href })) : link;
  }
);
Link.displayName = "Link";
var NavLink = reactExports.forwardRef(
  function NavLinkWithRef({
    "aria-current": ariaCurrentProp = "page",
    caseSensitive = false,
    className: classNameProp = "",
    end = false,
    style: styleProp,
    to,
    viewTransition,
    children,
    ...rest
  }, ref) {
    let path = useResolvedPath(to, { relative: rest.relative });
    let location = useLocation();
    let routerState = reactExports.useContext(DataRouterStateContext);
    let { navigator: navigator2, basename } = reactExports.useContext(NavigationContext);
    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static
    // eslint-disable-next-line react-hooks/rules-of-hooks
    useViewTransitionState(path) && viewTransition === true;
    let toPathname = navigator2.encodeLocation ? navigator2.encodeLocation(path).pathname : path.pathname;
    let locationPathname = location.pathname;
    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;
    if (!caseSensitive) {
      locationPathname = locationPathname.toLowerCase();
      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;
      toPathname = toPathname.toLowerCase();
    }
    if (nextLocationPathname && basename) {
      nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;
    }
    const endSlashPosition = toPathname !== "/" && toPathname.endsWith("/") ? toPathname.length - 1 : toPathname.length;
    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === "/";
    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === "/");
    let renderProps = {
      isActive,
      isPending,
      isTransitioning
    };
    let ariaCurrent = isActive ? ariaCurrentProp : void 0;
    let className;
    if (typeof classNameProp === "function") {
      className = classNameProp(renderProps);
    } else {
      className = [
        classNameProp,
        isActive ? "active" : null,
        isPending ? "pending" : null,
        isTransitioning ? "transitioning" : null
      ].filter(Boolean).join(" ");
    }
    let style = typeof styleProp === "function" ? styleProp(renderProps) : styleProp;
    return /* @__PURE__ */ reactExports.createElement(
      Link,
      {
        ...rest,
        "aria-current": ariaCurrent,
        className,
        ref,
        style,
        to,
        viewTransition
      },
      typeof children === "function" ? children(renderProps) : children
    );
  }
);
NavLink.displayName = "NavLink";
var Form = reactExports.forwardRef(
  ({
    discover = "render",
    fetcherKey,
    navigate,
    reloadDocument,
    replace: replace2,
    state,
    method = defaultMethod,
    action,
    onSubmit,
    relative,
    preventScrollReset,
    viewTransition,
    ...props
  }, forwardedRef) => {
    let submit = useSubmit();
    let formAction = useFormAction(action, { relative });
    let formMethod = method.toLowerCase() === "get" ? "get" : "post";
    let isAbsolute = typeof action === "string" && ABSOLUTE_URL_REGEX2.test(action);
    let submitHandler = (event) => {
      onSubmit && onSubmit(event);
      if (event.defaultPrevented) return;
      event.preventDefault();
      let submitter = event.nativeEvent.submitter;
      let submitMethod = submitter?.getAttribute("formmethod") || method;
      submit(submitter || event.currentTarget, {
        fetcherKey,
        method: submitMethod,
        navigate,
        replace: replace2,
        state,
        relative,
        preventScrollReset,
        viewTransition
      });
    };
    return /* @__PURE__ */ reactExports.createElement(
      "form",
      {
        ref: forwardedRef,
        method: formMethod,
        action: formAction,
        onSubmit: reloadDocument ? onSubmit : submitHandler,
        ...props,
        "data-discover": !isAbsolute && discover === "render" ? "true" : void 0
      }
    );
  }
);
Form.displayName = "Form";
function getDataRouterConsoleError2(hookName) {
  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function useDataRouterContext3(hookName) {
  let ctx = reactExports.useContext(DataRouterContext);
  invariant(ctx, getDataRouterConsoleError2(hookName));
  return ctx;
}
function useLinkClickHandler(to, {
  target,
  replace: replaceProp,
  state,
  preventScrollReset,
  relative,
  viewTransition
} = {}) {
  let navigate = useNavigate();
  let location = useLocation();
  let path = useResolvedPath(to, { relative });
  return reactExports.useCallback(
    (event) => {
      if (shouldProcessLinkClick(event, target)) {
        event.preventDefault();
        let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);
        navigate(to, {
          replace: replace2,
          state,
          preventScrollReset,
          relative,
          viewTransition
        });
      }
    },
    [
      location,
      navigate,
      path,
      replaceProp,
      state,
      target,
      to,
      preventScrollReset,
      relative,
      viewTransition
    ]
  );
}
var fetcherId = 0;
var getUniqueFetcherId = () => `__${String(++fetcherId)}__`;
function useSubmit() {
  let { router } = useDataRouterContext3(
    "useSubmit"
    /* UseSubmit */
  );
  let { basename } = reactExports.useContext(NavigationContext);
  let currentRouteId = useRouteId();
  return reactExports.useCallback(
    async (target, options = {}) => {
      let { action, method, encType, formData, body } = getFormSubmissionInfo(
        target,
        basename
      );
      if (options.navigate === false) {
        let key = options.fetcherKey || getUniqueFetcherId();
        await router.fetch(key, currentRouteId, options.action || action, {
          preventScrollReset: options.preventScrollReset,
          formData,
          body,
          formMethod: options.method || method,
          formEncType: options.encType || encType,
          flushSync: options.flushSync
        });
      } else {
        await router.navigate(options.action || action, {
          preventScrollReset: options.preventScrollReset,
          formData,
          body,
          formMethod: options.method || method,
          formEncType: options.encType || encType,
          replace: options.replace,
          state: options.state,
          fromRouteId: currentRouteId,
          flushSync: options.flushSync,
          viewTransition: options.viewTransition
        });
      }
    },
    [router, basename, currentRouteId]
  );
}
function useFormAction(action, { relative } = {}) {
  let { basename } = reactExports.useContext(NavigationContext);
  let routeContext = reactExports.useContext(RouteContext);
  invariant(routeContext, "useFormAction must be used inside a RouteContext");
  let [match] = routeContext.matches.slice(-1);
  let path = { ...useResolvedPath(action ? action : ".", { relative }) };
  let location = useLocation();
  if (action == null) {
    path.search = location.search;
    let params = new URLSearchParams(path.search);
    let indexValues = params.getAll("index");
    let hasNakedIndexParam = indexValues.some((v2) => v2 === "");
    if (hasNakedIndexParam) {
      params.delete("index");
      indexValues.filter((v2) => v2).forEach((v2) => params.append("index", v2));
      let qs = params.toString();
      path.search = qs ? `?${qs}` : "";
    }
  }
  if ((!action || action === ".") && match.route.index) {
    path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index";
  }
  if (basename !== "/") {
    path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname]);
  }
  return createPath(path);
}
function useViewTransitionState(to, { relative } = {}) {
  let vtContext = reactExports.useContext(ViewTransitionContext);
  invariant(
    vtContext != null,
    "`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?"
  );
  let { basename } = useDataRouterContext3(
    "useViewTransitionState"
    /* useViewTransitionState */
  );
  let path = useResolvedPath(to, { relative });
  if (!vtContext.isTransitioning) {
    return false;
  }
  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;
  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;
  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;
}
const ARIA_LABEL_CARD_CONTENT = { key: "ARIA_LABEL_CARD_CONTENT", defaultText: "Card Content" };
const ARIA_ROLEDESCRIPTION_CARD = { key: "ARIA_ROLEDESCRIPTION_CARD", defaultText: "Card" };
const BUSY_INDICATOR_TITLE = { key: "BUSY_INDICATOR_TITLE", defaultText: "Please wait" };
const BUTTON_ARIA_TYPE_ACCEPT = { key: "BUTTON_ARIA_TYPE_ACCEPT", defaultText: "Positive Action" };
const BUTTON_ARIA_TYPE_REJECT = { key: "BUTTON_ARIA_TYPE_REJECT", defaultText: "Negative Action" };
const BUTTON_ARIA_TYPE_EMPHASIZED = { key: "BUTTON_ARIA_TYPE_EMPHASIZED", defaultText: "Emphasized" };
const BUTTON_ARIA_TYPE_ATTENTION = { key: "BUTTON_ARIA_TYPE_ATTENTION", defaultText: "Warning" };
const BUTTON_BADGE_ONE_ITEM = { key: "BUTTON_BADGE_ONE_ITEM", defaultText: "{0} item" };
const BUTTON_BADGE_MANY_ITEMS = { key: "BUTTON_BADGE_MANY_ITEMS", defaultText: "{0} items" };
const DATEPICKER_OPEN_ICON_TITLE = { key: "DATEPICKER_OPEN_ICON_TITLE", defaultText: "Open Picker" };
const DATEPICKER_DATE_DESCRIPTION = { key: "DATEPICKER_DATE_DESCRIPTION", defaultText: "Date Input" };
const DATEPICKER_POPOVER_ACCESSIBLE_NAME = { key: "DATEPICKER_POPOVER_ACCESSIBLE_NAME", defaultText: "Choose Date for {0}" };
const DATETIME_COMPONENTS_PLACEHOLDER_PREFIX = { key: "DATETIME_COMPONENTS_PLACEHOLDER_PREFIX", defaultText: "e.g." };
const DELETE = { key: "DELETE", defaultText: "Delete" };
const EMPTY_INDICATOR_SYMBOL = { key: "EMPTY_INDICATOR_SYMBOL", defaultText: "–" };
const EMPTY_INDICATOR_ACCESSIBLE_TEXT = { key: "EMPTY_INDICATOR_ACCESSIBLE_TEXT", defaultText: "Empty Value" };
const EXPANDABLE_TEXT_SHOW_MORE = { key: "EXPANDABLE_TEXT_SHOW_MORE", defaultText: "Show More" };
const EXPANDABLE_TEXT_SHOW_LESS = { key: "EXPANDABLE_TEXT_SHOW_LESS", defaultText: "Show Less" };
const EXPANDABLE_TEXT_CLOSE = { key: "EXPANDABLE_TEXT_CLOSE", defaultText: "Close" };
const EXPANDABLE_TEXT_SHOW_MORE_POPOVER_ARIA_LABEL = { key: "EXPANDABLE_TEXT_SHOW_MORE_POPOVER_ARIA_LABEL", defaultText: "Show the full text" };
const EXPANDABLE_TEXT_SHOW_LESS_POPOVER_ARIA_LABEL = { key: "EXPANDABLE_TEXT_SHOW_LESS_POPOVER_ARIA_LABEL", defaultText: "Close the popover" };
const GROUP_HEADER_TEXT = { key: "GROUP_HEADER_TEXT", defaultText: "Group Header" };
const INPUT_SUGGESTIONS = { key: "INPUT_SUGGESTIONS", defaultText: "Suggestions Available" };
const INPUT_SUGGESTIONS_TITLE = { key: "INPUT_SUGGESTIONS_TITLE", defaultText: "Select" };
const INPUT_SUGGESTIONS_ONE_HIT = { key: "INPUT_SUGGESTIONS_ONE_HIT", defaultText: "1 result available" };
const INPUT_SUGGESTIONS_MORE_HITS = { key: "INPUT_SUGGESTIONS_MORE_HITS", defaultText: "{0} results are available" };
const INPUT_SUGGESTIONS_NO_HIT = { key: "INPUT_SUGGESTIONS_NO_HIT", defaultText: "No results" };
const INPUT_CLEAR_ICON_ACC_NAME = { key: "INPUT_CLEAR_ICON_ACC_NAME", defaultText: "Clear" };
const INPUT_SUGGESTIONS_OK_BUTTON = { key: "INPUT_SUGGESTIONS_OK_BUTTON", defaultText: "OK" };
const LINK_SUBTLE = { key: "LINK_SUBTLE", defaultText: "Subtle" };
const LINK_EMPHASIZED = { key: "LINK_EMPHASIZED", defaultText: "Emphasized" };
const LIST_ITEM_ACTIVE = { key: "LIST_ITEM_ACTIVE", defaultText: "Is Active" };
const LIST_ITEM_POSITION = { key: "LIST_ITEM_POSITION", defaultText: "List item {0} of {1}" };
const LIST_ITEM_SELECTED = { key: "LIST_ITEM_SELECTED", defaultText: "Selected" };
const LIST_ITEM_NOT_SELECTED = { key: "LIST_ITEM_NOT_SELECTED", defaultText: "Not Selected" };
const LIST_ITEM_GROUP_HEADER = { key: "LIST_ITEM_GROUP_HEADER", defaultText: "Group Header" };
const LIST_ROLE_LIST_GROUP_DESCRIPTION = { key: "LIST_ROLE_LIST_GROUP_DESCRIPTION", defaultText: "contains {0} sub groups with {1} items" };
const LIST_ROLE_LISTBOX_GROUP_DESCRIPTION = { key: "LIST_ROLE_LISTBOX_GROUP_DESCRIPTION", defaultText: "contains {0} sub groups" };
const ARIA_LABEL_LIST_ITEM_CHECKBOX = { key: "ARIA_LABEL_LIST_ITEM_CHECKBOX", defaultText: "Multiple Selection Mode" };
const ARIA_LABEL_LIST_ITEM_RADIO_BUTTON = { key: "ARIA_LABEL_LIST_ITEM_RADIO_BUTTON", defaultText: "Item Selection." };
const ARIA_LABEL_LIST_SELECTABLE = { key: "ARIA_LABEL_LIST_SELECTABLE", defaultText: "Contains Selectable Items" };
const ARIA_LABEL_LIST_MULTISELECTABLE = { key: "ARIA_LABEL_LIST_MULTISELECTABLE", defaultText: "Contains Multi-Selectable Items" };
const ARIA_LABEL_LIST_DELETABLE = { key: "ARIA_LABEL_LIST_DELETABLE", defaultText: "Contains Deletable Items" };
const INPUT_AVALIABLE_VALUES = { key: "INPUT_AVALIABLE_VALUES", defaultText: "Available Values" };
const RESPONSIVE_POPOVER_CLOSE_DIALOG_BUTTON = { key: "RESPONSIVE_POPOVER_CLOSE_DIALOG_BUTTON", defaultText: "Decline" };
const LOAD_MORE_TEXT = { key: "LOAD_MORE_TEXT", defaultText: "More" };
const TAB_ARIA_DESIGN_POSITIVE = { key: "TAB_ARIA_DESIGN_POSITIVE", defaultText: "Positive" };
const TAB_ARIA_DESIGN_NEGATIVE = { key: "TAB_ARIA_DESIGN_NEGATIVE", defaultText: "Negative" };
const TAB_ARIA_DESIGN_CRITICAL = { key: "TAB_ARIA_DESIGN_CRITICAL", defaultText: "Critical" };
const TAB_ARIA_DESIGN_NEUTRAL = { key: "TAB_ARIA_DESIGN_NEUTRAL", defaultText: "Neutral" };
const TAB_SPLIT_ROLE_DESCRIPTION = { key: "TAB_SPLIT_ROLE_DESCRIPTION", defaultText: "Tab with Subitems" };
const TABCONTAINER_NEXT_ICON_ACC_NAME = { key: "TABCONTAINER_NEXT_ICON_ACC_NAME", defaultText: "Next" };
const TABCONTAINER_PREVIOUS_ICON_ACC_NAME = { key: "TABCONTAINER_PREVIOUS_ICON_ACC_NAME", defaultText: "Previous" };
const TABCONTAINER_OVERFLOW_MENU_TITLE = { key: "TABCONTAINER_OVERFLOW_MENU_TITLE", defaultText: "Overflow Menu" };
const TABCONTAINER_END_OVERFLOW = { key: "TABCONTAINER_END_OVERFLOW", defaultText: "More" };
const TABCONTAINER_POPOVER_CANCEL_BUTTON = { key: "TABCONTAINER_POPOVER_CANCEL_BUTTON", defaultText: "Cancel" };
const TABCONTAINER_SUBTABS_DESCRIPTION = { key: "TABCONTAINER_SUBTABS_DESCRIPTION", defaultText: "Press down arrow key to open subitems menu" };
const VALUE_STATE_TYPE_ERROR = { key: "VALUE_STATE_TYPE_ERROR", defaultText: "Value State Error" };
const VALUE_STATE_TYPE_WARNING = { key: "VALUE_STATE_TYPE_WARNING", defaultText: "Value State Warning" };
const VALUE_STATE_TYPE_SUCCESS = { key: "VALUE_STATE_TYPE_SUCCESS", defaultText: "Value State Success" };
const VALUE_STATE_TYPE_INFORMATION = { key: "VALUE_STATE_TYPE_INFORMATION", defaultText: "Value State Information" };
const VALUE_STATE_ERROR = { key: "VALUE_STATE_ERROR", defaultText: "Invalid entry" };
const VALUE_STATE_WARNING = { key: "VALUE_STATE_WARNING", defaultText: "Warning issued" };
const VALUE_STATE_INFORMATION = { key: "VALUE_STATE_INFORMATION", defaultText: "Informative entry" };
const VALUE_STATE_SUCCESS = { key: "VALUE_STATE_SUCCESS", defaultText: "Entry successfully validated" };
const VALUE_STATE_LINK = { key: "VALUE_STATE_LINK", defaultText: "To move the focus to the link, press Ctrl+Alt+F8" };
const VALUE_STATE_LINK_MAC = { key: "VALUE_STATE_LINK_MAC", defaultText: "To move the focus to the link, press Cmd+Option+F8" };
const VALUE_STATE_LINKS = { key: "VALUE_STATE_LINKS", defaultText: "To go to the first link, press Ctrl+Alt+F8. To move to the next link, use Tab" };
const VALUE_STATE_LINKS_MAC = { key: "VALUE_STATE_LINKS_MAC", defaultText: "To go to the first link, press Cmd+Option+F8. To move to the next link, use Tab" };
const CALENDAR_HEADER_NEXT_BUTTON = { key: "CALENDAR_HEADER_NEXT_BUTTON", defaultText: "Next" };
const CALENDAR_HEADER_PREVIOUS_BUTTON = { key: "CALENDAR_HEADER_PREVIOUS_BUTTON", defaultText: "Previous" };
const DAY_PICKER_WEEK_NUMBER_TEXT = { key: "DAY_PICKER_WEEK_NUMBER_TEXT", defaultText: "Week Number" };
const DAY_PICKER_NON_WORKING_DAY = { key: "DAY_PICKER_NON_WORKING_DAY", defaultText: "Non-Working Day" };
const DAY_PICKER_TODAY = { key: "DAY_PICKER_TODAY", defaultText: "Today" };
const MONTH_PICKER_DESCRIPTION = { key: "MONTH_PICKER_DESCRIPTION", defaultText: "Month Picker" };
const YEAR_PICKER_DESCRIPTION = { key: "YEAR_PICKER_DESCRIPTION", defaultText: "Year Picker" };
const YEAR_RANGE_PICKER_DESCRIPTION = { key: "YEAR_RANGE_PICKER_DESCRIPTION", defaultText: "Year Range Picker" };
const DIALOG_HEADER_ARIA_ROLE_DESCRIPTION = { key: "DIALOG_HEADER_ARIA_ROLE_DESCRIPTION", defaultText: "Interactive Header" };
const DIALOG_HEADER_ARIA_DESCRIBEDBY_RESIZABLE = { key: "DIALOG_HEADER_ARIA_DESCRIBEDBY_RESIZABLE", defaultText: "Use Shift+Arrow keys to resize" };
const DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE = { key: "DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE", defaultText: "Use Arrow keys to move" };
const DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE_RESIZABLE = { key: "DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE_RESIZABLE", defaultText: "Use Arrow keys to move, Shift+Arrow keys to resize" };
const LABEL_COLON = { key: "LABEL_COLON", defaultText: ":" };
const FORM_CHECKABLE_REQUIRED = { key: "FORM_CHECKABLE_REQUIRED", defaultText: "Please tick this box if you want to proceed." };
const FORM_SELECTABLE_REQUIRED2 = { key: "FORM_SELECTABLE_REQUIRED2", defaultText: "Please select one of these options." };
const FORM_TEXTFIELD_REQUIRED = { key: "FORM_TEXTFIELD_REQUIRED", defaultText: "Please fill in this field." };
const t$t = typeof document > "u", e$p = { get userAgent() {
  return t$t ? "" : navigator.userAgent;
}, get touch() {
  return t$t ? false : "ontouchstart" in window || navigator.maxTouchPoints > 0;
}, get chrome() {
  return t$t ? false : /(Chrome|CriOS)/.test(e$p.userAgent);
}, get firefox() {
  return t$t ? false : /Firefox/.test(e$p.userAgent);
}, get safari() {
  return t$t ? false : !e$p.chrome && /(Version|PhantomJS)\/(\d+\.\d+).*Safari/.test(e$p.userAgent);
}, get webkit() {
  return t$t ? false : /webkit/.test(e$p.userAgent);
}, get windows() {
  return t$t ? false : navigator.platform.indexOf("Win") !== -1;
}, get macOS() {
  return t$t ? false : !!navigator.userAgent.match(/Macintosh|Mac OS X/i);
}, get iOS() {
  return t$t ? false : !!navigator.platform.match(/iPhone|iPad|iPod/) || !!(e$p.userAgent.match(/Mac/) && "ontouchend" in document);
}, get android() {
  return t$t ? false : !e$p.windows && /Android/.test(e$p.userAgent);
}, get androidPhone() {
  return t$t ? false : e$p.android && /(?=android)(?=.*mobile)/i.test(e$p.userAgent);
}, get ipad() {
  return t$t ? false : /ipad/i.test(e$p.userAgent) || /Macintosh/i.test(e$p.userAgent) && "ontouchend" in document;
}, _isPhone() {
  return u$k(), e$p.touch && !r$r;
} };
let o$p, i$s, r$r;
const s$w = () => {
  if (t$t || !e$p.windows) return false;
  if (o$p === void 0) {
    const n2 = e$p.userAgent.match(/Windows NT (\d+).(\d)/);
    o$p = n2 ? parseFloat(n2[1]) : 0;
  }
  return o$p >= 8;
}, c$k = () => {
  if (t$t || !e$p.webkit) return false;
  if (i$s === void 0) {
    const n2 = e$p.userAgent.match(/(webkit)[ /]([\w.]+)/);
    i$s = n2 ? parseFloat(n2[1]) : 0;
  }
  return i$s >= 537.1;
}, u$k = () => {
  if (t$t) return false;
  if (r$r === void 0) {
    if (e$p.ipad) {
      r$r = true;
      return;
    }
    if (e$p.touch) {
      if (s$w()) {
        r$r = true;
        return;
      }
      if (e$p.chrome && e$p.android) {
        r$r = !/Mobile Safari\/[.0-9]+/.test(e$p.userAgent);
        return;
      }
      let n2 = window.devicePixelRatio ? window.devicePixelRatio : 1;
      e$p.android && c$k() && (n2 = 1), r$r = Math.min(window.screen.width / n2, window.screen.height / n2) >= 600;
      return;
    }
    r$r = e$p.userAgent.indexOf("Touch") !== -1 || e$p.android && !e$p.androidPhone;
  }
}, h$9 = () => e$p.safari, g$d = () => e$p.chrome, a$q = () => (u$k(), (e$p.touch || s$w()) && r$r), d$h = () => e$p._isPhone(), f$i = () => t$t ? false : !a$q() && !d$h() || s$w(), w$8 = () => e$p.iOS, A$7 = () => e$p.macOS, P$9 = () => e$p.android || e$p.androidPhone;
let i$r = class i {
  constructor() {
    this._eventRegistry = /* @__PURE__ */ new Map();
  }
  attachEvent(t3, r3) {
    const n2 = this._eventRegistry, e2 = n2.get(t3);
    if (!Array.isArray(e2)) {
      n2.set(t3, [r3]);
      return;
    }
    e2.includes(r3) || e2.push(r3);
  }
  detachEvent(t3, r3) {
    const n2 = this._eventRegistry, e2 = n2.get(t3);
    if (!e2) return;
    const s2 = e2.indexOf(r3);
    s2 !== -1 && e2.splice(s2, 1), e2.length === 0 && n2.delete(t3);
  }
  fireEvent(t3, r3) {
    const e2 = this._eventRegistry.get(t3);
    return e2 ? e2.map((s2) => s2.call(this, r3)) : [];
  }
  fireEventAsync(t3, r3) {
    return Promise.all(this.fireEvent(t3, r3));
  }
  isHandlerAttached(t3, r3) {
    const e2 = this._eventRegistry.get(t3);
    return e2 ? e2.includes(r3) : false;
  }
  hasListeners(t3) {
    return !!this._eventRegistry.get(t3);
  }
};
const a$p = /* @__PURE__ */ new Map(), t$s = /* @__PURE__ */ new Map();
t$s.set("S", [0, 599]), t$s.set("M", [600, 1023]), t$s.set("L", [1024, 1439]), t$s.set("XL", [1440, 1 / 0]);
var S$6 = ((e2) => (e2.RANGE_4STEPS = "4Step", e2))(S$6 || {});
const o$o = (r3, e2) => {
  a$p.set(r3, e2);
}, c$j = (r3, e2 = window.innerWidth) => {
  let n2 = a$p.get(r3);
  n2 || (n2 = a$p.get("4Step"));
  let g2;
  const s2 = Math.floor(e2);
  return n2.forEach((R3, E2) => {
    s2 >= R3[0] && s2 <= R3[1] && (g2 = E2);
  }), g2 || [...n2.keys()][0];
}, i$q = { RANGESETS: S$6, initRangeSet: o$o, getCurrentRange: c$j };
i$q.initRangeSet(i$q.RANGESETS.RANGE_4STEPS, t$s);
var c$i = {}, e$o = c$i.hasOwnProperty, a$o = c$i.toString, o$n = e$o.toString, l$s = o$n.call(Object), i$p = function(r3) {
  var t3, n2;
  return !r3 || a$o.call(r3) !== "[object Object]" ? false : (t3 = Object.getPrototypeOf(r3), t3 ? (n2 = e$o.call(t3, "constructor") && t3.constructor, typeof n2 == "function" && o$n.call(n2) === l$s) : true);
};
var c$h = /* @__PURE__ */ Object.create(null), u$j = function(p3, m2, A2, d2) {
  var n2, t3, e2, a3, o2, i3, r3 = arguments[2] || {}, f4 = 3, l3 = arguments.length, s2 = arguments[0] || false, y2 = arguments[1] ? void 0 : c$h;
  for (typeof r3 != "object" && typeof r3 != "function" && (r3 = {}); f4 < l3; f4++) if ((o2 = arguments[f4]) != null) for (a3 in o2) n2 = r3[a3], e2 = o2[a3], !(a3 === "__proto__" || r3 === e2) && (s2 && e2 && (i$p(e2) || (t3 = Array.isArray(e2))) ? (t3 ? (t3 = false, i3 = n2 && Array.isArray(n2) ? n2 : []) : i3 = n2 && i$p(n2) ? n2 : {}, r3[a3] = u$j(s2, arguments[1], i3, e2)) : e2 !== y2 && (r3[a3] = e2));
  return r3;
};
const e$n = function(n2, t3) {
  return u$j(true, false, ...arguments);
};
const e$m = /* @__PURE__ */ new Map(), s$v = (t3, r3) => {
  e$m.set(t3, r3);
}, n$w = (t3) => e$m.get(t3);
const _$5 = { themes: { default: "sap_horizon", all: ["sap_fiori_3", "sap_fiori_3_dark", "sap_fiori_3_hcb", "sap_fiori_3_hcw", "sap_horizon", "sap_horizon_dark", "sap_horizon_hcb", "sap_horizon_hcw"] }, languages: { default: "en" }, locales: { default: "en", all: ["ar", "ar_EG", "ar_SA", "bg", "ca", "cnr", "cs", "da", "de", "de_AT", "de_CH", "el", "el_CY", "en", "en_AU", "en_GB", "en_HK", "en_IE", "en_IN", "en_NZ", "en_PG", "en_SG", "en_ZA", "es", "es_AR", "es_BO", "es_CL", "es_CO", "es_MX", "es_PE", "es_UY", "es_VE", "et", "fa", "fi", "fr", "fr_BE", "fr_CA", "fr_CH", "fr_LU", "he", "hi", "hr", "hu", "id", "it", "it_CH", "ja", "kk", "ko", "lt", "lv", "ms", "mk", "nb", "nl", "nl_BE", "pl", "pt", "pt_PT", "ro", "ru", "ru_UA", "sk", "sl", "sr", "sr_Latn", "sv", "th", "tr", "uk", "vi", "zh_CN", "zh_HK", "zh_SG", "zh_TW"] } }, e$l = _$5.themes.default, s$u = _$5.themes.all, a$n = _$5.languages.default, r$q = _$5.locales.default, l$r = _$5.locales.all;
const o$m = typeof document > "u", n$v = { search() {
  return o$m ? "" : window.location.search;
} }, i$o = () => o$m ? "" : window.location.hostname, c$g = () => o$m ? "" : window.location.port, a$m = () => o$m ? "" : window.location.protocol, s$t = () => o$m ? "" : window.location.href, u$i = () => n$v.search();
const s$s = (e2) => {
  const t3 = document.querySelector(`META[name="${e2}"]`);
  return t3 && t3.getAttribute("content");
}, o$l = (e2) => {
  const t3 = s$s("sap-allowed-theme-origins") ?? s$s("sap-allowedThemeOrigins");
  return t3 ? t3.split(",").some((n2) => n2 === "*" || e2 === n2.trim()) : false;
}, a$l = (e2, t3) => {
  const n2 = new URL(e2).pathname;
  return new URL(n2, t3).toString();
}, g$c = (e2) => {
  let t3;
  try {
    if (e2.startsWith(".") || e2.startsWith("/")) t3 = new URL(e2, s$t()).toString();
    else {
      const n2 = new URL(e2), r3 = n2.origin;
      r3 && o$l(r3) ? t3 = n2.toString() : t3 = a$l(n2.toString(), s$t());
    }
    return t3.endsWith("/") || (t3 = `${t3}/`), `${t3}UI5/`;
  } catch {
  }
};
var u$h = ((l3) => (l3.Full = "full", l3.Basic = "basic", l3.Minimal = "minimal", l3.None = "none", l3))(u$h || {});
const e$k = new i$r(), t$r = "configurationReset", i$n = (n2) => {
  e$k.attachEvent(t$r, n2);
};
let p$9 = false, t$q = { animationMode: u$h.Full, theme: e$l, themeRoot: void 0, rtl: void 0, language: void 0, timezone: void 0, calendarType: void 0, secondaryCalendarType: void 0, noConflict: false, formatSettings: {}, fetchDefaultLanguage: false, defaultFontLoading: true, enableDefaultTooltips: true };
const C$6 = () => (o$k(), t$q.animationMode), T$7 = () => (o$k(), t$q.theme), S$5 = () => {
  if (o$k(), t$q.themeRoot !== void 0) {
    if (!g$c(t$q.themeRoot)) {
      console.warn(`The ${t$q.themeRoot} is not valid. Check the allowed origins as suggested in the "setThemeRoot" description.`);
      return;
    }
    return t$q.themeRoot;
  }
}, L$6 = () => (o$k(), t$q.language), R$5 = () => (o$k(), t$q.fetchDefaultLanguage), F$2 = () => (o$k(), t$q.noConflict), U$2 = () => (o$k(), t$q.defaultFontLoading), b$c = () => (o$k(), t$q.enableDefaultTooltips), D$6 = () => (o$k(), t$q.calendarType), I$7 = () => (o$k(), t$q.secondaryCalendarType), O$4 = () => (o$k(), t$q.timezone), i$m = /* @__PURE__ */ new Map();
i$m.set("true", true), i$m.set("false", false);
const w$7 = () => {
  const n2 = document.querySelector("[data-ui5-config]") || document.querySelector("[data-id='sap-ui-config']");
  let e2;
  if (n2) {
    try {
      e2 = JSON.parse(n2.innerHTML);
    } catch {
      console.warn("Incorrect data-sap-ui-config format. Please use JSON");
    }
    e2 && (t$q = e$n(t$q, e2));
  }
}, z$3 = () => {
  const n2 = new URLSearchParams(u$i());
  n2.forEach((e2, r3) => {
    const a3 = r3.split("sap-").length;
    a3 === 0 || a3 === r3.split("sap-ui-").length || g$b(r3, e2, "sap");
  }), n2.forEach((e2, r3) => {
    r3.startsWith("sap-ui") && g$b(r3, e2, "sap-ui");
  });
}, E$5 = (n2) => {
  const e2 = n2.split("@")[1];
  return g$c(e2);
}, P$8 = (n2, e2) => n2 === "theme" && e2.includes("@") ? e2.split("@")[0] : e2, g$b = (n2, e2, r3) => {
  const a3 = e2.toLowerCase(), s2 = n2.split(`${r3}-`)[1];
  i$m.has(e2) && (e2 = i$m.get(a3)), s2 === "theme" ? (t$q.theme = P$8(s2, e2), e2 && e2.includes("@") && (t$q.themeRoot = E$5(e2))) : t$q[s2] = e2;
}, j$2 = () => {
  const n2 = n$w("OpenUI5Support");
  if (!n2 || !n2.isOpenUI5Detected()) return;
  const e2 = n2.getConfigurationSettingsObject();
  t$q = e$n(t$q, e2);
}, o$k = () => {
  typeof document > "u" || p$9 || (l$q(), p$9 = true);
}, l$q = (n2) => {
  w$7(), z$3(), j$2();
};
let l$p = class l {
  constructor() {
    this.list = [], this.lookup = /* @__PURE__ */ new Set();
  }
  add(t3) {
    this.lookup.has(t3) || (this.list.push(t3), this.lookup.add(t3));
  }
  remove(t3) {
    this.lookup.has(t3) && (this.list = this.list.filter((e2) => e2 !== t3), this.lookup.delete(t3));
  }
  shift() {
    const t3 = this.list.shift();
    if (t3) return this.lookup.delete(t3), t3;
  }
  isEmpty() {
    return this.list.length === 0;
  }
  isAdded(t3) {
    return this.lookup.has(t3);
  }
  process(t3) {
    let e2;
    const s2 = /* @__PURE__ */ new Map();
    for (e2 = this.shift(); e2; ) {
      const i3 = s2.get(e2) || 0;
      if (i3 > 10) throw new Error("Web component processed too many times this task, max allowed is: 10");
      t3(e2), s2.set(e2, i3 + 1), e2 = this.shift();
    }
  }
};
const o$j = (t3, n2 = document.body, r3) => {
  let e2 = document.querySelector(t3);
  return e2 || (e2 = r3 ? r3() : document.createElement(t3), n2.insertBefore(e2, n2.firstChild));
};
const u$g = () => {
  const t3 = document.createElement("meta");
  return t3.setAttribute("name", "ui5-shared-resources"), t3.setAttribute("content", ""), t3;
}, l$o = () => typeof document > "u" ? null : o$j('meta[name="ui5-shared-resources"]', document.head, u$g), m$i = (t3, o2) => {
  const r3 = t3.split(".");
  let e2 = l$o();
  if (!e2) return o2;
  for (let n2 = 0; n2 < r3.length; n2++) {
    const s2 = r3[n2], c2 = n2 === r3.length - 1;
    Object.prototype.hasOwnProperty.call(e2, s2) || (e2[s2] = c2 ? o2 : {}), e2 = e2[s2];
  }
  return e2;
};
const e$j = { version: "2.14.0", major: 2, minor: 14, patch: 0, suffix: "", isNext: false, buildTime: 1756977409 };
let s$r, t$p = { include: [/^ui5-/], exclude: [] };
const o$i = /* @__PURE__ */ new Map(), c$f = () => s$r, m$h = () => t$p, i$l = (e2) => {
  if (!o$i.has(e2)) {
    const n2 = t$p.include.some((r3) => e2.match(r3)) && !t$p.exclude.some((r3) => e2.match(r3));
    o$i.set(e2, n2);
  }
  return o$i.get(e2);
}, g$a = (e2) => {
  if (i$l(e2)) return c$f();
}, d$g = (e2) => {
  const n2 = `v${e$j.version.replaceAll(".", "-")}`, r3 = /(--_?ui5)([^,:)\s]+)/g;
  return e2.replaceAll(r3, `$1-${n2}$2`);
};
let i$k, s$q = "";
const u$f = /* @__PURE__ */ new Map(), r$p = m$i("Runtimes", []), x$3 = () => {
  if (i$k === void 0) {
    i$k = r$p.length;
    const e2 = e$j;
    r$p.push({ ...e2, get scopingSuffix() {
      return c$f();
    }, get registeredTags() {
      return T$6();
    }, get scopingRules() {
      return m$h();
    }, alias: s$q, description: `Runtime ${i$k} - ver ${e2.version}${""}` });
  }
}, I$6 = () => i$k, b$b = (e2, m2) => {
  const o2 = `${e2},${m2}`;
  if (u$f.has(o2)) return u$f.get(o2);
  const t3 = r$p[e2], n2 = r$p[m2];
  if (!t3 || !n2) throw new Error("Invalid runtime index supplied");
  if (t3.isNext || n2.isNext) return t3.buildTime - n2.buildTime;
  const c2 = t3.major - n2.major;
  if (c2) return c2;
  const a3 = t3.minor - n2.minor;
  if (a3) return a3;
  const f4 = t3.patch - n2.patch;
  if (f4) return f4;
  const l3 = new Intl.Collator(void 0, { numeric: true, sensitivity: "base" }).compare(t3.suffix, n2.suffix);
  return u$f.set(o2, l3), l3;
}, $$5 = () => r$p;
const g$9 = m$i("Tags", /* @__PURE__ */ new Map()), d$f = /* @__PURE__ */ new Set();
let s$p = /* @__PURE__ */ new Map(), c$e;
const m$g = -1, h$8 = (e2) => {
  d$f.add(e2), g$9.set(e2, I$6());
}, w$6 = (e2) => d$f.has(e2), T$6 = () => [...d$f.values()], $$4 = (e2) => {
  let n2 = g$9.get(e2);
  n2 === void 0 && (n2 = m$g), s$p.has(n2) || s$p.set(n2, /* @__PURE__ */ new Set()), s$p.get(n2).add(e2), c$e || (c$e = setTimeout(() => {
    y$b(), s$p = /* @__PURE__ */ new Map(), c$e = void 0;
  }, 1e3));
}, y$b = () => {
  const e2 = $$5(), n2 = I$6(), l3 = e2[n2];
  let t3 = "Multiple UI5 Web Components instances detected.";
  e2.length > 1 && (t3 = `${t3}
Loading order (versions before 1.1.0 not listed): ${e2.map((i3) => `
${i3.description}`).join("")}`), [...s$p.keys()].forEach((i3) => {
    let o2, r3;
    i3 === m$g ? (o2 = 1, r3 = { description: "Older unknown runtime" }) : (o2 = b$b(n2, i3), r3 = e2[i3]);
    let a3;
    o2 > 0 ? a3 = "an older" : o2 < 0 ? a3 = "a newer" : a3 = "the same", t3 = `${t3}

"${l3.description}" failed to define ${s$p.get(i3).size} tag(s) as they were defined by a runtime of ${a3} version "${r3.description}": ${[...s$p.get(i3)].sort().join(", ")}.`, o2 > 0 ? t3 = `${t3}
WARNING! If your code uses features of the above web components, unavailable in ${r3.description}, it might not work as expected!` : t3 = `${t3}
Since the above web components were defined by the same or newer version runtime, they should be compatible with your code.`;
  }), t3 = `${t3}

To prevent other runtimes from defining tags that you use, consider using scoping or have third-party libraries use scoping: https://github.com/SAP/ui5-webcomponents/blob/main/docs/2-advanced/06-scoping.md.`, console.warn(t3);
};
const t$o = /* @__PURE__ */ new Set(), n$u = (e2) => {
  t$o.add(e2);
}, r$o = (e2) => t$o.has(e2);
const s$o = /* @__PURE__ */ new Set(), d$e = new i$r(), n$t = new l$p();
let t$n, a$k, m$f, i$j;
const l$n = async (e2) => {
  n$t.add(e2), await P$7();
}, c$d = (e2) => {
  d$e.fireEvent("beforeComponentRender", e2), s$o.add(e2), e2._render();
}, h$7 = (e2) => {
  n$t.remove(e2), s$o.delete(e2);
}, P$7 = async () => {
  i$j || (i$j = new Promise((e2) => {
    window.requestAnimationFrame(() => {
      n$t.process(c$d), i$j = null, e2(), m$f || (m$f = setTimeout(() => {
        m$f = void 0, n$t.isEmpty() && U$1();
      }, 200));
    });
  })), await i$j;
}, y$a = () => t$n || (t$n = new Promise((e2) => {
  a$k = e2, window.requestAnimationFrame(() => {
    n$t.isEmpty() && (t$n = void 0, e2());
  });
}), t$n), I$5 = () => {
  const e2 = T$6().map((r3) => customElements.whenDefined(r3));
  return Promise.all(e2);
}, f$h = async () => {
  await I$5(), await y$a();
}, U$1 = () => {
  n$t.isEmpty() && a$k && (a$k(), a$k = void 0, t$n = void 0);
}, C$5 = async (e2) => {
  s$o.forEach((r3) => {
    const o2 = r3.constructor, u3 = o2.getMetadata().getTag(), w2 = r$o(o2), p3 = o2.getMetadata().isLanguageAware(), E2 = o2.getMetadata().isThemeAware();
    (!e2 || e2.tag === u3 || e2.rtlAware && w2 || e2.languageAware && p3 || e2.themeAware && E2) && l$n(r3);
  }), await f$h();
};
const g$8 = typeof document > "u", i$i = (e2, t3) => t3 ? `${e2}|${t3}` : e2, l$m = (e2) => e2 === void 0 ? true : b$b(I$6(), parseInt(e2)) === 1, c$c = (e2, t3, r3 = "", s2) => {
  const d2 = I$6(), n2 = new CSSStyleSheet();
  n2.replaceSync(e2), n2._ui5StyleId = i$i(t3, r3), s2 && (n2._ui5RuntimeIndex = d2, n2._ui5Theme = s2), document.adoptedStyleSheets = [...document.adoptedStyleSheets, n2];
}, y$9 = (e2, t3, r3 = "", s2) => {
  const d2 = I$6(), n2 = document.adoptedStyleSheets.find((o2) => o2._ui5StyleId === i$i(t3, r3));
  if (n2) if (!s2) n2.replaceSync(e2 || "");
  else {
    const o2 = n2._ui5RuntimeIndex;
    (n2._ui5Theme !== s2 || l$m(o2)) && (n2.replaceSync(e2 || ""), n2._ui5RuntimeIndex = String(d2), n2._ui5Theme = s2);
  }
}, S$4 = (e2, t3 = "") => g$8 ? true : !!document.adoptedStyleSheets.find((r3) => r3._ui5StyleId === i$i(e2, t3)), f$g = (e2, t3 = "") => {
  document.adoptedStyleSheets = document.adoptedStyleSheets.filter((r3) => r3._ui5StyleId !== i$i(e2, t3));
}, R$4 = (e2, t3, r3 = "", s2) => {
  S$4(t3, r3) ? y$9(e2, t3, r3, s2) : c$c(e2, t3, r3, s2);
}, m$e = (e2, t3) => e2 === void 0 ? t3 : t3 === void 0 ? e2 : `${e2} ${t3}`;
const t$m = new i$r(), r$n = "themeRegistered", n$s = (e2) => {
  t$m.attachEvent(r$n, e2);
}, s$n = (e2) => t$m.fireEvent(r$n, e2);
const l$l = /* @__PURE__ */ new Map(), h$6 = /* @__PURE__ */ new Map(), u$e = /* @__PURE__ */ new Map(), T$5 = /* @__PURE__ */ new Set(), i$h = /* @__PURE__ */ new Set(), p$8 = (e2, r3, t3) => {
  h$6.set(`${e2}/${r3}`, t3), T$5.add(e2), i$h.add(r3), s$n(r3);
}, m$d = async (e2, r3, t3) => {
  const g2 = `${e2}_${r3}_${t3 || ""}`, s2 = l$l.get(g2);
  if (s2 !== void 0) return s2;
  if (!i$h.has(r3)) {
    const $2 = [...i$h.values()].join(", ");
    return console.warn(`You have requested a non-registered theme ${r3} - falling back to ${e$l}. Registered themes are: ${$2}`), a$j(e2, e$l);
  }
  const [n2, d2] = await Promise.all([a$j(e2, r3), t3 ? a$j(e2, t3, true) : void 0]), o2 = m$e(n2, d2);
  return o2 && l$l.set(g2, o2), o2;
}, a$j = async (e2, r3, t3 = false) => {
  const s2 = (t3 ? u$e : h$6).get(`${e2}/${r3}`);
  if (!s2) {
    t3 || console.error(`Theme [${r3}] not registered for package [${e2}]`);
    return;
  }
  let n2;
  try {
    n2 = await s2(r3);
  } catch (d2) {
    console.error(e2, d2.message);
    return;
  }
  return n2;
}, w$5 = () => T$5, P$6 = (e2) => i$h.has(e2);
const r$m = /* @__PURE__ */ new Set(), s$m = () => {
  let e2 = document.querySelector(".sapThemeMetaData-Base-baseLib") || document.querySelector(".sapThemeMetaData-UI5-sap-ui-core");
  if (e2) return getComputedStyle(e2).backgroundImage;
  e2 = document.createElement("span"), e2.style.display = "none", e2.classList.add("sapThemeMetaData-Base-baseLib"), document.body.appendChild(e2);
  let t3 = getComputedStyle(e2).backgroundImage;
  return t3 === "none" && (e2.classList.add("sapThemeMetaData-UI5-sap-ui-core"), t3 = getComputedStyle(e2).backgroundImage), document.body.removeChild(e2), t3;
}, o$h = (e2) => {
  const t3 = /\(["']?data:text\/plain;utf-8,(.*?)['"]?\)$/i.exec(e2);
  if (t3 && t3.length >= 2) {
    let a3 = t3[1];
    if (a3 = a3.replace(/\\"/g, '"'), a3.charAt(0) !== "{" && a3.charAt(a3.length - 1) !== "}") try {
      a3 = decodeURIComponent(a3);
    } catch {
      r$m.has("decode") || (console.warn("Malformed theme metadata string, unable to decodeURIComponent"), r$m.add("decode"));
      return;
    }
    try {
      return JSON.parse(a3);
    } catch {
      r$m.has("parse") || (console.warn("Malformed theme metadata string, unable to parse JSON"), r$m.add("parse"));
    }
  }
}, d$d = (e2) => {
  let t3, a3;
  try {
    const n2 = e2.Path.split(".");
    t3 = n2.length === 4 ? n2[2] : getComputedStyle(document.body).getPropertyValue("--sapSapThemeId"), a3 = e2.Extends[0];
  } catch {
    r$m.has("object") || (console.warn("Malformed theme metadata Object", e2), r$m.add("object"));
    return;
  }
  return { themeName: t3, baseThemeName: a3 };
}, m$c = () => {
  const e2 = s$m();
  if (!e2 || e2 === "none") return;
  const t3 = o$h(e2);
  if (t3) return d$d(t3);
};
const t$l = new i$r(), d$c = "themeLoaded", r$l = (e2) => t$l.fireEvent(d$c, e2);
const d$b = (r3, n2) => {
  const e2 = document.createElement("link");
  return e2.type = "text/css", e2.rel = "stylesheet", n2 && Object.entries(n2).forEach((t3) => e2.setAttribute(...t3)), e2.href = r3, document.head.appendChild(e2), new Promise((t3) => {
    e2.addEventListener("load", t3), e2.addEventListener("error", t3);
  });
};
let t$k;
i$n(() => {
  t$k = void 0;
});
const n$r = () => (t$k === void 0 && (t$k = S$5()), t$k), u$d = (e2) => `${n$r()}Base/baseLib/${e2}/css_variables.css`, i$g = async (e2) => {
  const o2 = document.querySelector(`[sap-ui-webcomponents-theme="${e2}"]`);
  o2 && document.head.removeChild(o2), await d$b(u$d(e2), { "sap-ui-webcomponents-theme": e2 });
};
const s$l = "@ui5/webcomponents-theming", S$3 = () => w$5().has(s$l), P$5 = async (e2) => {
  if (!S$3()) return;
  const t3 = await m$d(s$l, e2);
  t3 && R$4(t3, "data-ui5-theme-properties", s$l, e2);
}, E$4 = () => {
  f$g("data-ui5-theme-properties", s$l);
}, U = async (e2, t3) => {
  const o2 = [...w$5()].map(async (a3) => {
    if (a3 === s$l) return;
    const i3 = await m$d(a3, e2, t3);
    i3 && R$4(i3, `data-ui5-component-properties-${I$6()}`, a3);
  });
  return Promise.all(o2);
}, w$4 = async (e2) => {
  const t3 = m$c();
  if (t3) return t3;
  const r3 = n$w("OpenUI5Support");
  if (r3 && r3.isOpenUI5Detected()) {
    if (r3.cssVariablesLoaded()) return { themeName: r3.getConfigurationSettingsObject()?.theme, baseThemeName: "" };
  } else if (n$r()) return await i$g(e2), m$c();
}, I$4 = async (e2) => {
  const t3 = await w$4(e2);
  !t3 || e2 !== t3.themeName ? await P$5(e2) : E$4();
  const r3 = P$6(e2) ? e2 : t3 && t3.baseThemeName;
  await U(r3 || e$l, t3 && t3.themeName === e2 ? e2 : void 0), r$l(e2);
};
const d$a = () => new Promise((e2) => {
  document.body ? e2() : document.addEventListener("DOMContentLoaded", () => {
    e2();
  });
});
const n$q = `@font-face{font-family:"72";font-style:normal;font-weight:400;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Regular.woff2) format("woff2"),local("72");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72full";font-style:normal;font-weight:400;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Regular-full.woff2) format("woff2")}
@font-face{font-family:"72-Bold";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Bold.woff2) format("woff2"),local("72-Bold");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72";font-style:normal;font-weight:700;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Bold.woff2) format("woff2"),local("72-Bold");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72-Boldfull";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Bold-full.woff2) format("woff2")}
@font-face{font-family:"72full";font-style:normal;font-weight:700;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Bold-full.woff2) format("woff2")}
@font-face{font-family:"72-Semibold";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Semibold.woff2) format("woff2"),local("72-Semibold");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72";font-style:normal;font-weight:600;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Semibold.woff2) format("woff2"),local("72-Semibold");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72-Semiboldfull";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Semibold-full.woff2) format("woff2")}
@font-face{font-family:"72full";font-style:normal;font-weight:600;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Semibold-full.woff2) format("woff2")}
@font-face{font-family:"72-SemiboldDuplex";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-SemiboldDuplex.woff2) format("woff2"),local("72-SemiboldDuplex");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72-SemiboldDuplexfull";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-SemiboldDuplex-full.woff2) format("woff2")}
@font-face{font-family:"72-Light";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Light.woff2) format("woff2"),local("72-Light");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72";font-style:normal;font-weight:300;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Light.woff2) format("woff2"),local("72-Light");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72-Lightfull";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Light-full.woff2) format("woff2")}
@font-face{font-family:"72full";font-style:normal;font-weight:300;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Light-full.woff2) format("woff2")}
@font-face{font-family:"72Black";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Black.woff2) format("woff2"),local("72Black");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+160-161,U+178,U+17D-17E,U+192,U+237,U+2C6-2C7,U+2DC,U+3BC,U+1E0E,U+2013-2014,U+2018-2019,U+201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72";font-style:normal;font-weight:900;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Black.woff2) format("woff2"),local("72Black");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+160-161,U+178,U+17D-17E,U+192,U+237,U+2C6-2C7,U+2DC,U+3BC,U+1E0E,U+2013-2014,U+2018-2019,U+201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72Blackfull";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Black-full.woff2) format("woff2")}
@font-face{font-family:"72full";font-style:normal;font-weight:900;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Black-full.woff2) format("woff2")}
@font-face{font-family:"72-BoldItalic";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-BoldItalic.woff2) format("woff2"),local("72-BoldItalic");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72";font-style:italic;font-weight:700;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-BoldItalic.woff2) format("woff2"),local("72-BoldItalic");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72full";font-style:italic;font-weight:700;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-BoldItalic-full.woff2) format("woff2")}
@font-face{font-family:"72-Condensed";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Condensed.woff2) format("woff2"),local("72-Condensed");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72";font-style:normal;font-weight:400;font-stretch:condensed;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Condensed.woff2) format("woff2"),local("72-Condensed");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72";font-style:normal;font-weight:400;font-stretch:condensed;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Condensed-full.woff2) format("woff2");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72-CondensedBold";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-CondensedBold.woff2) format("woff2"),local("72-CondensedBold");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72";font-style:normal;font-weight:700;font-stretch:condensed;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-CondensedBold.woff2) format("woff2"),local("72-CondensedBold");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72full";font-style:normal;font-weight:700;font-stretch:condensed;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-CondensedBold-full.woff2) format("woff2")}
@font-face{font-family:"72-Italic";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Italic.woff2) format("woff2"),local("72-Italic");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72";font-style:italic;font-weight:400;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Italic.woff2) format("woff2"),local("72-Italic");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72full";font-style:italic;font-weight:400;src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72-Italic-full.woff2) format("woff2")}
@font-face{font-family:"72Mono";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72Mono-Regular.woff2) format("woff2"),local("72Mono");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72Monofull";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72Mono-Regular-full.woff2) format("woff2")}
@font-face{font-family:"72Mono-Bold";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72Mono-Bold.woff2) format("woff2"),local("72Mono-Bold");unicode-range:U+00,U+0D,U+20-7E,U+A0-FF,U+131,U+152-153,U+161,U+178,U+17D-17E,U+192,U+237,U+2C6,U+2DC,U+3BC,U+1E9E,U+2013-2014,U+2018-201A,U+201C-201E,U+2020-2022,U+2026,U+2030,U+2039-203A,U+2044,U+20AC,U+2122}
@font-face{font-family:"72Mono-Boldfull";src:url(https://cdn.jsdelivr.net/npm/@sap-theming/theming-base-content@11.29.3/content/Base/baseLib/baseTheme/fonts/72Mono-Bold-full.woff2) format("woff2")}`;
let o$g;
i$n(() => {
  o$g = void 0;
});
const a$i = () => (o$g === void 0 && (o$g = U$2()), o$g);
const a$h = () => {
  const t3 = n$w("OpenUI5Support");
  (!t3 || !t3.isOpenUI5Detected()) && f$f();
}, f$f = () => {
  const t3 = document.querySelector("head>style[data-ui5-font-face]");
  !a$i() || t3 || S$4("data-ui5-font-face") || c$c(n$q, "data-ui5-font-face");
};
const a$g = ":root{--_ui5_content_density:cozy}.sapUiSizeCompact,.ui5-content-density-compact,[data-ui5-compact-size]{--_ui5_content_density:compact}";
const e$i = () => {
  S$4("data-ui5-system-css-vars") || c$c(a$g, "data-ui5-system-css-vars");
};
const t$j = "html:not(:has(.ui5-content-native-scrollbars)){scrollbar-color:var(--sapScrollBar_FaceColor) var(--sapScrollBar_TrackColor)}";
const s$k = () => {
  S$4("data-ui5-scrollbar-styles") || c$c(t$j, "data-ui5-scrollbar-styles");
};
let t$i = false;
const i$f = () => {
  h$9() && w$8() && !t$i && (document.body.addEventListener("touchstart", () => {
  }), t$i = true);
};
let o$f = false, r$k;
const p$7 = new i$r(), h$5 = () => o$f, P$4 = (t3) => {
  if (!o$f) {
    p$7.attachEvent("boot", t3);
    return;
  }
  t3();
}, b$a = async () => {
  if (r$k !== void 0) return r$k;
  const t3 = async (n2) => {
    if (x$3(), typeof document > "u") {
      n2();
      return;
    }
    n$s(F$1);
    const e2 = n$w("OpenUI5Support"), f4 = e2 ? e2.isOpenUI5Detected() : false, s2 = n$w("F6Navigation");
    e2 && await e2.init(), s2 && !f4 && s2.init(), await d$a(), await I$4(r$j()), e2 && e2.attachListeners(), a$h(), e$i(), s$k(), i$f(), n2(), o$f = true, p$7.fireEvent("boot");
  };
  return r$k = new Promise(t3), r$k;
}, F$1 = (t3) => {
  o$f && t3 === r$j() && I$4(r$j());
};
let t$h;
i$n(() => {
  t$h = void 0;
});
const r$j = () => (t$h === void 0 && (t$h = T$7()), t$h), n$p = () => {
  const e2 = r$j();
  return l$k(e2) ? !e2.startsWith("sap_horizon") : !m$c()?.baseThemeName?.startsWith("sap_horizon");
}, l$k = (e2) => s$u.includes(e2);
const r$i = () => m$i("CustomStyle.eventProvider", new i$r()), n$o = "CustomCSSChange", i$e = (t3) => {
  r$i().attachEvent(n$o, t3);
}, c$b = () => m$i("CustomStyle.customCSSFor", {});
i$e((t3) => {
  C$5({ tag: t3 });
});
const l$j = (t3) => {
  const e2 = c$b();
  return e2[t3] ? e2[t3].join("") : "";
};
const t$g = typeof document > "u", o$e = () => {
  if (t$g) return a$n;
  const a3 = navigator.languages, n2 = () => navigator.language;
  return a3 && a3[0] || n2() || a$n;
};
const e$h = new i$r(), n$n = "languageChange", t$f = (a3) => {
  e$h.attachEvent(n$n, a3);
}, o$d = (a3) => e$h.fireEventAsync(n$n, a3);
let e$g, t$e;
i$n(() => {
  e$g = void 0, t$e = void 0;
});
let a$f = false;
const s$j = () => a$f, l$i = () => (e$g === void 0 && (e$g = L$6()), e$g), L$5 = async (n2) => {
  e$g !== n2 && (a$f = true, e$g = n2, await o$d(n2), a$f = false, h$5() && await C$5({ languageAware: true }));
}, h$4 = () => (t$e === void 0 && (t$e = R$5()), t$e);
const Language = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  getFetchDefaultLanguage: h$4,
  getLanguage: l$i,
  getLanguageChangePending: s$j,
  setLanguage: L$5
}, Symbol.toStringTag, { value: "Module" }));
const n$m = /^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?((?:-[0-9A-Z]{5,8}|-[0-9][0-9A-Z]{3})*)((?:-[0-9A-WYZ](?:-[0-9A-Z]{2,8})+)*)(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;
let r$h = class r {
  constructor(s2) {
    const t3 = n$m.exec(s2.replace(/_/g, "-"));
    if (t3 === null) throw new Error(`The given language ${s2} does not adhere to BCP-47.`);
    this.sLocaleId = s2, this.sLanguage = t3[1] || a$n, this.sScript = t3[2] || "", this.sRegion = t3[3] || "", this.sVariant = t3[4] && t3[4].slice(1) || null, this.sExtension = t3[5] && t3[5].slice(1) || null, this.sPrivateUse = t3[6] || null, this.sLanguage && (this.sLanguage = this.sLanguage.toLowerCase()), this.sScript && (this.sScript = this.sScript.toLowerCase().replace(/^[a-z]/, (i3) => i3.toUpperCase())), this.sRegion && (this.sRegion = this.sRegion.toUpperCase());
  }
  getLanguage() {
    return this.sLanguage;
  }
  getScript() {
    return this.sScript;
  }
  getRegion() {
    return this.sRegion;
  }
  getVariant() {
    return this.sVariant;
  }
  getVariantSubtags() {
    return this.sVariant ? this.sVariant.split("-") : [];
  }
  getExtension() {
    return this.sExtension;
  }
  getExtensionSubtags() {
    return this.sExtension ? this.sExtension.slice(2).split("-") : [];
  }
  getPrivateUse() {
    return this.sPrivateUse;
  }
  getPrivateUseSubtags() {
    return this.sPrivateUse ? this.sPrivateUse.slice(2).split("-") : [];
  }
  hasPrivateUseSubtag(s2) {
    return this.getPrivateUseSubtags().indexOf(s2) >= 0;
  }
  toString() {
    const s2 = [this.sLanguage];
    return this.sScript && s2.push(this.sScript), this.sRegion && s2.push(this.sRegion), this.sVariant && s2.push(this.sVariant), this.sExtension && s2.push(this.sExtension), this.sPrivateUse && s2.push(this.sPrivateUse), s2.join("-");
  }
};
const r$g = /* @__PURE__ */ new Map(), n$l = (t3) => (r$g.has(t3) || r$g.set(t3, new r$h(t3)), r$g.get(t3)), c$a = (t3) => {
  try {
    if (t3 && typeof t3 == "string") return n$l(t3);
  } catch {
  }
  return new r$h(r$q);
}, s$i = (t3) => {
  if (t3) return c$a(t3);
  const e2 = l$i();
  return e2 ? n$l(e2) : c$a(o$e());
};
const _$4 = /^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?((?:-[0-9A-Z]{5,8}|-[0-9][0-9A-Z]{3})*)((?:-[0-9A-WYZ](?:-[0-9A-Z]{2,8})+)*)(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i, c$9 = /(?:^|-)(saptrc|sappsd)(?:-|$)/i, f$e = { he: "iw", yi: "ji", nb: "no", sr: "sh" }, p$6 = (i3) => {
  let e2;
  if (!i3) return r$q;
  if (typeof i3 == "string" && (e2 = _$4.exec(i3.replace(/_/g, "-")))) {
    let t3 = e2[1].toLowerCase(), n2 = e2[3] ? e2[3].toUpperCase() : void 0;
    const s2 = e2[2] ? e2[2].toLowerCase() : void 0, r3 = e2[4] ? e2[4].slice(1) : void 0, o2 = e2[6];
    return t3 = f$e[t3] || t3, o2 && (e2 = c$9.exec(o2)) || r3 && (e2 = c$9.exec(r3)) ? `en_US_${e2[1].toLowerCase()}` : (t3 === "zh" && !n2 && (s2 === "hans" ? n2 = "CN" : s2 === "hant" && (n2 = "TW")), t3 + (n2 ? "_" + n2 + (r3 ? "_" + r3.replace("-", "_") : "") : ""));
  }
  return r$q;
};
const r$f = { zh_HK: "zh_TW", in: "id" }, n$k = (t3) => {
  if (!t3) return r$q;
  if (r$f[t3]) return r$f[t3];
  const L3 = t3.lastIndexOf("_");
  return L3 >= 0 ? t3.slice(0, L3) : t3 !== r$q ? r$q : "";
};
const d$9 = /* @__PURE__ */ new Set(), m$b = /* @__PURE__ */ new Set(), g$7 = /* @__PURE__ */ new Map(), l$h = /* @__PURE__ */ new Map(), u$c = /* @__PURE__ */ new Map(), $$3 = (n2, t3, e2) => {
  const r3 = `${n2}/${t3}`;
  u$c.set(r3, e2);
}, f$d = (n2, t3) => {
  g$7.set(n2, t3);
}, A$6 = (n2) => g$7.get(n2), h$3 = (n2, t3) => {
  const e2 = `${n2}/${t3}`;
  return u$c.has(e2);
}, B$2 = (n2, t3) => {
  const e2 = `${n2}/${t3}`, r3 = u$c.get(e2);
  return r3 && !l$h.get(e2) && l$h.set(e2, r3(t3)), l$h.get(e2);
}, M$4 = (n2) => {
  d$9.has(n2) || (console.warn(`[${n2}]: Message bundle assets are not configured. Falling back to English texts.`, ` Add \`import "${n2}/dist/Assets.js"\` in your bundle and make sure your build tool supports dynamic imports and JSON imports. See section "Assets" in the documentation for more information.`), d$9.add(n2));
}, L$4 = (n2, t3) => t3 !== a$n && !h$3(n2, t3), w$3 = async (n2) => {
  const t3 = s$i().getLanguage(), e2 = s$i().getRegion(), r3 = s$i().getVariant();
  let s2 = t3 + (e2 ? `-${e2}` : "") + (r3 ? `-${r3}` : "");
  if (L$4(n2, s2)) for (s2 = p$6(s2); L$4(n2, s2); ) s2 = n$k(s2);
  const I2 = h$4();
  if (s2 === a$n && !I2) {
    f$d(n2, null);
    return;
  }
  if (!h$3(n2, s2)) {
    M$4(n2);
    return;
  }
  try {
    const o2 = await B$2(n2, s2);
    f$d(n2, o2);
  } catch (o2) {
    const a3 = o2;
    m$b.has(a3.message) || (m$b.add(a3.message), console.error(a3.message));
  }
};
t$f((n2) => {
  const t3 = [...g$7.keys()];
  return Promise.all(t3.map(w$3));
});
const g$6 = /('')|'([^']+(?:''[^']*)*)(?:'|$)|\{([0-9]+(?:\s*,[^{}]*)?)\}|[{}]/g, i$d = (n2, t3) => (t3 = t3 || [], n2.replace(g$6, (p3, s2, e2, r3, o2) => {
  if (s2) return "'";
  if (e2) return e2.replace(/''/g, "'");
  if (r3) {
    const a3 = typeof r3 == "string" ? parseInt(r3) : r3;
    return String(t3[a3]);
  }
  throw new Error(`[i18n]: pattern syntax error at pos ${o2}`);
}));
const r$e = /* @__PURE__ */ new Map();
let u$b = class u {
  constructor(e2) {
    this.packageName = e2;
  }
  getText(e2, ...i3) {
    if (typeof e2 == "string" && (e2 = { key: e2, defaultText: e2 }), !e2 || !e2.key) return "";
    const t3 = A$6(this.packageName);
    t3 && !t3[e2.key] && console.warn(`Key ${e2.key} not found in the i18n bundle, the default text will be used`);
    const l3 = t3 && t3[e2.key] ? t3[e2.key] : e2.defaultText || e2.key;
    return i$d(l3, i3);
  }
};
const a$e = (n2) => {
  if (r$e.has(n2)) return r$e.get(n2);
  const e2 = new u$b(n2);
  return r$e.set(n2, e2), e2;
}, f$c = async (n2) => (await w$3(n2), a$e(n2));
const useIsomorphicLayoutEffect = typeof window !== "undefined" ? reactExports.useLayoutEffect : reactExports.useEffect;
globalThis["@ui5/webcomponents-react"] ??= {};
const STORE_LOCATION = globalThis["@ui5/webcomponents-react"];
function getStyleStoreListenersSymbol() {
  return Symbol.for(`@ui5/webcomponents-react/StyleStore-${I$6()}/Listeners`);
}
function getStyleStoreSymbol() {
  return Symbol.for(`@ui5/webcomponents-react/StyleStore-${I$6()}`);
}
const initialStore = {
  staticCssInjected: false,
  componentsMap: /* @__PURE__ */ new Map()
};
function getListeners() {
  STORE_LOCATION[getStyleStoreListenersSymbol()] ??= [];
  return STORE_LOCATION[getStyleStoreListenersSymbol()];
}
function emitChange() {
  for (const listener of getListeners()) {
    listener();
  }
}
function getSnapshot() {
  STORE_LOCATION[getStyleStoreSymbol()] ??= initialStore;
  return STORE_LOCATION[getStyleStoreSymbol()];
}
function subscribe(listener) {
  const listeners2 = getListeners();
  listeners2.push(listener);
  return () => {
    const updatedListeners = getListeners();
    const index = updatedListeners.indexOf(listener);
    if (index !== -1) {
      updatedListeners.splice(index, 1);
    }
  };
}
const StyleStore = {
  subscribe,
  getSnapshot,
  getServerSnapshot: () => {
    return initialStore;
  },
  setStaticCssInjected: (staticCssInjected) => {
    const curr = getSnapshot();
    STORE_LOCATION[getStyleStoreSymbol()] = {
      ...curr,
      staticCssInjected
    };
    emitChange();
  },
  mountComponent: (componentName) => {
    const { componentsMap } = getSnapshot();
    if (componentsMap.has(componentName)) {
      componentsMap.set(componentName, componentsMap.get(componentName) + 1);
    } else {
      componentsMap.set(componentName, 1);
    }
    emitChange();
  },
  unmountComponent: (componentName) => {
    const { componentsMap } = getSnapshot();
    if (componentsMap.has(componentName)) {
      componentsMap.set(componentName, componentsMap.get(componentName) - 1);
    }
    emitChange();
  }
};
function useStylesheet(styles2, componentName, options) {
  const { staticCssInjected, componentsMap } = reactExports.useSyncExternalStore(StyleStore.subscribe, StyleStore.getSnapshot, StyleStore.getServerSnapshot);
  useIsomorphicLayoutEffect(() => {
    const scopedComponentName = `${componentName}-${I$6()}`;
    const shouldInject = !staticCssInjected;
    if (shouldInject) {
      R$4(styles2, "data-ui5wcr-component", scopedComponentName);
      StyleStore.mountComponent(componentName);
    }
    return () => {
      if (shouldInject) {
        StyleStore.unmountComponent(componentName);
        const numberOfMountedComponents = componentsMap.get(componentName);
        if (numberOfMountedComponents <= 0) {
          f$g("data-ui5wcr-component", scopedComponentName);
        }
      }
    };
  }, [styles2, staticCssInjected]);
}
function useSyncRef(ref) {
  const localRef = reactExports.useRef(null);
  const componentRef = reactExports.useCallback((node) => {
    if (ref) {
      if (typeof ref === "function") {
        ref(node);
      }
      if ({}.hasOwnProperty.call(ref, "current")) {
        ref.current = node;
      }
    }
    localRef.current = node;
  }, [ref]);
  return [componentRef, localRef];
}
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
var t$d;
const i$c = window, s$h = i$c.trustedTypes, e$f = s$h ? s$h.createPolicy("lit-html", { createHTML: (t3) => t3 }) : void 0, o$c = "$lit$", n$j = `lit$${(Math.random() + "").slice(9)}$`, l$g = "?" + n$j, h$2 = `<${l$g}>`, r$d = document, u$a = () => r$d.createComment(""), d$8 = (t3) => null === t3 || "object" != typeof t3 && "function" != typeof t3, c$8 = Array.isArray, v$5 = (t3) => c$8(t3) || "function" == typeof (null == t3 ? void 0 : t3[Symbol.iterator]), a$d = "[ 	\n\f\r]", f$b = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g, _$3 = /-->/g, m$a = />/g, p$5 = RegExp(`>|${a$d}(?:([^\\s"'>=/]+)(${a$d}*=${a$d}*(?:[^ 	
\f\r"'\`<>=]|("|')|))|$)`, "g"), g$5 = /'/g, $$2 = /"/g, y$8 = /^(?:script|style|textarea|title)$/i, w$2 = (t3) => (i3, ...s2) => ({ _$litType$: t3, strings: i3, values: s2 }), x$2 = w$2(1), b$9 = w$2(2), T$4 = Symbol.for("lit-noChange"), A$5 = Symbol.for("lit-nothing"), E$3 = /* @__PURE__ */ new WeakMap(), C$4 = r$d.createTreeWalker(r$d, 129, null, false);
function P$3(t3, i3) {
  if (!Array.isArray(t3) || !t3.hasOwnProperty("raw")) throw Error("invalid template strings array");
  return void 0 !== e$f ? e$f.createHTML(i3) : i3;
}
const V$2 = (t3, i3) => {
  const s2 = t3.length - 1, e2 = [];
  let l3, r3 = 2 === i3 ? "<svg>" : "", u3 = f$b;
  for (let i4 = 0; i4 < s2; i4++) {
    const s3 = t3[i4];
    let d2, c2, v2 = -1, a3 = 0;
    for (; a3 < s3.length && (u3.lastIndex = a3, c2 = u3.exec(s3), null !== c2); ) a3 = u3.lastIndex, u3 === f$b ? "!--" === c2[1] ? u3 = _$3 : void 0 !== c2[1] ? u3 = m$a : void 0 !== c2[2] ? (y$8.test(c2[2]) && (l3 = RegExp("</" + c2[2], "g")), u3 = p$5) : void 0 !== c2[3] && (u3 = p$5) : u3 === p$5 ? ">" === c2[0] ? (u3 = null != l3 ? l3 : f$b, v2 = -1) : void 0 === c2[1] ? v2 = -2 : (v2 = u3.lastIndex - c2[2].length, d2 = c2[1], u3 = void 0 === c2[3] ? p$5 : '"' === c2[3] ? $$2 : g$5) : u3 === $$2 || u3 === g$5 ? u3 = p$5 : u3 === _$3 || u3 === m$a ? u3 = f$b : (u3 = p$5, l3 = void 0);
    const w2 = u3 === p$5 && t3[i4 + 1].startsWith("/>") ? " " : "";
    r3 += u3 === f$b ? s3 + h$2 : v2 >= 0 ? (e2.push(d2), s3.slice(0, v2) + o$c + s3.slice(v2) + n$j + w2) : s3 + n$j + (-2 === v2 ? (e2.push(void 0), i4) : w2);
  }
  return [P$3(t3, r3 + (t3[s2] || "<?>") + (2 === i3 ? "</svg>" : "")), e2];
};
let N$3 = class N {
  constructor({ strings: t3, _$litType$: i3 }, e2) {
    let h2;
    this.parts = [];
    let r3 = 0, d2 = 0;
    const c2 = t3.length - 1, v2 = this.parts, [a3, f4] = V$2(t3, i3);
    if (this.el = N.createElement(a3, e2), C$4.currentNode = this.el.content, 2 === i3) {
      const t4 = this.el.content, i4 = t4.firstChild;
      i4.remove(), t4.append(...i4.childNodes);
    }
    for (; null !== (h2 = C$4.nextNode()) && v2.length < c2; ) {
      if (1 === h2.nodeType) {
        if (h2.hasAttributes()) {
          const t4 = [];
          for (const i4 of h2.getAttributeNames()) if (i4.endsWith(o$c) || i4.startsWith(n$j)) {
            const s2 = f4[d2++];
            if (t4.push(i4), void 0 !== s2) {
              const t5 = h2.getAttribute(s2.toLowerCase() + o$c).split(n$j), i5 = /([.?@])?(.*)/.exec(s2);
              v2.push({ type: 1, index: r3, name: i5[2], strings: t5, ctor: "." === i5[1] ? H$3 : "?" === i5[1] ? L$3 : "@" === i5[1] ? z$2 : k$5 });
            } else v2.push({ type: 6, index: r3 });
          }
          for (const i4 of t4) h2.removeAttribute(i4);
        }
        if (y$8.test(h2.tagName)) {
          const t4 = h2.textContent.split(n$j), i4 = t4.length - 1;
          if (i4 > 0) {
            h2.textContent = s$h ? s$h.emptyScript : "";
            for (let s2 = 0; s2 < i4; s2++) h2.append(t4[s2], u$a()), C$4.nextNode(), v2.push({ type: 2, index: ++r3 });
            h2.append(t4[i4], u$a());
          }
        }
      } else if (8 === h2.nodeType) if (h2.data === l$g) v2.push({ type: 2, index: r3 });
      else {
        let t4 = -1;
        for (; -1 !== (t4 = h2.data.indexOf(n$j, t4 + 1)); ) v2.push({ type: 7, index: r3 }), t4 += n$j.length - 1;
      }
      r3++;
    }
  }
  static createElement(t3, i3) {
    const s2 = r$d.createElement("template");
    return s2.innerHTML = t3, s2;
  }
};
function S$2(t3, i3, s2 = t3, e2) {
  var o2, n2, l3, h2;
  if (i3 === T$4) return i3;
  let r3 = void 0 !== e2 ? null === (o2 = s2._$Co) || void 0 === o2 ? void 0 : o2[e2] : s2._$Cl;
  const u3 = d$8(i3) ? void 0 : i3._$litDirective$;
  return (null == r3 ? void 0 : r3.constructor) !== u3 && (null === (n2 = null == r3 ? void 0 : r3._$AO) || void 0 === n2 || n2.call(r3, false), void 0 === u3 ? r3 = void 0 : (r3 = new u3(t3), r3._$AT(t3, s2, e2)), void 0 !== e2 ? (null !== (l3 = (h2 = s2)._$Co) && void 0 !== l3 ? l3 : h2._$Co = [])[e2] = r3 : s2._$Cl = r3), void 0 !== r3 && (i3 = S$2(t3, r3._$AS(t3, i3.values), r3, e2)), i3;
}
let M$3 = class M {
  constructor(t3, i3) {
    this._$AV = [], this._$AN = void 0, this._$AD = t3, this._$AM = i3;
  }
  get parentNode() {
    return this._$AM.parentNode;
  }
  get _$AU() {
    return this._$AM._$AU;
  }
  u(t3) {
    var i3;
    const { el: { content: s2 }, parts: e2 } = this._$AD, o2 = (null !== (i3 = null == t3 ? void 0 : t3.creationScope) && void 0 !== i3 ? i3 : r$d).importNode(s2, true);
    C$4.currentNode = o2;
    let n2 = C$4.nextNode(), l3 = 0, h2 = 0, u3 = e2[0];
    for (; void 0 !== u3; ) {
      if (l3 === u3.index) {
        let i4;
        2 === u3.type ? i4 = new R$3(n2, n2.nextSibling, this, t3) : 1 === u3.type ? i4 = new u3.ctor(n2, u3.name, u3.strings, this, t3) : 6 === u3.type && (i4 = new Z(n2, this, t3)), this._$AV.push(i4), u3 = e2[++h2];
      }
      l3 !== (null == u3 ? void 0 : u3.index) && (n2 = C$4.nextNode(), l3++);
    }
    return C$4.currentNode = r$d, o2;
  }
  v(t3) {
    let i3 = 0;
    for (const s2 of this._$AV) void 0 !== s2 && (void 0 !== s2.strings ? (s2._$AI(t3, s2, i3), i3 += s2.strings.length - 2) : s2._$AI(t3[i3])), i3++;
  }
};
let R$3 = class R {
  constructor(t3, i3, s2, e2) {
    var o2;
    this.type = 2, this._$AH = A$5, this._$AN = void 0, this._$AA = t3, this._$AB = i3, this._$AM = s2, this.options = e2, this._$Cp = null === (o2 = null == e2 ? void 0 : e2.isConnected) || void 0 === o2 || o2;
  }
  get _$AU() {
    var t3, i3;
    return null !== (i3 = null === (t3 = this._$AM) || void 0 === t3 ? void 0 : t3._$AU) && void 0 !== i3 ? i3 : this._$Cp;
  }
  get parentNode() {
    let t3 = this._$AA.parentNode;
    const i3 = this._$AM;
    return void 0 !== i3 && 11 === (null == t3 ? void 0 : t3.nodeType) && (t3 = i3.parentNode), t3;
  }
  get startNode() {
    return this._$AA;
  }
  get endNode() {
    return this._$AB;
  }
  _$AI(t3, i3 = this) {
    t3 = S$2(this, t3, i3), d$8(t3) ? t3 === A$5 || null == t3 || "" === t3 ? (this._$AH !== A$5 && this._$AR(), this._$AH = A$5) : t3 !== this._$AH && t3 !== T$4 && this._(t3) : void 0 !== t3._$litType$ ? this.g(t3) : void 0 !== t3.nodeType ? this.$(t3) : v$5(t3) ? this.T(t3) : this._(t3);
  }
  k(t3) {
    return this._$AA.parentNode.insertBefore(t3, this._$AB);
  }
  $(t3) {
    this._$AH !== t3 && (this._$AR(), this._$AH = this.k(t3));
  }
  _(t3) {
    this._$AH !== A$5 && d$8(this._$AH) ? this._$AA.nextSibling.data = t3 : this.$(r$d.createTextNode(t3)), this._$AH = t3;
  }
  g(t3) {
    var i3;
    const { values: s2, _$litType$: e2 } = t3, o2 = "number" == typeof e2 ? this._$AC(t3) : (void 0 === e2.el && (e2.el = N$3.createElement(P$3(e2.h, e2.h[0]), this.options)), e2);
    if ((null === (i3 = this._$AH) || void 0 === i3 ? void 0 : i3._$AD) === o2) this._$AH.v(s2);
    else {
      const t4 = new M$3(o2, this), i4 = t4.u(this.options);
      t4.v(s2), this.$(i4), this._$AH = t4;
    }
  }
  _$AC(t3) {
    let i3 = E$3.get(t3.strings);
    return void 0 === i3 && E$3.set(t3.strings, i3 = new N$3(t3)), i3;
  }
  T(t3) {
    c$8(this._$AH) || (this._$AH = [], this._$AR());
    const i3 = this._$AH;
    let s2, e2 = 0;
    for (const o2 of t3) e2 === i3.length ? i3.push(s2 = new R(this.k(u$a()), this.k(u$a()), this, this.options)) : s2 = i3[e2], s2._$AI(o2), e2++;
    e2 < i3.length && (this._$AR(s2 && s2._$AB.nextSibling, e2), i3.length = e2);
  }
  _$AR(t3 = this._$AA.nextSibling, i3) {
    var s2;
    for (null === (s2 = this._$AP) || void 0 === s2 || s2.call(this, false, true, i3); t3 && t3 !== this._$AB; ) {
      const i4 = t3.nextSibling;
      t3.remove(), t3 = i4;
    }
  }
  setConnected(t3) {
    var i3;
    void 0 === this._$AM && (this._$Cp = t3, null === (i3 = this._$AP) || void 0 === i3 || i3.call(this, t3));
  }
};
let k$5 = class k {
  constructor(t3, i3, s2, e2, o2) {
    this.type = 1, this._$AH = A$5, this._$AN = void 0, this.element = t3, this.name = i3, this._$AM = e2, this.options = o2, s2.length > 2 || "" !== s2[0] || "" !== s2[1] ? (this._$AH = Array(s2.length - 1).fill(new String()), this.strings = s2) : this._$AH = A$5;
  }
  get tagName() {
    return this.element.tagName;
  }
  get _$AU() {
    return this._$AM._$AU;
  }
  _$AI(t3, i3 = this, s2, e2) {
    const o2 = this.strings;
    let n2 = false;
    if (void 0 === o2) t3 = S$2(this, t3, i3, 0), n2 = !d$8(t3) || t3 !== this._$AH && t3 !== T$4, n2 && (this._$AH = t3);
    else {
      const e3 = t3;
      let l3, h2;
      for (t3 = o2[0], l3 = 0; l3 < o2.length - 1; l3++) h2 = S$2(this, e3[s2 + l3], i3, l3), h2 === T$4 && (h2 = this._$AH[l3]), n2 || (n2 = !d$8(h2) || h2 !== this._$AH[l3]), h2 === A$5 ? t3 = A$5 : t3 !== A$5 && (t3 += (null != h2 ? h2 : "") + o2[l3 + 1]), this._$AH[l3] = h2;
    }
    n2 && !e2 && this.j(t3);
  }
  j(t3) {
    t3 === A$5 ? this.element.removeAttribute(this.name) : this.element.setAttribute(this.name, null != t3 ? t3 : "");
  }
};
let H$3 = class H extends k$5 {
  constructor() {
    super(...arguments), this.type = 3;
  }
  j(t3) {
    this.element[this.name] = t3 === A$5 ? void 0 : t3;
  }
};
const I$3 = s$h ? s$h.emptyScript : "";
let L$3 = class L extends k$5 {
  constructor() {
    super(...arguments), this.type = 4;
  }
  j(t3) {
    t3 && t3 !== A$5 ? this.element.setAttribute(this.name, I$3) : this.element.removeAttribute(this.name);
  }
};
let z$2 = class z extends k$5 {
  constructor(t3, i3, s2, e2, o2) {
    super(t3, i3, s2, e2, o2), this.type = 5;
  }
  _$AI(t3, i3 = this) {
    var s2;
    if ((t3 = null !== (s2 = S$2(this, t3, i3, 0)) && void 0 !== s2 ? s2 : A$5) === T$4) return;
    const e2 = this._$AH, o2 = t3 === A$5 && e2 !== A$5 || t3.capture !== e2.capture || t3.once !== e2.once || t3.passive !== e2.passive, n2 = t3 !== A$5 && (e2 === A$5 || o2);
    o2 && this.element.removeEventListener(this.name, this, e2), n2 && this.element.addEventListener(this.name, this, t3), this._$AH = t3;
  }
  handleEvent(t3) {
    var i3, s2;
    "function" == typeof this._$AH ? this._$AH.call(null !== (s2 = null === (i3 = this.options) || void 0 === i3 ? void 0 : i3.host) && void 0 !== s2 ? s2 : this.element, t3) : this._$AH.handleEvent(t3);
  }
};
class Z {
  constructor(t3, i3, s2) {
    this.element = t3, this.type = 6, this._$AN = void 0, this._$AM = i3, this.options = s2;
  }
  get _$AU() {
    return this._$AM._$AU;
  }
  _$AI(t3) {
    S$2(this, t3);
  }
}
const B$1 = i$c.litHtmlPolyfillSupport;
null == B$1 || B$1(N$3, R$3), (null !== (t$d = i$c.litHtmlVersions) && void 0 !== t$d ? t$d : i$c.litHtmlVersions = []).push("2.8.0");
/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const e$e = Symbol.for(""), l$f = (t3) => {
  if ((null == t3 ? void 0 : t3.r) === e$e) return null == t3 ? void 0 : t3._$litStatic$;
}, o$b = (t3) => ({ _$litStatic$: t3, r: e$e }), s$g = /* @__PURE__ */ new Map(), a$c = (t3) => (r3, ...e2) => {
  const o2 = e2.length;
  let i3, a3;
  const n2 = [], u3 = [];
  let c2, $2 = 0, f4 = false;
  for (; $2 < o2; ) {
    for (c2 = r3[$2]; $2 < o2 && void 0 !== (a3 = e2[$2], i3 = l$f(a3)); ) c2 += i3 + r3[++$2], f4 = true;
    $2 !== o2 && u3.push(a3), n2.push(c2), $2++;
  }
  if ($2 === o2 && n2.push(r3[o2]), f4) {
    const t4 = n2.join("$$lit$$");
    void 0 === (r3 = s$g.get(t4)) && (n2.raw = n2, s$g.set(t4, r3 = n2)), e2 = u3;
  }
  return t3(r3, ...e2);
}, n$i = a$c(x$2), u$9 = a$c(b$9);
let t$c = class t {
  static {
    this.html = n$i;
  }
  static {
    this.svg = u$9;
  }
  static {
    this.unsafeStatic = o$b;
  }
};
s$v("LitStatic", t$c);
const capitalizeFirstLetter = (s2) => s2.charAt(0).toUpperCase() + s2.slice(1);
const camelToKebabCase$1 = (s2) => s2.replace(/([A-Z])/g, (a3, b3) => `-${b3.toLowerCase()}`);
const kebabToCamelCase = (str) => str.replace(/([-_]\w)/g, (g2) => g2[1].toUpperCase());
const SEMVER_REGEX = /^(?<major>0|[1-9]\d*)\.(?<minor>0|[1-9]\d*)\.(?<patch>0|[1-9]\d*)(?:-(?<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/;
function parseSemVer(version) {
  const parsed = SEMVER_REGEX.exec(version).groups;
  return {
    version,
    major: parseInt(parsed.major),
    minor: parseInt(parsed.minor),
    patch: parseInt(parsed.patch),
    prerelease: parsed.prerelease,
    buildMetadata: parsed.buildmetadata
  };
}
const createEventPropName = (eventName) => `on${capitalizeFirstLetter(kebabToCamelCase(eventName))}`;
const isPrimitiveAttribute = (value) => {
  return typeof value === "string" || typeof value === "number" || typeof value === "boolean";
};
const definedWebComponents = /* @__PURE__ */ new Set([]);
const withWebComponent = (tagName, regularProperties, booleanProperties, slotProperties, eventProperties) => {
  const webComponentsSupported = parseSemVer(reactExports.version).major >= 19;
  return reactExports.forwardRef((props, wcRef) => {
    const { className, children, waitForDefine, ...rest } = props;
    const [componentRef, ref] = useSyncRef(wcRef);
    const tagNameSuffix = g$a(tagName);
    const Component = tagNameSuffix ? `${tagName}-${tagNameSuffix}` : tagName;
    const [isDefined, setIsDefined] = reactExports.useState(definedWebComponents.has(Component));
    const regularProps = regularProperties.reduce((acc, name2) => {
      if (Object.prototype.hasOwnProperty.call(rest, name2) && isPrimitiveAttribute(rest[name2])) {
        return { ...acc, [camelToKebabCase$1(name2)]: rest[name2] };
      }
      return acc;
    }, {});
    const booleanProps = booleanProperties.reduce((acc, name2) => {
      if (webComponentsSupported) {
        return { ...acc, [camelToKebabCase$1(name2)]: rest[name2] };
      } else {
        if (rest[name2] === true || rest[name2] === "true") {
          return { ...acc, [camelToKebabCase$1(name2)]: true };
        }
        return acc;
      }
    }, {});
    const slots = slotProperties.reduce((acc, name2) => {
      const slotValue = rest[name2];
      if (!slotValue) {
        return acc;
      }
      if (rest[name2]?.$$typeof === Symbol.for("react.portal")) {
        console.warn("ReactPortal is not supported for slot props.");
        return acc;
      }
      const slottedChildren = [];
      let index = 0;
      const removeFragments = (element) => {
        if (!reactExports.isValidElement(element))
          return;
        if (element.type === reactExports.Fragment) {
          const elementChildren = element.props?.children;
          if (Array.isArray(elementChildren)) {
            elementChildren.forEach((item) => {
              if (Array.isArray(item)) {
                item.forEach(removeFragments);
              } else {
                removeFragments(item);
              }
            });
          } else {
            removeFragments(elementChildren);
          }
        } else {
          slottedChildren.push(reactExports.cloneElement(element, {
            key: element.key ?? `${name2}-${index}`,
            slot: name2
          }));
          index++;
        }
      };
      if (Array.isArray(slotValue)) {
        slotValue.forEach((item) => {
          removeFragments(item);
        });
      } else {
        removeFragments(slotValue);
      }
      return [...acc, ...slottedChildren];
    }, []);
    useIsomorphicLayoutEffect(() => {
      if (webComponentsSupported) {
        return () => {
        };
      }
      const localRef = ref.current;
      const eventRegistry = {};
      if (!waitForDefine || isDefined) {
        eventProperties.forEach((eventName) => {
          const eventHandler = rest[createEventPropName(eventName)];
          if (typeof eventHandler === "function") {
            eventRegistry[eventName] = eventHandler;
            localRef?.addEventListener(eventName, eventRegistry[eventName]);
          }
        });
        return () => {
          for (const eventName in eventRegistry) {
            localRef?.removeEventListener(eventName, eventRegistry[eventName]);
          }
        };
      }
    }, [...eventProperties.map((eventName) => rest[createEventPropName(eventName)]), isDefined, waitForDefine]);
    const eventHandlers = eventProperties.reduce((events, eventName) => {
      const eventHandlerProp = rest[createEventPropName(eventName)];
      if (webComponentsSupported && eventHandlerProp) {
        events[`on${eventName}`] = eventHandlerProp;
      }
      return events;
    }, {});
    const [attachEvents, setAttachEvents] = reactExports.useState(!webComponentsSupported || !Object.keys(eventHandlers).length);
    const nonWebComponentRelatedProps = Object.entries(rest).filter(([key]) => !regularProperties.includes(key)).filter(([key]) => !slotProperties.includes(key)).filter(([key]) => !booleanProperties.includes(key)).filter(([key]) => !eventProperties.map((eventName) => createEventPropName(eventName)).includes(key)).reduce((acc, [key, val]) => {
      if (!key.startsWith("aria-") && !key.startsWith("data-") && val === false) {
        return acc;
      }
      acc[key] = val;
      return acc;
    }, {});
    reactExports.useEffect(() => {
      if (waitForDefine && !isDefined) {
        void customElements.whenDefined(Component).then(() => {
          setIsDefined(true);
          definedWebComponents.add(Component);
        });
      }
    }, [Component, waitForDefine, isDefined]);
    const propsToApply = regularProperties.map((prop) => ({ name: prop, value: props[prop] }));
    reactExports.useEffect(() => {
      void customElements.whenDefined(Component).then(() => {
        for (const prop of propsToApply) {
          if (prop.value != null && !isPrimitiveAttribute(prop.value)) {
            if (ref.current) {
              ref.current[prop.name] = prop.value;
            }
          }
        }
      });
    }, [Component, ...propsToApply]);
    useIsomorphicLayoutEffect(() => {
      setAttachEvents(true);
    }, []);
    if (waitForDefine && !isDefined) {
      return null;
    }
    if (tagName === "ui5-expandable-text") {
      const renderWhiteSpace = nonWebComponentRelatedProps["renderWhitespace"] ? true : void 0;
      const { ["overflow-mode"]: overflowMode, text, ...restRegularProps } = regularProps;
      const showOverflowInPopover = nonWebComponentRelatedProps["showOverflowInPopover"];
      return jsxRuntimeExports.jsx(Component, {
        ref: componentRef,
        ...booleanProps,
        ...restRegularProps,
        ...attachEvents ? eventHandlers : {},
        ...nonWebComponentRelatedProps,
        "overflow-mode": overflowMode ?? (showOverflowInPopover ? "Popover" : "InPlace"),
        // @ts-expect-error: text is available
        text: text ?? children,
        class: className,
        suppressHydrationWarning: true,
        "data-_render-whitespace": renderWhiteSpace,
        children: slots
      });
    }
    return jsxRuntimeExports.jsxs(Component, { ref: componentRef, ...booleanProps, ...regularProps, ...attachEvents ? eventHandlers : {}, ...nonWebComponentRelatedProps, class: className, suppressHydrationWarning: true, children: [slots, children] });
  });
};
const s$f = /* @__PURE__ */ new Map(), o$a = /* @__PURE__ */ new Map(), n$h = /* @__PURE__ */ new Map(), c$7 = (e2) => {
  if (!s$f.has(e2)) {
    const a3 = b$8(e2.split("-"));
    s$f.set(e2, a3);
  }
  return s$f.get(e2);
}, l$e = (e2) => {
  if (!o$a.has(e2)) {
    const a3 = e2.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
    o$a.set(e2, a3);
  }
  return o$a.get(e2);
}, b$8 = (e2) => e2.map((a3, t3) => t3 === 0 ? a3.toLowerCase() : a3.charAt(0).toUpperCase() + a3.slice(1).toLowerCase()).join(""), C$3 = (e2) => {
  const a3 = n$h.get(e2);
  if (a3) return a3;
  const t3 = c$7(e2), r3 = t3.charAt(0).toUpperCase() + t3.slice(1);
  return n$h.set(e2, r3), r3;
};
const o$9 = (t3) => {
  if (!(t3 instanceof HTMLElement)) return "default";
  const e2 = t3.getAttribute("slot");
  if (e2) {
    const r3 = e2.match(/^(.+?)-\d+$/);
    return r3 ? r3[1] : e2;
  }
  return "default";
}, n$g = (t3) => t3 instanceof HTMLSlotElement ? t3.assignedNodes({ flatten: true }).filter((e2) => e2 instanceof HTMLElement) : [t3], s$e = (t3) => t3.reduce((e2, r3) => e2.concat(n$g(r3)), []);
let p$4 = class p {
  constructor(t3) {
    this.metadata = t3;
  }
  getInitialState() {
    if (Object.prototype.hasOwnProperty.call(this, "_initialState")) return this._initialState;
    const t3 = {};
    if (this.slotsAreManaged()) {
      const o2 = this.getSlots();
      for (const [e2, s2] of Object.entries(o2)) {
        const n2 = s2.propertyName || e2;
        t3[n2] = [], t3[c$7(n2)] = t3[n2];
      }
    }
    return this._initialState = t3, t3;
  }
  static validateSlotValue(t3, a3) {
    return g$4(t3, a3);
  }
  getPureTag() {
    return this.metadata.tag || "";
  }
  getTag() {
    const t3 = this.metadata.tag;
    if (!t3) return "";
    const a3 = g$a(t3);
    return a3 ? `${t3}-${a3}` : t3;
  }
  hasAttribute(t3) {
    const a3 = this.getProperties()[t3];
    return a3.type !== Object && a3.type !== Array && !a3.noAttribute;
  }
  getPropertiesList() {
    return Object.keys(this.getProperties());
  }
  getAttributesList() {
    return this.getPropertiesList().filter(this.hasAttribute.bind(this)).map(l$e);
  }
  canSlotText() {
    return this.getSlots().default?.type === Node;
  }
  hasSlots() {
    return !!Object.entries(this.getSlots()).length;
  }
  hasIndividualSlots() {
    return this.slotsAreManaged() && Object.values(this.getSlots()).some((t3) => t3.individualSlots);
  }
  slotsAreManaged() {
    return !!this.metadata.managedSlots;
  }
  supportsF6FastNavigation() {
    return !!this.metadata.fastNavigation;
  }
  getProperties() {
    return this.metadata.properties || (this.metadata.properties = {}), this.metadata.properties;
  }
  getEvents() {
    return this.metadata.events || (this.metadata.events = {}), this.metadata.events;
  }
  getSlots() {
    return this.metadata.slots || (this.metadata.slots = {}), this.metadata.slots;
  }
  isLanguageAware() {
    return !!this.metadata.languageAware;
  }
  isThemeAware() {
    return !!this.metadata.themeAware;
  }
  needsCLDR() {
    return !!this.metadata.cldr;
  }
  getShadowRootOptions() {
    return this.metadata.shadowRootOptions || {};
  }
  isFormAssociated() {
    return !!this.metadata.formAssociated;
  }
  shouldInvalidateOnChildChange(t3, a3, o2) {
    const e2 = this.getSlots()[t3].invalidateOnChildChange;
    if (e2 === void 0) return false;
    if (typeof e2 == "boolean") return e2;
    if (typeof e2 == "object") {
      if (a3 === "property") {
        if (e2.properties === void 0) return false;
        if (typeof e2.properties == "boolean") return e2.properties;
        if (Array.isArray(e2.properties)) return e2.properties.includes(o2);
        throw new Error("Wrong format for invalidateOnChildChange.properties: boolean or array is expected");
      }
      if (a3 === "slot") {
        if (e2.slots === void 0) return false;
        if (typeof e2.slots == "boolean") return e2.slots;
        if (Array.isArray(e2.slots)) return e2.slots.includes(o2);
        throw new Error("Wrong format for invalidateOnChildChange.slots: boolean or array is expected");
      }
    }
    throw new Error("Wrong format for invalidateOnChildChange: boolean or object is expected");
  }
  getI18n() {
    return this.metadata.i18n || (this.metadata.i18n = {}), this.metadata.i18n;
  }
};
const g$4 = (r3, t3) => (r3 && n$g(r3).forEach((a3) => {
  if (!(a3 instanceof t3.type)) throw new Error(`The element is not of type ${t3.type.toString()}`);
}), r3);
const e$d = (t3) => Array.isArray(t3) ? t3.filter((r3) => !!r3).flat(10).join(" ") : t3;
const e$c = /* @__PURE__ */ new Map();
i$e((t3) => {
  e$c.delete(`${t3}_normal`);
});
const y$7 = (t3) => {
  const o2 = t3.getMetadata().getTag(), n2 = `${o2}_normal`, s2 = n$w("OpenUI5Enablement");
  if (!e$c.has(n2)) {
    let l3 = "";
    s2 && (l3 = e$d(s2.getBusyIndicatorStyles()));
    const a3 = l$j(o2) || "", m2 = `${e$d(t3.styles)} ${a3} ${l3}`;
    e$c.set(n2, m2);
  }
  return e$c.get(n2);
};
const e$b = /* @__PURE__ */ new Map();
i$e((t3) => {
  e$b.delete(`${t3}_normal`);
});
const s$d = (t3) => {
  const n2 = `${t3.getMetadata().getTag()}_normal`;
  if (!e$b.has(n2)) {
    const a3 = y$7(t3), o2 = new CSSStyleSheet();
    o2.replaceSync(a3), e$b.set(n2, [o2]);
  }
  return e$b.get(n2);
};
const s$c = (o2) => {
  const e2 = o2.constructor, t3 = o2.shadowRoot;
  if (!t3) {
    console.warn("There is no shadow root to update");
    return;
  }
  t3.adoptedStyleSheets = s$d(e2), e2.renderer(o2, t3);
};
const r$c = [], o$8 = (t3) => r$c.some((s2) => t3.startsWith(s2));
const t$b = /* @__PURE__ */ new WeakMap(), n$f = (e2, o2, r3) => {
  const s2 = new MutationObserver(o2);
  t$b.set(e2, s2), s2.observe(e2, r3);
}, b$7 = (e2) => {
  const o2 = t$b.get(e2);
  o2 && (o2.disconnect(), t$b.delete(e2));
};
const c$6 = ["value-changed", "click"];
let e$a;
i$n(() => {
  e$a = void 0;
});
const s$b = (t3) => c$6.includes(t3), l$d = (t3) => {
  const n2 = o$7();
  return !(typeof n2 != "boolean" && n2.events && n2.events.includes && n2.events.includes(t3));
}, o$7 = () => (e$a === void 0 && (e$a = F$2()), e$a), a$b = (t3) => {
  const n2 = o$7();
  return s$b(t3) ? false : n2 === true ? true : !l$d(t3);
};
const r$b = (t3) => t3.matches(":dir(rtl)") ? "rtl" : "ltr";
const s$a = ["disabled", "title", "hidden", "role", "draggable"], r$a = (e2) => s$a.includes(e2) || e2.startsWith("aria") ? true : ![HTMLElement, Element, Node].some((t3) => t3.prototype.hasOwnProperty(e2));
const n$e = (t3, r3) => {
  if (t3.length !== r3.length) return false;
  for (let e2 = 0; e2 < t3.length; e2++) if (t3[e2] !== r3[e2]) return false;
  return true;
};
const n$d = (e2, t3) => e2.call(t3);
const o$6 = (t3) => {
  s$9(t3) && e$9(t3);
}, e$9 = (t3) => {
  if (t3._internals?.form) {
    if (n$c(t3), !t3.name) {
      t3._internals?.setFormValue(null);
      return;
    }
    t3._internals.setFormValue(t3.formFormattedValue);
  }
}, n$c = async (t3) => {
  if (t3._internals?.form) if (t3.formValidity && Object.keys(t3.formValidity).some((r3) => r3)) {
    const r3 = await t3.formElementAnchor?.();
    t3._internals.setValidity(t3.formValidity, t3.formValidityMessage, r3);
  } else t3._internals.setValidity({});
}, i$b = (t3) => {
  t3._internals?.form?.requestSubmit();
}, m$9 = (t3) => {
  t3._internals?.form?.reset();
}, s$9 = (t3) => "formFormattedValue" in t3 && "name" in t3;
const f$a = /* @__PURE__ */ new Map(), s$8 = /* @__PURE__ */ new Map(), i$a = /* @__PURE__ */ new Map(), D$5 = /* @__PURE__ */ new Set();
let d$7 = false;
const O$3 = { iw: "he", ji: "yi", in: "id" }, l$c = (t3) => {
  d$7 || (console.warn(`[LocaleData] Supported locale "${t3}" not configured, import the "Assets.js" module from the webcomponents package you are using.`), d$7 = true);
}, R$2 = (t3, e2, n2) => {
  t3 = t3 && O$3[t3] || t3, t3 === "no" && (t3 = "nb"), t3 === "zh" && !e2 && (n2 === "Hans" ? e2 = "CN" : n2 === "Hant" && (e2 = "TW")), (t3 === "sh" || t3 === "sr" && n2 === "Latn") && (t3 = "sr", e2 = "Latn");
  let r3 = `${t3}_${e2}`;
  return l$r.includes(r3) ? s$8.has(r3) ? r3 : (l$c(r3), r$q) : (r3 = t3, l$r.includes(r3) ? s$8.has(r3) ? r3 : (l$c(r3), r$q) : r$q);
}, m$8 = (t3, e2) => {
  f$a.set(t3, e2);
}, S$1 = (t3) => {
  s$8.has(t3) || (t3 = r$q);
  const e2 = f$a.get(t3);
  if (!e2) throw new Error(`CLDR data for locale ${t3} is not loaded!`);
  return e2;
}, _$2 = (t3) => {
  if (!i$a.get(t3)) {
    const e2 = s$8.get(t3);
    if (!e2) throw new Error(`CLDR data for locale ${t3} is not loaded!`);
    i$a.set(t3, e2(t3));
  }
  return i$a.get(t3);
}, u$8 = async (t3, e2, n2) => {
  const r3 = R$2(t3, e2, n2), p3 = n$w("OpenUI5Support");
  if (p3) {
    const o2 = p3.getLocaleDataObject();
    if (o2) {
      m$8(r3, o2);
      return;
    }
  }
  try {
    const o2 = await _$2(r3);
    m$8(r3, o2);
  } catch (o2) {
    const c2 = o2;
    D$5.has(c2.message) || (D$5.add(c2.message), console.error(c2.message));
  }
}, C$2 = (t3, e2) => {
  s$8.set(t3, e2);
};
C$2("en", async () => (await fetch("https://sdk.openui5.org/1.120.17/resources/sap/ui/core/cldr/en.json")).json()), t$f(() => {
  const t3 = s$i();
  return u$8(t3.getLanguage(), t3.getRegion(), t3.getScript());
});
let it = 0;
const R$1 = /* @__PURE__ */ new Map(), I$2 = /* @__PURE__ */ new Map(), O$2 = { fromAttribute(c2, f4) {
  return f4 === Boolean ? c2 !== null : f4 === Number ? c2 === null ? void 0 : parseFloat(c2) : c2;
}, toAttribute(c2, f4) {
  return f4 === Boolean ? c2 ? "" : null : f4 === Object || f4 === Array || c2 == null ? null : String(c2);
} };
function y$6(c2) {
  this._suppressInvalidation || this.constructor.getMetadata().isLanguageAware() && s$j() || (this.onInvalidation(c2), this._changedState.push(c2), l$n(this), this._invalidationEventProvider.fireEvent("invalidate", { ...c2, target: this }));
}
function at(c2, f4) {
  do {
    const t3 = Object.getOwnPropertyDescriptor(c2, f4);
    if (t3) return t3;
    c2 = Object.getPrototypeOf(c2);
  } while (c2 && c2 !== HTMLElement.prototype);
}
let b$6 = class b extends HTMLElement {
  constructor() {
    super();
    this.__shouldHydrate = false;
    this._rendered = false;
    const t3 = this.constructor;
    this._changedState = [], this._suppressInvalidation = true, this._inDOM = false, this._fullyConnected = false, this._childChangeListeners = /* @__PURE__ */ new Map(), this._slotChangeListeners = /* @__PURE__ */ new Map(), this._invalidationEventProvider = new i$r(), this._componentStateFinalizedEventProvider = new i$r();
    let e2;
    this._domRefReadyPromise = new Promise((n2) => {
      e2 = n2;
    }), this._domRefReadyPromise._deferredResolve = e2, this._doNotSyncAttributes = /* @__PURE__ */ new Set(), this._slotsAssignedNodes = /* @__PURE__ */ new WeakMap(), this._state = { ...t3.getMetadata().getInitialState() }, this.initializedProperties = /* @__PURE__ */ new Map(), this.constructor.getMetadata().getPropertiesList().forEach((n2) => {
      if (this.hasOwnProperty(n2)) {
        const o2 = this[n2];
        this.initializedProperties.set(n2, o2);
      }
    }), this._internals = this.attachInternals(), this._initShadowRoot();
  }
  _initShadowRoot() {
    const t3 = this.constructor;
    if (t3._needsShadowDOM()) {
      const e2 = { mode: "open" };
      this.shadowRoot ? this.__shouldHydrate = true : this.attachShadow({ ...e2, ...t3.getMetadata().getShadowRootOptions() }), t3.getMetadata().slotsAreManaged() && this.shadowRoot.addEventListener("slotchange", this._onShadowRootSlotChange.bind(this));
    }
  }
  _onShadowRootSlotChange(t3) {
    t3.target?.getRootNode() === this.shadowRoot && this._processChildren();
  }
  get _id() {
    return this.__id || (this.__id = `ui5wc_${++it}`), this.__id;
  }
  render() {
    const t3 = this.constructor.template;
    return n$d(t3, this);
  }
  async connectedCallback() {
    const t3 = this.constructor;
    this.setAttribute(t3.getMetadata().getPureTag(), ""), t3.getMetadata().supportsF6FastNavigation() && !this.hasAttribute("data-sap-ui-fastnavgroup") && this.setAttribute("data-sap-ui-fastnavgroup", "true");
    const e2 = t3.getMetadata().slotsAreManaged();
    this._inDOM = true, e2 && (this._startObservingDOMChildren(), await this._processChildren()), t3.asyncFinished || await t3.definePromise, this._inDOM && (c$d(this), this._domRefReadyPromise._deferredResolve(), this._fullyConnected = true, this.onEnterDOM());
  }
  disconnectedCallback() {
    const e2 = this.constructor.getMetadata().slotsAreManaged();
    this._inDOM = false, e2 && this._stopObservingDOMChildren(), this._fullyConnected && (this.onExitDOM(), this._fullyConnected = false), this._domRefReadyPromise._deferredResolve(), h$7(this);
  }
  onBeforeRendering() {
  }
  onAfterRendering() {
  }
  onEnterDOM() {
  }
  onExitDOM() {
  }
  _startObservingDOMChildren() {
    const e2 = this.constructor.getMetadata();
    if (!e2.hasSlots()) return;
    const n2 = e2.canSlotText(), o2 = { childList: true, subtree: n2, characterData: n2 };
    n$f(this, this._processChildren.bind(this), o2);
  }
  _stopObservingDOMChildren() {
    b$7(this);
  }
  async _processChildren() {
    this.constructor.getMetadata().hasSlots() && await this._updateSlots();
  }
  async _updateSlots() {
    const t3 = this.constructor, e2 = t3.getMetadata().getSlots(), s2 = t3.getMetadata().canSlotText(), n2 = Array.from(s2 ? this.childNodes : this.children), o2 = /* @__PURE__ */ new Map(), a3 = /* @__PURE__ */ new Map();
    for (const [l3, u3] of Object.entries(e2)) {
      const d2 = u3.propertyName || l3;
      a3.set(d2, l3), o2.set(d2, [...this._state[d2]]), this._clearSlot(l3, u3);
    }
    const r3 = /* @__PURE__ */ new Map(), i3 = /* @__PURE__ */ new Map(), h2 = n2.map(async (l3, u3) => {
      const d2 = o$9(l3), g2 = e2[d2];
      if (g2 === void 0) {
        if (d2 !== "default") {
          const p3 = Object.keys(e2).join(", ");
          console.warn(`Unknown slotName: ${d2}, ignoring`, l3, `Valid values are: ${p3}`);
        }
        return;
      }
      if (g2.individualSlots) {
        const p3 = (r3.get(d2) || 0) + 1;
        r3.set(d2, p3), l3._individualSlot = `${d2}-${p3}`;
      }
      if (l3 instanceof HTMLElement) {
        const p3 = l3.localName;
        if (p3.includes("-") && !o$8(p3)) {
          if (!customElements.get(p3)) {
            const L3 = customElements.whenDefined(p3);
            let E2 = R$1.get(p3);
            E2 || (E2 = new Promise((U2) => setTimeout(U2, 1e3)), R$1.set(p3, E2)), await Promise.race([L3, E2]);
          }
          customElements.upgrade(l3);
        }
      }
      if (l3 = t3.getMetadata().constructor.validateSlotValue(l3, g2), v$4(l3) && g2.invalidateOnChildChange) {
        const p3 = this._getChildChangeListener(d2);
        l3.attachInvalidate.call(l3, p3);
      }
      l3 instanceof HTMLSlotElement && this._attachSlotChange(l3, d2, !!g2.invalidateOnChildChange);
      const C2 = g2.propertyName || d2;
      i3.has(C2) ? i3.get(C2).push({ child: l3, idx: u3 }) : i3.set(C2, [{ child: l3, idx: u3 }]);
    });
    await Promise.all(h2), i3.forEach((l3, u3) => {
      this._state[u3] = l3.sort((d2, g2) => d2.idx - g2.idx).map((d2) => d2.child), this._state[c$7(u3)] = this._state[u3];
    });
    let _2 = false;
    for (const [l3, u3] of Object.entries(e2)) {
      const d2 = u3.propertyName || l3;
      n$e(o2.get(d2), this._state[d2]) || (y$6.call(this, { type: "slot", name: a3.get(d2), reason: "children" }), _2 = true, t3.getMetadata().isFormAssociated() && e$9(this));
    }
    _2 || y$6.call(this, { type: "slot", name: "default", reason: "textcontent" });
  }
  _clearSlot(t3, e2) {
    const s2 = e2.propertyName || t3;
    this._state[s2].forEach((o2) => {
      if (v$4(o2)) {
        const a3 = this._getChildChangeListener(t3);
        o2.detachInvalidate.call(o2, a3);
      }
      o2 instanceof HTMLSlotElement && this._detachSlotChange(o2, t3);
    }), this._state[s2] = [], this._state[c$7(s2)] = this._state[s2];
  }
  attachInvalidate(t3) {
    this._invalidationEventProvider.attachEvent("invalidate", t3);
  }
  detachInvalidate(t3) {
    this._invalidationEventProvider.detachEvent("invalidate", t3);
  }
  _onChildChange(t3, e2) {
    this.constructor.getMetadata().shouldInvalidateOnChildChange(t3, e2.type, e2.name) && y$6.call(this, { type: "slot", name: t3, reason: "childchange", child: e2.target });
  }
  attributeChangedCallback(t3, e2, s2) {
    let n2;
    if (this._doNotSyncAttributes.has(t3)) return;
    const o2 = this.constructor.getMetadata().getProperties(), a3 = t3.replace(/^ui5-/, ""), r3 = c$7(a3);
    if (o2.hasOwnProperty(r3)) {
      const i3 = o2[r3];
      n2 = (i3.converter ?? O$2).fromAttribute(s2, i3.type), this[r3] = n2;
    }
  }
  formAssociatedCallback() {
    this.constructor.getMetadata().isFormAssociated() && o$6(this);
  }
  static get formAssociated() {
    return this.getMetadata().isFormAssociated();
  }
  _updateAttribute(t3, e2) {
    const s2 = this.constructor;
    if (!s2.getMetadata().hasAttribute(t3)) return;
    const o2 = s2.getMetadata().getProperties()[t3], a3 = l$e(t3), i3 = (o2.converter || O$2).toAttribute(e2, o2.type);
    this._doNotSyncAttributes.add(a3), i3 == null ? this.removeAttribute(a3) : this.setAttribute(a3, i3), this._doNotSyncAttributes.delete(a3);
  }
  _getChildChangeListener(t3) {
    return this._childChangeListeners.has(t3) || this._childChangeListeners.set(t3, this._onChildChange.bind(this, t3)), this._childChangeListeners.get(t3);
  }
  _getSlotChangeListener(t3) {
    return this._slotChangeListeners.has(t3) || this._slotChangeListeners.set(t3, this._onSlotChange.bind(this, t3)), this._slotChangeListeners.get(t3);
  }
  _attachSlotChange(t3, e2, s2) {
    const n2 = this._getSlotChangeListener(e2);
    t3.addEventListener("slotchange", (o2) => {
      if (n2.call(t3, o2), s2) {
        const a3 = this._slotsAssignedNodes.get(t3);
        a3 && a3.forEach((i3) => {
          if (v$4(i3)) {
            const h2 = this._getChildChangeListener(e2);
            i3.detachInvalidate.call(i3, h2);
          }
        });
        const r3 = s$e([t3]);
        this._slotsAssignedNodes.set(t3, r3), r3.forEach((i3) => {
          if (v$4(i3)) {
            const h2 = this._getChildChangeListener(e2);
            i3.attachInvalidate.call(i3, h2);
          }
        });
      }
    });
  }
  _detachSlotChange(t3, e2) {
    t3.removeEventListener("slotchange", this._getSlotChangeListener(e2));
  }
  _onSlotChange(t3) {
    y$6.call(this, { type: "slot", name: t3, reason: "slotchange" });
  }
  onInvalidation(t3) {
  }
  updateAttributes() {
    const e2 = this.constructor.getMetadata().getProperties();
    for (const [s2, n2] of Object.entries(e2)) this._updateAttribute(s2, this[s2]);
  }
  _render() {
    const t3 = this.constructor, e2 = t3.getMetadata().hasIndividualSlots();
    this.initializedProperties.size > 0 && (Array.from(this.initializedProperties.entries()).forEach(([s2, n2]) => {
      delete this[s2], this[s2] = n2;
    }), this.initializedProperties.clear()), this._suppressInvalidation = true;
    try {
      this.onBeforeRendering(), this._rendered || this.updateAttributes(), this._componentStateFinalizedEventProvider.fireEvent("componentStateFinalized");
    } finally {
      this._suppressInvalidation = false;
    }
    this._changedState = [], t3._needsShadowDOM() && s$c(this), this._rendered = true, e2 && this._assignIndividualSlotsToChildren(), this.onAfterRendering();
  }
  _assignIndividualSlotsToChildren() {
    Array.from(this.children).forEach((e2) => {
      e2._individualSlot && e2.setAttribute("slot", e2._individualSlot);
    });
  }
  _waitForDomRef() {
    return this._domRefReadyPromise;
  }
  getDomRef() {
    if (typeof this._getRealDomRef == "function") return this._getRealDomRef();
    if (!(!this.shadowRoot || this.shadowRoot.children.length === 0)) return this.shadowRoot.children[0];
  }
  getFocusDomRef() {
    const t3 = this.getDomRef();
    if (t3) return t3.querySelector("[data-sap-focus-ref]") || t3;
  }
  async getFocusDomRefAsync() {
    return await this._waitForDomRef(), this.getFocusDomRef();
  }
  async focus(t3) {
    await this._waitForDomRef();
    const e2 = this.getFocusDomRef();
    e2 === this || !this.isConnected ? HTMLElement.prototype.focus.call(this, t3) : e2 && typeof e2.focus == "function" && e2.focus(t3);
  }
  fireEvent(t3, e2, s2 = false, n2 = true) {
    const o2 = this._fireEvent(t3, e2, s2, n2), a3 = C$3(t3);
    return a3 !== t3 ? o2 && this._fireEvent(a3, e2, s2, n2) : o2;
  }
  fireDecoratorEvent(t3, e2) {
    const s2 = this.getEventData(t3), n2 = s2 ? s2.cancelable : false, o2 = s2 ? s2.bubbles : false, a3 = this._fireEvent(t3, e2, n2, o2), r3 = C$3(t3);
    return r3 !== t3 ? a3 && this._fireEvent(r3, e2, n2, o2) : a3;
  }
  _fireEvent(t3, e2, s2 = false, n2 = true) {
    const o2 = new CustomEvent(`ui5-${t3}`, { detail: e2, composed: false, bubbles: n2, cancelable: s2 }), a3 = this.dispatchEvent(o2);
    if (a$b(t3)) return a3;
    const r3 = new CustomEvent(t3, { detail: e2, composed: false, bubbles: n2, cancelable: s2 });
    return this.dispatchEvent(r3) && a3;
  }
  getEventData(t3) {
    return this.constructor.getMetadata().getEvents()[t3];
  }
  getSlottedNodes(t3) {
    return s$e(this[t3]);
  }
  attachComponentStateFinalized(t3) {
    this._componentStateFinalizedEventProvider.attachEvent("componentStateFinalized", t3);
  }
  detachComponentStateFinalized(t3) {
    this._componentStateFinalizedEventProvider.detachEvent("componentStateFinalized", t3);
  }
  get effectiveDir() {
    return n$u(this.constructor), r$b(this);
  }
  get isUI5Element() {
    return true;
  }
  get isUI5AbstractElement() {
    return !this.constructor._needsShadowDOM();
  }
  get classes() {
    return {};
  }
  get accessibilityInfo() {
    return {};
  }
  static get observedAttributes() {
    return this.getMetadata().getAttributesList();
  }
  static get tagsToScope() {
    const t3 = this.getMetadata().getPureTag(), e2 = this.getUniqueDependencies().map((s2) => s2.getMetadata().getPureTag()).filter(i$l);
    return i$l(t3) && e2.push(t3), e2;
  }
  static _needsShadowDOM() {
    return !!this.template || Object.prototype.hasOwnProperty.call(this.prototype, "render");
  }
  static _generateAccessors() {
    const t3 = this.prototype, e2 = this.getMetadata().slotsAreManaged(), s2 = this.getMetadata().getProperties();
    for (const [n2, o2] of Object.entries(s2)) {
      r$a(n2) || console.warn(`"${n2}" is not a valid property name. Use a name that does not collide with DOM APIs`);
      const a3 = at(t3, n2);
      let r3;
      a3?.set && (r3 = a3.set);
      let i3;
      a3?.get && (i3 = a3.get), Object.defineProperty(t3, n2, { get() {
        return i3 ? i3.call(this) : this._state[n2];
      }, set(h2) {
        const _2 = this.constructor, l3 = i3 ? i3.call(this) : this._state[n2];
        if (l3 !== h2) {
          if (r3 ? r3.call(this, h2) : this._state[n2] = h2, y$6.call(this, { type: "property", name: n2, newValue: h2, oldValue: l3 }), this._rendered) {
            const d2 = i3 ? i3.call(this) : this._state[n2];
            this._updateAttribute(n2, d2);
          }
          _2.getMetadata().isFormAssociated() && e$9(this);
        }
      } });
    }
    if (e2) {
      const n2 = this.getMetadata().getSlots();
      for (const [o2, a3] of Object.entries(n2)) {
        r$a(o2) || console.warn(`"${o2}" is not a valid property name. Use a name that does not collide with DOM APIs`);
        const r3 = a3.propertyName || o2, i3 = { get() {
          return this._state[r3] !== void 0 ? this._state[r3] : [];
        }, set() {
          throw new Error("Cannot set slot content directly, use the DOM APIs (appendChild, removeChild, etc...)");
        } };
        Object.defineProperty(t3, r3, i3), r3 !== c$7(r3) && Object.defineProperty(t3, c$7(r3), i3);
      }
    }
  }
  static {
    this.metadata = {};
  }
  static {
    this.styles = "";
  }
  static get dependencies() {
    return [];
  }
  static cacheUniqueDependencies() {
    const t3 = this.dependencies.filter((e2, s2, n2) => n2.indexOf(e2) === s2);
    I$2.set(this, t3);
  }
  static getUniqueDependencies() {
    return I$2.has(this) || this.cacheUniqueDependencies(), I$2.get(this) || [];
  }
  static async onDefine() {
    return Promise.resolve();
  }
  static fetchI18nBundles() {
    return Promise.all(Object.entries(this.getMetadata().getI18n()).map((t3) => {
      const { bundleName: e2 } = t3[1];
      return f$c(e2);
    }));
  }
  static fetchCLDR() {
    return this.getMetadata().needsCLDR() ? u$8(s$i().getLanguage(), s$i().getRegion(), s$i().getScript()) : Promise.resolve();
  }
  static {
    this.i18nBundleStorage = {};
  }
  static get i18nBundles() {
    return this.i18nBundleStorage;
  }
  static define() {
    const t3 = async () => {
      await b$a();
      const o2 = await Promise.all([this.fetchI18nBundles(), this.fetchCLDR(), this.onDefine()]), [a3] = o2;
      Object.entries(this.getMetadata().getI18n()).forEach((r3, i3) => {
        const h2 = r3[1].bundleName;
        this.i18nBundleStorage[h2] = a3[i3];
      }), this.asyncFinished = true;
    };
    this.definePromise = t3();
    const e2 = this.getMetadata().getTag(), s2 = w$6(e2), n2 = customElements.get(e2);
    return n2 && !s2 ? $$4(e2) : n2 || (this._generateAccessors(), h$8(e2), customElements.define(e2, this)), this;
  }
  static getMetadata() {
    if (this.hasOwnProperty("_metadata")) return this._metadata;
    const t3 = [this.metadata];
    let e2 = this;
    for (; e2 !== b; ) e2 = Object.getPrototypeOf(e2), t3.unshift(e2.metadata);
    const s2 = e$n({}, ...t3);
    return this._metadata = new p$4(s2), this._metadata;
  }
  get validity() {
    return this._internals.validity;
  }
  get validationMessage() {
    return this._internals.validationMessage;
  }
  checkValidity() {
    return this._internals.checkValidity();
  }
  reportValidity() {
    return this._internals.reportValidity();
  }
};
const v$4 = (c2) => "isUI5Element" in c2;
const m$7 = (a3 = {}) => (e2) => {
  if (Object.prototype.hasOwnProperty.call(e2, "metadata") || (e2.metadata = {}), typeof a3 == "string") {
    e2.metadata.tag = a3;
    return;
  }
  const { tag: i3, languageAware: o2, themeAware: r3, cldr: s2, fastNavigation: l3, formAssociated: n2, shadowRootOptions: d2 } = a3;
  e2.metadata.tag = i3, o2 && (e2.metadata.languageAware = o2), s2 && (e2.metadata.cldr = s2), r3 && (e2.metadata.themeAware = r3), l3 && (e2.metadata.fastNavigation = l3), n2 && (e2.metadata.formAssociated = n2), d2 && (e2.metadata.shadowRootOptions = d2), ["renderer", "template", "styles", "dependencies"].forEach((t3) => {
    a3[t3] && Object.defineProperty(e2, t3, { get: () => a3[t3] });
  });
};
const s$7 = (o2) => (p3, r3) => {
  const t3 = p3.constructor;
  Object.prototype.hasOwnProperty.call(t3, "metadata") || (t3.metadata = {});
  const e2 = t3.metadata;
  e2.properties || (e2.properties = {});
  const a3 = e2.properties;
  a3[r3] || (a3[r3] = o2 ?? {});
};
const l$b = (s2, e2 = {}) => (t3) => {
  Object.prototype.hasOwnProperty.call(t3, "metadata") || (t3.metadata = {});
  const n2 = t3.metadata;
  n2.events || (n2.events = {});
  const a3 = n2.events;
  a3[s2] || (e2.bubbles = !!e2.bubbles, e2.cancelable = !!e2.cancelable, a3[s2] = e2);
};
var n$b, l$a, t$a, i$9, o$5, r$9, e$8, f$9, c$5, s$6, a$a, h$1, p$3 = {}, v$3 = [], y$5 = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, d$6 = Array.isArray;
function w$1(n2, l3) {
  for (var t3 in l3) n2[t3] = l3[t3];
  return n2;
}
function _$1(n2) {
  n2 && n2.parentNode && n2.parentNode.removeChild(n2);
}
function g$3(l3, t3, u3) {
  var i3, o2, r3, e2 = {};
  for (r3 in t3) "key" == r3 ? i3 = t3[r3] : "ref" == r3 ? o2 = t3[r3] : e2[r3] = t3[r3];
  if (arguments.length > 2 && (e2.children = arguments.length > 3 ? n$b.call(arguments, 2) : u3), "function" == typeof l3 && null != l3.defaultProps) for (r3 in l3.defaultProps) void 0 === e2[r3] && (e2[r3] = l3.defaultProps[r3]);
  return m$6(l3, e2, i3, o2, null);
}
function m$6(n2, u3, i3, o2, r3) {
  var e2 = { type: n2, props: u3, key: i3, ref: o2, __k: null, __: null, __b: 0, __e: null, __c: null, constructor: void 0, __v: null == r3 ? ++t$a : r3, __i: -1, __u: 0 };
  return null == r3 && null != l$a.vnode && l$a.vnode(e2), e2;
}
function k$4(n2) {
  return n2.children;
}
function x$1(n2, l3) {
  this.props = n2, this.context = l3;
}
function C$1(n2, l3) {
  if (null == l3) return n2.__ ? C$1(n2.__, n2.__i + 1) : null;
  for (var t3; l3 < n2.__k.length; l3++) if (null != (t3 = n2.__k[l3]) && null != t3.__e) return t3.__e;
  return "function" == typeof n2.type ? C$1(n2) : null;
}
function S(n2) {
  var l3, t3;
  if (null != (n2 = n2.__) && null != n2.__c) {
    for (n2.__e = n2.__c.base = null, l3 = 0; l3 < n2.__k.length; l3++) if (null != (t3 = n2.__k[l3]) && null != t3.__e) {
      n2.__e = n2.__c.base = t3.__e;
      break;
    }
    return S(n2);
  }
}
function M$2(n2) {
  (!n2.__d && (n2.__d = true) && i$9.push(n2) && !P$2.__r++ || o$5 !== l$a.debounceRendering) && ((o$5 = l$a.debounceRendering) || r$9)(P$2);
}
function P$2() {
  var n2, t3, u3, o2, r3, f4, c2, s2;
  for (i$9.sort(e$8); n2 = i$9.shift(); ) n2.__d && (t3 = i$9.length, o2 = void 0, f4 = (r3 = (u3 = n2).__v).__e, c2 = [], s2 = [], u3.__P && ((o2 = w$1({}, r3)).__v = r3.__v + 1, l$a.vnode && l$a.vnode(o2), F(u3.__P, o2, r3, u3.__n, u3.__P.namespaceURI, 32 & r3.__u ? [f4] : null, c2, null == f4 ? C$1(r3) : f4, !!(32 & r3.__u), s2), o2.__v = r3.__v, o2.__.__k[o2.__i] = o2, z$1(c2, o2, s2), o2.__e != f4 && S(o2)), i$9.length > t3 && i$9.sort(e$8));
  P$2.__r = 0;
}
function $$1(n2, l3, t3, u3, i3, o2, r3, e2, f4, c2, s2) {
  var a3, h2, y2, d2, w2, _2, g2 = u3 && u3.__k || v$3, m2 = l3.length;
  for (f4 = I$1(t3, l3, g2, f4), a3 = 0; a3 < m2; a3++) null != (y2 = t3.__k[a3]) && (h2 = -1 === y2.__i ? p$3 : g2[y2.__i] || p$3, y2.__i = a3, _2 = F(n2, y2, h2, i3, o2, r3, e2, f4, c2, s2), d2 = y2.__e, y2.ref && h2.ref != y2.ref && (h2.ref && V$1(h2.ref, null, y2), s2.push(y2.ref, y2.__c || d2, y2)), null == w2 && null != d2 && (w2 = d2), 4 & y2.__u || h2.__k === y2.__k ? f4 = H$2(y2, f4, n2) : "function" == typeof y2.type && void 0 !== _2 ? f4 = _2 : d2 && (f4 = d2.nextSibling), y2.__u &= -7);
  return t3.__e = w2, f4;
}
function I$1(n2, l3, t3, u3) {
  var i3, o2, r3, e2, f4, c2 = l3.length, s2 = t3.length, a3 = s2, h2 = 0;
  for (n2.__k = [], i3 = 0; i3 < c2; i3++) null != (o2 = l3[i3]) && "boolean" != typeof o2 && "function" != typeof o2 ? (e2 = i3 + h2, (o2 = n2.__k[i3] = "string" == typeof o2 || "number" == typeof o2 || "bigint" == typeof o2 || o2.constructor == String ? m$6(null, o2, null, null, null) : d$6(o2) ? m$6(k$4, { children: o2 }, null, null, null) : void 0 === o2.constructor && o2.__b > 0 ? m$6(o2.type, o2.props, o2.key, o2.ref ? o2.ref : null, o2.__v) : o2).__ = n2, o2.__b = n2.__b + 1, r3 = null, -1 !== (f4 = o2.__i = O$1(o2, t3, e2, a3)) && (a3--, (r3 = t3[f4]) && (r3.__u |= 2)), null == r3 || null === r3.__v ? (-1 == f4 && h2--, "function" != typeof o2.type && (o2.__u |= 4)) : f4 !== e2 && (f4 == e2 - 1 ? h2-- : f4 == e2 + 1 ? h2++ : (f4 > e2 ? h2-- : h2++, o2.__u |= 4))) : o2 = n2.__k[i3] = null;
  if (a3) for (i3 = 0; i3 < s2; i3++) null != (r3 = t3[i3]) && 0 == (2 & r3.__u) && (r3.__e == u3 && (u3 = C$1(r3)), q$1(r3, r3));
  return u3;
}
function H$2(n2, l3, t3) {
  var u3, i3;
  if ("function" == typeof n2.type) {
    for (u3 = n2.__k, i3 = 0; u3 && i3 < u3.length; i3++) u3[i3] && (u3[i3].__ = n2, l3 = H$2(u3[i3], l3, t3));
    return l3;
  }
  n2.__e != l3 && (l3 && n2.type && !t3.contains(l3) && (l3 = C$1(n2)), t3.insertBefore(n2.__e, l3 || null), l3 = n2.__e);
  do {
    l3 = l3 && l3.nextSibling;
  } while (null != l3 && 8 === l3.nodeType);
  return l3;
}
function O$1(n2, l3, t3, u3) {
  var i3 = n2.key, o2 = n2.type, r3 = t3 - 1, e2 = t3 + 1, f4 = l3[t3];
  if (null === f4 || f4 && i3 == f4.key && o2 === f4.type && 0 == (2 & f4.__u)) return t3;
  if (("function" != typeof o2 || o2 === k$4 || i3) && u3 > (null != f4 && 0 == (2 & f4.__u) ? 1 : 0)) for (; r3 >= 0 || e2 < l3.length; ) {
    if (r3 >= 0) {
      if ((f4 = l3[r3]) && 0 == (2 & f4.__u) && i3 == f4.key && o2 === f4.type) return r3;
      r3--;
    }
    if (e2 < l3.length) {
      if ((f4 = l3[e2]) && 0 == (2 & f4.__u) && i3 == f4.key && o2 === f4.type) return e2;
      e2++;
    }
  }
  return -1;
}
function T$3(n2, l3, t3) {
  "-" === l3[0] ? n2.setProperty(l3, null == t3 ? "" : t3) : n2[l3] = null == t3 ? "" : "number" != typeof t3 || y$5.test(l3) ? t3 : t3 + "px";
}
function j$1(n2, l3, t3, u3, i3) {
  var o2, r3;
  n: if ("style" === l3) if ("string" == typeof t3) n2.style.cssText = t3;
  else {
    if ("string" == typeof u3 && (n2.style.cssText = u3 = ""), u3) for (l3 in u3) t3 && l3 in t3 || T$3(n2.style, l3, "");
    if (t3) for (l3 in t3) u3 && t3[l3] === u3[l3] || T$3(n2.style, l3, t3[l3]);
  }
  else if ("o" === l3[0] && "n" === l3[1]) o2 = l3 !== (l3 = l3.replace(f$9, "$1")), l3 = l3.toLowerCase() in n2 || "onFocusOut" === l3 || "onFocusIn" === l3 ? l3.toLowerCase().slice(2) : l3.slice(2), n2.l || (n2.l = {}), n2.l[l3 + o2] = t3, t3 ? u3 ? t3.t = u3.t : (t3.t = c$5, n2.addEventListener(l3, o2 ? a$a : s$6, o2)) : n2.removeEventListener(l3, o2 ? a$a : s$6, o2);
  else {
    if ("http://www.w3.org/2000/svg" == i3) l3 = l3.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
    else if ("width" != l3 && "height" != l3 && "href" != l3 && "list" != l3 && "form" != l3 && "tabIndex" != l3 && "download" != l3 && "rowSpan" != l3 && "colSpan" != l3 && "role" != l3 && "popover" != l3 && l3 in n2) try {
      r3 = n2.tagName && n2.tagName.includes("-"), t3 !== u3 && (n2[l3] = null != t3 || r3 ? t3 : "");
      break n;
    } catch (n3) {
    }
    "function" == typeof t3 || (null == t3 || false === t3 && "-" !== l3[4] ? n2.removeAttribute(l3) : n2.setAttribute(l3, "popover" == l3 && 1 == t3 ? "" : t3));
  }
}
function A$4(n2) {
  return function(t3) {
    if (this.l) {
      var u3 = this.l[t3.type + n2];
      if (null == t3.u) t3.u = c$5++;
      else if (t3.u < u3.t) return;
      return u3(l$a.event ? l$a.event(t3) : t3);
    }
  };
}
function F(n2, t3, u3, i3, o2, r3, e2, f4, c2, s2) {
  var a3, h2, p3, v2, y2, g2, m2, b3, C2, S2, M3, P2, I2, H3, L3, O2, T2, j2 = t3.type;
  if (void 0 !== t3.constructor) return null;
  128 & u3.__u && (c2 = !!(32 & u3.__u), r3 = [f4 = t3.__e = u3.__e]), (a3 = l$a.__b) && a3(t3);
  n: if ("function" == typeof j2) try {
    if (b3 = t3.props, C2 = "prototype" in j2 && j2.prototype.render, S2 = (a3 = j2.contextType) && i3[a3.__c], M3 = a3 ? S2 ? S2.props.value : a3.__ : i3, u3.__c ? m2 = (h2 = t3.__c = u3.__c).__ = h2.__E : (C2 ? t3.__c = h2 = new j2(b3, M3) : (t3.__c = h2 = new x$1(b3, M3), h2.constructor = j2, h2.render = B), S2 && S2.sub(h2), h2.props = b3, h2.state || (h2.state = {}), h2.context = M3, h2.__n = i3, p3 = h2.__d = true, h2.__h = [], h2._sb = []), C2 && null == h2.__s && (h2.__s = h2.state), C2 && null != j2.getDerivedStateFromProps && (h2.__s == h2.state && (h2.__s = w$1({}, h2.__s)), w$1(h2.__s, j2.getDerivedStateFromProps(b3, h2.__s))), v2 = h2.props, y2 = h2.state, h2.__v = t3, p3) C2 && null == j2.getDerivedStateFromProps && null != h2.componentWillMount && h2.componentWillMount(), C2 && null != h2.componentDidMount && h2.__h.push(h2.componentDidMount);
    else {
      if (C2 && null == j2.getDerivedStateFromProps && b3 !== v2 && null != h2.componentWillReceiveProps && h2.componentWillReceiveProps(b3, M3), !h2.__e && (null != h2.shouldComponentUpdate && false === h2.shouldComponentUpdate(b3, h2.__s, M3) || t3.__v === u3.__v)) {
        for (t3.__v !== u3.__v && (h2.props = b3, h2.state = h2.__s, h2.__d = false), t3.__e = u3.__e, t3.__k = u3.__k, t3.__k.some(function(n3) {
          n3 && (n3.__ = t3);
        }), P2 = 0; P2 < h2._sb.length; P2++) h2.__h.push(h2._sb[P2]);
        h2._sb = [], h2.__h.length && e2.push(h2);
        break n;
      }
      null != h2.componentWillUpdate && h2.componentWillUpdate(b3, h2.__s, M3), C2 && null != h2.componentDidUpdate && h2.__h.push(function() {
        h2.componentDidUpdate(v2, y2, g2);
      });
    }
    if (h2.context = M3, h2.props = b3, h2.__P = n2, h2.__e = false, I2 = l$a.__r, H3 = 0, C2) {
      for (h2.state = h2.__s, h2.__d = false, I2 && I2(t3), a3 = h2.render(h2.props, h2.state, h2.context), L3 = 0; L3 < h2._sb.length; L3++) h2.__h.push(h2._sb[L3]);
      h2._sb = [];
    } else do {
      h2.__d = false, I2 && I2(t3), a3 = h2.render(h2.props, h2.state, h2.context), h2.state = h2.__s;
    } while (h2.__d && ++H3 < 25);
    h2.state = h2.__s, null != h2.getChildContext && (i3 = w$1(w$1({}, i3), h2.getChildContext())), C2 && !p3 && null != h2.getSnapshotBeforeUpdate && (g2 = h2.getSnapshotBeforeUpdate(v2, y2)), f4 = $$1(n2, d$6(O2 = null != a3 && a3.type === k$4 && null == a3.key ? a3.props.children : a3) ? O2 : [O2], t3, u3, i3, o2, r3, e2, f4, c2, s2), h2.base = t3.__e, t3.__u &= -161, h2.__h.length && e2.push(h2), m2 && (h2.__E = h2.__ = null);
  } catch (n3) {
    if (t3.__v = null, c2 || null != r3) if (n3.then) {
      for (t3.__u |= c2 ? 160 : 128; f4 && 8 === f4.nodeType && f4.nextSibling; ) f4 = f4.nextSibling;
      r3[r3.indexOf(f4)] = null, t3.__e = f4;
    } else for (T2 = r3.length; T2--; ) _$1(r3[T2]);
    else t3.__e = u3.__e, t3.__k = u3.__k;
    l$a.__e(n3, t3, u3);
  }
  else null == r3 && t3.__v === u3.__v ? (t3.__k = u3.__k, t3.__e = u3.__e) : f4 = t3.__e = N$2(u3.__e, t3, u3, i3, o2, r3, e2, c2, s2);
  return (a3 = l$a.diffed) && a3(t3), 128 & t3.__u ? void 0 : f4;
}
function z$1(n2, t3, u3) {
  for (var i3 = 0; i3 < u3.length; i3++) V$1(u3[i3], u3[++i3], u3[++i3]);
  l$a.__c && l$a.__c(t3, n2), n2.some(function(t4) {
    try {
      n2 = t4.__h, t4.__h = [], n2.some(function(n3) {
        n3.call(t4);
      });
    } catch (n3) {
      l$a.__e(n3, t4.__v);
    }
  });
}
function N$2(t3, u3, i3, o2, r3, e2, f4, c2, s2) {
  var a3, h2, v2, y2, w2, g2, m2, b3, k3 = i3.props, x2 = u3.props, S2 = u3.type;
  if ("svg" === S2 ? r3 = "http://www.w3.org/2000/svg" : "math" === S2 ? r3 = "http://www.w3.org/1998/Math/MathML" : r3 || (r3 = "http://www.w3.org/1999/xhtml"), null != e2) {
    for (a3 = 0; a3 < e2.length; a3++) if ((w2 = e2[a3]) && "setAttribute" in w2 == !!S2 && (S2 ? w2.localName === S2 : 3 === w2.nodeType)) {
      t3 = w2, e2[a3] = null;
      break;
    }
  }
  if (null == t3) {
    if (null === S2) return document.createTextNode(x2);
    t3 = document.createElementNS(r3, S2, x2.is && x2), c2 && (l$a.__m && l$a.__m(u3, e2), c2 = false), e2 = null;
  }
  if (null === S2) k3 === x2 || c2 && t3.data === x2 || (t3.data = x2);
  else {
    if (e2 = e2 && n$b.call(t3.childNodes), k3 = i3.props || p$3, !c2 && null != e2) for (k3 = {}, a3 = 0; a3 < t3.attributes.length; a3++) k3[(w2 = t3.attributes[a3]).name] = w2.value;
    for (a3 in k3) if (w2 = k3[a3], "children" == a3) ;
    else if ("dangerouslySetInnerHTML" == a3) v2 = w2;
    else if (!(a3 in x2)) {
      if ("value" == a3 && "defaultValue" in x2 || "checked" == a3 && "defaultChecked" in x2) continue;
      j$1(t3, a3, null, w2, r3);
    }
    for (a3 in x2) w2 = x2[a3], "children" == a3 ? y2 = w2 : "dangerouslySetInnerHTML" == a3 ? h2 = w2 : "value" == a3 ? g2 = w2 : "checked" == a3 ? m2 = w2 : c2 && "function" != typeof w2 || k3[a3] === w2 || ((a3.startsWith("on") || "ref" === a3 && "function" == typeof w2) && (b3 = o2[Object.keys(o2)[0]]) && (w2 = w2.bind(b3.props.value)), j$1(t3, a3, w2, k3[a3], r3));
    if (h2) c2 || v2 && (h2.__html === v2.__html || h2.__html === t3.innerHTML) || (t3.innerHTML = h2.__html), u3.__k = [];
    else if (v2 && (t3.innerHTML = ""), $$1(t3, d$6(y2) ? y2 : [y2], u3, i3, o2, "foreignObject" === S2 ? "http://www.w3.org/1999/xhtml" : r3, e2, f4, e2 ? e2[0] : i3.__k && C$1(i3, 0), c2, s2), null != e2) for (a3 = e2.length; a3--; ) _$1(e2[a3]);
    c2 || (a3 = "value", "progress" === S2 && null == g2 ? t3.removeAttribute("value") : void 0 !== g2 && (g2 !== t3[a3] || "progress" === S2 && !g2 || "option" === S2 && g2 !== k3[a3]) && j$1(t3, a3, g2, k3[a3], r3), a3 = "checked", void 0 !== m2 && m2 !== t3[a3] && j$1(t3, a3, m2, k3[a3], r3));
  }
  return t3;
}
function V$1(n2, t3, u3) {
  try {
    if ("function" == typeof n2) {
      var i3 = "function" == typeof n2.__u;
      i3 && n2.__u(), i3 && null == t3 || (n2.__u = n2(t3));
    } else n2.current = t3;
  } catch (n3) {
    l$a.__e(n3, u3);
  }
}
function q$1(n2, t3, u3) {
  var i3, o2;
  if (l$a.unmount && l$a.unmount(n2), (i3 = n2.ref) && (i3.current && i3.current !== n2.__e || V$1(i3, null, t3)), null != (i3 = n2.__c)) {
    if (i3.componentWillUnmount) try {
      i3.componentWillUnmount();
    } catch (n3) {
      l$a.__e(n3, t3);
    }
    i3.base = i3.__P = null;
  }
  if (i3 = n2.__k) for (o2 = 0; o2 < i3.length; o2++) i3[o2] && q$1(i3[o2], t3, u3 || "function" != typeof n2.type);
  u3 || _$1(n2.__e), n2.__c = n2.__ = n2.__e = void 0;
}
function B(n2, l3, t3) {
  return this.constructor(n2, t3);
}
function D$4(t3, u3, i3) {
  var o2, r3, e2, f4;
  u3 === document && (u3 = document.documentElement), l$a.__ && l$a.__(t3, u3), r3 = (o2 = "function" == typeof i3) ? null : i3 && i3.__k || u3.__k, e2 = [], f4 = [], F(u3, t3 = (!o2 && i3 || u3).__k = g$3(k$4, null, [t3]), r3 || p$3, p$3, u3.namespaceURI, !o2 && i3 ? [i3] : r3 ? null : u3.firstChild ? n$b.call(u3.childNodes) : null, e2, !o2 && i3 ? i3 : r3 ? r3.__e : u3.firstChild, o2, f4), z$1(e2, t3, f4);
}
function E$2(n2, l3) {
  D$4(n2, l3, E$2);
}
function J(n2, l3) {
  var t3 = { __c: l3 = "__cC" + h$1++, __: n2, Consumer: function(n3, l4) {
    return n3.children(l4);
  }, Provider: function(n3) {
    var t4, u3;
    return this.getChildContext || (t4 = /* @__PURE__ */ new Set(), (u3 = {})[l3] = this, this.getChildContext = function() {
      return u3;
    }, this.componentWillUnmount = function() {
      t4 = null;
    }, this.shouldComponentUpdate = function(n4) {
      this.props.value !== n4.value && t4.forEach(function(n5) {
        n5.__e = true, M$2(n5);
      });
    }, this.sub = function(n4) {
      t4.add(n4);
      var l4 = n4.componentWillUnmount;
      n4.componentWillUnmount = function() {
        t4 && t4.delete(n4), l4 && l4.call(n4);
      };
    }), n3.children;
  } };
  return t3.Provider.__ = t3.Consumer.contextType = t3;
}
n$b = v$3.slice, l$a = { __e: function(n2, l3, t3, u3) {
  for (var i3, o2, r3; l3 = l3.__; ) if ((i3 = l3.__c) && !i3.__) try {
    if ((o2 = i3.constructor) && null != o2.getDerivedStateFromError && (i3.setState(o2.getDerivedStateFromError(n2)), r3 = i3.__d), null != i3.componentDidCatch && (i3.componentDidCatch(n2, u3 || {}), r3 = i3.__d), r3) return i3.__E = i3;
  } catch (l4) {
    n2 = l4;
  }
  throw n2;
} }, t$a = 0, x$1.prototype.setState = function(n2, l3) {
  var t3;
  t3 = null != this.__s && this.__s !== this.state ? this.__s : this.__s = w$1({}, this.state), "function" == typeof n2 && (n2 = n2(w$1({}, t3), this.props)), n2 && w$1(t3, n2), null != n2 && this.__v && (l3 && this._sb.push(l3), M$2(this));
}, x$1.prototype.forceUpdate = function(n2) {
  this.__v && (this.__e = true, n2 && this.__h.push(n2), M$2(this));
}, x$1.prototype.render = k$4, i$9 = [], r$9 = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, e$8 = function(n2, l3) {
  return n2.__v.__b - l3.__v.__b;
}, P$2.__r = 0, f$9 = /(PointerCapture)$|Capture$/i, c$5 = 0, s$6 = A$4(false), a$a = A$4(true), h$1 = 0;
var f$8 = 0;
function u$7(e2, t3, n2, o2, i3, u3) {
  t3 || (t3 = {});
  var a3, c2, l3 = t3;
  "ref" in t3 && (a3 = t3.ref, delete t3.ref);
  var p3 = { type: e2, props: l3, key: n2, ref: a3, __k: null, __: null, __b: 0, __e: null, __c: null, constructor: void 0, __v: --f$8, __i: -1, __u: 0, __source: i3, __self: u3 };
  if ("function" == typeof e2 && (a3 = e2.defaultProps)) for (c2 in a3) void 0 === l3[c2] && (l3[c2] = a3[c2]);
  return l$a.vnode && l$a.vnode(p3), p3;
}
const l$9 = /* @__PURE__ */ new WeakMap(), y$4 = (e2, r3) => {
  let t3 = l$9.get(e2);
  t3 || (t3 = J(e2), l$9.set(e2, t3));
  const m2 = e2.render(), o2 = u$7(t3.Provider, { value: e2, children: m2 });
  e2.__shouldHydrate ? (e2.shadowRoot?.querySelectorAll("style").forEach((d2) => d2.remove()), E$2(o2, r3), e2.__shouldHydrate = false) : D$4(o2, r3);
};
const i$8 = (t3) => (e2, n2) => {
  e2.metadata.i18n || (e2.metadata.i18n = {}), Object.defineProperty(e2, n2, { get() {
    return e2.i18nBundles[t3];
  }, set() {
  } }), e2.metadata.i18n[n2] = { bundleName: t3, target: e2 };
};
var o$4 = ((i3) => (i3.None = "None", i3.Positive = "Positive", i3.Critical = "Critical", i3.Negative = "Negative", i3.Information = "Information", i3))(o$4 || {});
const b$5 = /* @__PURE__ */ new WeakMap(), o$3 = /* @__PURE__ */ new WeakMap(), v$2 = { attributes: true, childList: true, characterData: true, subtree: true }, A$3 = (e2) => {
  const t3 = e2;
  return t3.accessibleNameRef ? E$1(e2) : t3.accessibleName ? t3.accessibleName : void 0;
}, E$1 = (e2) => {
  const t3 = e2.accessibleNameRef?.split(" ") ?? [];
  let s2 = "";
  return t3.forEach((n2, c2) => {
    const l3 = m$5(e2, n2), a3 = `${l3 && l3.textContent ? l3.textContent : ""}`;
    a3 && (s2 += a3, c2 < t3.length - 1 && (s2 += " "));
  }), s2;
}, f$7 = (e2) => {
  const t3 = /* @__PURE__ */ new Set();
  u$6(e2).forEach((r3) => {
    t3.add(r3);
  });
  const n2 = e2.accessibleNameRef, c2 = e2.accessibleDescriptionRef, l3 = [n2, c2].filter(Boolean).join(" ");
  return (l3 ? l3.split(" ") : []).forEach((r3) => {
    const i3 = m$5(e2, r3);
    i3 && t3.add(i3);
  }), Array.from(t3);
}, u$6 = (e2) => {
  const t3 = e2.getRootNode().querySelectorAll(`[for="${e2.id}"]`);
  return Array.from(t3);
}, m$5 = (e2, t3) => e2.getRootNode().querySelector(`[id='${t3}']`) || document.getElementById(t3), M$1 = (e2) => {
  const t3 = [];
  if (u$6(e2).forEach((n2) => {
    const c2 = n2.textContent;
    c2 && t3.push(c2);
  }), t3.length) return t3.join(" ");
}, k$3 = (e2) => (s2) => {
  const n2 = s2 && s2.type === "property" && s2.name === "accessibleNameRef", c2 = s2 && s2.type === "property" && s2.name === "accessibleDescriptionRef";
  if (!n2 && !c2) return;
  const l3 = o$3.get(e2);
  if (!l3) return;
  const a3 = l3.observedElements, r3 = f$7(e2);
  a3.forEach((i3) => {
    r3.includes(i3) || d$5(l3, i3);
  }), r3.forEach((i3) => {
    a3.includes(i3) || (g$2(l3, i3), l3.observedElements.push(i3));
  }), l3?.callback();
}, y$3 = (e2, t3) => {
  if (o$3.has(e2)) return;
  const s2 = f$7(e2), n2 = k$3(e2), c2 = { host: e2, observedElements: s2, callback: t3, invalidationCallback: n2 };
  o$3.set(e2, c2), e2.attachInvalidate(n2), s2.forEach((l3) => {
    g$2(c2, l3);
  }), t3();
}, g$2 = (e2, t3) => {
  let s2 = b$5.get(t3);
  if (!s2) {
    s2 = { observer: null, callbacks: [] };
    const n2 = new MutationObserver(() => {
      s2.callbacks.forEach((a3) => {
        a3();
      });
      const l3 = document.getElementById(t3.id);
      e2.host.id === t3.getAttribute("for") || l3 || d$5(e2, t3);
    });
    s2.observer = n2, n2.observe(t3, v$2), b$5.set(t3, s2);
  }
  s2.callbacks.includes(e2.callback) || s2.callbacks.push(e2.callback);
}, d$5 = (e2, t3) => {
  const s2 = b$5.get(t3);
  s2 && (s2.callbacks = s2.callbacks.filter((n2) => n2 !== e2.callback), s2.callbacks.length || (s2.observer?.disconnect(), b$5.delete(t3))), e2.observedElements = e2.observedElements.filter((n2) => n2 !== t3);
}, T$2 = (e2) => {
  const t3 = o$3.get(e2);
  if (!t3) return;
  [...t3.observedElements].forEach((n2) => {
    d$5(t3, n2);
  }), e2.detachInvalidate(t3.invalidationCallback), o$3.delete(e2);
}, L$2 = (e2) => {
  const t3 = e2;
  return t3.accessibleDescriptionRef ? p$2(e2) : t3.accessibleDescription ? t3.accessibleDescription : void 0;
}, p$2 = (e2) => {
  const t3 = e2.accessibleDescriptionRef?.split(" ") ?? [];
  let s2 = "";
  return t3.forEach((n2, c2) => {
    const l3 = m$5(e2, n2), a3 = `${l3 && l3.textContent ? l3.textContent : ""}`;
    a3 && (s2 += a3, c2 < t3.length - 1 && (s2 += " "));
  }), s2;
};
const y$2 = { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, ESCAPE: 27, SPACE: 32, PAGE_UP: 33, PAGE_DOWN: 34, END: 35, HOME: 36, ARROW_LEFT: 37, ARROW_UP: 38, ARROW_RIGHT: 39, ARROW_DOWN: 40, DELETE: 46, F4: 115, F6: 117, F8: 119 }, b$4 = (o2) => (o2.key ? o2.key === "Enter" : o2.keyCode === y$2.ENTER) && !a$9(o2), i$7 = (o2) => (o2.key ? o2.key === "Enter" : o2.keyCode === y$2.ENTER) && e$7(o2, false, false, true), C = (o2) => e$7(o2, true, false, false), A$2 = (o2) => (o2.key ? o2.key === "Spacebar" || o2.key === " " : o2.keyCode === y$2.SPACE) && !a$9(o2), K = (o2) => (o2.key ? o2.key === "Spacebar" || o2.key === " " : o2.keyCode === y$2.SPACE) && e$7(o2, false, false, true), D$3 = (o2) => (o2.key ? o2.key === "ArrowLeft" || o2.key === "Left" : o2.keyCode === y$2.ARROW_LEFT) && !a$9(o2), R2 = (o2) => (o2.key ? o2.key === "ArrowRight" || o2.key === "Right" : o2.keyCode === y$2.ARROW_RIGHT) && !a$9(o2), P$1 = (o2) => (o2.key ? o2.key === "ArrowUp" || o2.key === "Up" : o2.keyCode === y$2.ARROW_UP) && !a$9(o2), _ = (o2) => (o2.key ? o2.key === "ArrowDown" || o2.key === "Down" : o2.keyCode === y$2.ARROW_DOWN) && !a$9(o2), O = (o2) => (o2.key ? o2.key === "ArrowUp" || o2.key === "Up" : o2.keyCode === y$2.ARROW_UP) && e$7(o2, false, false, true), N$1 = (o2) => (o2.key ? o2.key === "ArrowDown" || o2.key === "Down" : o2.keyCode === y$2.ARROW_DOWN) && e$7(o2, false, false, true), h = (o2) => (o2.key ? o2.key === "ArrowLeft" || o2.key === "Left" : o2.keyCode === y$2.ARROW_LEFT) && e$7(o2, false, false, true), I = (o2) => (o2.key ? o2.key === "ArrowRight" || o2.key === "Right" : o2.keyCode === y$2.ARROW_RIGHT) && e$7(o2, false, false, true), M2 = (o2) => (o2.key ? o2.key === "Home" : o2.keyCode === y$2.HOME) && !a$9(o2), n$a = (o2) => (o2.key ? o2.key === "End" : o2.keyCode === y$2.END) && !a$9(o2), G = (o2) => (o2.key ? o2.key === "Home" : o2.keyCode === y$2.HOME) && e$7(o2, true, false, false), H$1 = (o2) => (o2.key ? o2.key === "End" : o2.keyCode === y$2.END) && e$7(o2, true, false, false), m$4 = (o2) => (o2.key ? o2.key === "Escape" || o2.key === "Esc" : o2.keyCode === y$2.ESCAPE) && !a$9(o2), x = (o2) => (o2.key ? o2.key === "Tab" : o2.keyCode === y$2.TAB) && !a$9(o2), V = (o2) => (o2.key ? o2.key === "Tab" : o2.keyCode === y$2.TAB) && e$7(o2, false, false, true), Q = (o2) => (o2.key ? o2.key === "Backspace" : o2.keyCode === y$2.BACKSPACE) && !a$9(o2), X = (o2) => (o2.key ? o2.key === "Delete" : o2.keyCode === y$2.DELETE) && !a$9(o2), j = (o2) => (o2.key ? o2.key === "PageUp" : o2.keyCode === y$2.PAGE_UP) && !a$9(o2), q = (o2) => (o2.key ? o2.key === "PageDown" : o2.keyCode === y$2.PAGE_DOWN) && !a$9(o2), z2 = (o2) => (o2.key ? o2.key === "PageUp" : o2.keyCode === y$2.PAGE_UP) && e$7(o2, false, false, true), $ = (o2) => (o2.key ? o2.key === "PageUp" : o2.keyCode === y$2.PAGE_UP) && e$7(o2, false, true, false), v$1 = (o2) => (o2.key ? o2.key === "PageDown" : o2.keyCode === y$2.PAGE_DOWN) && e$7(o2, false, false, true), oo = (o2) => (o2.key ? o2.key === "PageDown" : o2.keyCode === y$2.PAGE_DOWN) && e$7(o2, false, true, false), yo = (o2) => (o2.key ? o2.key === "PageUp" : o2.keyCode === y$2.PAGE_UP) && e$7(o2, true, false, true), eo = (o2) => (o2.key ? o2.key === "PageDown" : o2.keyCode === y$2.PAGE_DOWN) && e$7(o2, true, false, true), ko = (o2) => o2.key ? s$5(o2) || Ao(o2) : o2.keyCode === y$2.F4 && !a$9(o2) || o2.keyCode === y$2.ARROW_DOWN && e$7(o2, false, true, false), ro = (o2) => o2.key === "F2" && !a$9(o2), s$5 = (o2) => o2.key === "F4" && !a$9(o2), lo = (o2) => (o2.key ? o2.key === "F4" : o2.keyCode === y$2.F4) && e$7(o2, false, false, true), bo = (o2) => (o2.key ? o2.key === "F6" : o2.keyCode === y$2.F6) && e$7(o2, false, false, false) || (o2.key ? o2.key === "ArrowDown" || o2.key === "Down" : o2.keyCode === y$2.ARROW_DOWN) && e$7(o2, true, true, false), fo = (o2) => (o2.key ? o2.key === "F6" : o2.keyCode === y$2.F6) && e$7(o2, false, false, true) || (o2.key ? o2.key === "ArrowUp" || o2.key === "Up" : o2.keyCode === y$2.ARROW_UP) && e$7(o2, true, true, false), Co = (o2) => (o2.key ? o2.key === "F8" : o2.keyCode === y$2.F8) && e$7(o2, true, true, false), Ao = (o2) => (o2.key === "ArrowDown" || o2.key === "Down" || o2.key === "ArrowUp" || o2.key === "Up") && e$7(o2, false, true, false), Ko = (o2) => o2.key === "Shift" || o2.keyCode === y$2.SHIFT, a$9 = (o2) => o2.shiftKey || o2.altKey || k$2(o2), k$2 = (o2) => !!(o2.metaKey || o2.ctrlKey), e$7 = (o2, r3, l3, E2) => o2.shiftKey === E2 && o2.altKey === l3 && k$2(o2) === r3;
const defaultThemeBase = `:root {--sapThemeMetaData-Base-baseLib:{"Path": "Base.baseLib.sap_horizon.css_variables","PathPattern": "/%frameworkId%/%libId%/%themeId%/%fileId%.css","Extends": ["baseTheme"],"Tags": ["Fiori_3","LightColorScheme"],"FallbackThemeId": "sap_fiori_3","Engine":{"Name": "theming-engine","Version": "15.0.8"},"Version":{"Build": "11.29.3.20250417070835","Source": "11.29.3"}};--sapBrandColor: #0070f2;--sapHighlightColor: #0064d9;--sapBaseColor: #fff;--sapShellColor: #fff;--sapBackgroundColor: #f5f6f7;--sapFontFamily: "72", "72full", Arial, Helvetica, sans-serif;--sapFontSize: .875rem;--sapTextColor: #131e29;--sapLinkColor: #0064d9;--sapCompanyLogo: none;--sapFavicon: none;--sapBackgroundImage: none;--sapBackgroundImageOpacity: 1;--sapBackgroundImageRepeat: false;--sapSelectedColor: #0064d9;--sapHoverColor: #eaecee;--sapActiveColor: #dee2e5;--sapHighlightTextColor: #fff;--sapTitleColor: #131e29;--sapNegativeColor: #aa0808;--sapCriticalColor: #e76500;--sapPositiveColor: #256f3a;--sapInformativeColor: #0070f2;--sapNeutralColor: #788fa6;--sapNegativeElementColor: #f53232;--sapCriticalElementColor: #e76500;--sapPositiveElementColor: #30914c;--sapInformativeElementColor: #0070f2;--sapNeutralElementColor: #788fa6;--sapNegativeTextColor: #aa0808;--sapCriticalTextColor: #b44f00;--sapPositiveTextColor: #256f3a;--sapInformativeTextColor: #0064d9;--sapNeutralTextColor: #131e29;--sapErrorColor: #aa0808;--sapWarningColor: #e76500;--sapSuccessColor: #256f3a;--sapInformationColor: #0070f2;--sapErrorBackground: #ffeaf4;--sapWarningBackground: #fff8d6;--sapSuccessBackground: #f5fae5;--sapInformationBackground: #e1f4ff;--sapNeutralBackground: #eff1f2;--sapErrorBorderColor: #e90b0b;--sapWarningBorderColor: #dd6100;--sapSuccessBorderColor: #30914c;--sapInformationBorderColor: #0070f2;--sapNeutralBorderColor: #788fa6;--sapElement_LineHeight: 2.75rem;--sapElement_Height: 2.25rem;--sapElement_BorderWidth: .0625rem;--sapElement_BorderCornerRadius: .75rem;--sapElement_Compact_LineHeight: 2rem;--sapElement_Compact_Height: 1.625rem;--sapElement_Condensed_LineHeight: 1.5rem;--sapElement_Condensed_Height: 1.375rem;--sapContent_LineHeight: 1.5;--sapContent_IconHeight: 1rem;--sapContent_IconColor: #131e29;--sapContent_ContrastIconColor: #fff;--sapContent_NonInteractiveIconColor: #758ca4;--sapContent_MarkerIconColor: #5d36ff;--sapContent_MarkerTextColor: #046c7a;--sapContent_MeasureIndicatorColor: #556b81;--sapContent_Selected_MeasureIndicatorColor: #0064d9;--sapContent_Placeholderloading_Background: #ccc;--sapContent_Placeholderloading_Gradient: linear-gradient(to right, #ccc 0%, #ccc 20%, #999 50%, #ccc 80%, #ccc 100%);--sapContent_ImagePlaceholderBackground: #eaecee;--sapContent_ImagePlaceholderForegroundColor: #5b738b;--sapContent_RatedColor: #d27700;--sapContent_UnratedColor: #758ca4;--sapContent_BusyColor: #0064d9;--sapContent_FocusColor: #0032a5;--sapContent_FocusStyle: solid;--sapContent_FocusWidth: .125rem;--sapContent_ContrastFocusColor: #fff;--sapContent_ShadowColor: #223548;--sapContent_ContrastShadowColor: #fff;--sapContent_Shadow0: 0 0 .125rem 0 rgba(34,53,72,.2), 0 .125rem .25rem 0 rgba(34,53,72,.2);--sapContent_Shadow1: 0 0 0 .0625rem rgba(34,53,72,.48), 0 .125rem .5rem 0 rgba(34,53,72,.3);--sapContent_Shadow2: 0 0 0 .0625rem rgba(34,53,72,.48), 0 .625rem 1.875rem 0 rgba(34,53,72,.25);--sapContent_Shadow3: 0 0 0 .0625rem rgba(34,53,72,.48), 0 1.25rem 5rem 0 rgba(34,53,72,.25);--sapContent_TextShadow: 0 0 .125rem #fff;--sapContent_ContrastTextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapContent_HeaderShadow: 0 .125rem .125rem 0 rgba(34,53,72,.05), inset 0 -.0625rem 0 0 #d9d9d9;--sapContent_Interaction_Shadow: inset 0 0 0 .0625rem rgba(85,107,129,.25);--sapContent_Selected_Shadow: inset 0 0 0 .0625rem rgba(79,160,255,.5);--sapContent_Negative_Shadow: inset 0 0 0 .0625rem rgba(255,142,196,.45);--sapContent_Critical_Shadow: inset 0 0 0 .0625rem rgba(255,213,10,.4);--sapContent_Positive_Shadow: inset 0 0 0 .0625rem rgba(48,145,76,.18);--sapContent_Informative_Shadow: inset 0 0 0 .0625rem rgba(104,174,255,.5);--sapContent_Neutral_Shadow: inset 0 0 0 .0625rem rgba(120,143,166,.3);--sapContent_SearchHighlightColor: #dafdf5;--sapContent_HelpColor: #188918;--sapContent_LabelColor: #556b82;--sapContent_MonospaceFontFamily: "72Mono", "72Monofull", lucida console, monospace;--sapContent_MonospaceBoldFontFamily: "72Mono-Bold", "72Mono-Boldfull", lucida console, monospace;--sapContent_IconFontFamily: "SAP-icons";--sapContent_DisabledTextColor: rgba(19,30,41,.6);--sapContent_DisabledOpacity: .4;--sapContent_ContrastTextThreshold: .65;--sapContent_ContrastTextColor: #fff;--sapContent_ForegroundColor: #efefef;--sapContent_ForegroundBorderColor: #758ca4;--sapContent_ForegroundTextColor: #131e29;--sapContent_BadgeBackground: #aa0808;--sapContent_BadgeTextColor: #fff;--sapContent_BadgeBorderColor: #fff;--sapContent_DragAndDropActiveColor: #0064d9;--sapContent_Selected_TextColor: #0064d9;--sapContent_Selected_Background: #fff;--sapContent_Selected_Hover_Background: #e3f0ff;--sapContent_Selected_ForegroundColor: #0064d9;--sapContent_ForcedColorAdjust: none;--sapContent_Lite_Shadow: None;--sapContent_Illustrative_Color1: #9b015d;--sapContent_Illustrative_Color2: #56bdff;--sapContent_Illustrative_Color3: #ff7f4c;--sapContent_Illustrative_Color4: #00144a;--sapContent_Illustrative_Color5: #a9b4be;--sapContent_Illustrative_Color6: #d5dadd;--sapContent_Illustrative_Color7: #dbf1ff;--sapContent_Illustrative_Color8: #fff;--sapContent_Illustrative_Color9: #0899a7;--sapContent_Illustrative_Color10: #dbf1ff;--sapContent_Illustrative_Color11: #df1278;--sapContent_Illustrative_Color12: #00a800;--sapContent_Illustrative_Color13: #0070f2;--sapContent_Illustrative_Color14: #0040b0;--sapContent_Illustrative_Color15: #c35500;--sapContent_Illustrative_Color16: #8d2a00;--sapContent_Illustrative_Color17: #046c7c;--sapContent_Illustrative_Color18: #bce5ff;--sapContent_Illustrative_Color19: #a3dbff;--sapContent_Illustrative_Color20: #89d1ff;--sapContent_Illustrative_Color21: #1b90ff;--sapContent_Illustrative_Color22: #00144a;--sapContent_Illustrative_Color23: #d20a0a;--sapContent_Illustrative_Color24: #ffb2d2;--sapContent_Illustrative_Color25: #ffeaf4;--sapContent_Illustrative_Color26: #ffdf72;--sapContent_Illustrative_Color27: #fff8d6;--sapContent_Illustrative_Color28: #a93e00;--sapContent_Illustrative_Color29: #450b00;--sapContent_Illustrative_Color30: #340800;--sapContent_Illustrative_Color31: #ffab92;--sapContent_Space_S: 1rem;--sapContent_Space_M: 2rem;--sapContent_Space_L: 2rem;--sapContent_Space_XL: 3rem;--sapContent_Space_Tiny: .5rem;--sapContent_Space_Small: 1rem;--sapContent_Space_Medium: 2rem;--sapContent_Space_Large: 3rem;--sapContent_Margin_Tiny: 0 0 1rem;--sapContent_Margin_Small: 1rem;--sapContent_Margin_Medium: 1rem 2rem;--sapContent_Margin_Large: 1rem;--sapContent_Padding_S: 0rem;--sapContent_Padding_M: 2rem;--sapContent_Padding_L: 2rem;--sapContent_Padding_XL: 3rem;--sapContent_Gap: 1rem;--sapContent_Success_HeaderShadow: 0 .125rem .125rem 0 rgba(34,53,72,.05), inset 0 -.0625rem 0 0 #30914c;--sapContent_Warning_HeaderShadow: 0 .125rem .125rem 0 rgba(34,53,72,.05), inset 0 -.0625rem 0 0 #dd6100;--sapContent_Error_HeaderShadow: 0 .125rem .125rem 0 rgba(34,53,72,.05), inset 0 -.0625rem 0 0 #e90b0b;--sapContent_Information_HeaderShadow: 0 .125rem .125rem 0 rgba(34,53,72,.05), inset 0 -.0625rem 0 0 #0070f2;--sapFontLightFamily: "72-Light", "72-Lightfull", "72", "72full", Arial, Helvetica, sans-serif;--sapFontBoldFamily: "72-Bold", "72-Boldfull", "72", "72full", Arial, Helvetica, sans-serif;--sapFontSemiboldFamily: "72-Semibold", "72-Semiboldfull", "72", "72full", Arial, Helvetica, sans-serif;--sapFontSemiboldDuplexFamily: "72-SemiboldDuplex", "72-SemiboldDuplexfull", "72", "72full", Arial, Helvetica, sans-serif;--sapFontBlackFamily: "72Black", "72Blackfull","72", "72full", Arial, Helvetica, sans-serif;--sapFontHeaderFamily: "72-Bold", "72-Boldfull", "72", "72full", Arial, Helvetica, sans-serif;--sapFontSmallSize: .75rem;--sapFontLargeSize: 1rem;--sapFontHeader1Size: 3rem;--sapFontHeader2Size: 2rem;--sapFontHeader3Size: 1.5rem;--sapFontHeader4Size: 1.25rem;--sapFontHeader5Size: 1rem;--sapFontHeader6Size: .875rem;--sapLink_TextDecoration: none;--sapLink_Hover_Color: #0064d9;--sapLink_Hover_TextDecoration: underline;--sapLink_Active_Color: #0064d9;--sapLink_Active_TextDecoration: none;--sapLink_Visited_Color: #0064d9;--sapLink_InvertedColor: #a6cfff;--sapLink_SubtleColor: #131e29;--sapShell_Background: #eff1f2;--sapShell_BackgroundImage: linear-gradient(to bottom, #eff1f2, #eff1f2);--sapShell_BackgroundImageOpacity: 1;--sapShell_BackgroundImageRepeat: false;--sapShell_BorderColor: #fff;--sapShell_TextColor: #131e29;--sapShell_InteractiveBackground: #eff1f2;--sapShell_InteractiveTextColor: #131e29;--sapShell_InteractiveBorderColor: #556b81;--sapShell_GroupTitleTextColor: #131e29;--sapShell_GroupTitleTextShadow: 0 0 .125rem #fff;--sapShell_Hover_Background: #fff;--sapShell_Active_Background: #fff;--sapShell_Active_TextColor: #0070f2;--sapShell_Selected_Background: #fff;--sapShell_Selected_TextColor: #0070f2;--sapShell_Selected_Hover_Background: #fff;--sapShell_Favicon: none;--sapShell_Navigation_Background: #fff;--sapShell_Navigation_Hover_Background: #fff;--sapShell_Navigation_SelectedColor: #0064d9;--sapShell_Navigation_Selected_TextColor: #0064d9;--sapShell_Navigation_TextColor: #131e29;--sapShell_Navigation_Active_TextColor: #0064d9;--sapShell_Navigation_Active_Background: #fff;--sapShell_Shadow: 0 .125rem .125rem 0 rgba(34,53,72,.15), inset 0 -.0625rem 0 0 rgba(34,53,72,.2);--sapShell_NegativeColor: #aa0808;--sapShell_CriticalColor: #b44f00;--sapShell_PositiveColor: #256f3a;--sapShell_InformativeColor: #0064d9;--sapShell_NeutralColor: #131e29;--sapShell_Assistant_ForegroundColor: #5d36ff;--sapShell_SubBrand_TextColor: #003e87;--sapShell_Category_1_Background: #0057d2;--sapShell_Category_1_BorderColor: #0057d2;--sapShell_Category_1_TextColor: #fff;--sapShell_Category_1_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_2_Background: #df1278;--sapShell_Category_2_BorderColor: #df1278;--sapShell_Category_2_TextColor: #fff;--sapShell_Category_2_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_3_Background: #e76500;--sapShell_Category_3_BorderColor: #e76500;--sapShell_Category_3_TextColor: #fff;--sapShell_Category_3_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_4_Background: #7800a4;--sapShell_Category_4_BorderColor: #7800a4;--sapShell_Category_4_TextColor: #fff;--sapShell_Category_4_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_5_Background: #aa2608;--sapShell_Category_5_BorderColor: #aa2608;--sapShell_Category_5_TextColor: #fff;--sapShell_Category_5_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_6_Background: #07838f;--sapShell_Category_6_BorderColor: #07838f;--sapShell_Category_6_TextColor: #fff;--sapShell_Category_6_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_7_Background: #f31ded;--sapShell_Category_7_BorderColor: #f31ded;--sapShell_Category_7_TextColor: #fff;--sapShell_Category_7_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_8_Background: #188918;--sapShell_Category_8_BorderColor: #188918;--sapShell_Category_8_TextColor: #fff;--sapShell_Category_8_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_9_Background: #002a86;--sapShell_Category_9_BorderColor: #002a86;--sapShell_Category_9_TextColor: #fff;--sapShell_Category_9_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_10_Background: #5b738b;--sapShell_Category_10_BorderColor: #5b738b;--sapShell_Category_10_TextColor: #fff;--sapShell_Category_10_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_11_Background: #d20a0a;--sapShell_Category_11_BorderColor: #d20a0a;--sapShell_Category_11_TextColor: #fff;--sapShell_Category_11_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_12_Background: #7858ff;--sapShell_Category_12_BorderColor: #7858ff;--sapShell_Category_12_TextColor: #fff;--sapShell_Category_12_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_13_Background: #a00875;--sapShell_Category_13_BorderColor: #a00875;--sapShell_Category_13_TextColor: #fff;--sapShell_Category_13_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_14_Background: #14565b;--sapShell_Category_14_BorderColor: #14565b;--sapShell_Category_14_TextColor: #fff;--sapShell_Category_14_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_15_Background: #223548;--sapShell_Category_15_BorderColor: #223548;--sapShell_Category_15_TextColor: #fff;--sapShell_Category_15_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_16_Background: #1e592f;--sapShell_Category_16_BorderColor: #1e592f;--sapShell_Category_16_TextColor: #fff;--sapShell_Category_16_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Space_S: .5rem;--sapShell_Space_M: 2rem;--sapShell_Space_L: 2rem;--sapShell_Space_XL: 3rem;--sapShell_Gap_S: .5rem;--sapShell_Gap_M: 1rem;--sapShell_Gap_L: 1rem;--sapShell_Gap_XL: 1rem;--sapShell_GroupGap_S: 2rem;--sapShell_GroupGap_M: 3rem;--sapShell_GroupGap_L: 3rem;--sapShell_GroupGap_XL: 3rem;--sapAssistant_Color1: #5d36ff;--sapAssistant_Color2: #a100c2;--sapAssistant_BackgroundGradient: linear-gradient(#5d36ff, #a100c2);--sapAssistant_Background: #5d36ff;--sapAssistant_BorderColor: #5d36ff;--sapAssistant_TextColor: #fff;--sapAssistant_Hover_Background: #2800cf;--sapAssistant_Hover_BorderColor: #2800cf;--sapAssistant_Hover_TextColor: #fff;--sapAssistant_Active_Background: #fff;--sapAssistant_Active_BorderColor: #5d36ff;--sapAssistant_Active_TextColor: #5d36ff;--sapAssistant_Question_Background: #eae5ff;--sapAssistant_Question_BorderColor: #eae5ff;--sapAssistant_Question_TextColor: #131e29;--sapAssistant_Answer_Background: #eff1f2;--sapAssistant_Answer_BorderColor: #eff1f2;--sapAssistant_Answer_TextColor: #131e29;--sapAvatar_1_Background: #fff3b8;--sapAvatar_1_BorderColor: #fff3b8;--sapAvatar_1_TextColor: #a45d00;--sapAvatar_1_Hover_Background: #fff3b8;--sapAvatar_2_Background: #ffd0e7;--sapAvatar_2_BorderColor: #ffd0e7;--sapAvatar_2_TextColor: #aa0808;--sapAvatar_2_Hover_Background: #ffd0e7;--sapAvatar_3_Background: #ffdbe7;--sapAvatar_3_BorderColor: #ffdbe7;--sapAvatar_3_TextColor: #ba066c;--sapAvatar_3_Hover_Background: #ffdbe7;--sapAvatar_4_Background: #ffdcf3;--sapAvatar_4_BorderColor: #ffdcf3;--sapAvatar_4_TextColor: #a100c2;--sapAvatar_4_Hover_Background: #ffdcf3;--sapAvatar_5_Background: #ded3ff;--sapAvatar_5_BorderColor: #ded3ff;--sapAvatar_5_TextColor: #552cff;--sapAvatar_5_Hover_Background: #ded3ff;--sapAvatar_6_Background: #d1efff;--sapAvatar_6_BorderColor: #d1efff;--sapAvatar_6_TextColor: #0057d2;--sapAvatar_6_Hover_Background: #d1efff;--sapAvatar_7_Background: #c2fcee;--sapAvatar_7_BorderColor: #c2fcee;--sapAvatar_7_TextColor: #046c7a;--sapAvatar_7_Hover_Background: #c2fcee;--sapAvatar_8_Background: #ebf5cb;--sapAvatar_8_BorderColor: #ebf5cb;--sapAvatar_8_TextColor: #256f3a;--sapAvatar_8_Hover_Background: #ebf5cb;--sapAvatar_9_Background: #ddccf0;--sapAvatar_9_BorderColor: #ddccf0;--sapAvatar_9_TextColor: #6c32a9;--sapAvatar_9_Hover_Background: #ddccf0;--sapAvatar_10_Background: #eaecee;--sapAvatar_10_BorderColor: #eaecee;--sapAvatar_10_TextColor: #556b82;--sapAvatar_10_Hover_Background: #eaecee;--sapAvatar_Lite_BorderColor: transparent;--sapAvatar_Lite_Background: transparent;--sapAvatar_Hover_BorderColor: rgba(85,107,129,.25);--sapButton_Background: #fff;--sapButton_BorderColor: #bcc3ca;--sapButton_BorderWidth: .0625rem;--sapButton_BorderCornerRadius: .5rem;--sapButton_TextColor: #0064d9;--sapButton_FontFamily: "72-SemiboldDuplex", "72-SemiboldDuplexfull", "72", "72full", Arial, Helvetica, sans-serif;--sapButton_Hover_Background: #eaecee;--sapButton_Hover_BorderColor: #bcc3ca;--sapButton_Hover_TextColor: #0064d9;--sapButton_IconColor: #0064d9;--sapButton_Active_Background: #fff;--sapButton_Active_BorderColor: #0064d9;--sapButton_Active_TextColor: #0064d9;--sapButton_Emphasized_Background: #0070f2;--sapButton_Emphasized_BorderColor: #0070f2;--sapButton_Emphasized_BorderWidth: .0625rem;--sapButton_Emphasized_TextColor: #fff;--sapButton_Emphasized_FontFamily: "72-Bold", "72-Boldfull", "72", "72full", Arial, Helvetica, sans-serif;--sapButton_Emphasized_Hover_Background: #0064d9;--sapButton_Emphasized_Hover_BorderColor: #0064d9;--sapButton_Emphasized_Hover_TextColor: #fff;--sapButton_Emphasized_Active_Background: #fff;--sapButton_Emphasized_Active_BorderColor: #0064d9;--sapButton_Emphasized_Active_TextColor: #0064d9;--sapButton_Emphasized_TextShadow: transparent;--sapButton_Emphasized_FontWeight: bold;--sapButton_Reject_Background: #ffd6e9;--sapButton_Reject_BorderColor: #ffc2de;--sapButton_Reject_TextColor: #aa0808;--sapButton_Reject_Hover_Background: #ffbddb;--sapButton_Reject_Hover_BorderColor: #ffbddb;--sapButton_Reject_Hover_TextColor: #aa0808;--sapButton_Reject_Active_Background: #fff;--sapButton_Reject_Active_BorderColor: #e90b0b;--sapButton_Reject_Active_TextColor: #aa0808;--sapButton_Reject_Selected_Background: #fff;--sapButton_Reject_Selected_BorderColor: #e90b0b;--sapButton_Reject_Selected_TextColor: #aa0808;--sapButton_Reject_Selected_Hover_Background: #ffbddb;--sapButton_Reject_Selected_Hover_BorderColor: #e90b0b;--sapButton_Accept_Background: #ebf5cb;--sapButton_Accept_BorderColor: #dbeda0;--sapButton_Accept_TextColor: #256f3a;--sapButton_Accept_Hover_Background: #e3f1b6;--sapButton_Accept_Hover_BorderColor: #e3f1b6;--sapButton_Accept_Hover_TextColor: #256f3a;--sapButton_Accept_Active_Background: #fff;--sapButton_Accept_Active_BorderColor: #30914c;--sapButton_Accept_Active_TextColor: #256f3a;--sapButton_Accept_Selected_Background: #fff;--sapButton_Accept_Selected_BorderColor: #30914c;--sapButton_Accept_Selected_TextColor: #256f3a;--sapButton_Accept_Selected_Hover_Background: #e3f1b6;--sapButton_Accept_Selected_Hover_BorderColor: #30914c;--sapButton_Lite_Background: transparent;--sapButton_Lite_BorderColor: transparent;--sapButton_Lite_TextColor: #0064d9;--sapButton_Lite_Hover_Background: #eaecee;--sapButton_Lite_Hover_BorderColor: #bcc3ca;--sapButton_Lite_Hover_TextColor: #0064d9;--sapButton_Lite_Active_Background: #fff;--sapButton_Lite_Active_BorderColor: #0064d9;--sapButton_Selected_Background: #edf6ff;--sapButton_Selected_BorderColor: #0064d9;--sapButton_Selected_TextColor: #0064d9;--sapButton_Selected_Hover_Background: #d9ecff;--sapButton_Selected_Hover_BorderColor: #0064d9;--sapButton_Attention_Background: #fff3b7;--sapButton_Attention_BorderColor: #ffeb84;--sapButton_Attention_TextColor: #b44f00;--sapButton_Attention_Hover_Background: #ffef9e;--sapButton_Attention_Hover_BorderColor: #ffef9e;--sapButton_Attention_Hover_TextColor: #b44f00;--sapButton_Attention_Active_Background: #fff;--sapButton_Attention_Active_BorderColor: #dd6100;--sapButton_Attention_Active_TextColor: #b44f00;--sapButton_Attention_Selected_Background: #fff;--sapButton_Attention_Selected_BorderColor: #dd6100;--sapButton_Attention_Selected_TextColor: #b44f00;--sapButton_Attention_Selected_Hover_Background: #ffef9e;--sapButton_Attention_Selected_Hover_BorderColor: #dd6100;--sapButton_Negative_Background: #f53232;--sapButton_Negative_BorderColor: #f53232;--sapButton_Negative_TextColor: #fff;--sapButton_Negative_Hover_Background: #e90b0b;--sapButton_Negative_Hover_BorderColor: #e90b0b;--sapButton_Negative_Hover_TextColor: #fff;--sapButton_Negative_Active_Background: #fff;--sapButton_Negative_Active_BorderColor: #f53232;--sapButton_Negative_Active_TextColor: #aa0808;--sapButton_Critical_Background: #e76500;--sapButton_Critical_BorderColor: #e76500;--sapButton_Critical_TextColor: #fff;--sapButton_Critical_Hover_Background: #dd6100;--sapButton_Critical_Hover_BorderColor: #dd6100;--sapButton_Critical_Hover_TextColor: #fff;--sapButton_Critical_Active_Background: #fff;--sapButton_Critical_Active_BorderColor: #dd6100;--sapButton_Critical_Active_TextColor: #b44f00;--sapButton_Success_Background: #30914c;--sapButton_Success_BorderColor: #30914c;--sapButton_Success_TextColor: #fff;--sapButton_Success_Hover_Background: #2c8646;--sapButton_Success_Hover_BorderColor: #2c8646;--sapButton_Success_Hover_TextColor: #fff;--sapButton_Success_Active_Background: #fff;--sapButton_Success_Active_BorderColor: #30914c;--sapButton_Success_Active_TextColor: #256f3a;--sapButton_Information_Background: #e8f3ff;--sapButton_Information_BorderColor: #b5d8ff;--sapButton_Information_TextColor: #0064d9;--sapButton_Information_Hover_Background: #d4e8ff;--sapButton_Information_Hover_BorderColor: #b5d8ff;--sapButton_Information_Hover_TextColor: #0064d9;--sapButton_Information_Active_Background: #fff;--sapButton_Information_Active_BorderColor: #0064d9;--sapButton_Information_Active_TextColor: #0064d9;--sapButton_Neutral_Background: #e8f3ff;--sapButton_Neutral_BorderColor: #b5d8ff;--sapButton_Neutral_TextColor: #0064d9;--sapButton_Neutral_Hover_Background: #d4e8ff;--sapButton_Neutral_Hover_BorderColor: #b5d8ff;--sapButton_Neutral_Hover_TextColor: #0064d9;--sapButton_Neutral_Active_Background: #fff;--sapButton_Neutral_Active_BorderColor: #0064d9;--sapButton_Neutral_Active_TextColor: #0064d9;--sapButton_Track_Background: #788fa6;--sapButton_Track_BorderColor: #788fa6;--sapButton_Track_TextColor: #fff;--sapButton_Track_Hover_Background: #637d97;--sapButton_Track_Hover_BorderColor: #637d97;--sapButton_Track_Selected_Background: #0064d9;--sapButton_Track_Selected_BorderColor: #0064d9;--sapButton_Track_Selected_TextColor: #fff;--sapButton_Track_Selected_Hover_Background: #0058c0;--sapButton_Track_Selected_Hover_BorderColor: #0058c0;--sapButton_Handle_Background: #fff;--sapButton_Handle_BorderColor: #fff;--sapButton_Handle_TextColor: #131e29;--sapButton_Handle_Hover_Background: #fff;--sapButton_Handle_Hover_BorderColor: rgba(255,255,255,.5);--sapButton_Handle_Selected_Background: #edf6ff;--sapButton_Handle_Selected_BorderColor: #edf6ff;--sapButton_Handle_Selected_TextColor: #0064d9;--sapButton_Handle_Selected_Hover_Background: #edf6ff;--sapButton_Handle_Selected_Hover_BorderColor: rgba(237,246,255,.5);--sapButton_Track_Negative_Background: #f53232;--sapButton_Track_Negative_BorderColor: #f53232;--sapButton_Track_Negative_TextColor: #fff;--sapButton_Track_Negative_Hover_Background: #e90b0b;--sapButton_Track_Negative_Hover_BorderColor: #e90b0b;--sapButton_Handle_Negative_Background: #fff;--sapButton_Handle_Negative_BorderColor: #fff;--sapButton_Handle_Negative_TextColor: #aa0808;--sapButton_Handle_Negative_Hover_Background: #fff;--sapButton_Handle_Negative_Hover_BorderColor: rgba(255,255,255,.5);--sapButton_Track_Positive_Background: #30914c;--sapButton_Track_Positive_BorderColor: #30914c;--sapButton_Track_Positive_TextColor: #fff;--sapButton_Track_Positive_Hover_Background: #2c8646;--sapButton_Track_Positive_Hover_BorderColor: #2c8646;--sapButton_Handle_Positive_Background: #fff;--sapButton_Handle_Positive_BorderColor: #fff;--sapButton_Handle_Positive_TextColor: #256f3a;--sapButton_Handle_Positive_Hover_Background: #fff;--sapButton_Handle_Positive_Hover_BorderColor: rgba(255,255,255,.5);--sapButton_TokenBackground: #fff;--sapButton_TokenBorderColor: #bcc3ca;--sapButton_TokenBorderCornerRadius: .375rem;--sapButton_Selected_TokenBorderWidth: .125rem;--sapButton_ReadOnly_TokenBackground: #fff;--sapButton_Segment_BorderCornerRadius: .5rem;--sapField_Background: #fff;--sapField_BackgroundStyle: 0 100% / 100% .0625rem no-repeat linear-gradient(0deg, #556b81, #556b81) border-box;--sapField_TextColor: #131e29;--sapField_PlaceholderTextColor: #556b82;--sapField_BorderColor: #556b81;--sapField_HelpBackground: #fff;--sapField_BorderWidth: .0625rem;--sapField_BorderStyle: none;--sapField_BorderCornerRadius: .25rem;--sapField_Shadow: inset 0 0 0 .0625rem rgba(85,107,129,.25);--sapField_Hover_Background: #fff;--sapField_Hover_BackgroundStyle: 0 100% / 100% .0625rem no-repeat linear-gradient(0deg, #0064d9, #0064d9) border-box;--sapField_Hover_BorderColor: #0064d9;--sapField_Hover_HelpBackground: #fff;--sapField_Hover_Shadow: inset 0 0 0 .0625rem rgba(79,160,255,.5);--sapField_Hover_InvalidShadow: inset 0 0 0 .0625rem rgba(255,142,196,.45);--sapField_Hover_WarningShadow: inset 0 0 0 .0625rem rgba(255,213,10,.4);--sapField_Hover_SuccessShadow: inset 0 0 0 .0625rem rgba(48,145,76,.18);--sapField_Hover_InformationShadow: inset 0 0 0 .0625rem rgba(104,174,255,.5);--sapField_Active_BorderColor: #0064d9;--sapField_Focus_Background: #fff;--sapField_Focus_BorderColor: #0032a5;--sapField_Focus_HelpBackground: #fff;--sapField_ReadOnly_Background: #eaecee;--sapField_ReadOnly_BackgroundStyle: 0 100% / .375rem .0625rem repeat-x linear-gradient(90deg, #556b81 0, #556b81 .25rem, transparent .25rem) border-box;--sapField_ReadOnly_BorderColor: #556b81;--sapField_ReadOnly_BorderStyle: none;--sapField_ReadOnly_HelpBackground: #eaecee;--sapField_RequiredColor: #ba066c;--sapField_InvalidColor: #e90b0b;--sapField_InvalidBackground: #ffeaf4;--sapField_InvalidBackgroundStyle: 0 100% / 100% .125rem no-repeat linear-gradient(0deg, #e90b0b, #e90b0b) border-box;--sapField_InvalidBorderWidth: .125rem;--sapField_InvalidBorderStyle: none;--sapField_InvalidShadow: inset 0 0 0 .0625rem rgba(255,142,196,.45);--sapField_WarningColor: #dd6100;--sapField_WarningBackground: #fff8d6;--sapField_WarningBackgroundStyle: 0 100% / 100% .125rem no-repeat linear-gradient(0deg, #dd6100, #dd6100) border-box;--sapField_WarningBorderWidth: .125rem;--sapField_WarningBorderStyle: none;--sapField_WarningShadow: inset 0 0 0 .0625rem rgba(255,213,10,.4);--sapField_SuccessColor: #30914c;--sapField_SuccessBackground: #f5fae5;--sapField_SuccessBackgroundStyle: 0 100% / 100% .0625rem no-repeat linear-gradient(0deg, #30914c, #30914c) border-box;--sapField_SuccessBorderWidth: .0625rem;--sapField_SuccessBorderStyle: none;--sapField_SuccessShadow: inset 0 0 0 .0625rem rgba(48,145,76,.18);--sapField_InformationColor: #0070f2;--sapField_InformationBackground: #e1f4ff;--sapField_InformationBackgroundStyle: 0 100% / 100% .125rem no-repeat linear-gradient(0deg, #0070f2, #0070f2) border-box;--sapField_InformationBorderWidth: .125rem;--sapField_InformationBorderStyle: none;--sapField_InformationShadow: inset 0 0 0 .0625rem rgba(104,174,255,.5);--sapField_Selector_Hover_Background: #e3f0ff;--sapField_Selector_Hover_InvalidBackground: #fff;--sapField_Selector_Hover_WarningBackground: #fff;--sapField_Selector_Hover_SuccessBackground: #fff;--sapField_Selector_Hover_InformationBackground: #fff;--sapField_Picker_BorderColor: #556b81;--sapField_Picker_BorderWidth: .0625rem;--sapField_Selector_BorderStyle: solid;--sapField_Selector_ReadOnly_BorderStyle: dashed;--sapField_Selector_InvalidBorderStyle: solid;--sapField_Selector_WarningBorderStyle: solid;--sapField_Selector_SuccessBorderStyle: solid;--sapField_Selector_InformationBorderStyle: solid;--sapGroup_TitleBorderWidth: .0625rem;--sapGroup_TitleBackground: #fff;--sapGroup_TitleBorderColor: #a8b2bd;--sapGroup_TitleTextColor: #131e29;--sapGroup_Title_FontSize: 1rem;--sapGroup_ContentBackground: #fff;--sapGroup_ContentBorderColor: #d9d9d9;--sapGroup_BorderWidth: .0625rem;--sapGroup_BorderCornerRadius: .75rem;--sapGroup_FooterBackground: transparent;--sapToolbar_Background: #fff;--sapToolbar_SeparatorColor: #d9d9d9;--sapList_HeaderBackground: #fff;--sapList_HeaderBorderColor: #a8b2bd;--sapList_HeaderTextColor: #131e29;--sapList_BorderColor: #e5e5e5;--sapList_BorderWidth: .0625rem;--sapList_TextColor: #131e29;--sapList_Active_TextColor: #131e29;--sapList_Active_Background: #dee2e5;--sapList_SelectionBackgroundColor: #ebf8ff;--sapList_SelectionBorderColor: #0064d9;--sapList_Hover_SelectionBackground: #dcf3ff;--sapList_Background: #fff;--sapList_Hover_Background: #eaecee;--sapList_AlternatingBackground: #f5f6f7;--sapList_GroupHeaderBackground: #fff;--sapList_GroupHeaderBorderColor: #a8b2bd;--sapList_GroupHeaderTextColor: #131e29;--sapList_TableGroupHeaderBackground: #eff1f2;--sapList_TableGroupHeaderBorderColor: #a8b2bd;--sapList_TableGroupHeaderTextColor: #131e29;--sapList_FooterBackground: #fff;--sapList_FooterTextColor: #131e29;--sapList_TableFooterBorder: #a8b2bd;--sapList_TableFixedBorderColor: #8c8c8c;--sapList_TableFixedColumnBorderWidth: .0625rem;--sapList_TableFixedRowBorderWidth: .125rem;--sapMessage_BorderWidth: .0625rem;--sapMessage_ErrorBorderColor: #ff8ec4;--sapMessage_WarningBorderColor: #ffe770;--sapMessage_SuccessBorderColor: #cee67e;--sapMessage_InformationBorderColor: #7bcfff;--sapMessage_Button_Hover_Background: rgba(234,236,238,.2);--sapPopover_BorderCornerRadius: .5rem;--sapProgress_Background: #d5dadd;--sapProgress_BorderColor: #d5dadd;--sapProgress_TextColor: #131e29;--sapProgress_FontSize: .875rem;--sapProgress_NegativeBackground: #ffdbec;--sapProgress_NegativeBorderColor: #ffdbec;--sapProgress_NegativeTextColor: #131e29;--sapProgress_CriticalBackground: #fff4bd;--sapProgress_CriticalBorderColor: #fff4bd;--sapProgress_CriticalTextColor: #131e29;--sapProgress_PositiveBackground: #e5f2ba;--sapProgress_PositiveBorderColor: #e5f2ba;--sapProgress_PositiveTextColor: #131e29;--sapProgress_InformationBackground: #cdedff;--sapProgress_InformationBorderColor: #cdedff;--sapProgress_InformationTextColor: #131e29;--sapProgress_Value_Background: #617b94;--sapProgress_Value_BorderColor: #617b94;--sapProgress_Value_TextColor: #788fa6;--sapProgress_Value_NegativeBackground: #f53232;--sapProgress_Value_NegativeBorderColor: #f53232;--sapProgress_Value_NegativeTextColor: #f53232;--sapProgress_Value_CriticalBackground: #e76500;--sapProgress_Value_CriticalBorderColor: #e76500;--sapProgress_Value_CriticalTextColor: #e76500;--sapProgress_Value_PositiveBackground: #30914c;--sapProgress_Value_PositiveBorderColor: #30914c;--sapProgress_Value_PositiveTextColor: #30914c;--sapProgress_Value_InformationBackground: #0070f2;--sapProgress_Value_InformationBorderColor: #0070f2;--sapProgress_Value_InformationTextColor: #0070f2;--sapScrollBar_FaceColor: #7b91a8;--sapScrollBar_TrackColor: #fff;--sapScrollBar_BorderColor: #7b91a8;--sapScrollBar_SymbolColor: #0064d9;--sapScrollBar_Dimension: .75rem;--sapScrollBar_Hover_FaceColor: #5b728b;--sapSlider_Background: #d5dadd;--sapSlider_BorderColor: #d5dadd;--sapSlider_Selected_Background: #0064d9;--sapSlider_Selected_BorderColor: #0064d9;--sapSlider_Selected_Dimension: 111px;--sapSlider_HandleBackground: #fff;--sapSlider_HandleBorderColor: #b0d5ff;--sapSlider_RangeHandleBackground: #fff;--sapSlider_Hover_HandleBackground: #d9ecff;--sapSlider_Hover_HandleBorderColor: #b0d5ff;--sapSlider_Hover_RangeHandleBackground: #d9ecff;--sapSlider_Active_HandleBackground: #fff;--sapSlider_Active_HandleBorderColor: #0064d9;--sapSlider_Active_RangeHandleBackground: transparent;--sapPageHeader_Background: #fff;--sapPageHeader_BorderColor: #d9d9d9;--sapPageHeader_TextColor: #131e29;--sapPageFooter_Background: #fff;--sapPageFooter_BorderColor: #d9d9d9;--sapPageFooter_TextColor: #131e29;--sapInfobar_Background: #c2fcee;--sapInfobar_Hover_Background: #fff;--sapInfobar_Active_Background: #fff;--sapInfobar_NonInteractive_Background: #f5f6f7;--sapInfobar_TextColor: #046c7a;--sapObjectHeader_Background: #fff;--sapObjectHeader_Hover_Background: #eaecee;--sapObjectHeader_BorderColor: #d9d9d9;--sapObjectHeader_Title_TextColor: #131e29;--sapObjectHeader_Title_FontSize: 1.5rem;--sapObjectHeader_Title_SnappedFontSize: 1.25rem;--sapObjectHeader_Title_FontFamily: "72Black", "72Blackfull","72", "72full", Arial, Helvetica, sans-serif;--sapObjectHeader_Subtitle_TextColor: #556b82;--sapBlockLayer_Background: #000;--sapBlockLayer_Opacity: .2;--sapTab_TextColor: #131e29;--sapTab_ForegroundColor: #0064d9;--sapTab_IconColor: #0064d9;--sapTab_Background: #fff;--sapTab_Selected_TextColor: #0064d9;--sapTab_Selected_IconColor: #fff;--sapTab_Selected_Background: #0064d9;--sapTab_Selected_Indicator_Dimension: .1875rem;--sapTab_Positive_TextColor: #256f3a;--sapTab_Positive_ForegroundColor: #30914c;--sapTab_Positive_IconColor: #30914c;--sapTab_Positive_Selected_TextColor: #256f3a;--sapTab_Positive_Selected_IconColor: #fff;--sapTab_Positive_Selected_Background: #30914c;--sapTab_Negative_TextColor: #aa0808;--sapTab_Negative_ForegroundColor: #f53232;--sapTab_Negative_IconColor: #f53232;--sapTab_Negative_Selected_TextColor: #aa0808;--sapTab_Negative_Selected_IconColor: #fff;--sapTab_Negative_Selected_Background: #f53232;--sapTab_Critical_TextColor: #b44f00;--sapTab_Critical_ForegroundColor: #e76500;--sapTab_Critical_IconColor: #e76500;--sapTab_Critical_Selected_TextColor: #b44f00;--sapTab_Critical_Selected_IconColor: #fff;--sapTab_Critical_Selected_Background: #e76500;--sapTab_Neutral_TextColor: #131e29;--sapTab_Neutral_ForegroundColor: #788fa6;--sapTab_Neutral_IconColor: #788fa6;--sapTab_Neutral_Selected_TextColor: #131e29;--sapTab_Neutral_Selected_IconColor: #fff;--sapTab_Neutral_Selected_Background: #788fa6;--sapTile_Background: #fff;--sapTile_Hover_Background: #eaecee;--sapTile_Active_Background: #dee2e5;--sapTile_BorderColor: transparent;--sapTile_BorderCornerRadius: 1rem;--sapTile_TitleTextColor: #131e29;--sapTile_TextColor: #556b82;--sapTile_IconColor: #556b82;--sapTile_SeparatorColor: #ccc;--sapTile_Interactive_BorderColor: #b3b3b3;--sapTile_OverlayBackground: #fff;--sapTile_OverlayForegroundColor: #131e29;--sapTile_Hover_ContentBackground: #fff;--sapTile_Active_ContentBackground: #fff;--sapAccentColor1: #d27700;--sapAccentColor2: #aa0808;--sapAccentColor3: #ba066c;--sapAccentColor4: #a100c2;--sapAccentColor5: #5d36ff;--sapAccentColor6: #0057d2;--sapAccentColor7: #046c7a;--sapAccentColor8: #256f3a;--sapAccentColor9: #6c32a9;--sapAccentColor10: #5b738b;--sapAccentBackgroundColor1: #fff3b8;--sapAccentBackgroundColor2: #ffd0e7;--sapAccentBackgroundColor3: #ffdbe7;--sapAccentBackgroundColor4: #ffdcf3;--sapAccentBackgroundColor5: #ded3ff;--sapAccentBackgroundColor6: #d1efff;--sapAccentBackgroundColor7: #c2fcee;--sapAccentBackgroundColor8: #ebf5cb;--sapAccentBackgroundColor9: #ddccf0;--sapAccentBackgroundColor10: #eaecee;--sapIndicationColor_1: #840606;--sapIndicationColor_1_Background: #840606;--sapIndicationColor_1_BorderColor: #840606;--sapIndicationColor_1_TextColor: #fff;--sapIndicationColor_1_Hover_Background: #6c0505;--sapIndicationColor_1_Active_Background: #fff;--sapIndicationColor_1_Active_BorderColor: #fb9d9d;--sapIndicationColor_1_Active_TextColor: #840606;--sapIndicationColor_1_Selected_Background: #fff;--sapIndicationColor_1_Selected_BorderColor: #fb9d9d;--sapIndicationColor_1_Selected_TextColor: #840606;--sapIndicationColor_1b: #fb9d9d;--sapIndicationColor_1b_TextColor: #830707;--sapIndicationColor_1b_Background: #fb9d9d;--sapIndicationColor_1b_BorderColor: #fb9d9d;--sapIndicationColor_1b_Hover_Background: #fa8585;--sapIndicationColor_2: #aa0808;--sapIndicationColor_2_Background: #aa0808;--sapIndicationColor_2_BorderColor: #aa0808;--sapIndicationColor_2_TextColor: #fff;--sapIndicationColor_2_Hover_Background: #920707;--sapIndicationColor_2_Active_Background: #fff;--sapIndicationColor_2_Active_BorderColor: #fcc4c4;--sapIndicationColor_2_Active_TextColor: #aa0808;--sapIndicationColor_2_Selected_Background: #fff;--sapIndicationColor_2_Selected_BorderColor: #fcc4c4;--sapIndicationColor_2_Selected_TextColor: #aa0808;--sapIndicationColor_2b: #fcc4c4;--sapIndicationColor_2b_TextColor: #a90909;--sapIndicationColor_2b_Background: #fcc4c4;--sapIndicationColor_2b_BorderColor: #fcc4c4;--sapIndicationColor_2b_Hover_Background: #fbacac;--sapIndicationColor_3: #b95100;--sapIndicationColor_3_Background: #e76500;--sapIndicationColor_3_BorderColor: #e76500;--sapIndicationColor_3_TextColor: #fff;--sapIndicationColor_3_Hover_Background: #d85e00;--sapIndicationColor_3_Active_Background: #fff;--sapIndicationColor_3_Active_BorderColor: #ffdfc3;--sapIndicationColor_3_Active_TextColor: #b95100;--sapIndicationColor_3_Selected_Background: #fff;--sapIndicationColor_3_Selected_BorderColor: #ffdfc3;--sapIndicationColor_3_Selected_TextColor: #b95100;--sapIndicationColor_3b: #ffdfc3;--sapIndicationColor_3b_TextColor: #a44d00;--sapIndicationColor_3b_Background: #ffdfc3;--sapIndicationColor_3b_BorderColor: #ffdfc3;--sapIndicationColor_3b_Hover_Background: #ffd1a9;--sapIndicationColor_4: #256f3a;--sapIndicationColor_4_Background: #256f3a;--sapIndicationColor_4_BorderColor: #256f3a;--sapIndicationColor_4_TextColor: #fff;--sapIndicationColor_4_Hover_Background: #1f5c30;--sapIndicationColor_4_Active_Background: #fff;--sapIndicationColor_4_Active_BorderColor: #bae8bc;--sapIndicationColor_4_Active_TextColor: #256f3a;--sapIndicationColor_4_Selected_Background: #fff;--sapIndicationColor_4_Selected_BorderColor: #bae8bc;--sapIndicationColor_4_Selected_TextColor: #256f3a;--sapIndicationColor_4b: #bae8bc;--sapIndicationColor_4b_TextColor: #256f28;--sapIndicationColor_4b_Background: #bae8bc;--sapIndicationColor_4b_BorderColor: #bae8bc;--sapIndicationColor_4b_Hover_Background: #a7e2a9;--sapIndicationColor_5: #0070f2;--sapIndicationColor_5_Background: #0070f2;--sapIndicationColor_5_BorderColor: #0070f2;--sapIndicationColor_5_TextColor: #fff;--sapIndicationColor_5_Hover_Background: #0064d9;--sapIndicationColor_5_Active_Background: #fff;--sapIndicationColor_5_Active_BorderColor: #d9ebff;--sapIndicationColor_5_Active_TextColor: #0070f2;--sapIndicationColor_5_Selected_Background: #fff;--sapIndicationColor_5_Selected_BorderColor: #d9ebff;--sapIndicationColor_5_Selected_TextColor: #0070f2;--sapIndicationColor_5b: #d9ebff;--sapIndicationColor_5b_TextColor: #0067d9;--sapIndicationColor_5b_Background: #d9ebff;--sapIndicationColor_5b_BorderColor: #d9ebff;--sapIndicationColor_5b_Hover_Background: #c0deff;--sapIndicationColor_6: #046c7a;--sapIndicationColor_6_Background: #046c7a;--sapIndicationColor_6_BorderColor: #046c7a;--sapIndicationColor_6_TextColor: #fff;--sapIndicationColor_6_Hover_Background: #035661;--sapIndicationColor_6_Active_Background: #fff;--sapIndicationColor_6_Active_BorderColor: #cdf5ec;--sapIndicationColor_6_Active_TextColor: #046c7a;--sapIndicationColor_6_Selected_Background: #fff;--sapIndicationColor_6_Selected_BorderColor: #cdf5ec;--sapIndicationColor_6_Selected_TextColor: #046c7a;--sapIndicationColor_6b: #cdf5ec;--sapIndicationColor_6b_TextColor: #156b58;--sapIndicationColor_6b_Background: #cdf5ec;--sapIndicationColor_6b_BorderColor: #cdf5ec;--sapIndicationColor_6b_Hover_Background: #b8f1e4;--sapIndicationColor_7: #5d36ff;--sapIndicationColor_7_Background: #5d36ff;--sapIndicationColor_7_BorderColor: #5d36ff;--sapIndicationColor_7_TextColor: #fff;--sapIndicationColor_7_Hover_Background: #481cff;--sapIndicationColor_7_Active_Background: #fff;--sapIndicationColor_7_Active_BorderColor: #e2dbff;--sapIndicationColor_7_Active_TextColor: #5d36ff;--sapIndicationColor_7_Selected_Background: #fff;--sapIndicationColor_7_Selected_BorderColor: #e2dbff;--sapIndicationColor_7_Selected_TextColor: #5d36ff;--sapIndicationColor_7b: #e2dbff;--sapIndicationColor_7b_TextColor: #5f38ff;--sapIndicationColor_7b_Background: #e2dbff;--sapIndicationColor_7b_BorderColor: #e2dbff;--sapIndicationColor_7b_Hover_Background: #cdc2ff;--sapIndicationColor_8: #a100c2;--sapIndicationColor_8_Background: #a100c2;--sapIndicationColor_8_BorderColor: #a100c2;--sapIndicationColor_8_TextColor: #fff;--sapIndicationColor_8_Hover_Background: #8c00a9;--sapIndicationColor_8_Active_Background: #fff;--sapIndicationColor_8_Active_BorderColor: #f8d6ff;--sapIndicationColor_8_Active_TextColor: #a100c2;--sapIndicationColor_8_Selected_Background: #fff;--sapIndicationColor_8_Selected_BorderColor: #f8d6ff;--sapIndicationColor_8_Selected_TextColor: #a100c2;--sapIndicationColor_8b: #f8d6ff;--sapIndicationColor_8b_TextColor: #a100c2;--sapIndicationColor_8b_Background: #f8d6ff;--sapIndicationColor_8b_BorderColor: #f8d6ff;--sapIndicationColor_8b_Hover_Background: #f4bdff;--sapIndicationColor_9: #1d2d3e;--sapIndicationColor_9_Background: #1d2d3e;--sapIndicationColor_9_BorderColor: #1d2d3e;--sapIndicationColor_9_TextColor: #fff;--sapIndicationColor_9_Hover_Background: #15202d;--sapIndicationColor_9_Active_Background: #fff;--sapIndicationColor_9_Active_BorderColor: #d9d9d9;--sapIndicationColor_9_Active_TextColor: #1d2d3e;--sapIndicationColor_9_Selected_Background: #fff;--sapIndicationColor_9_Selected_BorderColor: #d9d9d9;--sapIndicationColor_9_Selected_TextColor: #1d2d3e;--sapIndicationColor_9b: #fff;--sapIndicationColor_9b_TextColor: #2e2e2e;--sapIndicationColor_9b_Background: #fff;--sapIndicationColor_9b_BorderColor: #d9d9d9;--sapIndicationColor_9b_Hover_Background: #f2f2f2;--sapIndicationColor_10: #45484a;--sapIndicationColor_10_Background: #83888b;--sapIndicationColor_10_BorderColor: #83888b;--sapIndicationColor_10_TextColor: #fff;--sapIndicationColor_10_Hover_Background: #767b7e;--sapIndicationColor_10_Active_Background: #fff;--sapIndicationColor_10_Active_BorderColor: #eaecee;--sapIndicationColor_10_Active_TextColor: #45484a;--sapIndicationColor_10_Selected_Background: #fff;--sapIndicationColor_10_Selected_BorderColor: #eaecee;--sapIndicationColor_10_Selected_TextColor: #45484a;--sapIndicationColor_10b: #eaecee;--sapIndicationColor_10b_TextColor: #464646;--sapIndicationColor_10b_Background: #eaecee;--sapIndicationColor_10b_BorderColor: #eaecee;--sapIndicationColor_10b_Hover_Background: #dcdfe3;--sapLegend_WorkingBackground: #fff;--sapLegend_NonWorkingBackground: #ebebeb;--sapLegend_CurrentDateTime: #a100c2;--sapLegendColor1: #c35500;--sapLegendColor2: #d23a0a;--sapLegendColor3: #df1278;--sapLegendColor4: #840606;--sapLegendColor5: #cc00dc;--sapLegendColor6: #0057d2;--sapLegendColor7: #07838f;--sapLegendColor8: #188918;--sapLegendColor9: #5b738b;--sapLegendColor10: #7800a4;--sapLegendColor11: #a93e00;--sapLegendColor12: #aa2608;--sapLegendColor13: #ba066c;--sapLegendColor14: #8d2a00;--sapLegendColor15: #4e247a;--sapLegendColor16: #002a86;--sapLegendColor17: #035663;--sapLegendColor18: #1e592f;--sapLegendColor19: #1a4796;--sapLegendColor20: #470ced;--sapLegendBackgroundColor1: #ffef9f;--sapLegendBackgroundColor2: #feeae1;--sapLegendBackgroundColor3: #fbf6f8;--sapLegendBackgroundColor4: #fbebeb;--sapLegendBackgroundColor5: #ffe5fe;--sapLegendBackgroundColor6: #d1efff;--sapLegendBackgroundColor7: #c2fcee;--sapLegendBackgroundColor8: #f5fae5;--sapLegendBackgroundColor9: #f5f6f7;--sapLegendBackgroundColor10: #fff0fa;--sapLegendBackgroundColor11: #fff8d6;--sapLegendBackgroundColor12: #fff6f6;--sapLegendBackgroundColor13: #f7ebef;--sapLegendBackgroundColor14: #f1ecd5;--sapLegendBackgroundColor15: #f0e7f8;--sapLegendBackgroundColor16: #ebf8ff;--sapLegendBackgroundColor17: #dafdf5;--sapLegendBackgroundColor18: #ebf5cb;--sapLegendBackgroundColor19: #fafdff;--sapLegendBackgroundColor20: #eceeff;--sapChart_Background: #fff;--sapChart_ContrastTextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapChart_ContrastShadowColor: #fff;--sapChart_ContrastLineColor: #fff;--sapChart_LineColor_1: #e1e6eb;--sapChart_LineColor_2: #768da4;--sapChart_LineColor_3: #000001;--sapChart_Choropleth_Background: #edf0f3;--sapChart_ChoroplethRegion_Background: #758ca4;--sapChart_ChoroplethRegion_BorderColor: #edf0f3;--sapChart_Data_TextColor: #000;--sapChart_Data_ContrastTextColor: #fff;--sapChart_Data_InteractiveColor: #000001;--sapChart_Data_Active_Background: #dee2e5;--sapChart_OrderedColor_1: #168eff;--sapChart_OrderedColor_2: #c87b00;--sapChart_OrderedColor_3: #75980b;--sapChart_OrderedColor_4: #df1278;--sapChart_OrderedColor_5: #8b47d7;--sapChart_OrderedColor_6: #049f9a;--sapChart_OrderedColor_7: #0070f2;--sapChart_OrderedColor_8: #cc00dc;--sapChart_OrderedColor_9: #798c77;--sapChart_OrderedColor_10: #da6c6c;--sapChart_OrderedColor_11: #5d36ff;--sapChart_OrderedColor_12: #a68a5b;--sapChart_Bad: #f53232;--sapChart_Critical: #e26300;--sapChart_Good: #30914c;--sapChart_Neutral: #758ca4;--sapChart_Sequence_1_Plus3: #96ccff;--sapChart_Sequence_1_Plus3_TextColor: #000;--sapChart_Sequence_1_Plus3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_1_Plus2: #3b9ffe;--sapChart_Sequence_1_Plus2_TextColor: #000;--sapChart_Sequence_1_Plus2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_1_Plus1: #3fa2ff;--sapChart_Sequence_1_Plus1_TextColor: #000;--sapChart_Sequence_1_Plus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_1: #168eff;--sapChart_Sequence_1_TextColor: #000;--sapChart_Sequence_1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_1_BorderColor: #168eff;--sapChart_Sequence_1_Minus1: #077cea;--sapChart_Sequence_1_Minus1_TextColor: #fff;--sapChart_Sequence_1_Minus1_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_1_Minus2: #077cea;--sapChart_Sequence_1_Minus2_TextColor: #fff;--sapChart_Sequence_1_Minus2_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_1_Minus3: #06559e;--sapChart_Sequence_1_Minus3_TextColor: #fff;--sapChart_Sequence_1_Minus3_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_1_Minus4: #054887;--sapChart_Sequence_1_Minus4_TextColor: #fff;--sapChart_Sequence_1_Minus4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_1_Minus5: #043b6e;--sapChart_Sequence_1_Minus5_TextColor: #fff;--sapChart_Sequence_1_Minus5_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_2_Plus3: #efbf72;--sapChart_Sequence_2_Plus3_TextColor: #000;--sapChart_Sequence_2_Plus3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_2_Plus2: #eaaa44;--sapChart_Sequence_2_Plus2_TextColor: #000;--sapChart_Sequence_2_Plus2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_2_Plus1: #e29419;--sapChart_Sequence_2_Plus1_TextColor: #000;--sapChart_Sequence_2_Plus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_2: #c87b00;--sapChart_Sequence_2_TextColor: #000;--sapChart_Sequence_2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_2_BorderColor: #9f6200;--sapChart_Sequence_2_Minus1: #9f6200;--sapChart_Sequence_2_Minus1_TextColor: #fff;--sapChart_Sequence_2_Minus1_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_2_Minus2: #7c4c00;--sapChart_Sequence_2_Minus2_TextColor: #fff;--sapChart_Sequence_2_Minus2_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_2_Minus3: #623c00;--sapChart_Sequence_2_Minus3_TextColor: #fff;--sapChart_Sequence_2_Minus3_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_2_Minus4: #623c00;--sapChart_Sequence_2_Minus4_TextColor: #fff;--sapChart_Sequence_2_Minus4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_2_Minus5: #2f1d00;--sapChart_Sequence_2_Minus5_TextColor: #fff;--sapChart_Sequence_2_Minus5_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_3_Plus3: #b9d369;--sapChart_Sequence_3_Plus3_TextColor: #000;--sapChart_Sequence_3_Plus3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_3_Plus2: #a6c742;--sapChart_Sequence_3_Plus2_TextColor: #000;--sapChart_Sequence_3_Plus2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_3_Plus1: #8fad33;--sapChart_Sequence_3_Plus1_TextColor: #000;--sapChart_Sequence_3_Plus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_3: #75980b;--sapChart_Sequence_3_TextColor: #000;--sapChart_Sequence_3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_3_BorderColor: #587208;--sapChart_Sequence_3_Minus1: #587208;--sapChart_Sequence_3_Minus1_TextColor: #fff;--sapChart_Sequence_3_Minus1_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_3_Minus2: #3e5106;--sapChart_Sequence_3_Minus2_TextColor: #fff;--sapChart_Sequence_3_Minus2_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_3_Minus3: #2c3904;--sapChart_Sequence_3_Minus3_TextColor: #fff;--sapChart_Sequence_3_Minus3_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_3_Minus4: #212b03;--sapChart_Sequence_3_Minus4_TextColor: #fff;--sapChart_Sequence_3_Minus4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_3_Minus5: #161c02;--sapChart_Sequence_3_Minus5_TextColor: #fff;--sapChart_Sequence_3_Minus5_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_4_Plus3: #f473b3;--sapChart_Sequence_4_Plus3_TextColor: #000;--sapChart_Sequence_4_Plus3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_4_Plus2: #f14d9e;--sapChart_Sequence_4_Plus2_TextColor: #000;--sapChart_Sequence_4_Plus2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_4_Plus1: #ee278a;--sapChart_Sequence_4_Plus1_TextColor: #000;--sapChart_Sequence_4_Plus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_4: #df1278;--sapChart_Sequence_4_TextColor: #fff;--sapChart_Sequence_4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_4_BorderColor: #df1278;--sapChart_Sequence_4_Minus1: #b90f64;--sapChart_Sequence_4_Minus1_TextColor: #fff;--sapChart_Sequence_4_Minus1_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_4_Minus2: #930c4f;--sapChart_Sequence_4_Minus2_TextColor: #fff;--sapChart_Sequence_4_Minus2_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_4_Minus3: #770a40;--sapChart_Sequence_4_Minus3_TextColor: #fff;--sapChart_Sequence_4_Minus3_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_4_Minus4: #51072c;--sapChart_Sequence_4_Minus4_TextColor: #fff;--sapChart_Sequence_4_Minus4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_4_Minus5: #3a051f;--sapChart_Sequence_4_Minus5_TextColor: #fff;--sapChart_Sequence_4_Minus5_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_5_Plus3: #d5bcf0;--sapChart_Sequence_5_Plus3_TextColor: #000;--sapChart_Sequence_5_Plus3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_5_Plus2: #b994e0;--sapChart_Sequence_5_Plus2_TextColor: #000;--sapChart_Sequence_5_Plus2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_5_Plus1: #a679d8;--sapChart_Sequence_5_Plus1_TextColor: #000;--sapChart_Sequence_5_Plus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_5: #8b47d7;--sapChart_Sequence_5_TextColor: #fff;--sapChart_Sequence_5_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_5_BorderColor: #8b47d7;--sapChart_Sequence_5_Minus1: #7236b5;--sapChart_Sequence_5_Minus1_TextColor: #fff;--sapChart_Sequence_5_Minus1_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_5_Minus2: #5e2c96;--sapChart_Sequence_5_Minus2_TextColor: #fff;--sapChart_Sequence_5_Minus2_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_5_Minus3: #522682;--sapChart_Sequence_5_Minus3_TextColor: #fff;--sapChart_Sequence_5_Minus3_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_5_Minus4: #46216f;--sapChart_Sequence_5_Minus4_TextColor: #fff;--sapChart_Sequence_5_Minus4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_5_Minus5: #341358;--sapChart_Sequence_5_Minus5_TextColor: #fff;--sapChart_Sequence_5_Minus5_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_6_Plus3: #64ede9;--sapChart_Sequence_6_Plus3_TextColor: #000;--sapChart_Sequence_6_Plus3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_6_Plus2: #2ee0da;--sapChart_Sequence_6_Plus2_TextColor: #000;--sapChart_Sequence_6_Plus2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_6_Plus1: #05c7c1;--sapChart_Sequence_6_Plus1_TextColor: #000;--sapChart_Sequence_6_Plus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_6: #049f9a;--sapChart_Sequence_6_TextColor: #000;--sapChart_Sequence_6_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_6_BorderColor: #05c7c1;--sapChart_Sequence_6_Minus1: #02837f;--sapChart_Sequence_6_Minus1_TextColor: #fff;--sapChart_Sequence_6_Minus1_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_6_Minus2: #006663;--sapChart_Sequence_6_Minus2_TextColor: #fff;--sapChart_Sequence_6_Minus2_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_6_Minus3: #00514f;--sapChart_Sequence_6_Minus3_TextColor: #fff;--sapChart_Sequence_6_Minus3_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_6_Minus4: #003d3b;--sapChart_Sequence_6_Minus4_TextColor: #fff;--sapChart_Sequence_6_Minus4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_6_Minus5: #002322;--sapChart_Sequence_6_Minus5_TextColor: #fff;--sapChart_Sequence_6_Minus5_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_7_Plus3: #68aeff;--sapChart_Sequence_7_Plus3_TextColor: #000;--sapChart_Sequence_7_Plus3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_7_Plus2: #4098ff;--sapChart_Sequence_7_Plus2_TextColor: #000;--sapChart_Sequence_7_Plus2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_7_Plus1: #1c85ff;--sapChart_Sequence_7_Plus1_TextColor: #000;--sapChart_Sequence_7_Plus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_7: #0070f2;--sapChart_Sequence_7_TextColor: #fff;--sapChart_Sequence_7_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_7_BorderColor: #0070f2;--sapChart_Sequence_7_Minus1: #0062d3;--sapChart_Sequence_7_Minus1_TextColor: #fff;--sapChart_Sequence_7_Minus1_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_7_Minus2: #0054b5;--sapChart_Sequence_7_Minus2_TextColor: #fff;--sapChart_Sequence_7_Minus2_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_7_Minus3: #00418c;--sapChart_Sequence_7_Minus3_TextColor: #fff;--sapChart_Sequence_7_Minus3_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_7_Minus4: #00244f;--sapChart_Sequence_7_Minus4_TextColor: #fff;--sapChart_Sequence_7_Minus4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_7_Minus5: #001b3a;--sapChart_Sequence_7_Minus5_TextColor: #fff;--sapChart_Sequence_7_Minus5_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_8_Plus3: #f462ff;--sapChart_Sequence_8_Plus3_TextColor: #000;--sapChart_Sequence_8_Plus3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_8_Plus2: #f034ff;--sapChart_Sequence_8_Plus2_TextColor: #000;--sapChart_Sequence_8_Plus2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_8_Plus1: #ed0bff;--sapChart_Sequence_8_Plus1_TextColor: #000;--sapChart_Sequence_8_Plus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_8: #cc00dc;--sapChart_Sequence_8_TextColor: #fff;--sapChart_Sequence_8_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_8_BorderColor: #cc00dc;--sapChart_Sequence_8_Minus1: #a600b3;--sapChart_Sequence_8_Minus1_TextColor: #fff;--sapChart_Sequence_8_Minus1_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_8_Minus2: #80008a;--sapChart_Sequence_8_Minus2_TextColor: #fff;--sapChart_Sequence_8_Minus2_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_8_Minus3: #6d0076;--sapChart_Sequence_8_Minus3_TextColor: #fff;--sapChart_Sequence_8_Minus3_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_8_Minus4: #56005d;--sapChart_Sequence_8_Minus4_TextColor: #fff;--sapChart_Sequence_8_Minus4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_8_Minus5: #350039;--sapChart_Sequence_8_Minus5_TextColor: #fff;--sapChart_Sequence_8_Minus5_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_9_Plus3: #bdc6bc;--sapChart_Sequence_9_Plus3_TextColor: #000;--sapChart_Sequence_9_Plus3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_9_Plus2: #b5bfb4;--sapChart_Sequence_9_Plus2_TextColor: #000;--sapChart_Sequence_9_Plus2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_9_Plus1: #97a695;--sapChart_Sequence_9_Plus1_TextColor: #000;--sapChart_Sequence_9_Plus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_9: #798c77;--sapChart_Sequence_9_TextColor: #000;--sapChart_Sequence_9_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_9_BorderColor: #798c77;--sapChart_Sequence_9_Minus1: #667664;--sapChart_Sequence_9_Minus1_TextColor: #fff;--sapChart_Sequence_9_Minus1_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_9_Minus2: #536051;--sapChart_Sequence_9_Minus2_TextColor: #fff;--sapChart_Sequence_9_Minus2_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_9_Minus3: #404a3f;--sapChart_Sequence_9_Minus3_TextColor: #fff;--sapChart_Sequence_9_Minus3_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_9_Minus4: #2d342c;--sapChart_Sequence_9_Minus4_TextColor: #fff;--sapChart_Sequence_9_Minus4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_9_Minus5: #1e231e;--sapChart_Sequence_9_Minus5_TextColor: #fff;--sapChart_Sequence_9_Minus5_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_10_Plus3: #f1c6c6;--sapChart_Sequence_10_Plus3_TextColor: #000;--sapChart_Sequence_10_Plus3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_10_Plus2: #eaadad;--sapChart_Sequence_10_Plus2_TextColor: #000;--sapChart_Sequence_10_Plus2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_10_Plus1: #e28d8d;--sapChart_Sequence_10_Plus1_TextColor: #000;--sapChart_Sequence_10_Plus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_10: #da6c6c;--sapChart_Sequence_10_TextColor: #000;--sapChart_Sequence_10_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_10_BorderColor: #b75757;--sapChart_Sequence_10_Minus1: #b75757;--sapChart_Sequence_10_Minus1_TextColor: #000;--sapChart_Sequence_10_Minus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_10_Minus2: #9d4343;--sapChart_Sequence_10_Minus2_TextColor: #fff;--sapChart_Sequence_10_Minus2_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_10_Minus3: #803737;--sapChart_Sequence_10_Minus3_TextColor: #fff;--sapChart_Sequence_10_Minus3_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_10_Minus4: #672c2c;--sapChart_Sequence_10_Minus4_TextColor: #fff;--sapChart_Sequence_10_Minus4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_10_Minus5: #562424;--sapChart_Sequence_10_Minus5_TextColor: #fff;--sapChart_Sequence_10_Minus5_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_11_Plus3: #c0b0ff;--sapChart_Sequence_11_Plus3_TextColor: #000;--sapChart_Sequence_11_Plus3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_11_Plus2: #9b83ff;--sapChart_Sequence_11_Plus2_TextColor: #000;--sapChart_Sequence_11_Plus2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_11_Plus1: #8669ff;--sapChart_Sequence_11_Plus1_TextColor: #000;--sapChart_Sequence_11_Plus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_11: #5d36ff;--sapChart_Sequence_11_TextColor: #fff;--sapChart_Sequence_11_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_11_BorderColor: #5d36ff;--sapChart_Sequence_11_Minus1: #4b25e7;--sapChart_Sequence_11_Minus1_TextColor: #fff;--sapChart_Sequence_11_Minus1_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_11_Minus2: #3a17cd;--sapChart_Sequence_11_Minus2_TextColor: #fff;--sapChart_Sequence_11_Minus2_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_11_Minus3: #2f13a8;--sapChart_Sequence_11_Minus3_TextColor: #fff;--sapChart_Sequence_11_Minus3_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_11_Minus4: #250f83;--sapChart_Sequence_11_Minus4_TextColor: #fff;--sapChart_Sequence_11_Minus4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_11_Minus5: #2f13a8;--sapChart_Sequence_11_Minus5_TextColor: #fff;--sapChart_Sequence_11_Minus5_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_12_Plus3: #e4ddcf;--sapChart_Sequence_12_Plus3_TextColor: #000;--sapChart_Sequence_12_Plus3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_12_Plus2: #dacebb;--sapChart_Sequence_12_Plus2_TextColor: #000;--sapChart_Sequence_12_Plus2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_12_Plus1: #c4b293;--sapChart_Sequence_12_Plus1_TextColor: #000;--sapChart_Sequence_12_Plus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_12: #a68a5b;--sapChart_Sequence_12_TextColor: #000;--sapChart_Sequence_12_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_12_BorderColor: #a68a5b;--sapChart_Sequence_12_Minus1: #8c744c;--sapChart_Sequence_12_Minus1_TextColor: #fff;--sapChart_Sequence_12_Minus1_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_12_Minus2: #786441;--sapChart_Sequence_12_Minus2_TextColor: #fff;--sapChart_Sequence_12_Minus2_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_12_Minus3: #5e4e33;--sapChart_Sequence_12_Minus3_TextColor: #fff;--sapChart_Sequence_12_Minus3_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_12_Minus4: #433825;--sapChart_Sequence_12_Minus4_TextColor: #fff;--sapChart_Sequence_12_Minus4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_12_Minus5: #30271a;--sapChart_Sequence_12_Minus5_TextColor: #fff;--sapChart_Sequence_12_Minus5_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Bad_Plus3: #fdcece;--sapChart_Sequence_Bad_Plus3_TextColor: #000;--sapChart_Sequence_Bad_Plus3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_Bad_Plus2: #fa9d9d;--sapChart_Sequence_Bad_Plus2_TextColor: #000;--sapChart_Sequence_Bad_Plus2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_Bad_Plus1: #f86c6c;--sapChart_Sequence_Bad_Plus1_TextColor: #000;--sapChart_Sequence_Bad_Plus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_Bad: #f53232;--sapChart_Sequence_Bad_TextColor: #000;--sapChart_Sequence_Bad_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_Bad_BorderColor: #f53232;--sapChart_Sequence_Bad_Minus1: #d00a0a;--sapChart_Sequence_Bad_Minus1_TextColor: #fff;--sapChart_Sequence_Bad_Minus1_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Bad_Minus2: #a90808;--sapChart_Sequence_Bad_Minus2_TextColor: #fff;--sapChart_Sequence_Bad_Minus2_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Bad_Minus3: #830606;--sapChart_Sequence_Bad_Minus3_TextColor: #fff;--sapChart_Sequence_Bad_Minus3_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Bad_Minus4: #570404;--sapChart_Sequence_Bad_Minus4_TextColor: #fff;--sapChart_Sequence_Bad_Minus4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Bad_Minus5: #320000;--sapChart_Sequence_Bad_Minus5_TextColor: #fff;--sapChart_Sequence_Bad_Minus5_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Critical_Plus3: #ffb881;--sapChart_Sequence_Critical_Plus3_TextColor: #000;--sapChart_Sequence_Critical_Plus3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_Critical_Plus2: #ff933f;--sapChart_Sequence_Critical_Plus2_TextColor: #000;--sapChart_Sequence_Critical_Plus2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_Critical_Plus1: #ff760c;--sapChart_Sequence_Critical_Plus1_TextColor: #000;--sapChart_Sequence_Critical_Plus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_Critical: #e26300;--sapChart_Sequence_Critical_TextColor: #000;--sapChart_Sequence_Critical_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_Critical_BorderColor: #e26300;--sapChart_Sequence_Critical_Minus1: #c35600;--sapChart_Sequence_Critical_Minus1_TextColor: #fff;--sapChart_Sequence_Critical_Minus1_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Critical_Minus2: #aa4a00;--sapChart_Sequence_Critical_Minus2_TextColor: #fff;--sapChart_Sequence_Critical_Minus2_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Critical_Minus3: #903f00;--sapChart_Sequence_Critical_Minus3_TextColor: #fff;--sapChart_Sequence_Critical_Minus3_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Critical_Minus4: #6d3000;--sapChart_Sequence_Critical_Minus4_TextColor: #fff;--sapChart_Sequence_Critical_Minus4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Critical_Minus5: #492000;--sapChart_Sequence_Critical_Minus5_TextColor: #fff;--sapChart_Sequence_Critical_Minus5_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Good_Plus3: #88d79f;--sapChart_Sequence_Good_Plus3_TextColor: #000;--sapChart_Sequence_Good_Plus3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_Good_Plus2: #56c776;--sapChart_Sequence_Good_Plus2_TextColor: #000;--sapChart_Sequence_Good_Plus2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_Good_Plus1: #3ab05c;--sapChart_Sequence_Good_Plus1_TextColor: #000;--sapChart_Sequence_Good_Plus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_Good: #30914c;--sapChart_Sequence_Good_TextColor: #000;--sapChart_Sequence_Good_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_Good_BorderColor: #30914c;--sapChart_Sequence_Good_Minus1: #287a40;--sapChart_Sequence_Good_Minus1_TextColor: #fff;--sapChart_Sequence_Good_Minus1_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Good_Minus2: #226736;--sapChart_Sequence_Good_Minus2_TextColor: #fff;--sapChart_Sequence_Good_Minus2_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Good_Minus3: #1c542c;--sapChart_Sequence_Good_Minus3_TextColor: #fff;--sapChart_Sequence_Good_Minus3_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Good_Minus4: #13391e;--sapChart_Sequence_Good_Minus4_TextColor: #fff;--sapChart_Sequence_Good_Minus4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Good_Minus5: #0a1e10;--sapChart_Sequence_Good_Minus5_TextColor: #fff;--sapChart_Sequence_Good_Minus5_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Neutral_Plus3: #edf0f3;--sapChart_Sequence_Neutral_Plus3_TextColor: #000;--sapChart_Sequence_Neutral_Plus3_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_Neutral_Plus2: #c2ccd7;--sapChart_Sequence_Neutral_Plus2_TextColor: #000;--sapChart_Sequence_Neutral_Plus2_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_Neutral_Plus1: #9aabbc;--sapChart_Sequence_Neutral_Plus1_TextColor: #000;--sapChart_Sequence_Neutral_Plus1_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_Neutral: #758ca4;--sapChart_Sequence_Neutral_TextColor: #000;--sapChart_Sequence_Neutral_TextShadow: 0 0 .125rem #fff;--sapChart_Sequence_Neutral_BorderColor: #758ca4;--sapChart_Sequence_Neutral_Minus1: #5b728b;--sapChart_Sequence_Neutral_Minus1_TextColor: #fff;--sapChart_Sequence_Neutral_Minus1_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Neutral_Minus2: #495e74;--sapChart_Sequence_Neutral_Minus2_TextColor: #fff;--sapChart_Sequence_Neutral_Minus2_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Neutral_Minus3: #364a5f;--sapChart_Sequence_Neutral_Minus3_TextColor: #fff;--sapChart_Sequence_Neutral_Minus3_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Neutral_Minus4: #233649;--sapChart_Sequence_Neutral_Minus4_TextColor: #fff;--sapChart_Sequence_Neutral_Minus4_TextShadow: 0 0 .125rem #223548;--sapChart_Sequence_Neutral_Minus5: #1a2633;--sapChart_Sequence_Neutral_Minus5_TextColor: #fff;--sapChart_Sequence_Neutral_Minus5_TextShadow: 0 0 .125rem #223548;--sapSapThemeId: sap_horizon;--sapBreakpoint_S_Min: 0;--sapBreakpoint_M_Min: 600px;--sapBreakpoint_L_Min: 1024px;--sapBreakpoint_XL_Min: 1440px
}`;
const defaultTheme = `:root{--ui5-v2-14-0-avatar-hover-box-shadow-offset: 0px 0px 0px .0625rem var();--ui5-v2-14-0-avatar-initials-color: var(--sapContent_ImagePlaceholderForegroundColor);--ui5-v2-14-0-avatar-border-radius-img-deduction: .0625rem;--ui5-v2-14-0-avatar-optional-border: .0625rem solid var(--sapGroup_ContentBorderColor);--ui5-v2-14-0-avatar-placeholder: var(--sapContent_ImagePlaceholderBackground);--ui5-v2-14-0-avatar-placeholder-color: var(--ui5-v2-14-0-avatar-initials-color);--_ui5-v2-14-0_avatar_outline: var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v2-14-0_avatar_overflow_button_focus_offset: .0625rem;--ui5-v2-14-0-avatar-hover-box-shadow-offset: 0px 0px 0px .0625rem var(--sapAvatar_Hover_BorderColor);--_ui5-v2-14-0_avatar_focus_offset: .1875rem;--ui5-v2-14-0-avatar-initials-border: .0625rem solid var(--sapAvatar_1_BorderColor);--ui5-v2-14-0-avatar-border-radius: var(--sapElement_BorderCornerRadius);--_ui5-v2-14-0_avatar_fontsize_XS: 1rem;--_ui5-v2-14-0_avatar_fontsize_S: 1.125rem;--_ui5-v2-14-0_avatar_fontsize_M: 1.5rem;--_ui5-v2-14-0_avatar_fontsize_L: 2.25rem;--_ui5-v2-14-0_avatar_fontsize_XL: 3rem;--ui5-v2-14-0-avatar-accent1: var(--sapAvatar_1_Background);--ui5-v2-14-0-avatar-accent2: var(--sapAvatar_2_Background);--ui5-v2-14-0-avatar-accent3: var(--sapAvatar_3_Background);--ui5-v2-14-0-avatar-accent4: var(--sapAvatar_4_Background);--ui5-v2-14-0-avatar-accent5: var(--sapAvatar_5_Background);--ui5-v2-14-0-avatar-accent6: var(--sapAvatar_6_Background);--ui5-v2-14-0-avatar-accent7: var(--sapAvatar_7_Background);--ui5-v2-14-0-avatar-accent8: var(--sapAvatar_8_Background);--ui5-v2-14-0-avatar-accent9: var(--sapAvatar_9_Background);--ui5-v2-14-0-avatar-accent10: var(--sapAvatar_10_Background);--ui5-v2-14-0-avatar-accent1-color: var(--sapAvatar_1_TextColor);--ui5-v2-14-0-avatar-accent2-color: var(--sapAvatar_2_TextColor);--ui5-v2-14-0-avatar-accent3-color: var(--sapAvatar_3_TextColor);--ui5-v2-14-0-avatar-accent4-color: var(--sapAvatar_4_TextColor);--ui5-v2-14-0-avatar-accent5-color: var(--sapAvatar_5_TextColor);--ui5-v2-14-0-avatar-accent6-color: var(--sapAvatar_6_TextColor);--ui5-v2-14-0-avatar-accent7-color: var(--sapAvatar_7_TextColor);--ui5-v2-14-0-avatar-accent8-color: var(--sapAvatar_8_TextColor);--ui5-v2-14-0-avatar-accent9-color: var(--sapAvatar_9_TextColor);--ui5-v2-14-0-avatar-accent10-color: var(--sapAvatar_10_TextColor);--ui5-v2-14-0-avatar-accent1-border-color: var(--sapAvatar_1_BorderColor);--ui5-v2-14-0-avatar-accent2-border-color: var(--sapAvatar_2_BorderColor);--ui5-v2-14-0-avatar-accent3-border-color: var(--sapAvatar_3_BorderColor);--ui5-v2-14-0-avatar-accent4-border-color: var(--sapAvatar_4_BorderColor);--ui5-v2-14-0-avatar-accent5-border-color: var(--sapAvatar_5_BorderColor);--ui5-v2-14-0-avatar-accent6-border-color: var(--sapAvatar_6_BorderColor);--ui5-v2-14-0-avatar-accent7-border-color: var(--sapAvatar_7_BorderColor);--ui5-v2-14-0-avatar-accent8-border-color: var(--sapAvatar_8_BorderColor);--ui5-v2-14-0-avatar-accent9-border-color: var(--sapAvatar_9_BorderColor);--ui5-v2-14-0-avatar-accent10-border-color: var(--sapAvatar_10_BorderColor);--_ui5-v2-14-0_avatar_icon_XS: var(--_ui5-v2-14-0_avatar_fontsize_XS);--_ui5-v2-14-0_avatar_icon_S: var(--_ui5-v2-14-0_avatar_fontsize_S);--_ui5-v2-14-0_avatar_icon_M: var(--_ui5-v2-14-0_avatar_fontsize_M);--_ui5-v2-14-0_avatar_icon_L: var(--_ui5-v2-14-0_avatar_fontsize_L);--_ui5-v2-14-0_avatar_icon_XL: var(--_ui5-v2-14-0_avatar_fontsize_XL);--_ui5-v2-14-0_avatar_group_button_focus_border: none;--_ui5-v2-14-0_avatar_group_padding: .3rem;--_ui5-v2-14-0_avatar_group_focus_border_radius: .375rem;--_ui5-v2-14-0-tag-height: 1rem;--_ui5-v2-14-0-tag-icon-width: .75rem;--ui5-v2-14-0-tag-text-shadow: var(--sapContent_TextShadow);--ui5-v2-14-0-tag-contrast-text-shadow: var(--sapContent_ContrastTextShadow);--ui5-v2-14-0-tag-information-text-shadow: var(--ui5-v2-14-0-tag-text-shadow);--ui5-v2-14-0-tag-set2-color-scheme-1-border: var(--sapIndicationColor_1b_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-1-hover-background: var(--sapIndicationColor_1b_Hover_Background);--ui5-v2-14-0-tag-set2-color-scheme-1-active-color: var(--sapIndicationColor_1_Active_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-1-active-background: var(--sapIndicationColor_1_Active_Background);--ui5-v2-14-0-tag-set2-color-scheme-1-active-border: var(--sapIndicationColor_1_Active_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-2-border: var(--sapIndicationColor_2b_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-2-hover-background: var(--sapIndicationColor_2b_Hover_Background);--ui5-v2-14-0-tag-set2-color-scheme-2-active-color: var(--sapIndicationColor_2_Active_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-2-active-background: var(--sapIndicationColor_2_Active_Background);--ui5-v2-14-0-tag-set2-color-scheme-2-active-border: var(--sapIndicationColor_2_Active_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-3-border: var(--sapIndicationColor_3b_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-3-hover-background: var(--sapIndicationColor_3b_Hover_Background);--ui5-v2-14-0-tag-set2-color-scheme-3-active-color: var(--sapIndicationColor_3_Active_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-3-active-background: var(--sapIndicationColor_3_Active_Background);--ui5-v2-14-0-tag-set2-color-scheme-3-active-border: var(--sapIndicationColor_3_Active_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-4-border: var(--sapIndicationColor_4b_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-4-hover-background: var(--sapIndicationColor_4b_Hover_Background);--ui5-v2-14-0-tag-set2-color-scheme-4-active-color: var(--sapIndicationColor_4_Active_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-4-active-background: var(--sapIndicationColor_4_Active_Background);--ui5-v2-14-0-tag-set2-color-scheme-4-active-border: var(--sapIndicationColor_4_Active_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-5-border: var(--sapIndicationColor_5b_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-5-hover-background: var(--sapIndicationColor_5b_Hover_Background);--ui5-v2-14-0-tag-set2-color-scheme-5-active-color: var(--sapIndicationColor_5_Active_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-5-active-background: var(--sapIndicationColor_5_Active_Background);--ui5-v2-14-0-tag-set2-color-scheme-5-active-border: var(--sapIndicationColor_5_Active_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-6-border: var(--sapIndicationColor_6b_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-6-hover-background: var(--sapIndicationColor_6b_Hover_Background);--ui5-v2-14-0-tag-set2-color-scheme-6-active-color: var(--sapIndicationColor_6_Active_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-6-active-background: var(--sapIndicationColor_6_Active_Background);--ui5-v2-14-0-tag-set2-color-scheme-6-active-border: var(--sapIndicationColor_6_Active_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-7-border: var(--sapIndicationColor_7b_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-7-hover-background: var(--sapIndicationColor_7b_Hover_Background);--ui5-v2-14-0-tag-set2-color-scheme-7-active-color: var(--sapIndicationColor_7_Active_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-7-active-background: var(--sapIndicationColor_7_Active_Background);--ui5-v2-14-0-tag-set2-color-scheme-7-active-border: var(--sapIndicationColor_7_Active_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-8-border: var(--sapIndicationColor_8b_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-8-hover-background: var(--sapIndicationColor_8b_Hover_Background);--ui5-v2-14-0-tag-set2-color-scheme-8-active-color: var(--sapIndicationColor_8_Active_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-8-active-background: var(--sapIndicationColor_8_Active_Background);--ui5-v2-14-0-tag-set2-color-scheme-8-active-border: var(--sapIndicationColor_8_Active_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-9-border: var(--sapIndicationColor_9b_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-9-hover-background: var(--sapIndicationColor_9b_Hover_Background);--ui5-v2-14-0-tag-set2-color-scheme-9-active-color: var(--sapIndicationColor_9_Active_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-9-active-background: var(--sapIndicationColor_9_Active_Background);--ui5-v2-14-0-tag-set2-color-scheme-9-active-border: var(--sapIndicationColor_9_Active_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-10-border: var(--sapIndicationColor_10b_BorderColor);--ui5-v2-14-0-tag-set2-color-scheme-10-hover-background: var(--sapIndicationColor_10b_Hover_Background);--ui5-v2-14-0-tag-set2-color-scheme-10-active-color: var(--sapIndicationColor_10_Active_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-10-active-background: var(--sapIndicationColor_10_Active_Background);--ui5-v2-14-0-tag-set2-color-scheme-10-active-border: var(--sapIndicationColor_10_Active_BorderColor);--_ui5-v2-14-0-tag-height_size_l: 1.5rem;--_ui5-v2-14-0-tag-min-width_size_l: 1.75rem;--_ui5-v2-14-0-tag-font-size_size_l: 1.25rem;--_ui5-v2-14-0-tag-icon_min_width_size_l: 1.25rem;--_ui5-v2-14-0-tag-icon_min_height_size_l:1.25rem;--_ui5-v2-14-0-tag-icon_height_size_l: 1.25rem;--_ui5-v2-14-0-tag-text_padding_size_l: .125rem .25rem;--_ui5-v2-14-0-tag-text-padding: .1875rem .25rem;--_ui5-v2-14-0-tag-padding-inline-icon-only: .313rem;--_ui5-v2-14-0-tag-text-transform: none;--_ui5-v2-14-0-tag-icon-gap: .25rem;--_ui5-v2-14-0-tag-font-weight: normal;--_ui5-v2-14-0-tag-letter-spacing: normal;--ui5-v2-14-0-tag-set2-color-scheme-1-color: var(--sapIndicationColor_1b_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-1-background: var(--sapIndicationColor_1b_Background);--ui5-v2-14-0-tag-set2-color-scheme-2-color: var(--sapIndicationColor_2b_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-2-background: var(--sapIndicationColor_2b_Background);--ui5-v2-14-0-tag-set2-color-scheme-3-color: var(--sapIndicationColor_3b_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-3-background: var(--sapIndicationColor_3b_Background);--ui5-v2-14-0-tag-set2-color-scheme-4-color: var(--sapIndicationColor_4b_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-4-background: var(--sapIndicationColor_4b_Background);--ui5-v2-14-0-tag-set2-color-scheme-5-color: var(--sapIndicationColor_5b_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-5-background: var(--sapIndicationColor_5b_Background);--ui5-v2-14-0-tag-set2-color-scheme-6-color: var(--sapIndicationColor_6b_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-6-background: var(--sapIndicationColor_6b_Background);--ui5-v2-14-0-tag-set2-color-scheme-7-color: var(--sapIndicationColor_7b_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-7-background: var(--sapIndicationColor_7b_Background);--ui5-v2-14-0-tag-set2-color-scheme-8-color: var(--sapIndicationColor_8b_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-8-background: var(--sapIndicationColor_8b_Background);--ui5-v2-14-0-tag-set2-color-scheme-9-color: var(--sapIndicationColor_9b_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-9-background: var(--sapIndicationColor_9b_Background);--ui5-v2-14-0-tag-set2-color-scheme-10-color: var(--sapIndicationColor_10b_TextColor);--ui5-v2-14-0-tag-set2-color-scheme-10-background: var(--sapIndicationColor_10b_Background);--_ui5-v2-14-0_bar_base_height: 2.75rem;--_ui5-v2-14-0_bar_subheader_height: 3rem;--_ui5-v2-14-0_bar-start-container-padding-start: 1rem;--_ui5-v2-14-0_bar-mid-container-padding-start-end: .5rem;--_ui5-v2-14-0_bar-end-container-padding-end: 1rem;--_ui5-v2-14-0_bar_subheader_margin-top: -.0625rem;--_ui5-v2-14-0_breadcrumbs_margin: 0 0 .5rem 0;--_ui5-v2-14-0_busy_indicator_focus_outline: var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v2-14-0_busy_indicator_color: var(--sapContent_BusyColor);--_ui5-v2-14-0-button-badge-diameter: .75rem;--_ui5-v2-14-0-calendar-legend-root-padding: .75rem;--_ui5-v2-14-0-calendar-legend-root-width: 18.5rem;--_ui5-v2-14-0-calendar-legend-item-root-width: 7.75rem;--_ui5-v2-14-0-calendar-legend-item-root-focus-border: var(--sapContent_FocusWidth) solid var(--sapContent_FocusColor);--_ui5-v2-14-0-calendar-legend-item-box-dot-display: block;--_ui5-v2-14-0_card_box_shadow: var(--sapContent_Shadow0);--_ui5-v2-14-0_card_header_border_color: var(--sapTile_SeparatorColor);--_ui5-v2-14-0_card_header_focus_border: var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v2-14-0_card_header_focus_bottom_radius: 0px;--_ui5-v2-14-0_card_header_title_font_weight: normal;--_ui5-v2-14-0_card_header_subtitle_margin_top: .25rem;--_ui5-v2-14-0_card_hover_box_shadow: var(--sapContent_Shadow2);--_ui5-v2-14-0_card_header_focus_offset: 0px;--_ui5-v2-14-0_card_header_focus_radius: var(--_ui5-v2-14-0_card_border-radius);--_ui5-v2-14-0_card_header_title_font_family: var(--sapFontHeaderFamily);--_ui5-v2-14-0_card_header_title_font_size: var(--sapFontHeader6Size);--_ui5-v2-14-0_card_header_hover_bg: var(--sapTile_Hover_Background);--_ui5-v2-14-0_card_header_active_bg: var(--sapTile_Active_Background);--_ui5-v2-14-0_card_header_border: none;--_ui5-v2-14-0_card_border-radius: var(--sapTile_BorderCornerRadius);--_ui5-v2-14-0_card_header_padding: 1rem 1rem .75rem 1rem;--_ui5-v2-14-0_card_border: none;--ui5-v2-14-0_carousel_background_color_solid: var(--sapGroup_ContentBackground);--ui5-v2-14-0_carousel_background_color_translucent: var(--sapBackgroundColor);--ui5-v2-14-0_carousel_button_size: 2.5rem;--ui5-v2-14-0_carousel_inactive_dot_size: .25rem;--ui5-v2-14-0_carousel_inactive_dot_margin: 0 .375rem;--ui5-v2-14-0_carousel_inactive_dot_border: 1px solid var(--sapContent_ForegroundBorderColor);--ui5-v2-14-0_carousel_inactive_dot_background: var(--sapContent_ForegroundBorderColor);--ui5-v2-14-0_carousel_active_dot_border: 1px solid var(--sapContent_Selected_ForegroundColor);--ui5-v2-14-0_carousel_active_dot_background: var(--sapContent_Selected_ForegroundColor);--ui5-v2-14-0_carousel_navigation_button_active_box_shadow: none;--_ui5-v2-14-0_checkbox_transition: unset;--_ui5-v2-14-0_checkbox_border_radius: 0;--_ui5-v2-14-0_checkbox_focus_outline: var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v2-14-0_checkbox_outer_hover_background: transparent;--_ui5-v2-14-0_checkbox_inner_width_height: 1.375rem;--_ui5-v2-14-0_checkbox_inner_disabled_border_color: var(--sapField_BorderColor);--_ui5-v2-14-0_checkbox_inner_background: var(--sapField_Background);--_ui5-v2-14-0_checkbox_wrapped_focus_padding: .5rem;--_ui5-v2-14-0_checkbox_wrapped_focus_inset_block: var(--_ui5-v2-14-0_checkbox_focus_position);--_ui5-v2-14-0_checkbox_compact_wrapper_padding: .5rem;--_ui5-v2-14-0_checkbox_compact_width_height: 2rem;--_ui5-v2-14-0_checkbox_compact_inner_size: 1rem;--_ui5-v2-14-0_checkbox_compact_focus_position: .375rem;--_ui5-v2-14-0_checkbox_label_offset: var(--_ui5-v2-14-0_checkbox_wrapper_padding);--_ui5-v2-14-0_checkbox_disabled_label_color: var(--sapContent_LabelColor);--_ui5-v2-14-0_checkbox_default_focus_border: none;--_ui5-v2-14-0_checkbox_focus_outline_display: block;--_ui5-v2-14-0_checkbox_wrapper_padding: .6875rem;--_ui5-v2-14-0_checkbox_width_height: 2.75rem;--_ui5-v2-14-0_checkbox_label_color: var(--sapField_TextColor);--_ui5-v2-14-0_checkbox_inner_border: solid var(--sapField_BorderWidth) var(--sapField_BorderColor);--_ui5-v2-14-0_checkbox_inner_border_radius: var(--sapField_BorderCornerRadius);--_ui5-v2-14-0_checkbox_checkmark_color: var(--sapContent_Selected_ForegroundColor);--_ui5-v2-14-0_checkbox_hover_background: var(--sapContent_Selected_Hover_Background);--_ui5-v2-14-0_checkbox_inner_hover_border_color: var(--sapField_Hover_BorderColor);--_ui5-v2-14-0_checkbox_inner_hover_checked_border_color: var(--sapField_Hover_BorderColor);--_ui5-v2-14-0_checkbox_inner_selected_border_color: var(--sapField_BorderColor);--_ui5-v2-14-0_checkbox_inner_active_border_color: var(--sapField_Hover_BorderColor);--_ui5-v2-14-0_checkbox_active_background: var(--sapContent_Selected_Hover_Background);--_ui5-v2-14-0_checkbox_inner_readonly_border: var(--sapElement_BorderWidth) var(--sapField_ReadOnly_BorderColor) dashed;--_ui5-v2-14-0_checkbox_inner_error_border: var(--sapField_InvalidBorderWidth) solid var(--sapField_InvalidColor);--_ui5-v2-14-0_checkbox_inner_error_background_hover: var(--sapField_Hover_Background);--_ui5-v2-14-0_checkbox_inner_warning_border: var(--sapField_WarningBorderWidth) solid var(--sapField_WarningColor);--_ui5-v2-14-0_checkbox_inner_warning_color: var(--sapField_WarningColor);--_ui5-v2-14-0_checkbox_inner_warning_background_hover: var(--sapField_Hover_Background);--_ui5-v2-14-0_checkbox_checkmark_warning_color: var(--sapField_WarningColor);--_ui5-v2-14-0_checkbox_inner_success_border: var(--sapField_SuccessBorderWidth) solid var(--sapField_SuccessColor);--_ui5-v2-14-0_checkbox_inner_success_background_hover: var(--sapField_Hover_Background);--_ui5-v2-14-0_checkbox_inner_information_color: var(--sapField_InformationColor);--_ui5-v2-14-0_checkbox_inner_information_border: var(--sapField_InformationBorderWidth) solid var(--sapField_InformationColor);--_ui5-v2-14-0_checkbox_inner_information_background_hover: var(--sapField_Hover_Background);--_ui5-v2-14-0_checkbox_disabled_opacity: var(--sapContent_DisabledOpacity);--_ui5-v2-14-0_checkbox_focus_position: .3125rem;--_ui5-v2-14-0_checkbox_focus_border_radius: .5rem;--_ui5-v2-14-0_checkbox_right_focus_distance: .3125rem;--_ui5-v2-14-0_color-palette-item-after-focus-inset: .0625rem;--_ui5-v2-14-0_color-palette-item-outer-border-radius: .25rem;--_ui5-v2-14-0_color-palette-item-inner-border-radius: .1875rem;--_ui5-v2-14-0_color-palette-item-after-not-focus-color: .0625rem solid var(--sapGroup_ContentBackground);--_ui5-v2-14-0_color-palette-item-hover-margin: .0625rem;--_ui5-v2-14-0_color-palette-row-height: 9.5rem;--_ui5-v2-14-0_color-palette-button-height: 3rem;--_ui5-v2-14-0_color-palette-item-before-focus-color: .125rem solid var(--sapContent_FocusColor);--_ui5-v2-14-0_color-palette-item-before-focus-inset: -.3125rem;--_ui5-v2-14-0_color-palette-item-before-focus-hover-inset: -.0625rem;--_ui5-v2-14-0_color-palette-item-after-focus-color: .0625rem solid var(--sapContent_ContrastFocusColor);--_ui5-v2-14-0_color-palette-item-after-focus-hover-inset: .0625rem;--_ui5-v2-14-0_color-palette-item-before-focus-border-radius: .4375rem;--_ui5-v2-14-0_color-palette-item-after-focus-border-radius: .3125rem;--_ui5-v2-14-0_color-palette-item-hover-outer-border-radius: .4375rem;--_ui5-v2-14-0_color-palette-item-hover-inner-border-radius: .375rem;--_ui5-v2-14-0_color-palette-item-selected-focused-border-before: -.0625rem;--_ui5-v2-14-0_color-palette-item-after-focus-not-selected-border: none;--_ui5-v2-14-0_color-palette-item-selected-focused-border: none;--_ui5-v2-14-0_color-palette-item-mobile-focus-sides-inset: -.375rem -.375rem;--_ui5-v2-14-0-color-palette-item-mobile-focus-inset: 0px;--_ui5-v2-14-0_color-palette-item-after-mobile-focus-border: none;--_ui5-v2-14-0_color_picker_slider_handle_box_shadow: inset 0 0 0 .125rem var(--sapContent_ContrastShadowColor);--_ui5-v2-14-0_color_picker_slider_handle_inner_border_color: #fff;--_ui5-v2-14-0_color_picker_circle_outer_border: .0625rem solid var(--sapContent_ContrastShadowColor);--_ui5-v2-14-0_color_picker_circle_inner_border: var(--sapField_Picker_BorderWidth) solid var(--sapField_BorderColor);--_ui5-v2-14-0_color_picker_circle_inner_circle_size: .5625rem;--_ui5-v2-14-0_color_picker_slider_handle_container_margin_top: none;--_ui5-v2-14-0_color_picker_slider_handle_border: .125rem solid var(--sapField_BorderColor);--_ui5-v2-14-0_color_picker_slider_handle_outline_hover: .125rem solid var(--sapContent_FocusColor);--_ui5-v2-14-0_color_picker_slider_handle_outline_focus: .125rem solid var(--sapContent_FocusColor);--_ui5-v2-14-0_color_picker_slider_handle_inline_focus: 1px solid var(--sapContent_ContrastFocusColor);--_ui5-v2-14-0-datepicker-hover-background: var(--sapField_Hover_Background);--_ui5-v2-14-0-datepicker_border_radius: .25rem;--_ui5-v2-14-0_daypicker_item_margin: 2px;--_ui5-v2-14-0_daypicker_item_border: none;--_ui5-v2-14-0_daypicker_item_selected_border_color: var(--sapList_Background);--_ui5-v2-14-0_daypicker_daynames_container_height: 2rem;--_ui5-v2-14-0_daypicker_weeknumbers_container_padding_top: 2rem;--_ui5-v2-14-0_daypicker_item_othermonth_background_color: var(--sapList_Background);--_ui5-v2-14-0_daypicker_item_othermonth_color: var(--sapContent_LabelColor);--_ui5-v2-14-0_daypicker_item_othermonth_hover_color: var(--sapContent_LabelColor);--_ui5-v2-14-0_daypicker_item_selected_background: transparent;--_ui5-v2-14-0_daypicker_item_selected_between_hover_background: var(--sapList_Hover_SelectionBackground);--_ui5-v2-14-0_daypicker_item_now_not_selected_inset: 0;--_ui5-v2-14-0_daypicker_item_now_border_color: var(--sapLegend_CurrentDateTime);--_ui5-v2-14-0_dp_two_calendar_item_secondary_text_border_radios: .25rem;--_ui5-v2-14-0_daypicker_special_day_top: 2.5rem;--_ui5-v2-14-0_daypicker_special_day_before_border_color: var(--sapList_Background);--_ui5-v2-14-0_daypicker_selected_item_now_special_day_border_bottom_radius: 0;--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_after_border_width: .125rem;--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_dot: .375rem;--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_top: 2rem;--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_right: 1.4375rem;--_ui5-v2-14-0_daypicker_item_border_radius: .4375rem;--_ui5-v2-14-0_daypicker_item_selected_border: .0625rem solid var(--sapList_SelectionBorderColor);--_ui5-v2-14-0_daypicker_item_not_selected_focus_border: .125rem solid var(--sapContent_FocusColor);--_ui5-v2-14-0_daypicker_item_selected_focus_color: var(--sapContent_FocusColor);--_ui5-v2-14-0_daypicker_item_selected_focus_width: .125rem;--_ui5-v2-14-0_daypicker_item_no_selected_inset: .375rem;--_ui5-v2-14-0_daypicker_item_now_border_focus_after: .125rem solid var(--sapList_SelectionBorderColor);--_ui5-v2-14-0_daypicker_item_now_border_radius_focus_after: .3125rem;--_ui5-v2-14-0_day_picker_item_selected_now_border_focus: .125rem solid var(--sapContent_FocusColor);--_ui5-v2-14-0_day_picker_item_selected_now_border_radius_focus: .1875rem;--_ui5-v2-14-0_daypicker_dayname_color: var(--sapContent_LabelColor);--_ui5-v2-14-0_daypicker_weekname_color: var(--sapContent_LabelColor);--_ui5-v2-14-0_daypicker_item_selected_daytext_hover_background: transparent;--_ui5-v2-14-0_daypicker_item_border_radius_item: .5rem;--_ui5-v2-14-0_daypicker_item_border_radius_focus_after: .1875rem;--_ui5-v2-14-0_daypicker_item_selected_between_border: .5rem;--_ui5-v2-14-0_daypicker_item_selected_between_background: var(--sapList_SelectionBackgroundColor);--_ui5-v2-14-0_daypicker_item_selected_between_text_font: var(--sapFontFamily);--_ui5-v2-14-0_daypicker_item_selected_text_font: var(--sapFontBoldFamily);--_ui5-v2-14-0_daypicker_item_now_box_shadow: inset 0 0 0 .35rem var(--sapList_Background);--_ui5-v2-14-0_daypicker_item_selected_text_outline: .0625rem solid var(--sapSelectedColor);--_ui5-v2-14-0_daypicker_item_now_selected_outline_offset: -.25rem;--_ui5-v2-14-0_daypicker_item_now_selected_between_inset: .25rem;--_ui5-v2-14-0_daypicker_item_now_selected_between_border: .0625rem solid var(--sapContent_Selected_ForegroundColor);--_ui5-v2-14-0_daypicker_item_now_selected_between_border_radius: .1875rem;--_ui5-v2-14-0_daypicker_item_select_between_border: 1px solid var(--sapContent_Selected_ForegroundColor);--_ui5-v2-14-0_daypicker_item_weeekend_filter: brightness(105%);--_ui5-v2-14-0_daypicker_item_selected_hover: var(--sapList_Hover_Background);--_ui5-v2-14-0_daypicker_item_now_inset: .3125rem;--_ui5-v2-14-0-dp-item_withsecondtype_border: .25rem;--_ui5-v2-14-0_daypicker_item_selected__secondary_type_text_outline: .0625rem solid var(--sapSelectedColor);--_ui5-v2-14-0_daypicker_two_calendar_item_now_day_text_content: "";--_ui5-v2-14-0_daypicker_two_calendar_item_now_selected_border_width: .125rem;--_ui5-v2-14-0_daypicker_two_calendar_item_border_radius: .5rem;--_ui5-v2-14-0_daypicker_two_calendar_item_border_focus_border_radius: .375rem;--_ui5-v2-14-0_daypicker_two_calendar_item_no_selected_inset: 0;--_ui5-v2-14-0_daypicker_two_calendar_item_selected_now_border_radius_focus: .1875rem;--_ui5-v2-14-0_daypicker_two_calendar_item_no_selected_focus_inset: .1875rem;--_ui5-v2-14-0_daypicker_two_calendar_item_no_select_focus_border_radius: .3125rem;--_ui5-v2-14-0_daypicker_two_calendar_item_now_inset: .3125rem;--_ui5-v2-14-0_daypicker_two_calendar_item_now_selected_border_inset: .125rem;--_ui5-v2-14-0_daypicker_selected_item_special_day_width: calc(100% - .125rem) ;--_ui5-v2-14-0_daypicker_special_day_border_bottom_radius: .5rem;--_ui5-v2-14-0-daypicker_item_selected_now_border_radius: .5rem;--_ui5-v2-14-0_daypicker_selected_item_now_special_day_width: calc(100% - .1875rem) ;--_ui5-v2-14-0_daypicker_selected_item_now_special_day_border_bottom_radius_alternate: .5rem;--_ui5-v2-14-0_daypicker_selected_item_now_special_day_top: 2.4375rem;--_ui5-v2-14-0_daypicker_two_calendar_item_margin_bottom: 0;--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_now_inset: .3125rem;--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_now_border_radius: .25rem;--_ui5-v2-14-0_daypicker_item_now_focus_margin: 0;--_ui5-v2-14-0_daypicker_special_day_border_top: none;--_ui5-v2-14-0_daypicker_special_day_selected_border_radius_bottom: .25rem;--_ui5-v2-14-0_daypicker_specialday_focused_top: 2.125rem;--_ui5-v2-14-0_daypicker_specialday_focused_width: calc(100% - .75rem) ;--_ui5-v2-14-0_daypicker_specialday_focused_border_bottom: 0;--_ui5-v2-14-0_daypicker_item_now_specialday_top: 2.3125rem;--_ui5-v2-14-0_daypicker_item_now_specialday_width: calc(100% - .5rem) ;--_ui5-v2-14-0_dialog_header_error_state_icon_color: var(--sapNegativeElementColor);--_ui5-v2-14-0_dialog_header_information_state_icon_color: var(--sapInformativeElementColor);--_ui5-v2-14-0_dialog_header_success_state_icon_color: var(--sapPositiveElementColor);--_ui5-v2-14-0_dialog_header_warning_state_icon_color: var(--sapCriticalElementColor);--_ui5-v2-14-0_dialog_header_state_line_height: .0625rem;--_ui5-v2-14-0_dialog_header_focus_bottom_offset: 2px;--_ui5-v2-14-0_dialog_header_focus_top_offset: 1px;--_ui5-v2-14-0_dialog_header_focus_left_offset: 1px;--_ui5-v2-14-0_dialog_header_focus_right_offset: 1px;--_ui5-v2-14-0_dialog_header_border_radius: var(--sapElement_BorderCornerRadius);--_ui5-v2-14-0_file_uploader_display_input_width: calc(100% - var(--_ui5-v2-14-0_input_icon_width));--_ui5-v2-14-0_file_uploader_tokenizer_width: calc(100% - 2 * var(--_ui5-v2-14-0_input_icon_width) - var(--_ui5-v2-14-0_input_inner_space_to_tokenizer));--_ui5-v2-14-0_table_cell_valign: center;--_ui5-v2-14-0_table_cell_min_width: 2.75rem;--_ui5-v2-14-0_table_navigated_cell_width: .25rem;--_ui5-v2-14-0_first_table_cell_horizontal_padding: 1rem;--_ui5-v2-14-0_table_cell_horizontal_padding: .5rem;--_ui5-v2-14-0_table_cell_vertical_padding: .25rem;--_ui5-v2-14-0_table_row_actions_gap: .25rem;--ui5-v2-14-0-form-item-layout: 4fr 8fr 0fr;--ui5-v2-14-0-form-item-label-justify: end;--ui5-v2-14-0-form-item-label-justify-span12: start;--ui5-v2-14-0-form-item-label-padding: .125rem 0;--ui5-v2-14-0-form-item-label-padding-end: .85rem;--ui5-v2-14-0-form-item-label-padding-span12: .625rem .25rem 0 .25rem;--ui5-v2-14-0-group-header-listitem-background-color: var(--sapList_GroupHeaderBackground);--ui5-v2-14-0-icon-focus-border-radius: .25rem;--_ui5-v2-14-0_input_width: 13.125rem;--_ui5-v2-14-0_input_min_width: 2.75rem;--_ui5-v2-14-0_input_height: var(--sapElement_Height);--_ui5-v2-14-0_input_value_state_error_hover_background: var(--sapField_Hover_Background);--_ui5-v2-14-0_input_background_color: var(--sapField_Background);--_ui5-v2-14-0_input_border_radius: var(--sapField_BorderCornerRadius);--_ui5-v2-14-0_input_placeholder_style: italic;--_ui5-v2-14-0_input_placeholder_color: var(--sapField_PlaceholderTextColor);--_ui5-v2-14-0_input_bottom_border_height: 0;--_ui5-v2-14-0_input_bottom_border_color: transparent;--_ui5-v2-14-0_input_focused_border_color: var(--sapField_Hover_BorderColor);--_ui5-v2-14-0_input_state_border_width: .125rem;--_ui5-v2-14-0_input_information_border_width: .125rem;--_ui5-v2-14-0_input_error_font_weight: normal;--_ui5-v2-14-0_input_warning_font_weight: normal;--_ui5-v2-14-0_input_focus_border_width: 1px;--_ui5-v2-14-0_input_error_warning_font_style: inherit;--_ui5-v2-14-0_input_error_warning_text_indent: 0;--_ui5-v2-14-0_input_disabled_border_color: var(--sapField_BorderColor);--_ui5-v2-14-0-input_disabled_background: var(--sapField_Background);--_ui5-v2-14-0_input_readonly_border: none;--_ui5-v2-14-0_input_readonly_border_color: var(--sapField_ReadOnly_BorderColor);--_ui5-v2-14-0_input_readonly_background: var(--sapField_ReadOnly_Background);--_ui5-v2-14-0_input_disabled_opacity: var(--sapContent_DisabledOpacity);--_ui5-v2-14-0_input_icon_min_width: 2.25rem;--_ui5-v2-14-0_input_compact_min_width: 2rem;--_ui5-v2-14-0_input_transition: none;--_ui5-v2-14-0-input-value-state-icon-display: none;--_ui5-v2-14-0_input_value_state_error_border_color: var(--sapField_InvalidColor);--_ui5-v2-14-0_input_focused_value_state_error_border_color: var(--sapField_InvalidColor);--_ui5-v2-14-0_input_value_state_warning_border_color: var(--sapField_WarningColor);--_ui5-v2-14-0_input_focused_value_state_warning_border_color: var(--sapField_WarningColor);--_ui5-v2-14-0_input_value_state_success_border_color: var(--sapField_SuccessColor);--_ui5-v2-14-0_input_focused_value_state_success_border_color: var(--sapField_SuccessColor);--_ui5-v2-14-0_input_value_state_success_border_width: 1px;--_ui5-v2-14-0_input_value_state_information_border_color: var(--sapField_InformationColor);--_ui5-v2-14-0_input_focused_value_state_information_border_color: var(--sapField_InformationColor);--ui5-v2-14-0_input_focus_pseudo_element_content: "";--_ui5-v2-14-0_input_value_state_error_warning_placeholder_font_weight: normal;--_ui5-v2-14-0-input_error_placeholder_color: var(--sapField_PlaceholderTextColor);--_ui5-v2-14-0_input_icon_width: 2.25rem;--_ui5-v2-14-0-input-icons-count: 0;--_ui5-v2-14-0_input_margin_top_bottom: .1875rem;--_ui5-v2-14-0_input_tokenizer_min_width: 3.25rem;--_ui5-v2-14-0-input-border: none;--_ui5-v2-14-0_input_hover_border: none;--_ui5-v2-14-0_input_focus_border_radius: .25rem;--_ui5-v2-14-0_input_readonly_focus_border_radius: .125rem;--_ui5-v2-14-0_input_error_warning_border_style: none;--_ui5-v2-14-0_input_focused_value_state_error_background: var(--sapField_Hover_Background);--_ui5-v2-14-0_input_focused_value_state_warning_background: var(--sapField_Hover_Background);--_ui5-v2-14-0_input_focused_value_state_success_background: var(--sapField_Hover_Background);--_ui5-v2-14-0_input_focused_value_state_information_background: var(--sapField_Hover_Background);--_ui5-v2-14-0_input_focused_value_state_error_focus_outline_color: var(--sapField_InvalidColor);--_ui5-v2-14-0_input_focused_value_state_warning_focus_outline_color: var(--sapField_WarningColor);--_ui5-v2-14-0_input_focused_value_state_success_focus_outline_color: var(--sapField_SuccessColor);--_ui5-v2-14-0_input_focus_offset: 0;--_ui5-v2-14-0_input_readonly_focus_offset: .125rem;--_ui5-v2-14-0_input_information_icon_padding: .625rem .625rem .5rem .625rem;--_ui5-v2-14-0_input_information_focused_icon_padding: .625rem .625rem .5625rem .625rem;--_ui5-v2-14-0_input_error_warning_icon_padding: .625rem .625rem .5rem .625rem;--_ui5-v2-14-0_input_error_warning_focused_icon_padding: .625rem .625rem .5625rem .625rem;--_ui5-v2-14-0_input_custom_icon_padding: .625rem .625rem .5625rem .625rem;--_ui5-v2-14-0_input_error_warning_custom_icon_padding: .625rem .625rem .5rem .625rem;--_ui5-v2-14-0_input_error_warning_custom_focused_icon_padding: .625rem .625rem .5625rem .625rem;--_ui5-v2-14-0_input_information_custom_icon_padding: .625rem .625rem .5rem .625rem;--_ui5-v2-14-0_input_information_custom_focused_icon_padding: .625rem .625rem .5625rem .625rem;--_ui5-v2-14-0_input_focus_outline_color: var(--sapField_Active_BorderColor);--_ui5-v2-14-0_input_icon_wrapper_height: calc(100% - 1px) ;--_ui5-v2-14-0_input_icon_wrapper_state_height: calc(100% - 2px) ;--_ui5-v2-14-0_input_icon_wrapper_success_state_height: calc(100% - var(--_ui5-v2-14-0_input_value_state_success_border_width));--_ui5-v2-14-0_input_icon_color: var(--sapField_TextColor);--_ui5-v2-14-0_input_icon_pressed_bg: var(--sapField_Hover_Background);--_ui5-v2-14-0_input_icon_padding: .625rem .625rem .5625rem .625rem;--_ui5-v2-14-0_input_icon_hover_bg: var(--sapField_Focus_Background);--_ui5-v2-14-0_input_icon_pressed_color: var(--sapButton_Active_TextColor);--_ui5-v2-14-0_input_icon_border_radius: var(--sapField_BorderCornerRadius);--_ui5-v2-14-0_input_icon_box_shadow: var(--sapField_Hover_Shadow);--_ui5-v2-14-0_input_icon_border: none;--_ui5-v2-14-0_input_error_icon_box_shadow: var(--sapContent_Negative_Shadow);--_ui5-v2-14-0_input_warning_icon_box_shadow: var(--sapContent_Critical_Shadow);--_ui5-v2-14-0_input_information_icon_box_shadow: var(--sapContent_Informative_Shadow);--_ui5-v2-14-0_input_success_icon_box_shadow: var(--sapContent_Positive_Shadow);--_ui5-v2-14-0_input_icon_error_pressed_color: var(--sapButton_Reject_Selected_TextColor);--_ui5-v2-14-0_input_icon_warning_pressed_color: var(--sapButton_Attention_Selected_TextColor);--_ui5-v2-14-0_input_icon_information_pressed_color: var(--sapButton_Selected_TextColor);--_ui5-v2-14-0_input_icon_success_pressed_color: var(--sapButton_Accept_Selected_TextColor);--_ui5-v2-14-0_link_focus_text_decoration: underline;--_ui5-v2-14-0_link_text_decoration: var(--sapLink_TextDecoration);--_ui5-v2-14-0_link_hover_text_decoration: var(--sapLink_Hover_TextDecoration);--_ui5-v2-14-0_link_focused_hover_text_decoration: none;--_ui5-v2-14-0_link_focused_hover_text_color: var(--sapContent_ContrastTextColor);--_ui5-v2-14-0_link_active_text_decoration: var(--sapLink_Active_TextDecoration);--_ui5-v2-14-0_link_outline: none;--_ui5-v2-14-0_link_focus_border-radius: .125rem;--_ui5-v2-14-0_link_focus_background_color: var(--sapContent_FocusColor);--_ui5-v2-14-0_link_focus_color: var(--sapContent_ContrastTextColor);--_ui5-v2-14-0_link_subtle_text_decoration: underline;--_ui5-v2-14-0_link_subtle_text_decoration_hover: none;--_ui5-v2-14-0_link_large_interactive_area_height: 1.5rem;--ui5-v2-14-0_list_footer_text_color: var(--sapList_FooterTextColor);--ui5-v2-14-0-listitem-background-color: var(--sapList_Background);--ui5-v2-14-0-listitem-border-bottom: var(--sapList_BorderWidth) solid var(--sapList_BorderColor);--ui5-v2-14-0-listitem-selected-border-bottom: 1px solid var(--sapList_SelectionBorderColor);--ui5-v2-14-0-listitem-focused-selected-border-bottom: 1px solid var(--sapList_SelectionBorderColor);--_ui5-v2-14-0-listitembase_disabled_opacity: .5;--_ui5-v2-14-0_product_switch_item_border: none;--_ui5-v2-14-0_menu_item_padding: 0 1rem 0 .75rem;--_ui5-v2-14-0_menu_item_submenu_icon_right: 1rem;--_ui5-v2-14-0_menu_popover_border_radius: var(--sapPopover_BorderCornerRadius);--_ui5-v2-14-0_monthpicker_item_margin: .0625rem;--_ui5-v2-14-0_monthpicker_item_border: .0625rem solid var(--sapButton_Lite_BorderColor);--_ui5-v2-14-0_monthpicker_item_hover_border: .0625rem solid var(--sapButton_Lite_Hover_BorderColor);--_ui5-v2-14-0_monthpicker_item_active_border: .0625rem solid var(--sapButton_Lite_Active_BorderColor);--_ui5-v2-14-0_monthpicker_item_selected_border: .0625rem solid var(--sapButton_Selected_BorderColor);--_ui5-v2-14-0_monthpicker_item_selected_hover_border: .0625rem solid var(--sapButton_Selected_Hover_BorderColor);--_ui5-v2-14-0_monthpicker_item_border_radius: .5rem;--_ui5-v2-14-0_message_strip_padding: .4375rem 2.5rem .4375rem 2.5rem;--_ui5-v2-14-0_message_strip_padding_block_no_icon: .4375rem .4375rem;--_ui5-v2-14-0_message_strip_padding_inline_no_icon: 1rem 2.5rem;--_ui5-v2-14-0_message_strip_border_width: var(--sapMessage_BorderWidth);--_ui5-v2-14-0_message_strip_icon_top: .4375rem;--_ui5-v2-14-0_message_strip_close_button_top: .125rem;--_ui5-v2-14-0_message_strip_close_button_color_set_1_background: var(--sapMessage_Button_Hover_Background);--_ui5-v2-14-0_message_strip_close_button_color_set_2_background: var(--sapMessage_Button_Hover_Background);--_ui5-v2-14-0_message_strip_close_button_color_set_1_color: var(--sapContent_ContrastIconColor);--_ui5-v2-14-0_message_strip_scheme_1_set_2_background: var(--sapIndicationColor_1b);--_ui5-v2-14-0_message_strip_scheme_1_set_2_border_color: var(--sapIndicationColor_1b_BorderColor);--_ui5-v2-14-0_message_strip_scheme_2_set_2_background: var(--sapIndicationColor_2b);--_ui5-v2-14-0_message_strip_scheme_2_set_2_border_color: var(--sapIndicationColor_2b_BorderColor);--_ui5-v2-14-0_message_strip_scheme_3_set_2_background: var(--sapIndicationColor_3b);--_ui5-v2-14-0_message_strip_scheme_3_set_2_border_color: var(--sapIndicationColor_3b_BorderColor);--_ui5-v2-14-0_message_strip_scheme_4_set_2_background: var(--sapIndicationColor_4b);--_ui5-v2-14-0_message_strip_scheme_4_set_2_border_color: var(--sapIndicationColor_4b_BorderColor);--_ui5-v2-14-0_message_strip_scheme_5_set_2_background: var(--sapIndicationColor_5b);--_ui5-v2-14-0_message_strip_scheme_5_set_2_border_color: var(--sapIndicationColor_5b_BorderColor);--_ui5-v2-14-0_message_strip_scheme_6_set_2_background: var(--sapIndicationColor_6b);--_ui5-v2-14-0_message_strip_scheme_6_set_2_border_color: var(--sapIndicationColor_6b_BorderColor);--_ui5-v2-14-0_message_strip_scheme_7_set_2_background: var(--sapIndicationColor_7b);--_ui5-v2-14-0_message_strip_scheme_7_set_2_border_color: var(--sapIndicationColor_7b_BorderColor);--_ui5-v2-14-0_message_strip_scheme_8_set_2_background: var(--sapIndicationColor_8b);--_ui5-v2-14-0_message_strip_scheme_8_set_2_border_color: var(--sapIndicationColor_8b_BorderColor);--_ui5-v2-14-0_message_strip_scheme_9_set_2_background: var(--sapIndicationColor_9b);--_ui5-v2-14-0_message_strip_scheme_9_set_2_border_color: var(--sapIndicationColor_9b_BorderColor);--_ui5-v2-14-0_message_strip_scheme_10_set_2_background: var(--sapIndicationColor_10b);--_ui5-v2-14-0_message_strip_scheme_10_set_2_border_color: var(--sapIndicationColor_10b_BorderColor);--_ui5-v2-14-0_message_strip_close_button_right: .1875rem;--_ui5-v2-14-0_panel_focus_border: var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v2-14-0_panel_header_height: 2.75rem;--_ui5-v2-14-0_panel_button_root_width: 2.75rem;--_ui5-v2-14-0_panel_button_root_height: 2.75rem;--_ui5-v2-14-0_panel_header_padding_right: .5rem;--_ui5-v2-14-0_panel_header_button_wrapper_padding: .25rem;--_ui5-v2-14-0_panel_border_radius: var(--sapGroup_BorderCornerRadius);--_ui5-v2-14-0_panel_border_bottom: none;--_ui5-v2-14-0_panel_default_header_border: .0625rem solid var(--sapGroup_TitleBorderColor);--_ui5-v2-14-0_panel_border_radius_expanded: var(--sapElement_BorderCornerRadius) var(--sapElement_BorderCornerRadius) 0 0;--_ui5-v2-14-0_panel_icon_color: var(--sapButton_Lite_TextColor);--_ui5-v2-14-0_panel_focus_offset: 0px;--_ui5-v2-14-0_panel_focus_bottom_offset: -1px;--_ui5-v2-14-0_panel_content_padding: .625rem 1rem;--_ui5-v2-14-0_panel_header_background_color: var(--sapGroup_TitleBackground);--_ui5-v2-14-0_popover_background: var(--sapGroup_ContentBackground);--_ui5-v2-14-0_popover_box_shadow: var(--sapContent_Shadow2);--_ui5-v2-14-0_popover_no_arrow_box_shadow: var(--sapContent_Shadow1);--_ui5-v2-14-0_popup_content_padding_s: 1rem;--_ui5-v2-14-0_popup_content_padding_m_l: 2rem;--_ui5-v2-14-0_popup_content_padding_xl: 3rem;--_ui5-v2-14-0_popup_header_footer_padding_s: 1rem;--_ui5-v2-14-0_popup_header_footer_padding_m_l: 2rem;--_ui5-v2-14-0_popup_header_footer_padding_xl: 3rem;--_ui5-v2-14-0_popup_viewport_margin: 10px;--_ui5-v2-14-0_popup_header_prop_header_text_alignment: flex-start;--_ui5-v2-14-0_popup_header_background: var(--sapPageHeader_Background);--_ui5-v2-14-0_popup_header_shadow: var(--sapContent_HeaderShadow);--_ui5-v2-14-0_popup_header_border: none;--_ui5-v2-14-0_popup_border_radius: .5rem;--_ui5-v2-14-0_popup_block_layer_background: var(--sapBlockLayer_Background);--_ui5-v2-14-0_popup_block_layer_opacity: .2;--_ui5-v2-14-0_progress_indicator_bar_border_max: none;--_ui5-v2-14-0_progress_indicator_icon_visibility: inline-block;--_ui5-v2-14-0_progress_indicator_side_points_visibility: block;--_ui5-v2-14-0_progress_indicator_padding: 1.25rem 0 .75rem 0;--_ui5-v2-14-0_progress_indicator_padding_novalue: .3125rem;--_ui5-v2-14-0_progress_indicator_padding_end: 1.25rem;--_ui5-v2-14-0_progress_indicator_host_height: unset;--_ui5-v2-14-0_progress_indicator_host_box_sizing: border-box;--_ui5-v2-14-0_progress_indicator_root_position: relative;--_ui5-v2-14-0_progress_indicator_root_border_radius: .25rem;--_ui5-v2-14-0_progress_indicator_root_height: .375rem;--_ui5-v2-14-0_progress_indicator_root_min_height: .375rem;--_ui5-v2-14-0_progress_indicator_root_overflow: visible;--_ui5-v2-14-0_progress_indicator_bar_height: .625rem;--_ui5-v2-14-0_progress_indicator_bar_border_radius: .5rem;--_ui5-v2-14-0_progress_indicator_remaining_bar_border_radius: .25rem;--_ui5-v2-14-0_progress_indicator_remaining_bar_position: absolute;--_ui5-v2-14-0_progress_indicator_remaining_bar_width: 100%;--_ui5-v2-14-0_progress_indicator_remaining_bar_overflow: visible;--_ui5-v2-14-0_progress_indicator_icon_position: absolute;--_ui5-v2-14-0_progress_indicator_icon_right_position: -1.25rem;--_ui5-v2-14-0_progress_indicator_value_margin: 0 0 .1875rem 0;--_ui5-v2-14-0_progress_indicator_value_position: absolute;--_ui5-v2-14-0_progress_indicator_value_top_position: -1.3125rem;--_ui5-v2-14-0_progress_indicator_value_left_position: 0;--_ui5-v2-14-0_progress_indicator_background_none: var(--sapProgress_Background);--_ui5-v2-14-0_progress_indicator_background_error: var(--sapProgress_NegativeBackground);--_ui5-v2-14-0_progress_indicator_background_warning: var(--sapProgress_CriticalBackground);--_ui5-v2-14-0_progress_indicator_background_success: var(--sapProgress_PositiveBackground);--_ui5-v2-14-0_progress_indicator_background_information: var(--sapProgress_InformationBackground);--_ui5-v2-14-0_progress_indicator_value_state_none: var(--sapProgress_Value_Background);--_ui5-v2-14-0_progress_indicator_value_state_error: var(--sapProgress_Value_NegativeBackground);--_ui5-v2-14-0_progress_indicator_value_state_warning: var(--sapProgress_Value_CriticalBackground);--_ui5-v2-14-0_progress_indicator_value_state_success: var(--sapProgress_Value_PositiveBackground);--_ui5-v2-14-0_progress_indicator_value_state_information: var(--sapProgress_Value_InformationBackground);--_ui5-v2-14-0_progress_indicator_value_state_error_icon_color: var(--sapProgress_Value_NegativeTextColor);--_ui5-v2-14-0_progress_indicator_value_state_warning_icon_color: var(--sapProgress_Value_CriticalTextColor);--_ui5-v2-14-0_progress_indicator_value_state_success_icon_color: var(--sapProgress_Value_PositiveTextColor);--_ui5-v2-14-0_progress_indicator_value_state_information_icon_color: var(--sapProgress_Value_InformationTextColor);--_ui5-v2-14-0_progress_indicator_border: none;--_ui5-v2-14-0_progress_indicator_border_color_error: var(--sapErrorBorderColor);--_ui5-v2-14-0_progress_indicator_border_color_warning: var(--sapWarningBorderColor);--_ui5-v2-14-0_progress_indicator_border_color_success: var(--sapSuccessBorderColor);--_ui5-v2-14-0_progress_indicator_border_color_information: var(--sapInformationBorderColor);--_ui5-v2-14-0_progress_indicator_color: var(--sapField_TextColor);--_ui5-v2-14-0_progress_indicator_bar_color: var(--sapProgress_TextColor);--_ui5-v2-14-0_progress_indicator_icon_size: var(--sapFontLargeSize);--_ui5-v2-14-0_rating_indicator_border_radius: .5rem;--_ui5-v2-14-0_rating_indicator_outline_offset: -.125rem;--_ui5-v2-14-0_rating_indicator_item_height: 1em;--_ui5-v2-14-0_rating_indicator_item_width: 1em;--_ui5-v2-14-0_rating_indicator_component_spacing: .5rem 0px;--_ui5-v2-14-0_rating_indicator_component_padding: .25rem;--_ui5-v2-14-0_rating_indicator_item_size_s: 1.375rem;--_ui5-v2-14-0_rating_indicator_item_size_l: 2rem;--_ui5-v2-14-0_rating_indicator_readonly_item_height: .75em;--_ui5-v2-14-0_rating_indicator_readonly_item_width: .75em;--_ui5-v2-14-0_rating_indicator_readonly_item_spacing: .1875rem .1875rem;--_ui5-v2-14-0_segmented_btn_background_color: var(--sapButton_Lite_Background);--_ui5-v2-14-0_segmented_btn_border_color: var(--sapButton_Lite_BorderColor);--_ui5-v2-14-0_segmented_btn_hover_box_shadow: none;--_ui5-v2-14-0_segmented_btn_item_border_left: .0625rem;--_ui5-v2-14-0_segmented_btn_item_border_right: .0625rem;--_ui5-v2-14-0_button_base_height: var(--sapElement_Height);--_ui5-v2-14-0_button_border_radius: var(--sapButton_BorderCornerRadius);--_ui5-v2-14-0_button_emphasized_focused_border_before: .125rem solid var(--sapContent_FocusColor);--_ui5-v2-14-0_button_emphasized_focused_active_border_color: transparent;--_ui5-v2-14-0_button_focused_border: .125rem solid var(--sapContent_FocusColor);--_ui5-v2-14-0_button_focused_border_radius: .375rem;--_ui5-v2-14-0_button_focused_inner_border_radius: .375rem;--_ui5-v2-14-0_button_base_min_width: 2.25rem;--_ui5-v2-14-0_button_base_padding: .5625rem;--_ui5-v2-14-0_button_base_icon_margin: .375rem;--_ui5-v2-14-0_button_text_shadow: none;--_ui5-v2-14-0_button_emphasized_border_width: .0625rem;--_ui5-v2-14-0_button_pressed_focused_border_color: var(--sapContent_FocusColor);--_ui5-v2-14-0_button_fontFamily: var(--sapButton_FontFamily);--_ui5-v2-14-0_button_emphasized_focused_border_color: var(--sapContent_ContrastFocusColor);--_ui5-v2-14-0_radio_button_min_width: 2.75rem;--_ui5-v2-14-0_radio_button_checked_fill: var(--sapSelectedColor);--_ui5-v2-14-0_radio_button_checked_error_fill: var(--sapField_InvalidColor);--_ui5-v2-14-0_radio_button_checked_success_fill: var(--sapField_SuccessColor);--_ui5-v2-14-0_radio_button_checked_information_fill: var(--sapField_InformationColor);--_ui5-v2-14-0_radio_button_warning_error_border_dash: 0;--_ui5-v2-14-0_radio_button_outer_ring_color: var(--sapField_BorderColor);--_ui5-v2-14-0_radio_button_outer_ring_width: var(--sapField_BorderWidth);--_ui5-v2-14-0_radio_button_outer_ring_bg: var(--sapField_Background);--_ui5-v2-14-0_radio_button_outer_ring_hover_color: var(--sapField_Hover_BorderColor);--_ui5-v2-14-0_radio_button_outer_ring_active_color: var(--sapField_Hover_BorderColor);--_ui5-v2-14-0_radio_button_outer_ring_checked_hover_color: var(--sapField_Hover_BorderColor);--_ui5-v2-14-0_radio_button_outer_ring_padding_with_label: 0 .6875rem;--_ui5-v2-14-0_radio_button_border: none;--_ui5-v2-14-0_radio_button_focus_outline: block;--_ui5-v2-14-0_radio_button_color: var(--sapField_BorderColor);--_ui5-v2-14-0_radio_button_label_offset: 1px;--_ui5-v2-14-0_radio_button_information_border_width: var(--sapField_InformationBorderWidth);--_ui5-v2-14-0_radio_button_hover_fill: var(--sapField_Selector_Hover_Background);--_ui5-v2-14-0_radio_button_hover_fill_error: var(--sapField_Selector_Hover_InvalidBackground);--_ui5-v2-14-0_radio_button_hover_fill_warning: var(--sapField_Selector_Hover_WarningBackground);--_ui5-v2-14-0_radio_button_hover_fill_success: var(--sapField_Selector_Hover_SuccessBackground);--_ui5-v2-14-0_radio_button_hover_fill_information: var(--sapField_Selector_Hover_InformationBackground);--_ui5-v2-14-0_radio_button_border_width: var(--sapContent_FocusWidth);--_ui5-v2-14-0_radio_button_border_radius: .5rem;--_ui5-v2-14-0_radio_button_label_color: var(--sapField_TextColor);--_ui5-v2-14-0_radio_button_inner_ring_radius: 27.5%;--_ui5-v2-14-0_radio_button_outer_ring_padding: 0 .6875rem;--_ui5-v2-14-0_radio_button_read_only_border_type: 4,2;--_ui5-v2-14-0_radio_button_inner_ring_color: var(--sapContent_Selected_ForegroundColor);--_ui5-v2-14-0_radio_button_checked_warning_fill: var(--sapField_WarningColor);--_ui5-v2-14-0_radio_button_read_only_inner_ring_color: var(--sapField_TextColor);--_ui5-v2-14-0_radio_button_read_only_border_width: var(--sapElement_BorderWidth);--_ui5-v2-14-0_radio_button_focus_dist: .375rem;--_ui5-v2-14-0_switch_height: 2.75rem;--_ui5-v2-14-0_switch_foucs_border_size: 1px;--_ui5-v2-14-0-switch-root-border-radius: 0;--_ui5-v2-14-0-switch-root-box-shadow: none;--_ui5-v2-14-0_switch_track_border_radius: .75rem;--_ui5-v2-14-0-switch-track-border: 1px solid;--_ui5-v2-14-0_switch_track_transition: none;--_ui5-v2-14-0_switch_handle_border_radius: 1rem;--_ui5-v2-14-0-switch-slider-texts-display: inline;--_ui5-v2-14-0_switch_width: 2.5rem;--_ui5-v2-14-0_switch_min_width: none;--_ui5-v2-14-0_switch_with_label_width: 2.875rem;--_ui5-v2-14-0_switch_focus_outline: none;--_ui5-v2-14-0_switch_root_after_outline: .125rem solid var(--sapContent_FocusColor);--_ui5-v2-14-0_switch_root_after_boreder_radius: 1rem;--_ui5-v2-14-0_switch_root_outline_top: .5rem;--_ui5-v2-14-0_switch_root_outline_bottom: .5rem;--_ui5-v2-14-0_switch_root_outline_left: -.125rem;--_ui5-v2-14-0_switch_root_outline_right: -.125rem;--_ui5-v2-14-0_switch_disabled_opacity: var(--sapContent_DisabledOpacity);--_ui5-v2-14-0_switch_transform: translateX(100%) translateX(-1.625rem);--_ui5-v2-14-0_switch_transform_with_label: translateX(100%) translateX(-1.875rem);--_ui5-v2-14-0_switch_rtl_transform: translateX(-100%) translateX(1.625rem);--_ui5-v2-14-0_switch_rtl_transform_with_label: translateX(-100%) translateX(1.875rem);--_ui5-v2-14-0_switch_track_width: 2.5rem;--_ui5-v2-14-0_switch_track_height: 1.5rem;--_ui5-v2-14-0_switch_track_with_label_width: 2.875rem;--_ui5-v2-14-0_switch_track_with_label_height: 1.5rem;--_ui5-v2-14-0_switch_track_active_background_color: var(--sapButton_Track_Selected_Background);--_ui5-v2-14-0_switch_track_inactive_background_color: var(--sapButton_Track_Background);--_ui5-v2-14-0_switch_track_hover_active_background_color: var(--sapButton_Track_Selected_Hover_Background);--_ui5-v2-14-0_switch_track_hover_inactive_background_color: var(--sapButton_Track_Hover_Background);--_ui5-v2-14-0_switch_track_active_border_color: var(--sapButton_Track_Selected_BorderColor);--_ui5-v2-14-0_switch_track_inactive_border_color: var(--sapButton_Track_BorderColor);--_ui5-v2-14-0_switch_track_hover_active_border_color: var(--sapButton_Track_Selected_Hover_BorderColor);--_ui5-v2-14-0_switch_track_hover_inactive_border_color: var(--sapButton_Track_Hover_BorderColor);--_ui5-v2-14-0_switch_track_semantic_accept_background_color: var(--sapButton_Track_Positive_Background);--_ui5-v2-14-0_switch_track_semantic_reject_background_color: var(--sapButton_Track_Negative_Background);--_ui5-v2-14-0_switch_track_semantic_hover_accept_background_color: var(--sapButton_Track_Positive_Hover_Background);--_ui5-v2-14-0_switch_track_semantic_hover_reject_background_color: var(--sapButton_Track_Negative_Hover_Background);--_ui5-v2-14-0_switch_track_semantic_accept_border_color: var(--sapButton_Track_Positive_BorderColor);--_ui5-v2-14-0_switch_track_semantic_reject_border_color: var(--sapButton_Track_Negative_BorderColor);--_ui5-v2-14-0_switch_track_semantic_hover_accept_border_color: var(--sapButton_Track_Positive_Hover_BorderColor);--_ui5-v2-14-0_switch_track_semantic_hover_reject_border_color: var(--sapButton_Track_Negative_Hover_BorderColor);--_ui5-v2-14-0_switch_track_icon_display: inline-block;--_ui5-v2-14-0_switch_handle_width: 1.5rem;--_ui5-v2-14-0_switch_handle_height: 1.25rem;--_ui5-v2-14-0_switch_handle_with_label_width: 1.75rem;--_ui5-v2-14-0_switch_handle_with_label_height: 1.25rem;--_ui5-v2-14-0_switch_handle_border: var(--_ui5-v2-14-0_switch_handle_border_width) solid var(--sapButton_Handle_BorderColor);--_ui5-v2-14-0_switch_handle_border_width: .125rem;--_ui5-v2-14-0_switch_handle_active_background_color: var(--sapButton_Handle_Selected_Background);--_ui5-v2-14-0_switch_handle_inactive_background_color: var(--sapButton_Handle_Background);--_ui5-v2-14-0_switch_handle_hover_active_background_color: var(--sapButton_Handle_Selected_Hover_Background);--_ui5-v2-14-0_switch_handle_hover_inactive_background_color: var(--sapButton_Handle_Hover_Background);--_ui5-v2-14-0_switch_handle_active_border_color: var(--sapButton_Handle_Selected_BorderColor);--_ui5-v2-14-0_switch_handle_inactive_border_color: var(--sapButton_Handle_BorderColor);--_ui5-v2-14-0_switch_handle_hover_active_border_color: var(--sapButton_Handle_Selected_BorderColor);--_ui5-v2-14-0_switch_handle_hover_inactive_border_color: var(--sapButton_Handle_BorderColor);--_ui5-v2-14-0_switch_handle_semantic_accept_background_color: var(--sapButton_Handle_Positive_Background);--_ui5-v2-14-0_switch_handle_semantic_reject_background_color: var(--sapButton_Handle_Negative_Background);--_ui5-v2-14-0_switch_handle_semantic_hover_accept_background_color: var(--sapButton_Handle_Positive_Hover_Background);--_ui5-v2-14-0_switch_handle_semantic_hover_reject_background_color: var(--sapButton_Handle_Negative_Hover_Background);--_ui5-v2-14-0_switch_handle_semantic_accept_border_color: var(--sapButton_Handle_Positive_BorderColor);--_ui5-v2-14-0_switch_handle_semantic_reject_border_color: var(--sapButton_Handle_Negative_BorderColor);--_ui5-v2-14-0_switch_handle_semantic_hover_accept_border_color: var(--sapButton_Handle_Positive_BorderColor);--_ui5-v2-14-0_switch_handle_semantic_hover_reject_border_color: var(--sapButton_Handle_Negative_BorderColor);--_ui5-v2-14-0_switch_handle_on_hover_box_shadow: 0 0 0 .125rem var(--sapButton_Handle_Selected_Hover_BorderColor);--_ui5-v2-14-0_switch_handle_off_hover_box_shadow: 0 0 0 .125rem var(--sapButton_Handle_Hover_BorderColor);--_ui5-v2-14-0_switch_handle_semantic_on_hover_box_shadow: 0 0 0 .125rem var(--sapButton_Handle_Positive_Hover_BorderColor);--_ui5-v2-14-0_switch_handle_semantic_off_hover_box_shadow: 0 0 0 .125rem var(--sapButton_Handle_Negative_Hover_BorderColor);--_ui5-v2-14-0_switch_handle_left: .0625rem;--_ui5-v2-14-0_switch_text_font_family: var(--sapContent_IconFontFamily);--_ui5-v2-14-0_switch_text_font_size: var(--sapFontLargeSize);--_ui5-v2-14-0_switch_text_width: 1.25rem;--_ui5-v2-14-0_switch_text_with_label_font_family: "72-Condensed-Bold" , "72" , "72full" , Arial, Helvetica, sans-serif;--_ui5-v2-14-0_switch_text_with_label_font_size: var(--sapFontSmallSize);--_ui5-v2-14-0_switch_text_with_label_width: 1.75rem;--_ui5-v2-14-0_switch_text_inactive_left: .1875rem;--_ui5-v2-14-0_switch_text_inactive_left_alternate: .0625rem;--_ui5-v2-14-0_switch_text_inactive_right: auto;--_ui5-v2-14-0_switch_text_inactive_right_alternate: 0;--_ui5-v2-14-0_switch_text_active_left: .1875rem;--_ui5-v2-14-0_switch_text_active_left_alternate: .0625rem;--_ui5-v2-14-0_switch_text_active_color: var(--sapButton_Handle_Selected_TextColor);--_ui5-v2-14-0_switch_text_inactive_color: var(--sapButton_Handle_TextColor);--_ui5-v2-14-0_switch_text_semantic_accept_color: var(--sapButton_Handle_Positive_TextColor);--_ui5-v2-14-0_switch_text_semantic_reject_color: var(--sapButton_Handle_Negative_TextColor);--_ui5-v2-14-0_switch_text_overflow: hidden;--_ui5-v2-14-0_switch_text_z_index: 1;--_ui5-v2-14-0_switch_text_hidden: hidden;--_ui5-v2-14-0_switch_text_min_width: none;--_ui5-v2-14-0_switch_icon_width: 1rem;--_ui5-v2-14-0_switch_icon_height: 1rem;--_ui5-v2-14-0_select_label_color: var(--sapField_TextColor);--_ui5-v2-14-0_select_icon_width: 2.25rem;--_ui5-v2-14-0_select_hover_icon_left_border: none;--_ui5-v2-14-0_select_icon_wrapper_height: calc(100% - .0625rem) ;--_ui5-v2-14-0_select_icon_wrapper_state_height: calc(100% - .125rem) ;--_ui5-v2-14-0_split_button_host_transparent_hover_background: transparent;--_ui5-v2-14-0_split_button_transparent_disabled_background: transparent;--_ui5-v2-14-0_split_button_host_default_box_shadow: inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_BorderColor);--_ui5-v2-14-0_split_button_host_attention_box_shadow: inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_Attention_BorderColor);--_ui5-v2-14-0_split_button_host_emphasized_box_shadow: inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_Emphasized_BorderColor);--_ui5-v2-14-0_split_button_host_positive_box_shadow: inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_Accept_BorderColor);--_ui5-v2-14-0_split_button_host_negative_box_shadow: inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_Reject_BorderColor);--_ui5-v2-14-0_split_button_host_transparent_box_shadow: inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_Lite_BorderColor);--_ui5-v2-14-0_split_text_button_border_color: transparent;--_ui5-v2-14-0_split_text_button_background_color: transparent;--_ui5-v2-14-0_split_text_button_emphasized_border: var(--sapButton_BorderWidth) solid var(--sapButton_Emphasized_BorderColor);--_ui5-v2-14-0_split_text_button_emphasized_border_width: .0625rem;--_ui5-v2-14-0_split_text_button_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v2-14-0_split_text_button_positive_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_Accept_BorderColor);--_ui5-v2-14-0_split_text_button_negative_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_Reject_BorderColor);--_ui5-v2-14-0_split_text_button_attention_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_Attention_BorderColor);--_ui5-v2-14-0_split_text_button_transparent_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v2-14-0_split_arrow_button_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v2-14-0_split_arrow_button_emphasized_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_Emphasized_BorderColor);--_ui5-v2-14-0_split_arrow_button_positive_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_Accept_BorderColor);--_ui5-v2-14-0_split_arrow_button_negative_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_Reject_BorderColor);--_ui5-v2-14-0_split_arrow_button_attention_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_Attention_BorderColor);--_ui5-v2-14-0_split_arrow_button_transparent_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v2-14-0_split_button_focused_border: .125rem solid var(--sapContent_FocusColor);--_ui5-v2-14-0_split_button_focused_border_radius: .375rem;--_ui5-v2-14-0_split_button_middle_separator_left: -.0625rem;--_ui5-v2-14-0_split_button_middle_separator_hover_display: none;--_ui5-v2-14-0_split_button_text_button_right_border_width: .0625rem;--_ui5-v2-14-0_split_button_transparent_hover_background: var(--sapButton_Lite_Hover_Background);--_ui5-v2-14-0_split_button_transparent_hover_color: var(--sapButton_TextColor);--_ui5-v2-14-0_split_button_host_transparent_hover_box_shadow: inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_BorderColor);--_ui5-v2-14-0_split_button_inner_focused_border_radius_inner: .375rem;--_ui5-v2-14-0_split_button_emphasized_separator_color: transparent;--_ui5-v2-14-0_split_button_positive_separator_color: transparent;--_ui5-v2-14-0_split_button_negative_separator_color: transparent;--_ui5-v2-14-0_split_button_attention_separator_color: transparent;--_ui5-v2-14-0_split_button_attention_separator_color_default: var(--sapButton_Attention_TextColor);--_ui5-v2-14-0_split_text_button_hover_border_right: var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v2-14-0_split_text_button_positive_hover_border_right: var(--sapButton_BorderWidth) solid var(--sapButton_Accept_BorderColor);--_ui5-v2-14-0_split_text_button_negative_hover_border_right: var(--sapButton_BorderWidth) solid var(--sapButton_Reject_BorderColor);--_ui5-v2-14-0_split_text_button_attention_hover_border_right: var(--sapButton_BorderWidth) solid var(--sapButton_Attention_BorderColor);--_ui5-v2-14-0_split_text_button_transparent_hover_border_right: var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v2-14-0_split_button_middle_separator_hover_display_emphasized: none;--_ui5-v2-14-0_tc_header_height: var(--_ui5-v2-14-0_tc_item_height);--_ui5-v2-14-0_tc_header_height_text_only: var(--_ui5-v2-14-0_tc_item_text_only_height);--_ui5-v2-14-0_tc_header_height_text_with_additional_text: var(--_ui5-v2-14-0_tc_item_text_only_with_additional_text_height);--_ui5-v2-14-0_tc_header_box_shadow: var(--sapContent_HeaderShadow);--_ui5-v2-14-0_tc_header_background: var(--sapObjectHeader_Background);--_ui5-v2-14-0_tc_header_background_translucent: var(--sapObjectHeader_Background);--_ui5-v2-14-0_tc_content_background: var(--sapBackgroundColor);--_ui5-v2-14-0_tc_content_background_translucent: var(--sapGroup_ContentBackground);--_ui5-v2-14-0_tc_headeritem_padding: 1rem;--_ui5-v2-14-0_tc_headerItem_additional_text_color: var(--sapContent_LabelColor);--_ui5-v2-14-0_tc_headerItem_text_selected_color: var(--sapTab_Selected_TextColor);--_ui5-v2-14-0_tc_headerItem_text_selected_hover_color: var(--sapSelectedColor);--_ui5-v2-14-0_tc_headeritem_text_font_weight: normal;--_ui5-v2-14-0_tc_headerItem_additional_text_font_weight: normal;--_ui5-v2-14-0_tc_headerItem_neutral_border_color: var(--sapTab_Neutral_ForegroundColor);--_ui5-v2-14-0_tc_headerItem_transition: none;--_ui5-v2-14-0_tc_headerItemContent_border_radius: .125rem .125rem 0 0;--_ui5-v2-14-0_tc_headerItemContent_border_bg: transparent;--_ui5-v2-14-0_tc_headerItem_neutral_border_bg: transparent;--_ui5-v2-14-0_tc_headerItem_positive_border_bg: transparent;--_ui5-v2-14-0_tc_headerItem_negative_border_bg: transparent;--_ui5-v2-14-0_tc_headerItem_critical_border_bg: transparent;--_ui5-v2-14-0_tc_headerItemContent_border_height: 0;--_ui5-v2-14-0_tc_headerItem_text_focus_border_offset_left: 0px;--_ui5-v2-14-0_tc_headerItem_text_focus_border_offset_right: 0px;--_ui5-v2-14-0_tc_headerItem_text_focus_border_offset_top: 0px;--_ui5-v2-14-0_tc_headerItem_text_focus_border_offset_bottom: 0px;--_ui5-v2-14-0_tc_headerItem_mixed_mode_focus_border_offset_left: .75rem;--_ui5-v2-14-0_tc_headerItem_mixed_mode_focus_border_offset_right: .625rem;--_ui5-v2-14-0_tc_headerItem_mixed_mode_focus_border_offset_top: .75rem;--_ui5-v2-14-0_tc_headerItem_mixed_mode_focus_border_offset_bottom: .75rem;--_ui5-v2-14-0_tc_headerItemContent_default_focus_border: none;--_ui5-v2-14-0_tc_headerItemContent_focus_border_radius: 0;--_ui5-v2-14-0_tc_headerItemSemanticIcon_display: none;--_ui5-v2-14-0_tc_headerItemSemanticIcon_size: .75rem;--_ui5-v2-14-0_tc_mixedMode_itemText_font_family: var(--sapFontFamily);--_ui5-v2-14-0_tc_mixedMode_itemText_font_size: var(--sapFontSmallSize);--_ui5-v2-14-0_tc_mixedMode_itemText_font_weight: normal;--_ui5-v2-14-0_tc_overflowItem_positive_color: var(--sapPositiveColor);--_ui5-v2-14-0_tc_overflowItem_negative_color: var(--sapNegativeColor);--_ui5-v2-14-0_tc_overflowItem_critical_color: var(--sapCriticalColor);--_ui5-v2-14-0_tc_overflowItem_focus_offset: .125rem;--_ui5-v2-14-0_tc_overflowItem_indent: .5rem;--_ui5-v2-14-0_tc_overflowItem_extra_indent: 0rem;--_ui5-v2-14-0_tc_headerItemIcon_semantic_selected_color: var(--sapGroup_ContentBackground);--_ui5-v2-14-0_tc_header_border_bottom: .0625rem solid var(--sapObjectHeader_Background);--_ui5-v2-14-0_tc_headerItem_color: var(--sapTab_TextColor);--_ui5-v2-14-0_tc_overflowItem_default_color: var(--sapTab_TextColor);--_ui5-v2-14-0_tc_overflowItem_current_color: CurrentColor;--_ui5-v2-14-0_tc_content_border_bottom: .0625rem solid var(--sapObjectHeader_BorderColor);--_ui5-v2-14-0_tc_headerItem_expand_button_margin_inline_start: 0rem;--_ui5-v2-14-0_tc_headerItem_single_click_expand_button_margin_inline_start: .25rem;--_ui5-v2-14-0_tc_headerItem_expand_button_border_radius: .25rem;--_ui5-v2-14-0_tc_headerItem_expand_button_separator_display: inline-block;--_ui5-v2-14-0_tc_headerItem_focus_border: .125rem solid var(--sapContent_FocusColor);--_ui5-v2-14-0_tc_headerItem_focus_border_offset: -5px;--_ui5-v2-14-0_tc_headerItemIcon_focus_border_radius: 50%;--_ui5-v2-14-0_tc_headerItem_focus_border_radius: .375rem;--_ui5-v2-14-0_tc_headerItem_text_hover_color: var(--sapTab_Selected_TextColor);--_ui5-v2-14-0_tc_headerItemIcon_border: .125rem solid var(--sapTab_ForegroundColor);--_ui5-v2-14-0_tc_mixedMode_itemText_color: var(--sapTextColor);--_ui5-v2-14-0_tc_overflow_text_color: var(--sapTextColor);--_ui5-v2-14-0_text_max_lines: initial;--_ui5-v2-14-0_textarea_state_border_width: .125rem;--_ui5-v2-14-0_textarea_information_border_width: .125rem;--_ui5-v2-14-0_textarea_placeholder_font_style: italic;--_ui5-v2-14-0_textarea_value_state_error_warning_placeholder_font_weight: normal;--_ui5-v2-14-0_textarea_error_placeholder_font_style: italic;--_ui5-v2-14-0_textarea_error_placeholder_color: var(--sapField_PlaceholderTextColor);--_ui5-v2-14-0_textarea_error_hover_background_color: var(--sapField_Hover_Background);--_ui5-v2-14-0_textarea_disabled_opacity: .4;--_ui5-v2-14-0_textarea_focus_pseudo_element_content: "";--_ui5-v2-14-0_textarea_min_height: 2.25rem;--_ui5-v2-14-0_textarea_padding_right_and_left_readonly: .5625rem;--_ui5-v2-14-0_textarea_padding_top_readonly: .4375rem;--_ui5-v2-14-0_textarea_hover_border: none;--_ui5-v2-14-0_textarea_focus_border_radius: .25rem;--_ui5-v2-14-0_textarea_error_warning_border_style: none;--_ui5-v2-14-0_textarea_line_height: 1.5;--_ui5-v2-14-0_textarea_focused_value_state_error_background: var(--sapField_Hover_Background);--_ui5-v2-14-0_textarea_focused_value_state_warning_background: var(--sapField_Hover_Background);--_ui5-v2-14-0_textarea_focused_value_state_success_background: var(--sapField_Hover_Background);--_ui5-v2-14-0_textarea_focused_value_state_information_background: var(--sapField_Hover_Background);--_ui5-v2-14-0_textarea_focused_value_state_error_focus_outline_color: var(--sapField_InvalidColor);--_ui5-v2-14-0_textarea_focused_value_state_warning_focus_outline_color: var(--sapField_WarningColor);--_ui5-v2-14-0_textarea_focused_value_state_success_focus_outline_color: var(--sapField_SuccessColor);--_ui5-v2-14-0_textarea_focus_offset: 0;--_ui5-v2-14-0_textarea_readonly_focus_offset: 1px;--_ui5-v2-14-0_textarea_focus_outline_color: var(--sapField_Active_BorderColor);--_ui5-v2-14-0_textarea_value_state_focus_offset: 1px;--_ui5-v2-14-0_textarea_wrapper_padding: .0625rem;--_ui5-v2-14-0_textarea_success_wrapper_padding: .0625rem;--_ui5-v2-14-0_textarea_warning_error_wrapper_padding: .0625rem .0625rem .125rem .0625rem;--_ui5-v2-14-0_textarea_information_wrapper_padding: .0625rem .0625rem .125rem .0625rem;--_ui5-v2-14-0_textarea_padding_bottom_readonly: .375rem;--_ui5-v2-14-0_textarea_padding_top_error_warning: .5rem;--_ui5-v2-14-0_textarea_padding_bottom_error_warning: .4375rem;--_ui5-v2-14-0_textarea_padding_top_information: .5rem;--_ui5-v2-14-0_textarea_padding_bottom_information: .4375rem;--_ui5-v2-14-0_textarea_padding_right_and_left: .625rem;--_ui5-v2-14-0_textarea_padding_right_and_left_error_warning: .625rem;--_ui5-v2-14-0_textarea_padding_right_and_left_information: .625rem;--_ui5-v2-14-0_textarea_readonly_border_style: dashed;--_ui5-v2-14-0-time_picker_border_radius: .25rem;--_ui5-v2-14-0_toast_vertical_offset: 3rem;--_ui5-v2-14-0_toast_horizontal_offset: 2rem;--_ui5-v2-14-0_toast_background: var(--sapIndicationColor_9_Background);--_ui5-v2-14-0_toast_shadow: var(--sapContent_Lite_Shadow);--_ui5-v2-14-0_toast_offset_width: -.1875rem;--_ui5-v2-14-0_toggle_button_emphasized_text_shadow: none;--_ui5-v2-14-0_yearpicker_item_margin: .0625rem;--_ui5-v2-14-0_yearpicker_item_border: .0625rem solid var(--sapButton_Lite_BorderColor);--_ui5-v2-14-0_yearpicker_item_hover_border: .0625rem solid var(--sapButton_Lite_Hover_BorderColor);--_ui5-v2-14-0_yearpicker_item_selected_border: .0625rem solid var(--sapButton_Selected_BorderColor);--_ui5-v2-14-0_yearpicker_item_selected_hover_border: .0625rem solid var(--sapButton_Selected_Hover_BorderColor);--_ui5-v2-14-0_yearpicker_item_border_radius: .5rem;--_ui5-v2-14-0_calendar_header_middle_button_width: 6.25rem;--_ui5-v2-14-0_calendar_header_middle_button_flex: 1 1 auto;--_ui5-v2-14-0_calendar_header_middle_button_focus_after_display: block;--_ui5-v2-14-0_calendar_header_middle_button_focus_after_width: calc(100% - .375rem) ;--_ui5-v2-14-0_calendar_header_middle_button_focus_after_height: calc(100% - .375rem) ;--_ui5-v2-14-0_calendar_header_middle_button_focus_after_top_offset: .125rem;--_ui5-v2-14-0_calendar_header_middle_button_focus_after_left_offset: .125rem;--_ui5-v2-14-0_calendar_header_arrow_button_border: none;--_ui5-v2-14-0_calendar_header_arrow_button_border_radius: .5rem;--_ui5-v2-14-0_calendar_header_arrow_button_box_shadow: 0 0 .125rem 0 rgb(85 107 130 / 72%);--_ui5-v2-14-0_calendar_header_middle_button_focus_border_radius: .5rem;--_ui5-v2-14-0_calendar_header_middle_button_focus_border: none;--_ui5-v2-14-0_calendar_header_middle_button_focus_after_border: none;--_ui5-v2-14-0_calendar_header_middle_button_focus_background: transparent;--_ui5-v2-14-0_calendar_header_middle_button_focus_outline: .125rem solid var(--sapSelectedColor);--_ui5-v2-14-0_calendar_header_middle_button_focus_active_outline: .0625rem solid var(--sapSelectedColor);--_ui5-v2-14-0_calendar_header_middle_button_focus_active_background: transparent;--_ui5-v2-14-0_token_background: var(--sapButton_TokenBackground);--_ui5-v2-14-0_token_readonly_background: var(--sapButton_TokenBackground);--_ui5-v2-14-0_token_readonly_color: var(--sapContent_LabelColor);--_ui5-v2-14-0_token_right_margin: .3125rem;--_ui5-v2-14-0_token_left_padding: .3125rem;--_ui5-v2-14-0_token_focused_selected_border: 1px solid var(--sapButton_Selected_BorderColor);--_ui5-v2-14-0_token_focus_offset: -.25rem;--_ui5-v2-14-0_token_focus_outline_width: .0625rem;--_ui5-v2-14-0_token_selected_focus_outline: none;--_ui5-v2-14-0_token_focus_outline: none;--_ui5-v2-14-0_token_outline_offset: .125rem;--ui5-v2-14-0_token_focus_pseudo_element_content: "";--_ui5-v2-14-0_token_border_radius: .375rem;--_ui5-v2-14-0_token_focus_outline_border_radius: .5rem;--_ui5-v2-14-0_token_text_color: var(--sapTextColor);--_ui5-v2-14-0_token_selected_text_font_family: var(--sapFontSemiboldDuplexFamily);--_ui5-v2-14-0_token_selected_internal_border_bottom: .125rem solid var(--sapButton_Selected_BorderColor);--_ui5-v2-14-0_token_selected_internal_border_bottom_radius: .1875rem;--_ui5-v2-14-0_token_readonly_padding: .25rem .3125rem;--_ui5-v2-14-0_tokenizer_gap: .625rem .25rem;--_ui5-v2-14-0_tokenizer-popover_offset: .3125rem;--_ui5-v2-14-0_tokenizer_n_more_text_color: var(--sapLinkColor);--_ui5-v2-14-0_slider_progress_container_dot_background: var(--sapField_BorderColor);--_ui5-v2-14-0_slider_progress_border: none;--_ui5-v2-14-0_slider_padding: 1.406rem 1.0625rem;--_ui5-v2-14-0_slider_inner_height: .25rem;--_ui5-v2-14-0_slider_outer_height: 1.6875rem;--_ui5-v2-14-0_slider_progress_border_radius: .25rem;--_ui5-v2-14-0_slider_tickmark_bg: var(--sapField_BorderColor);--_ui5-v2-14-0_slider_handle_outline_offset: .075rem;--_ui5-v2-14-0_slider_progress_outline: .0625rem dotted var(--sapContent_FocusColor);--_ui5-v2-14-0_slider_progress_outline_offset: -.8125rem;--_ui5-v2-14-0_slider_disabled_opacity: .4;--_ui5-v2-14-0_slider_tooltip_border_color: var(--sapField_BorderColor);--_ui5-v2-14-0_range_slider_handle_background_focus: transparent;--_ui5-v2-14-0_slider_progress_box_sizing: content-box;--_ui5-v2-14-0_range_slider_focus_outline_width: 100%;--_ui5-v2-14-0_slider_progress_outline_offset_left: 0;--_ui5-v2-14-0_range_slider_focus_outline_radius: 0;--_ui5-v2-14-0_slider_progress_container_top: 0;--_ui5-v2-14-0_slider_progress_height: 100%;--_ui5-v2-14-0_slider_active_progress_border: none;--_ui5-v2-14-0_slider_active_progress_left: 0;--_ui5-v2-14-0_slider_active_progress_top: 0;--_ui5-v2-14-0_slider_no_tickmarks_progress_container_top: var(--_ui5-v2-14-0_slider_progress_container_top);--_ui5-v2-14-0_slider_no_tickmarks_progress_height: var(--_ui5-v2-14-0_slider_progress_height);--_ui5-v2-14-0_slider_no_tickmarks_active_progress_border: var(--_ui5-v2-14-0_slider_active_progress_border);--_ui5-v2-14-0_slider_no_tickmarks_active_progress_left: var(--_ui5-v2-14-0_slider_active_progress_left);--_ui5-v2-14-0_slider_no_tickmarks_active_progress_top: var(--_ui5-v2-14-0_slider_active_progress_top);--_ui5-v2-14-0_slider_handle_focus_visibility: none;--_ui5-v2-14-0_slider_handle_icon_size: 1rem;--_ui5-v2-14-0_slider_progress_container_background: var(--sapSlider_Background);--_ui5-v2-14-0_slider_progress_container_dot_display: block;--_ui5-v2-14-0_slider_inner_min_width: 4rem;--_ui5-v2-14-0_slider_progress_background: var(--sapSlider_Selected_Background);--_ui5-v2-14-0_slider_progress_before_background: var(--sapSlider_Selected_Background);--_ui5-v2-14-0_slider_progress_after_background: var(--sapContent_MeasureIndicatorColor);--_ui5-v2-14-0_slider_handle_background: var(--sapSlider_HandleBackground);--_ui5-v2-14-0_slider_handle_icon_display: inline-block;--_ui5-v2-14-0_slider_handle_border: .0625rem solid var(--sapSlider_HandleBorderColor);--_ui5-v2-14-0_slider_handle_border_radius: .5rem;--_ui5-v2-14-0_slider_handle_height: 1.5rem;--_ui5-v2-14-0_slider_handle_width: 2rem;--_ui5-v2-14-0_slider_handle_top: -.625rem;--_ui5-v2-14-0_slider_handle_font_family: "SAP-icons";--_ui5-v2-14-0_slider_handle_hover_border: .0625rem solid var(--sapSlider_Hover_HandleBorderColor);--_ui5-v2-14-0_slider_handle_focus_border: .125rem solid var(--sapContent_FocusColor);--_ui5-v2-14-0_slider_handle_background_focus: var(--sapSlider_Active_RangeHandleBackground);--_ui5-v2-14-0_slider_handle_outline: none;--_ui5-v2-14-0_slider_handle_hover_background: var(--sapSlider_Hover_HandleBackground);--_ui5-v2-14-0_slider_tooltip_background: var(--sapField_Focus_Background);--_ui5-v2-14-0_slider_tooltip_border: none;--_ui5-v2-14-0_slider_tooltip_border_radius: .5rem;--_ui5-v2-14-0_slider_tooltip_box_shadow: var(--sapContent_Shadow1);--_ui5-v2-14-0_range_slider_legacy_progress_focus_display: none;--_ui5-v2-14-0_range_slider_progress_focus_display: block;--_ui5-v2-14-0_slider_tickmark_in_range_bg: var(--sapSlider_Selected_BorderColor);--_ui5-v2-14-0_slider_label_fontsize: var(--sapFontSmallSize);--_ui5-v2-14-0_slider_label_color: var(--sapContent_LabelColor);--_ui5-v2-14-0_slider_tooltip_min_width: 2rem;--_ui5-v2-14-0_slider_tooltip_padding: .25rem;--_ui5-v2-14-0_slider_tooltip_fontsize: var(--sapFontSmallSize);--_ui5-v2-14-0_slider_tooltip_color: var(--sapContent_LabelColor);--_ui5-v2-14-0_slider_tooltip_height: 1.375rem;--_ui5-v2-14-0_slider_handle_focus_width: 1px;--_ui5-v2-14-0_slider_start_end_point_size: .5rem;--_ui5-v2-14-0_slider_start_end_point_left: -.75rem;--_ui5-v2-14-0_slider_start_end_point_top: -.125rem;--_ui5-v2-14-0_slider_handle_focused_tooltip_distance: calc(var(--_ui5-v2-14-0_slider_tooltip_bottom) - var(--_ui5-v2-14-0_slider_handle_focus_width));--_ui5-v2-14-0_slider_tooltip_border_box: border-box;--_ui5-v2-14-0_range_slider_handle_active_background: var(--sapSlider_Active_RangeHandleBackground);--_ui5-v2-14-0_range_slider_active_handle_icon_display: none;--_ui5-v2-14-0_range_slider_progress_focus_top: -15px;--_ui5-v2-14-0_range_slider_progress_focus_left: calc(-1 * (var(--_ui5-v2-14-0_slider_handle_width) / 2) - 5px);--_ui5-v2-14-0_range_slider_progress_focus_padding: 0 1rem 0 1rem;--_ui5-v2-14-0_range_slider_progress_focus_width: calc(100% + var(--_ui5-v2-14-0_slider_handle_width) + 10px);--_ui5-v2-14-0_range_slider_progress_focus_height: calc(var(--_ui5-v2-14-0_slider_handle_height) + 10px);--_ui5-v2-14-0_range_slider_root_hover_handle_icon_display: inline-block;--_ui5-v2-14-0_range_slider_root_hover_handle_bg: var(--_ui5-v2-14-0_slider_handle_hover_background);--_ui5-v2-14-0_range_slider_root_active_handle_icon_display: none;--_ui5-v2-14-0_slider_tickmark_height: .5rem;--_ui5-v2-14-0_slider_tickmark_top: -2px;--_ui5-v2-14-0_slider_handle_box_sizing: border-box;--_ui5-v2-14-0_range_slider_handle_background: var(--sapSlider_RangeHandleBackground);--_ui5-v2-14-0_slider_tooltip_bottom: 2rem;--_ui5-v2-14-0_value_state_message_border: none;--_ui5-v2-14-0_value_state_header_border: none;--_ui5-v2-14-0_input_value_state_icon_offset: .5rem;--_ui5-v2-14-0_value_state_header_box_shadow_error: inset 0 -.0625rem var(--sapField_InvalidColor);--_ui5-v2-14-0_value_state_header_box_shadow_information: inset 0 -.0625rem var(--sapField_InformationColor);--_ui5-v2-14-0_value_state_header_box_shadow_success: inset 0 -.0625rem var(--sapField_SuccessColor);--_ui5-v2-14-0_value_state_header_box_shadow_warning: inset 0 -.0625rem var(--sapField_WarningColor);--_ui5-v2-14-0_value_state_message_popover_header_min_height: 2rem;--_ui5-v2-14-0_value_state_message_popover_header_min_width: 6rem;--_ui5-v2-14-0_value_state_message_popover_header_max_width: 22rem;--_ui5-v2-14-0_value_state_message_popover_header_width: auto;--_ui5-v2-14-0_value_state_message_icon_offset_phone: 1rem;--_ui5-v2-14-0_value_state_header_border_bottom: none;--_ui5-v2-14-0_input_value_state_icon_display: inline-block;--_ui5-v2-14-0_value_state_message_padding: .5rem .5rem .5rem 1.875rem;--_ui5-v2-14-0_value_state_header_padding: .5rem .5rem .5rem 1.875rem;--_ui5-v2-14-0_value_state_message_popover_box_shadow: var(--sapContent_Shadow1);--_ui5-v2-14-0_value_state_message_icon_width: 1rem;--_ui5-v2-14-0_value_state_message_icon_height: 1rem;--_ui5-v2-14-0_value_state_header_offset: -.25rem;--_ui5-v2-14-0_value_state_message_popover_border_radius: var(--sapPopover_BorderCornerRadius);--_ui5-v2-14-0_value_state_message_padding_phone: .5rem .5rem .5rem 2.375rem;--_ui5-v2-14-0_value_state_message_line_height: 1.125rem;--_ui5-v2-14-0-toolbar-padding-left: .5rem;--_ui5-v2-14-0-toolbar-padding-right: .5rem;--_ui5-v2-14-0-toolbar-item-margin-left: 0;--_ui5-v2-14-0-toolbar-item-margin-right: .25rem;--_ui5-v2-14-0_step_input_min_width: 7.25rem;--_ui5-v2-14-0_step_input_padding: 2.5rem;--_ui5-v2-14-0_step_input_input_error_background_color: inherit;--_ui5-v2-14-0-step_input_button_state_hover_background_color: var(--sapField_Hover_Background);--_ui5-v2-14-0_step_input_border_style: none;--_ui5-v2-14-0_step_input_border_style_hover: none;--_ui5-v2-14-0_step_input_button_background_color: transparent;--_ui5-v2-14-0_step_input_input_border: none;--_ui5-v2-14-0_step_input_input_margin_top: 0;--_ui5-v2-14-0_step_input_button_display: inline-flex;--_ui5-v2-14-0_step_input_button_left: 0;--_ui5-v2-14-0_step_input_button_right: 0;--_ui5-v2-14-0_step_input_input_border_focused_after: .125rem solid #0070f2;--_ui5-v2-14-0_step_input_input_border_top_bottom_focused_after: 0;--_ui5-v2-14-0_step_input_input_border_radius_focused_after: .25rem;--_ui5-v2-14-0_step_input_input_information_border_color_focused_after: var(--sapField_InformationColor);--_ui5-v2-14-0_step_input_input_warning_border_color_focused_after: var(--sapField_WarningColor);--_ui5-v2-14-0_step_input_input_success_border_color_focused_after: var(--sapField_SuccessColor);--_ui5-v2-14-0_step_input_input_error_border_color_focused_after: var(--sapField_InvalidColor);--_ui5-v2-14-0_step_input_disabled_button_background: none;--_ui5-v2-14-0_step_input_border_color_hover: none;--_ui5-v2-14-0_step_input_border_hover: none;--_ui5-v2-14-0_input_input_background_color: transparent;--_ui5-v2-14-0_load_more_padding: 0;--_ui5-v2-14-0_load_more_border: 1px top solid transparent;--_ui5-v2-14-0_load_more_border_radius: none;--_ui5-v2-14-0_load_more_outline_width: var(--sapContent_FocusWidth);--_ui5-v2-14-0_load_more_border-bottom: var(--sapList_BorderWidth) solid var(--sapList_BorderColor);--_ui5-v2-14-0_calendar_height: 24.5rem;--_ui5-v2-14-0_calendar_width: 20rem;--_ui5-v2-14-0_calendar_left_right_padding: .5rem;--_ui5-v2-14-0_calendar_top_bottom_padding: 1rem;--_ui5-v2-14-0_calendar_header_height: 3rem;--_ui5-v2-14-0_calendar_header_arrow_button_width: 2.5rem;--_ui5-v2-14-0_calendar_header_padding: .25rem 0;--_ui5-v2-14-0_checkbox_root_side_padding: .6875rem;--_ui5-v2-14-0_checkbox_icon_size: 1rem;--_ui5-v2-14-0_checkbox_partially_icon_size: .75rem;--_ui5-v2-14-0_custom_list_item_rb_min_width: 2.75rem;--_ui5-v2-14-0_day_picker_item_width: 2.25rem;--_ui5-v2-14-0_day_picker_item_height: 2.875rem;--_ui5-v2-14-0_day_picker_empty_height: 3rem;--_ui5-v2-14-0_day_picker_item_justify_content: space-between;--_ui5-v2-14-0_daypicker_item_now_selected_two_calendar_focus_special_day_top: 2rem;--_ui5-v2-14-0_daypicker_item_now_selected_two_calendar_focus_special_day_right: 1.4375rem;--_ui5-v2-14-0_dp_two_calendar_item_secondary_text_height: 1rem;--_ui5-v2-14-0_dp_two_calendar_item_text_padding_top: .4375rem;--_ui5-v2-14-0_daypicker_item_now_selected_two_calendar_focus_secondary_text_padding_block: 0 .5rem;--_ui5-v2-14-0-calendar-legend-item-root-focus-offset: -.125rem;--_ui5-v2-14-0-calendar-legend-item-box-margin: .25rem;--_ui5-v2-14-0-calendar-legend-item-box-inner-margin: .5rem;--_ui5-v2-14-0_color_picker_slider_progress_container_height: 1.625rem;--_ui5-v2-14-0_color_picker_slider_container_margin_top: -.5rem;--_ui5-v2-14-0_color_picker_slider_handle_height: 2rem;--_ui5-v2-14-0_color_picker_slider_handle_width: 1.0625rem;--_ui5-v2-14-0_color_picker_slider_handle_after_height: 1.75rem;--_ui5-v2-14-0_color_picker_slider_handle_focus_height: 2.125rem;--_ui5-v2-14-0_color_picker_colors_wrapper_height: 2.25rem;--_ui5-v2-14-0_color_picker_sliders_height: 3rem;--_ui5-v2-14-0_color_picker_main_color_margin_bottom: 1rem;--_ui5-v2-14-0_color_picker_slider_spacing: .9375rem;--_ui5-v2-14-0_color_channel_toggle_button_width: 1.625rem;--_ui5-v2-14-0_color_channel_toggle_button_margin-top: -.75rem;--_ui5-v2-14-0_color_channel_hex_input_width: 4.8125rem;--_ui5-v2-14-0-color_channel_margin_top: .25rem;--_ui5-v2-14-0_color-palette-swatch-container-padding: .3125rem .6875rem;--_ui5-v2-14-0_datetime_picker_width: 40.0625rem;--_ui5-v2-14-0_datetime_picker_height: 25rem;--_ui5-v2-14-0_datetime_timeview_width: 17rem;--_ui5-v2-14-0_datetime_timeview_phonemode_width: 19.5rem;--_ui5-v2-14-0_datetime_timeview_phonemode_clocks_width: 24.5rem;--_ui5-v2-14-0_datetime_dateview_phonemode_margin_bottom: 0;--_ui5-v2-14-0_dialog_content_min_height: 2.75rem;--_ui5-v2-14-0_dialog_footer_height: 2.75rem;--_ui5-v2-14-0_input_inner_padding: 0 .625rem;--_ui5-v2-14-0_input_inner_padding_with_icon: 0 .25rem 0 .625rem;--_ui5-v2-14-0_input_inner_space_to_tokenizer: .125rem;--_ui5-v2-14-0_input_inner_space_to_n_more_text: .1875rem;--_ui5-v2-14-0_list_no_data_height: 3rem;--_ui5-v2-14-0_list_item_cb_margin_right: 0;--_ui5-v2-14-0_list_item_title_size: var(--sapFontLargeSize);--_ui5-v2-14-0_list_no_data_font_size: var(--sapFontLargeSize);--_ui5-v2-14-0_list_item_img_size: 3rem;--_ui5-v2-14-0_list_item_img_top_margin: .5rem;--_ui5-v2-14-0_list_item_img_bottom_margin: .5rem;--_ui5-v2-14-0_list_item_img_hn_margin: .75rem;--_ui5-v2-14-0_list_item_dropdown_base_height: 2.5rem;--_ui5-v2-14-0_list_item_base_height: var(--sapElement_LineHeight);--_ui5-v2-14-0_list_item_base_padding: 0 1rem;--_ui5-v2-14-0_list_item_icon_size: 1.125rem;--_ui5-v2-14-0_list_item_icon_padding-inline-end: .75rem;--_ui5-v2-14-0_list_item_selection_btn_margin_top: calc(-1 * var(--_ui5-v2-14-0_checkbox_wrapper_padding));--_ui5-v2-14-0_list_item_content_vertical_offset: calc((var(--_ui5-v2-14-0_list_item_base_height) - var(--_ui5-v2-14-0_list_item_title_size)) / 2);--_ui5-v2-14-0_group_header_list_item_height: 2.75rem;--_ui5-v2-14-0_month_picker_item_height: 3rem;--_ui5-v2-14-0_list_buttons_left_space: .125rem;--_ui5-v2-14-0_form_item_min_height: 2.813rem;--_ui5-v2-14-0_form_item_padding: .65rem;--_ui5-v2-14-0-form-group-heading-height: 2.75rem;--_ui5-v2-14-0_popup_default_header_height: 2.75rem;--_ui5-v2-14-0_year_picker_item_height: 3rem;--_ui5-v2-14-0_tokenizer_padding: .25rem;--_ui5-v2-14-0_token_height: 1.625rem;--_ui5-v2-14-0_token_icon_size: .75rem;--_ui5-v2-14-0_token_icon_padding: .25rem .5rem;--_ui5-v2-14-0_tl_bubble_padding: 1rem;--_ui5-v2-14-0_tl_padding: 1rem 1rem 1rem .5rem;--_ui5-v2-14-0_tl_li_margin_bottom: 1.625rem;--_ui5-v2-14-0_tc_item_text: 3rem;--_ui5-v2-14-0_tc_item_height: 4.75rem;--_ui5-v2-14-0_tc_item_text_only_height: 2.75rem;--_ui5-v2-14-0_tc_item_text_only_with_additional_text_height: 3.75rem;--_ui5-v2-14-0_tc_item_text_line_height: 1.325rem;--_ui5-v2-14-0_tc_item_icon_circle_size: 2.75rem;--_ui5-v2-14-0_tc_item_icon_size: 1.25rem;--_ui5-v2-14-0_tc_item_add_text_margin_top: .375rem;--_ui5-v2-14-0_textarea_margin: .25rem 0;--_ui5-v2-14-0_radio_button_height: 2.75rem;--_ui5-v2-14-0_radio_button_label_side_padding: .875rem;--_ui5-v2-14-0_radio_button_inner_size: 2.75rem;--_ui5-v2-14-0_radio_button_svg_size: 1.375rem;--_ui5-v2-14-0-responsive_popover_header_height: 2.75rem;--_ui5-v2-14-0-tree-indent-step: 1.5rem;--_ui5-v2-14-0-tree-toggle-box-width: 2.75rem;--_ui5-v2-14-0-tree-toggle-box-height: 2.25rem;--_ui5-v2-14-0-tree-toggle-icon-size: 1.0625rem;--_ui5-v2-14-0_timeline_tli_indicator_before_bottom: -1.5rem;--_ui5-v2-14-0_timeline_tli_indicator_before_right: -1.625rem;--_ui5-v2-14-0_timeline_tli_indicator_before_without_icon_bottom: -1.875rem;--_ui5-v2-14-0_timeline_tli_indicator_before_without_icon_right: -1.9375rem;--_ui5-v2-14-0_timeline_tli_indicator_after_top: calc(-100% - 1rem) ;--_ui5-v2-14-0_timeline_tli_indicator_after_height: calc(100% + 1rem) ;--_ui5-v2-14-0_timeline_tli_indicator_before_height: 100%;--_ui5-v2-14-0_timeline_tli_horizontal_indicator_after_width: calc(100% + .25rem) ;--_ui5-v2-14-0_timeline_tli_horizontal_indicator_after_left: 1.9375rem;--_ui5-v2-14-0_timeline_tli_horizontal_without_icon_indicator_before_width: calc(100% + .5rem) ;--_ui5-v2-14-0_timeline_tli_horizontal_indicator_before_width: calc(100% + .5rem) ;--_ui5-v2-14-0_timeline_tli_icon_horizontal_indicator_after_width: calc(100% + .25rem) ;--_ui5-v2-14-0_timeline_tli_without_icon_horizontal_indicator_before_width: calc(100% + .375rem) ;--_ui5-v2-14-0_timeline_tli_horizontal_indicator_short_after_width: 100%;--_ui5-v2-14-0-toolbar-separator-height: 2rem;--_ui5-v2-14-0-toolbar-height: 2.75rem;--_ui5-v2-14-0_toolbar_overflow_padding: .25rem .5rem;--_ui5-v2-14-0_dynamic_page_title_actions_separator_height: var(--_ui5-v2-14-0-toolbar-separator-height);--_ui5-v2-14-0-shellbar-separator-height: 1.5rem;--_ui5-v2-14-0_split_button_middle_separator_top: .625rem;--_ui5-v2-14-0_split_button_middle_separator_height: 1rem;--_ui5-v2-14-0-calendar-legend-item-root-focus-border-radius: .25rem;--_ui5-v2-14-0_color-palette-item-height: 1.75rem;--_ui5-v2-14-0_color-palette-item-hover-height: 2.25rem;--_ui5-v2-14-0_color-palette-item-margin: calc(((var(--_ui5-v2-14-0_color-palette-item-hover-height) - var(--_ui5-v2-14-0_color-palette-item-height)) / 2) + .0625rem);--_ui5-v2-14-0_color-palette-row-width: 12rem;--_ui5-v2-14-0_textarea_padding_top: .5rem;--_ui5-v2-14-0_textarea_padding_bottom: .4375rem;--_ui5-v2-14-0_dp_two_calendar_item_secondary_text_padding_block: 0 .5rem;--_ui5-v2-14-0_dp_two_calendar_item_secondary_text_padding: 0 .5rem;--_ui5-v2-14-0_daypicker_two_calendar_item_selected_focus_margin_bottom: 0;--_ui5-v2-14-0_daypicker_two_calendar_item_selected_focus_padding_right: .5rem}[data-ui5-compact-size],.ui5-content-density-compact,.sapUiSizeCompact{--_ui5-v2-14-0_checkbox_label_offset: var(--_ui5-v2-14-0_checkbox_compact_wrapper_padding);--_ui5-v2-14-0_input_min_width: 2rem;--_ui5-v2-14-0_input_icon_width: 2rem;--_ui5-v2-14-0_input_information_icon_padding: .3125rem .5rem .1875rem .5rem;--_ui5-v2-14-0_input_information_focused_icon_padding: .3125rem .5rem .25rem .5rem;--_ui5-v2-14-0_input_error_warning_icon_padding: .3125rem .5rem .1875rem .5rem;--_ui5-v2-14-0_input_error_warning_focused_icon_padding: .3125rem .5rem .25rem .5rem;--_ui5-v2-14-0_input_custom_icon_padding: .3125rem .5rem .25rem .5rem;--_ui5-v2-14-0_input_error_warning_custom_icon_padding: .3125rem .5rem .1875rem .5rem;--_ui5-v2-14-0_input_error_warning_custom_focused_icon_padding: .3125rem .5rem .25rem .5rem;--_ui5-v2-14-0_input_information_custom_icon_padding: .3125rem .5rem .1875rem .5rem;--_ui5-v2-14-0_input_information_custom_focused_icon_padding: .3125rem .5rem .25rem .5rem;--_ui5-v2-14-0_input_icon_padding: .3125rem .5rem .25rem .5rem;--_ui5-v2-14-0_panel_header_button_wrapper_padding: .1875rem .25rem;--_ui5-v2-14-0_rating_indicator_item_height: 1em;--_ui5-v2-14-0_rating_indicator_item_width: 1em;--_ui5-v2-14-0_rating_indicator_readonly_item_height: .75em;--_ui5-v2-14-0_rating_indicator_readonly_item_width: .75em;--_ui5-v2-14-0_rating_indicator_component_spacing: .5rem 0px;--_ui5-v2-14-0_radio_button_min_width: 2rem;--_ui5-v2-14-0_radio_button_outer_ring_padding_with_label: 0 .5rem;--_ui5-v2-14-0_radio_button_outer_ring_padding: 0 .5rem;--_ui5-v2-14-0_radio_button_focus_dist: .1875rem;--_ui5-v2-14-0_switch_height: 2rem;--_ui5-v2-14-0_switch_width: 2.75rem;--_ui5-v2-14-0_switch_min_width: none;--_ui5-v2-14-0_switch_with_label_width: 2.75rem;--_ui5-v2-14-0_switch_root_outline_top: .25rem;--_ui5-v2-14-0_switch_root_outline_bottom: .25rem;--_ui5-v2-14-0_switch_transform: translateX(100%) translateX(-1.375rem);--_ui5-v2-14-0_switch_transform_with_label: translateX(100%) translateX(-1.875rem);--_ui5-v2-14-0_switch_rtl_transform: translateX(1.375rem) translateX(-100%);--_ui5-v2-14-0_switch_rtl_transform_with_label: translateX(1.875rem) translateX(-100%);--_ui5-v2-14-0_switch_track_width: 2.75rem;--_ui5-v2-14-0_switch_track_height: 1.25rem;--_ui5-v2-14-0_switch_track_with_label_width: 2.75rem;--_ui5-v2-14-0_switch_track_with_label_height: 1.25rem;--_ui5-v2-14-0_switch_handle_width: 1.25rem;--_ui5-v2-14-0_switch_handle_height: 1rem;--_ui5-v2-14-0_switch_handle_with_label_width: 1.75rem;--_ui5-v2-14-0_switch_handle_with_label_height: 1rem;--_ui5-v2-14-0_switch_text_font_size: var(--sapFontSize);--_ui5-v2-14-0_switch_text_width: 1rem;--_ui5-v2-14-0_switch_text_active_left: .1875rem;--_ui5-v2-14-0_select_icon_width: 2rem;--_ui5-v2-14-0_textarea_padding_right_and_left_readonly: .4375rem;--_ui5-v2-14-0_textarea_padding_top_readonly: .125rem;--_ui5-v2-14-0_textarea_min_height: 1.625rem;--_ui5-v2-14-0_textarea_padding_bottom_readonly: .0625rem;--_ui5-v2-14-0_textarea_padding_top_error_warning: .1875rem;--_ui5-v2-14-0_textarea_padding_bottom_error_warning: .125rem;--_ui5-v2-14-0_textarea_padding_top_information: .1875rem;--_ui5-v2-14-0_textarea_padding_bottom_information: .125rem;--_ui5-v2-14-0_textarea_padding_right_and_left: .5rem;--_ui5-v2-14-0_textarea_padding_right_and_left_error_warning: .5rem;--_ui5-v2-14-0_textarea_padding_right_and_left_information: .5rem;--_ui5-v2-14-0_tokenizer_gap: .375em .25rem;--_ui5-v2-14-0_tokenizer-popover_offset: .1875rem;--_ui5-v2-14-0_slider_handle_icon_size: .875rem;--_ui5-v2-14-0_slider_padding: 1rem 1.0625rem;--_ui5-v2-14-0_range_slider_progress_focus_width: calc(100% + var(--_ui5-v2-14-0_slider_handle_width) + 10px);--_ui5-v2-14-0_range_slider_progress_focus_height: calc(var(--_ui5-v2-14-0_slider_handle_height) + 10px);--_ui5-v2-14-0_range_slider_progress_focus_top: -.8125rem;--_ui5-v2-14-0_slider_tooltip_bottom: 1.75rem;--_ui5-v2-14-0_slider_handle_focused_tooltip_distance: calc(var(--_ui5-v2-14-0_slider_tooltip_bottom) - var(--_ui5-v2-14-0_slider_handle_focus_width));--_ui5-v2-14-0_range_slider_progress_focus_left: calc(-1 * (var(--_ui5-v2-14-0_slider_handle_width) / 2) - 5px);--_ui5-v2-14-0_bar_base_height: 2.5rem;--_ui5-v2-14-0_bar_subheader_height: 2.25rem;--_ui5-v2-14-0_button_base_height: var(--sapElement_Compact_Height);--_ui5-v2-14-0_button_base_padding: .4375rem;--_ui5-v2-14-0_button_base_min_width: 2rem;--_ui5-v2-14-0-button-badge-diameter: .625rem;--_ui5-v2-14-0_calendar_height: 18rem;--_ui5-v2-14-0_calendar_width: 17.75rem;--_ui5-v2-14-0_calendar_left_right_padding: .25rem;--_ui5-v2-14-0_calendar_top_bottom_padding: .5rem;--_ui5-v2-14-0_calendar_header_height: 2rem;--_ui5-v2-14-0_calendar_header_arrow_button_width: 2rem;--_ui5-v2-14-0_calendar_header_padding: 0;--_ui5-v2-14-0-calendar-legend-root-padding: .5rem;--_ui5-v2-14-0-calendar-legend-root-width: 16.75rem;--_ui5-v2-14-0_checkbox_root_side_padding: var(--_ui5-v2-14-0_checkbox_wrapped_focus_padding);--_ui5-v2-14-0_checkbox_width_height: var(--_ui5-v2-14-0_checkbox_compact_width_height);--_ui5-v2-14-0_checkbox_wrapper_padding: var(--_ui5-v2-14-0_checkbox_compact_wrapper_padding);--_ui5-v2-14-0_checkbox_inner_width_height: var(--_ui5-v2-14-0_checkbox_compact_inner_size);--_ui5-v2-14-0_checkbox_icon_size: .75rem;--_ui5-v2-14-0_checkbox_partially_icon_size: .5rem;--_ui5-v2-14-0_color_picker_slider_progress_container_height: 1.125rem;--_ui5-v2-14-0_color_picker_slider_container_margin_top: -.375rem;--_ui5-v2-14-0_color_picker_slider_handle_height: 1.5rem;--_ui5-v2-14-0_color_picker_slider_handle_width: .9375rem;--_ui5-v2-14-0_color_picker_slider_handle_after_height: 1.25rem;--_ui5-v2-14-0_color_picker_slider_handle_focus_height: 1.625rem;--_ui5-v2-14-0_color_picker_colors_wrapper_height: 1.5rem;--_ui5-v2-14-0_color_picker_sliders_height: 2.25rem;--_ui5-v2-14-0_color_picker_main_color_margin_bottom: .75rem;--_ui5-v2-14-0_color_picker_slider_spacing: .8125rem;--_ui5-v2-14-0_color_channel_toggle_button_width: 1.375rem;--_ui5-v2-14-0_color_channel_toggle_button_margin-top: -.9375rem;--_ui5-v2-14-0_color_channel_hex_input_width: 4.625rem;--_ui5-v2-14-0-color_channel_margin_top: 0rem;--_ui5-v2-14-0_custom_list_item_rb_min_width: 2rem;--_ui5-v2-14-0_daypicker_weeknumbers_container_padding_top: 2rem;--_ui5-v2-14-0_day_picker_item_width: 2rem;--_ui5-v2-14-0_day_picker_item_height: 2rem;--_ui5-v2-14-0_day_picker_empty_height: 2.125rem;--_ui5-v2-14-0_day_picker_item_justify_content: flex-end;--_ui5-v2-14-0_dp_two_calendar_item_secondary_text_height: .75rem;--_ui5-v2-14-0_dp_two_calendar_item_text_padding_top: .5rem;--_ui5-v2-14-0_daypicker_special_day_top: 1.625rem;--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_top: 1.25rem;--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_right: 1.25rem;--_ui5-v2-14-0_daypicker_two_calendar_item_margin_bottom: 0;--_ui5-v2-14-0_daypicker_item_now_selected_two_calendar_focus_special_day_top: 1.125rem;--_ui5-v2-14-0_daypicker_item_now_selected_two_calendar_focus_special_day_right: 1.125rem;--_ui5-v2-14-0_daypicker_item_now_selected_two_calendar_focus_secondary_text_padding_block: 0 1rem;--_ui5-v2-14-0_datetime_picker_height: 20.5rem;--_ui5-v2-14-0_datetime_picker_width: 35.5rem;--_ui5-v2-14-0_datetime_timeview_width: 17rem;--_ui5-v2-14-0_datetime_timeview_phonemode_width: 18.5rem;--_ui5-v2-14-0_datetime_timeview_phonemode_clocks_width: 21.125rem;--_ui5-v2-14-0_datetime_dateview_phonemode_margin_bottom: 3.125rem;--_ui5-v2-14-0_dialog_content_min_height: 2.5rem;--_ui5-v2-14-0_dialog_footer_height: 2.5rem;--_ui5-v2-14-0_form_item_min_height: 2rem;--_ui5-v2-14-0_form_item_padding: .25rem;--_ui5-v2-14-0-form-group-heading-height: 2rem;--_ui5-v2-14-0_input_height: var(--sapElement_Compact_Height);--_ui5-v2-14-0_input_inner_padding: 0 .5rem;--_ui5-v2-14-0_input_inner_padding_with_icon: 0 .2rem 0 .5rem;--_ui5-v2-14-0_input_inner_space_to_tokenizer: .125rem;--_ui5-v2-14-0_input_inner_space_to_n_more_text: .125rem;--_ui5-v2-14-0_input_icon_min_width: var(--_ui5-v2-14-0_input_compact_min_width);--_ui5-v2-14-0_menu_item_padding: 0 .75rem 0 .5rem;--_ui5-v2-14-0_menu_item_submenu_icon_right: .75rem;--_ui5-v2-14-0_popup_default_header_height: 2.5rem;--_ui5-v2-14-0_textarea_margin: .1875rem 0;--_ui5-v2-14-0_list_no_data_height: 2rem;--_ui5-v2-14-0_list_item_cb_margin_right: .5rem;--_ui5-v2-14-0_list_item_title_size: var(--sapFontSize);--_ui5-v2-14-0_list_item_img_top_margin: .55rem;--_ui5-v2-14-0_list_no_data_font_size: var(--sapFontSize);--_ui5-v2-14-0_list_item_dropdown_base_height: 2rem;--_ui5-v2-14-0_list_item_base_height: 2rem;--_ui5-v2-14-0_list_item_base_padding: 0 1rem;--_ui5-v2-14-0_list_item_icon_size: 1rem;--_ui5-v2-14-0_list_item_selection_btn_margin_top: calc(-1 * var(--_ui5-v2-14-0_checkbox_wrapper_padding));--_ui5-v2-14-0_list_item_content_vertical_offset: calc((var(--_ui5-v2-14-0_list_item_base_height) - var(--_ui5-v2-14-0_list_item_title_size)) / 2);--_ui5-v2-14-0_list_buttons_left_space: .125rem;--_ui5-v2-14-0_month_picker_item_height: 2rem;--_ui5-v2-14-0_year_picker_item_height: 2rem;--_ui5-v2-14-0_panel_header_height: 2rem;--_ui5-v2-14-0_panel_button_root_height: 2rem;--_ui5-v2-14-0_panel_button_root_width: 2.75rem;--_ui5-v2-14-0_token_height: 1.25rem;--_ui5-v2-14-0_token_right_margin: .25rem;--_ui5-v2-14-0_token_left_padding: .25rem;--_ui5-v2-14-0_token_readonly_padding: .125rem .25rem;--_ui5-v2-14-0_token_focus_offset: -.125rem;--_ui5-v2-14-0_token_icon_size: .75rem;--_ui5-v2-14-0_token_icon_padding: .375rem .375rem;--_ui5-v2-14-0_token_outline_offset: -.125rem;--_ui5-v2-14-0_tl_bubble_padding: .5rem;--_ui5-v2-14-0_tl_padding: .5rem;--_ui5-v2-14-0_tl_li_margin_bottom: .5rem;--_ui5-v2-14-0_tc_item_text: 2rem;--_ui5-v2-14-0_tc_item_text_line_height: 1.325rem;--_ui5-v2-14-0_tc_item_add_text_margin_top: .3125rem;--_ui5-v2-14-0_tc_item_height: 4rem;--_ui5-v2-14-0_tc_header_height: var(--_ui5-v2-14-0_tc_item_height);--_ui5-v2-14-0_tc_item_icon_circle_size: 2rem;--_ui5-v2-14-0_tc_item_icon_size: 1rem;--_ui5-v2-14-0_radio_button_height: 2rem;--_ui5-v2-14-0_radio_button_label_side_padding: .5rem;--_ui5-v2-14-0_radio_button_inner_size: 2rem;--_ui5-v2-14-0_radio_button_svg_size: 1rem;--_ui5-v2-14-0-responsive_popover_header_height: 2.5rem;--_ui5-v2-14-0_slider_handle_height: 1.25rem;--_ui5-v2-14-0_slider_handle_width: 1.5rem;--_ui5-v2-14-0_slider_tooltip_padding: .25rem;--_ui5-v2-14-0_slider_progress_outline_offset: -.625rem;--_ui5-v2-14-0_slider_outer_height: 1.3125rem;--_ui5-v2-14-0_step_input_min_width: 6rem;--_ui5-v2-14-0_step_input_padding: 2rem;--_ui5-v2-14-0-tree-indent-step: .5rem;--_ui5-v2-14-0-tree-toggle-box-width: 2rem;--_ui5-v2-14-0-tree-toggle-box-height: 1.5rem;--_ui5-v2-14-0-tree-toggle-icon-size: .8125rem;--_ui5-v2-14-0_timeline_tli_indicator_before_bottom: -.75rem;--_ui5-v2-14-0_timeline_tli_indicator_before_right: -.5rem;--_ui5-v2-14-0_timeline_tli_indicator_before_without_icon_bottom: -1rem;--_ui5-v2-14-0_timeline_tli_indicator_before_without_icon_right: -.8125rem;--_ui5-v2-14-0_timeline_tli_indicator_before_height: calc(100% - 1.25rem) ;--_ui5-v2-14-0_timeline_tli_horizontal_without_icon_indicator_before_width: var(--_ui5-v2-14-0_timeline_tli_indicator_after_height);--_ui5-v2-14-0_timeline_tli_horizontal_indicator_after_width: var(--_ui5-v2-14-0_timeline_tli_indicator_after_height);--_ui5-v2-14-0_timeline_tli_horizontal_indicator_before_width: var(--_ui5-v2-14-0_timeline_tli_indicator_after_height);--_ui5-v2-14-0_timeline_tli_icon_horizontal_indicator_after_width: var(--_ui5-v2-14-0_timeline_tli_indicator_after_height);--_ui5-v2-14-0_timeline_tli_indicator_after_top: calc(-100% + .9375rem) ;--_ui5-v2-14-0_timeline_tli_indicator_after_height: calc(100% - .75rem) ;--_ui5-v2-14-0_timeline_tli_horizontal_indicator_after_left: 1.8625rem;--_ui5-v2-14-0_timeline_tli_horizontal_indicator_short_after_width: calc(100% - 1rem) ;--_ui5-v2-14-0_timeline_tli_without_icon_horizontal_indicator_before_width: calc(100% - .625rem) ;--_ui5-v2-14-0_timeline_tlgi_compact_icon_before_height: calc(100% + 1.5rem) ;--_ui5-v2-14-0_timeline_tlgi_horizontal_line_placeholder_before_width: var(--_ui5-v2-14-0_timeline_tlgi_compact_icon_before_height);--_ui5-v2-14-0_timeline_tlgi_horizontal_compact_root_margin_left: .5rem;--_ui5-v2-14-0_timeline_tlgi_compact_root_gap: .5rem;--_ui5-v2-14-0_timeline_tlgi_root_horizontal_height: 19.375rem;--_ui5-v2-14-0_vsd_header_container: 2.5rem;--_ui5-v2-14-0_vsd_sub_header_container_height: 2rem;--_ui5-v2-14-0_vsd_expand_content_height: 25.4375rem;--_ui5-v2-14-0-toolbar-separator-height: 1.5rem;--_ui5-v2-14-0-toolbar-height: 2rem;--_ui5-v2-14-0_toolbar_overflow_padding: .1875rem .375rem;--_ui5-v2-14-0_dynamic_page_title_actions_separator_height: var(--_ui5-v2-14-0-toolbar-separator-height);--_ui5-v2-14-0-shellbar-separator-height: 1.5rem;--_ui5-v2-14-0_textarea_padding_top: .1875rem;--_ui5-v2-14-0_textarea_padding_bottom: .125rem;--_ui5-v2-14-0_checkbox_focus_position: .125rem;--_ui5-v2-14-0_split_button_middle_separator_top: .3125rem;--_ui5-v2-14-0_split_button_middle_separator_height: 1rem;--_ui5-v2-14-0_slider_handle_top: -.5rem;--_ui5-v2-14-0_slider_tooltip_height: 1.375rem;--_ui5-v2-14-0_checkbox_wrapped_focus_inset_block: .125rem;--_ui5-v2-14-0_color-palette-item-height: 1.25rem;--_ui5-v2-14-0_color-palette-item-hover-height: 1.625rem;--_ui5-v2-14-0_color-palette-item-margin: calc(((var(--_ui5-v2-14-0_color-palette-item-hover-height) - var(--_ui5-v2-14-0_color-palette-item-height)) / 2) + .0625rem);--_ui5-v2-14-0_color-palette-row-width: 8.75rem;--_ui5-v2-14-0_color-palette-swatch-container-padding: .1875rem .5rem;--_ui5-v2-14-0_color-palette-item-hover-margin: .0625rem;--_ui5-v2-14-0_color-palette-row-height: 7.5rem;--_ui5-v2-14-0_color-palette-button-height: 2rem;--_ui5-v2-14-0_color-palette-item-before-focus-inset: -.25rem;--_ui5-v2-14-0_daypicker_selected_item_now_special_day_top: 1.5625rem;--_ui5-v2-14-0_daypicker_specialday_focused_top: 1.3125rem;--_ui5-v2-14-0_daypicker_selected_item_now_special_day_border_bottom_radius_alternate: .5rem;--_ui5-v2-14-0_daypicker_specialday_focused_border_bottom: .25rem;--_ui5-v2-14-0_daypicker_item_now_specialday_top: 1.4375rem;--_ui5-v2-14-0_dp_two_calendar_item_secondary_text_padding_block: 0 .375rem;--_ui5-v2-14-0_dp_two_calendar_item_secondary_text_padding: 0 .375rem;--_ui5-v2-14-0_daypicker_two_calendar_item_selected_focus_margin_bottom: -.25rem;--_ui5-v2-14-0_daypicker_two_calendar_item_selected_focus_padding_right: .4375rem}:root,[dir=ltr]{--_ui5-v2-14-0_rotation_90deg: rotate(90deg);--_ui5-v2-14-0_rotation_minus_90deg: rotate(-90deg);--_ui5-v2-14-0_icon_transform_scale: none;--_ui5-v2-14-0_panel_toggle_btn_rotation: var(--_ui5-v2-14-0_rotation_90deg);--_ui5-v2-14-0_timeline_scroll_container_offset: .5rem;--_ui5-v2-14-0_popover_upward_arrow_margin: .1875rem 0 0 .1875rem;--_ui5-v2-14-0_popover_right_arrow_margin: .1875rem 0 0 -.375rem;--_ui5-v2-14-0_popover_downward_arrow_margin: -.375rem 0 0 .125rem;--_ui5-v2-14-0_popover_left_arrow_margin: .125rem 0 0 .25rem;--_ui5-v2-14-0_dialog_resize_cursor: se-resize;--_ui5-v2-14-0_progress_indicator_bar_border_radius: .5rem 0 0 .5rem;--_ui5-v2-14-0_progress_indicator_remaining_bar_border_radius: 0 .5rem .5rem 0;--_ui5-v2-14-0_menu_submenu_margin_offset: -.25rem 0;--_ui5-v2-14-0_menu_submenu_placement_type_left_margin_offset: .25rem 0;--_ui5-v2-14-0-shellbar-notification-btn-count-offset: .125rem}[dir=rtl],[dir=rtl] :host{--_ui5-v2-14-0_icon_transform_scale: scale(-1, 1);--_ui5-v2-14-0_panel_toggle_btn_rotation: var(--_ui5-v2-14-0_rotation_minus_90deg);--_ui5-v2-14-0_timeline_scroll_container_offset: -.5rem;--_ui5-v2-14-0_popover_upward_arrow_margin: .1875rem .125rem 0 0;--_ui5-v2-14-0_popover_right_arrow_margin: .1875rem .25rem 0 0;--_ui5-v2-14-0_popover_downward_arrow_margin: -.4375rem .125rem 0 0;--_ui5-v2-14-0_popover_left_arrow_margin: .1875rem -.375rem 0 0;--_ui5-v2-14-0_dialog_resize_cursor:sw-resize;--_ui5-v2-14-0_progress_indicator_bar_border_radius: 0 .5rem .5rem 0;--_ui5-v2-14-0_progress_indicator_remaining_bar_border_radius: .5rem 0 0 .5rem;--_ui5-v2-14-0_menu_submenu_margin_offset: 0 -.25rem;--_ui5-v2-14-0_menu_submenu_placement_type_left_margin_offset: 0 .25rem;--_ui5-v2-14-0_segmented_btn_item_border_left: .0625rem;--_ui5-v2-14-0_segmented_btn_item_border_right: 0px;--_ui5-v2-14-0-shellbar-notification-btn-count-offset: auto}[dir=rtl]{--_ui5-v2-14-0_segmented_btn_item_border_left: .0625rem;--_ui5-v2-14-0_segmented_btn_item_border_right: .0625rem;--_ui5-v2-14-0_progress_indicator_bar_border_radius: .5rem;--_ui5-v2-14-0_progress_indicator_remaining_bar_border_radius: .25rem}
`;
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const checkboxCss = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host{-webkit-tap-highlight-color:rgba(0,0,0,0)}:host(:not([hidden])){display:inline-block}:host([required]){vertical-align:middle}:host{overflow:hidden;max-width:100%;outline:none;border-radius:var(--_ui5-v2-14-0_checkbox_border_radius);transition:var(--_ui5-v2-14-0_checkbox_transition);cursor:pointer;user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none}:host([disabled]){cursor:default}:host([disabled]) .ui5-checkbox-root{opacity:var(--_ui5-v2-14-0_checkbox_disabled_opacity)}:host([disabled]) .ui5-checkbox-inner{border-color:var(--_ui5-v2-14-0_checkbox_inner_disabled_border_color)}:host([disabled]) .ui5-checkbox-label{color:var(--_ui5-v2-14-0_checkbox_disabled_label_color)}:host([readonly]:not([value-state="Critical"]):not([value-state="Negative"])) .ui5-checkbox-inner{background:var(--sapField_ReadOnly_Background);border:var(--_ui5-v2-14-0_checkbox_inner_readonly_border);color:var(--sapField_TextColor)}:host(:not([wrapping-type="None"])[text]) .ui5-checkbox-root{min-height:auto;box-sizing:border-box;align-items:flex-start;padding-top:var(--_ui5-v2-14-0_checkbox_root_side_padding);padding-bottom:var(--_ui5-v2-14-0_checkbox_root_side_padding)}:host(:not([wrapping-type="None"])[text]) .ui5-checkbox-root .ui5-checkbox-label{overflow-wrap:break-word;align-self:center}:host([desktop][text]:not([wrapping-type="None"])) .ui5-checkbox-root:focus:before,.ui5-checkbox-root[text]:focus-visible:before{inset-block:var(--_ui5-v2-14-0_checkbox_wrapped_focus_inset_block)}:host([value-state="Negative"]) .ui5-checkbox-inner,:host([value-state="Negative"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--sapField_InvalidBackground);border:var(--_ui5-v2-14-0_checkbox_inner_error_border);color:var(--sapField_InvalidColor)}:host([value-state="Negative"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--_ui5-v2-14-0_checkbox_inner_error_background_hover)}:host([value-state="Critical"]) .ui5-checkbox-inner,:host([value-state="Critical"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--sapField_WarningBackground);border:var(--_ui5-v2-14-0_checkbox_inner_warning_border);color:var(--_ui5-v2-14-0_checkbox_inner_warning_color)}:host([value-state="Critical"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--_ui5-v2-14-0_checkbox_inner_warning_background_hover)}:host([value-state="Information"]) .ui5-checkbox-inner,:host([value-state="Information"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--sapField_InformationBackground);border:var(--_ui5-v2-14-0_checkbox_inner_information_border);color:var(--_ui5-v2-14-0_checkbox_inner_information_color)}:host([value-state="Information"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--_ui5-v2-14-0_checkbox_inner_information_background_hover)}:host([value-state="Positive"]) .ui5-checkbox-inner,:host([value-state="Positive"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--sapField_SuccessBackground);border:var(--_ui5-v2-14-0_checkbox_inner_success_border);color:var(--sapField_SuccessColor)}:host([value-state="Positive"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--_ui5-v2-14-0_checkbox_inner_success_background_hover)}:host([value-state="Critical"]) .ui5-checkbox-icon,:host([value-state="Critical"][indeterminate]) .ui5-checkbox-inner:after{color:var(--_ui5-v2-14-0_checkbox_checkmark_warning_color)}.ui5-checkbox-root{position:relative;display:inline-flex;align-items:center;max-width:100%;min-height:var(--_ui5-v2-14-0_checkbox_width_height);min-width:var(--_ui5-v2-14-0_checkbox_width_height);padding:0 var(--_ui5-v2-14-0_checkbox_wrapper_padding);outline:none;transition:var(--_ui5-v2-14-0_checkbox_transition);border:var(--_ui5-v2-14-0_checkbox_default_focus_border);border-radius:var(--_ui5-v2-14-0_checkbox_border_radius);box-sizing:border-box}:host([desktop]) .ui5-checkbox-root:focus:before,.ui5-checkbox-root:focus-visible:before{display:var(--_ui5-v2-14-0_checkbox_focus_outline_display);content:"";position:absolute;inset-inline:var(--_ui5-v2-14-0_checkbox_focus_position);inset-block:var(--_ui5-v2-14-0_checkbox_focus_position);border:var(--_ui5-v2-14-0_checkbox_focus_outline);border-radius:var(--_ui5-v2-14-0_checkbox_focus_border_radius)}:host([text]) .ui5-checkbox-root{padding-inline-end:var(--_ui5-v2-14-0_checkbox_right_focus_distance)}:host([text]) .ui5-checkbox-root:focus:before,:host([text]) .ui5-checkbox-root:focus-visible:before{inset-inline-end:0}:host(:hover:not([disabled])){background:var(--_ui5-v2-14-0_checkbox_outer_hover_background)}.ui5-checkbox--hoverable .ui5-checkbox-label:hover{color:var(--_ui5-v2-14-0_checkbox_label_color)}:host(:not([active]):not([checked]):not([value-state])) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner,:host(:not([active]):not([checked])[value-state="None"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--_ui5-v2-14-0_checkbox_hover_background);border-color:var(--_ui5-v2-14-0_checkbox_inner_hover_border_color)}:host(:not([active])[checked]:not([value-state])) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner,:host(:not([active])[checked][value-state="None"]) .ui5-checkbox--hoverable:hover .ui5-checkbox-inner{background:var(--_ui5-v2-14-0_checkbox_hover_background);border-color:var(--_ui5-v2-14-0_checkbox_inner_hover_checked_border_color)}:host([checked]:not([value-state])) .ui5-checkbox-inner,:host([checked][value-state="None"]) .ui5-checkbox-inner{border-color:var(--_ui5-v2-14-0_checkbox_inner_selected_border_color)}:host([active]:not([checked]):not([value-state]):not([disabled])) .ui5-checkbox-inner,:host([active]:not([checked])[value-state="None"]:not([disabled])) .ui5-checkbox-inner{border-color:var(--_ui5-v2-14-0_checkbox_inner_active_border_color);background-color:var(--_ui5-v2-14-0_checkbox_active_background)}:host([active][checked]:not([value-state]):not([disabled])) .ui5-checkbox-inner,:host([active][checked][value-state="None"]:not([disabled])) .ui5-checkbox-inner{border-color:var(--_ui5-v2-14-0_checkbox_inner_selected_border_color);background-color:var(--_ui5-v2-14-0_checkbox_active_background)}.ui5-checkbox-inner{min-width:var(--_ui5-v2-14-0_checkbox_inner_width_height);max-width:var(--_ui5-v2-14-0_checkbox_inner_width_height);height:var(--_ui5-v2-14-0_checkbox_inner_width_height);max-height:var(--_ui5-v2-14-0_checkbox_inner_width_height);border:var(--_ui5-v2-14-0_checkbox_inner_border);border-radius:var(--_ui5-v2-14-0_checkbox_inner_border_radius);background:var(--_ui5-v2-14-0_checkbox_inner_background);color:var(--_ui5-v2-14-0_checkbox_checkmark_color);box-sizing:border-box;position:relative;cursor:inherit}:host([indeterminate][checked]) .ui5-checkbox-inner:after{content:"";background-color:currentColor;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);width:var(--_ui5-v2-14-0_checkbox_partially_icon_size);height:var(--_ui5-v2-14-0_checkbox_partially_icon_size)}:host input{-webkit-appearance:none;visibility:hidden;width:0;left:0;position:absolute;font-size:inherit}.ui5-checkbox-root .ui5-checkbox-label{margin-inline-start:var(--_ui5-v2-14-0_checkbox_label_offset);cursor:inherit;text-overflow:ellipsis;overflow:hidden;pointer-events:none;color:var(--_ui5-v2-14-0_checkbox_label_color)}.ui5-checkbox-icon{width:var(--_ui5-v2-14-0_checkbox_icon_size);height:var(--_ui5-v2-14-0_checkbox_icon_size);color:currentColor;cursor:inherit;position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}:host([display-only]){cursor:default}:host([display-only]) .ui5-checkbox-display-only-icon-inner [ui5-icon]{color:var(--sapTextColor)}:host([display-only]) .ui5-checkbox-display-only-icon-inner{min-width:var(--_ui5-v2-14-0_checkbox_inner_width_height);max-width:var(--_ui5-v2-14-0_checkbox_inner_width_height);height:var(--_ui5-v2-14-0_checkbox_inner_width_height);max-height:var(--_ui5-v2-14-0_checkbox_inner_width_height);display:flex;align-items:center;justify-content:center}
`;
var l$8;
function k$1(n2) {
  return n2.children;
}
l$8 = { __e: function(n2, l3, t3, u3) {
  for (var i3, o2, r3; l3 = l3.__; ) if ((i3 = l3.__c) && !i3.__) try {
    if ((o2 = i3.constructor) && null != o2.getDerivedStateFromError && (i3.setState(o2.getDerivedStateFromError(n2)), r3 = i3.__d), null != i3.componentDidCatch && (i3.componentDidCatch(n2, u3 || {}), r3 = i3.__d), r3) return i3.__E = i3;
  } catch (l4) {
    n2 = l4;
  }
  throw n2;
} }, "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout;
var f$6 = 0;
function u$5(e2, t3, n2, o2, i3, u3) {
  t3 || (t3 = {});
  var a3, c2, l3 = t3;
  "ref" in t3 && (a3 = t3.ref, delete t3.ref);
  var p3 = { type: e2, props: l3, key: n2, ref: a3, __k: null, __: null, __b: 0, __e: null, __c: null, constructor: void 0, __v: --f$6, __i: -1, __u: 0, __source: i3, __self: u3 };
  if ("function" == typeof e2 && (a3 = e2.defaultProps)) for (c2 in a3) void 0 === l3[c2] && (l3[c2] = a3[c2]);
  return l$8.vnode && l$8.vnode(p3), p3;
}
function hash2str(hash) {
  let str = "";
  for (const prop in hash) {
    if (hash[prop]) {
      if (str) {
        str += " ";
      }
      str += prop;
    }
  }
  return str;
}
const camelToKebabMap = /* @__PURE__ */ new Map();
const camelToKebabCase = (string) => {
  if (!camelToKebabMap.has(string)) {
    const result = string.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
    camelToKebabMap.set(string, result);
  }
  return camelToKebabMap.get(string);
};
const pascalToKebabCase = (pascalString) => {
  return camelToKebabCase(pascalString);
};
function convertEventScoping(type, props, key) {
  const events = type.getMetadata().getEvents();
  Object.keys(props).forEach((prop) => {
    if (prop.startsWith("on")) {
      const pascalEvent = prop.slice("on".length);
      const kebabCaseEvent = pascalToKebabCase(pascalEvent);
      const camelCaseEvent = pascalEvent.charAt(0).toLowerCase() + pascalEvent.slice(1);
      let origEvent;
      if (kebabCaseEvent in events) {
        origEvent = kebabCaseEvent;
      } else if (camelCaseEvent in events) {
        origEvent = camelCaseEvent;
      }
      if (origEvent) {
        if (prop !== "onClick") {
          props[`onui5-${origEvent}`] = props[prop];
          delete props[prop];
        }
      }
    }
  });
}
function isUI5ElementClass(type) {
  return typeof type === "function" && "getMetadata" in type;
}
function preprocess(type, props, key) {
  let tag2;
  if (isUI5ElementClass(type)) {
    tag2 = type.getMetadata().getTag();
    convertEventScoping(type, props);
  } else {
    tag2 = type;
  }
  if (typeof props.class === "object") {
    props.class = hash2str(props.class);
  }
  return tag2;
}
const old = l$8.vnode;
l$8.vnode = (vnode) => {
  const props = vnode.props;
  if (props !== null && typeof props === "object") {
    if (props.class && typeof props.class === "object") ;
  }
  old && old(vnode);
};
function Fragment(props, context) {
  return k$1(props);
}
function jsx(type, props, key) {
  const tag2 = preprocess(type, props);
  return u$5(tag2, props, key);
}
function jsxs(type, props, key) {
  const tag2 = preprocess(type, props);
  return u$5(tag2, props, key);
}
function LabelTemplate() {
  return jsxs("label", { class: "ui5-label-root", onClick: this._onclick, children: [jsx("span", { class: "ui5-label-text-wrapper", children: jsx("slot", {}) }), jsx("span", { "aria-hidden": "true", class: "ui5-label-required-colon", "data-ui5-colon": this._colonSymbol })] });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const labelCss = `:host(:not([hidden])){display:inline-flex}:host{max-width:100%;color:var(--sapContent_LabelColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);font-weight:400;cursor:text}.ui5-label-root{width:100%;cursor:inherit}:host{white-space:normal}:host([wrapping-type="None"]){white-space:nowrap}:host([wrapping-type="None"]) .ui5-label-root{display:inline-flex}:host([wrapping-type="None"]) .ui5-label-text-wrapper{text-overflow:ellipsis;overflow:hidden;display:inline-block;vertical-align:top;flex:0 1 auto;min-width:0}:host([show-colon]) .ui5-label-required-colon:before{content:attr(data-ui5-colon)}:host([required]) .ui5-label-required-colon:after{content:"*";color:var(--sapField_RequiredColor);font-size:var(--sapFontLargeSize);font-weight:700;position:relative;font-style:normal;vertical-align:middle;line-height:0}.ui5-label-text-wrapper{padding-inline-end:.075rem}:host([required][show-colon]) .ui5-label-required-colon:after{margin-inline-start:.125rem}:host([show-colon]) .ui5-label-required-colon{margin-inline-start:-.05rem;white-space:pre}
`;
var __decorate$C = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var Label_1;
let Label$1 = Label_1 = class Label extends b$6 {
  constructor() {
    super(...arguments);
    this.showColon = false;
    this.required = false;
    this.wrappingType = "Normal";
  }
  _onclick() {
    if (!this.for) {
      return;
    }
    const elementToFocus = this.getRootNode().querySelector(`[id="${this.for}"]`);
    if (elementToFocus) {
      elementToFocus.focus();
    }
  }
  get _colonSymbol() {
    return Label_1.i18nBundle.getText(LABEL_COLON);
  }
};
__decorate$C([
  s$7()
], Label$1.prototype, "for", void 0);
__decorate$C([
  s$7({ type: Boolean })
], Label$1.prototype, "showColon", void 0);
__decorate$C([
  s$7({ type: Boolean })
], Label$1.prototype, "required", void 0);
__decorate$C([
  s$7()
], Label$1.prototype, "wrappingType", void 0);
__decorate$C([
  i$8("@ui5/webcomponents")
], Label$1, "i18nBundle", void 0);
Label$1 = Label_1 = __decorate$C([
  m$7({
    tag: "ui5-label",
    renderer: y$4,
    template: LabelTemplate,
    styles: labelCss,
    languageAware: true
  })
], Label$1);
Label$1.define();
const Label$2 = Label$1;
var t$9 = ((s2) => (s2["SAP-icons"] = "SAP-icons-v4", s2.horizon = "SAP-icons-v5", s2["SAP-icons-TNT"] = "tnt", s2.BusinessSuiteInAppSymbols = "business-suite", s2))(t$9 || {});
const n$9 = (e2) => t$9[e2] ? t$9[e2] : e2;
var t$8 = ((o2) => (o2.SAPIconsV4 = "SAP-icons-v4", o2.SAPIconsV5 = "SAP-icons-v5", o2.SAPIconsTNTV2 = "tnt-v2", o2.SAPIconsTNTV3 = "tnt-v3", o2.SAPBSIconsV1 = "business-suite-v1", o2.SAPBSIconsV2 = "business-suite-v2", o2))(t$8 || {});
const s$4 = /* @__PURE__ */ new Map();
s$4.set("SAP-icons", { legacy: "SAP-icons-v4", sap_horizon: "SAP-icons-v5" }), s$4.set("tnt", { legacy: "tnt-v2", sap_horizon: "tnt-v3" }), s$4.set("business-suite", { legacy: "business-suite-v1", sap_horizon: "business-suite-v2" });
const c$4 = (n2, e2) => {
  if (s$4.has(n2)) {
    s$4.set(n2, { ...e2, ...s$4.get(n2) });
    return;
  }
  s$4.set(n2, e2);
}, r$8 = (n2) => {
  const e2 = n$p() ? "legacy" : "sap_horizon";
  return s$4.has(n2) ? s$4.get(n2)[e2] : n2;
};
const t$7 = /* @__PURE__ */ new Map(), c$3 = (n2) => t$7.get(n2);
const i$6 = (o2) => {
  const t3 = c$3(r$j());
  return !o2 && t3 ? n$9(t3) : o2 ? r$8(o2) : r$8("SAP-icons");
};
const w = "legacy", s$3 = /* @__PURE__ */ new Map(), c$2 = m$i("SVGIcons.registry", /* @__PURE__ */ new Map()), i$5 = m$i("SVGIcons.promises", /* @__PURE__ */ new Map()), l$7 = "ICON_NOT_FOUND", N2 = async (e2) => {
  if (!i$5.has(e2)) {
    if (!s$3.has(e2)) throw new Error(`No loader registered for the ${e2} icons collection. Probably you forgot to import the "AllIcons.js" module for the respective package.`);
    const t3 = s$3.get(e2);
    i$5.set(e2, t3(e2));
  }
  return i$5.get(e2);
}, f$5 = (e2) => {
  Object.keys(e2.data).forEach((t3) => {
    const a3 = e2.data[t3];
    y$1(t3, { pathData: a3.path || a3.paths, ltr: a3.ltr, accData: a3.acc, collection: e2.collection, packageName: e2.packageName });
  });
}, y$1 = (e2, t3) => {
  const a3 = `${t3.collection}/${e2}`, o2 = { collection: t3.collection, packageName: t3.packageName, pathData: t3.pathData, viewBox: t3.viewBox, ltr: t3.ltr, accData: t3.accData, customTemplate: t3.customTemplate };
  c$2.set(a3, o2);
}, u$4 = (e2) => {
  e2.startsWith("sap-icon://") && (e2 = e2.replace("sap-icon://", ""));
  let t3;
  return [e2, t3] = e2.split("/").reverse(), e2 = e2.replace("icon-", ""), t3 && (t3 = n$9(t3)), { name: e2, collection: t3 };
}, D$2 = (e2) => {
  const { name: t3, collection: a3 } = u$4(e2);
  return g$1(a3, t3);
}, n$8 = async (e2) => {
  const { name: t3, collection: a3 } = u$4(e2);
  let o2 = l$7;
  try {
    o2 = await N2(i$6(a3));
  } catch (r3) {
    console.error(r3.message);
  }
  if (o2 === l$7) return o2;
  const p3 = g$1(a3, t3);
  return p3 || (Array.isArray(o2) ? o2.forEach((r3) => {
    f$5(r3), c$4(a3, { [r3.themeFamily || w]: r3.collection });
  }) : f$5(o2), g$1(a3, t3));
}, g$1 = (e2, t3) => {
  const a3 = `${i$6(e2)}/${t3}`;
  return c$2.get(a3);
}, A$1 = async (e2) => {
  if (!e2) return;
  let t3 = D$2(e2);
  if (t3 || (t3 = await n$8(e2)), t3 && t3 !== l$7 && t3.accData) return t3.packageName ? (await f$c(t3.packageName)).getText(t3.accData) : t3.accData?.defaultText || "";
};
function IconTemplate() {
  return jsxs("svg", { class: "ui5-icon-root", part: "root", tabindex: this._tabIndex, dir: this._dir, viewBox: this.viewBox, role: this.effectiveAccessibleRole, focusable: "false", preserveAspectRatio: "xMidYMid meet", "aria-label": this.effectiveAccessibleName, "aria-hidden": this.effectiveAriaHidden, xmlns: "http://www.w3.org/2000/svg", onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, children: [this.hasIconTooltip && jsxs("title", { id: `${this._id}-tooltip`, children: [" ", this.effectiveAccessibleName, " "] }), jsx("g", { role: "presentation", children: content.call(this) })] });
}
function content() {
  if (this.customTemplate) {
    return this.customTemplate;
  }
  if (this.customTemplateAsString) {
    return jsx("g", { dangerouslySetInnerHTML: { __html: this.customTemplateAsString } });
  }
  return this.pathData.map((path) => jsx("path", { d: path }));
}
var IconMode;
(function(IconMode2) {
  IconMode2["Image"] = "Image";
  IconMode2["Decorative"] = "Decorative";
  IconMode2["Interactive"] = "Interactive";
})(IconMode || (IconMode = {}));
const IconMode$1 = IconMode;
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const iconCss = `:host{-webkit-tap-highlight-color:rgba(0,0,0,0)}:host([hidden]){display:none}:host([invalid]){display:none}:host(:not([hidden]).ui5_hovered){opacity:.7}:host{display:inline-block;width:1rem;height:1rem;color:var(--sapContent_IconColor);fill:currentColor;outline:none}:host([design="Contrast"]){color:var(--sapContent_ContrastIconColor)}:host([design="Critical"]){color:var(--sapCriticalElementColor)}:host([design="Information"]){color:var(--sapInformativeElementColor)}:host([design="Negative"]){color:var(--sapNegativeElementColor)}:host([design="Neutral"]){color:var(--sapNeutralElementColor)}:host([design="NonInteractive"]){color:var(--sapContent_NonInteractiveIconColor)}:host([design="Positive"]){color:var(--sapPositiveElementColor)}:host([mode="Interactive"][desktop]) .ui5-icon-root:focus,:host([mode="Interactive"]) .ui5-icon-root:focus-visible{outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);border-radius:var(--ui5-v2-14-0-icon-focus-border-radius)}.ui5-icon-root{display:flex;height:100%;width:100%;outline:none;vertical-align:top}:host([mode="Interactive"]){cursor:pointer}.ui5-icon-root:not([dir=ltr])>g{transform:var(--_ui5-v2-14-0_icon_transform_scale);transform-origin:center}
`;
var __decorate$B = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
const ICON_NOT_FOUND = "ICON_NOT_FOUND";
let Icon$1 = class Icon extends b$6 {
  constructor() {
    super(...arguments);
    this.design = "Default";
    this.showTooltip = false;
    this.mode = "Decorative";
    this.pathData = [];
    this.invalid = false;
  }
  _onkeydown(e2) {
    if (this.mode !== IconMode$1.Interactive) {
      return;
    }
    if (b$4(e2)) {
      this.fireDecoratorEvent("click");
    }
    if (A$2(e2)) {
      e2.preventDefault();
    }
  }
  _onkeyup(e2) {
    if (this.mode === IconMode$1.Interactive && A$2(e2)) {
      this.fireDecoratorEvent("click");
    }
  }
  /**
  * Enforce "ltr" direction, based on the icons collection metadata.
  */
  get _dir() {
    return this.ltr ? "ltr" : void 0;
  }
  get effectiveAriaHidden() {
    return this.mode === IconMode$1.Decorative ? "true" : void 0;
  }
  get _tabIndex() {
    return this.mode === IconMode$1.Interactive ? 0 : void 0;
  }
  get effectiveAccessibleRole() {
    switch (this.mode) {
      case IconMode$1.Interactive:
        return "button";
      case IconMode$1.Decorative:
        return "presentation";
      default:
        return "img";
    }
  }
  onEnterDOM() {
    if (f$i()) {
      this.setAttribute("desktop", "");
    }
  }
  async onBeforeRendering() {
    const name2 = this.name;
    if (!name2) {
      return;
    }
    let iconData = D$2(name2);
    if (!iconData) {
      iconData = await n$8(name2);
    }
    if (!iconData) {
      this.invalid = true;
      return console.warn(`Required icon is not registered. Invalid icon name: ${this.name}`);
    }
    if (iconData === ICON_NOT_FOUND) {
      this.invalid = true;
      return console.warn(`Required icon is not registered. You can either import the icon as a module in order to use it e.g. "@ui5/webcomponents-icons/dist/${name2.replace("sap-icon://", "")}.js", or setup a JSON build step and import "@ui5/webcomponents-icons/dist/AllIcons.js".`);
    }
    this.viewBox = iconData.viewBox || "0 0 512 512";
    if ("customTemplate" in iconData && iconData.customTemplate) {
      this.customTemplate = n$d(iconData.customTemplate, this);
    }
    if ("customTemplateAsString" in iconData) {
      this.customTemplateAsString = iconData.customTemplateAsString;
    }
    this.invalid = false;
    if ("pathData" in iconData && iconData.pathData) {
      this.pathData = Array.isArray(iconData.pathData) ? iconData.pathData : [iconData.pathData];
    }
    this.accData = iconData.accData;
    this.ltr = iconData.ltr;
    this.packageName = iconData.packageName;
    if (this.accessibleName) {
      this.effectiveAccessibleName = this.accessibleName;
    } else if (this.accData) {
      if (this.packageName) {
        const i18nBundle = await f$c(this.packageName);
        this.effectiveAccessibleName = i18nBundle.getText(this.accData) || void 0;
      } else {
        this.effectiveAccessibleName = this.accData?.defaultText || void 0;
      }
    } else {
      this.effectiveAccessibleName = void 0;
    }
  }
  get hasIconTooltip() {
    return this.showTooltip && this.effectiveAccessibleName;
  }
};
__decorate$B([
  s$7()
], Icon$1.prototype, "design", void 0);
__decorate$B([
  s$7()
], Icon$1.prototype, "name", void 0);
__decorate$B([
  s$7()
], Icon$1.prototype, "accessibleName", void 0);
__decorate$B([
  s$7({ type: Boolean })
], Icon$1.prototype, "showTooltip", void 0);
__decorate$B([
  s$7()
], Icon$1.prototype, "mode", void 0);
__decorate$B([
  s$7({ type: Array })
], Icon$1.prototype, "pathData", void 0);
__decorate$B([
  s$7({ type: Object, noAttribute: true })
], Icon$1.prototype, "accData", void 0);
__decorate$B([
  s$7({ type: Boolean })
], Icon$1.prototype, "invalid", void 0);
__decorate$B([
  s$7({ noAttribute: true })
], Icon$1.prototype, "effectiveAccessibleName", void 0);
Icon$1 = __decorate$B([
  m$7({
    tag: "ui5-icon",
    languageAware: true,
    themeAware: true,
    renderer: y$4,
    template: IconTemplate,
    styles: iconCss
  }),
  l$b("click", {
    bubbles: true
  })
], Icon$1);
Icon$1.define();
const Icon$2 = Icon$1;
const name$J = "accept";
const pathData$J = "M455.8 94q9 9 3 19l-222 326q-4 8-12 9t-14-5l-151-167q-5-5-4.5-11t5.5-11l25-25q12-12 23 0l96 96q5 5 13 4.5t12-8.5l175-249q4-7 11.5-8t13.5 4z";
const ltr$J = true;
const collection$J = "SAP-icons-v4";
const packageName$J = "@ui5/webcomponents-icons";
y$1(name$J, { pathData: pathData$J, ltr: ltr$J, collection: collection$J, packageName: packageName$J });
const name$I = "accept";
const pathData$I = "M187 416q-12 0-20-9L71 299q-7-7-7-17 0-11 7.5-18.5T90 256q12 0 19 9l77 87 217-247q8-9 19-9t18.5 7.5T448 122q0 10-6 16L206 407q-7 9-19 9z";
const ltr$I = true;
const collection$I = "SAP-icons-v5";
const packageName$I = "@ui5/webcomponents-icons";
y$1(name$I, { pathData: pathData$I, ltr: ltr$I, collection: collection$I, packageName: packageName$I });
const acceptIcon = "accept";
const name$H = "complete";
const pathData$H = "M431.958 320h32v128q0 14-9.5 23t-22.5 9h-384q-14 0-23-9t-9-23V64q0-13 9-22.5t23-9.5h128v32h-128v384h384V320zm60-295q7 7 2 16l-185 272q-3 6-10 7t-12-4l-125-139q-9-9 0-18l21-21q10-10 19 0l80 80q5 5 11.5 4t9.5-8l146-207q3-6 9.5-7t11.5 4z";
const ltr$H = true;
const collection$H = "SAP-icons-v4";
const packageName$H = "@ui5/webcomponents-icons";
y$1(name$H, { pathData: pathData$H, ltr: ltr$H, collection: collection$H, packageName: packageName$H });
const name$G = "complete";
const pathData$G = "M438 224q11 0 18.5 7.5T464 250v140q0 38-26 64t-64 26H106q-38 0-64-26t-26-64V122q0-38 26-64t64-26h237q11 0 18 7.5t7 18.5-7 18-18 7H106q-16 0-27.5 11.5T67 122v268q0 16 11.5 27.5T106 429h268q16 0 27.5-11.5T413 390V250q0-11 7-18.5t18-7.5zm32-192q11 0 18.5 7.5T496 58q0 10-7 17L257 312q-6 8-18 8-10 0-18-8l-70-71q-7-7-7-18t7.5-18 18.5-7 18 7l51 53L452 40q8-8 18-8z";
const ltr$G = true;
const collection$G = "SAP-icons-v5";
const packageName$G = "@ui5/webcomponents-icons";
y$1(name$G, { pathData: pathData$G, ltr: ltr$G, collection: collection$G, packageName: packageName$G });
const complete = "complete";
const name$F = "border";
const pathData$F = "M448 32q13 0 22.5 9t9.5 23v384q0 14-9.5 23t-22.5 9H64q-14 0-23-9t-9-23V64q0-14 9-23t23-9h384zm0 32H64v384h384V64z";
const ltr$F = false;
const collection$F = "SAP-icons-v4";
const packageName$F = "@ui5/webcomponents-icons";
y$1(name$F, { pathData: pathData$F, ltr: ltr$F, collection: collection$F, packageName: packageName$F });
const name$E = "border";
const pathData$E = "M390 480H122q-38 0-64-26t-26-64V122q0-38 26-64t64-26h268q38 0 64 26t26 64v268q0 38-26 64t-64 26zM122 83q-17 0-28 11t-11 28v268q0 17 11 28t28 11h268q17 0 28-11t11-28V122q0-17-11-28t-28-11H122z";
const ltr$E = false;
const collection$E = "SAP-icons-v5";
const packageName$E = "@ui5/webcomponents-icons";
y$1(name$E, { pathData: pathData$E, ltr: ltr$E, collection: collection$E, packageName: packageName$E });
const border = "border";
const name$D = "tri-state";
const pathData$D = "M448 32q13 0 22.5 9.5T480 64v384q0 14-9.5 23t-22.5 9H64q-14 0-23-9t-9-23V64q0-13 9-22.5T64 32h384zm0 32H64v384h384V64zM160 345V169q0-8 8-8h176q8 0 8 8v176q0 8-8 8H168q-8 0-8-8z";
const ltr$D = false;
const collection$D = "SAP-icons-v4";
const packageName$D = "@ui5/webcomponents-icons";
y$1(name$D, { pathData: pathData$D, ltr: ltr$D, collection: collection$D, packageName: packageName$D });
const name$C = "tri-state";
const pathData$C = "M390 32q38 0 64 26t26 64v268q0 38-26 64t-64 26H122q-38 0-64-26t-26-64V122q0-38 26-64t64-26h268zm39 90q0-17-11-28t-28-11H122q-17 0-28 11t-11 28v268q0 17 11 28t28 11h268q17 0 28-11t11-28V122zm-77 38v192H160V160h192z";
const ltr$C = false;
const collection$C = "SAP-icons-v5";
const packageName$C = "@ui5/webcomponents-icons";
y$1(name$C, { pathData: pathData$C, ltr: ltr$C, collection: collection$C, packageName: packageName$C });
const triState = "tri-state";
function CheckBoxTemplate() {
  return jsxs("div", { class: {
    "ui5-checkbox-root": true,
    "ui5-checkbox--hoverable": !this.disabled && !this.readonly && f$i()
  }, role: this.accInfo.role, part: "root", "aria-checked": this.accInfo.ariaChecked, "aria-readonly": this.accInfo.ariaReadonly, "aria-disabled": this.accInfo.ariaDisabled, "aria-label": this.ariaLabelText, "aria-labelledby": this.ariaLabelledBy, "aria-describedby": this.ariaDescribedBy, "aria-required": this.accInfo.ariaRequired, tabindex: this.accInfo.tabindex, onMouseDown: this._onmousedown, onMouseUp: this._onmouseup, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._onclick, onFocusOut: this._onfocusout, children: [this.isDisplayOnly ? jsx("div", { class: "ui5-checkbox-display-only-icon-inner", children: jsx(Icon$2, { "aria-hidden": "true", name: displayOnlyIcon.call(this), class: "ui5-checkbox-display-only-icon", part: "icon" }) }) : jsx("div", { id: `${this._id}-CbBg`, class: "ui5-checkbox-inner", children: this.isCompletelyChecked && jsx(Icon$2, { "aria-hidden": "true", name: acceptIcon, class: "ui5-checkbox-icon", part: "icon" }) }), this.accInfo.role === "checkbox" && jsx("input", { id: `${this._id}-CB`, type: "checkbox", checked: this.checked, value: this.value, readonly: this.readonly, disabled: this.disabled, tabindex: -1, "aria-hidden": "true", "data-sap-no-tab-ref": true }), this.text && jsx(Label$2, { id: `${this._id}-label`, part: "label", class: "ui5-checkbox-label", wrappingType: this.wrappingType, required: this.required, children: this.text }), this.hasValueState && jsx("span", { id: `${this._id}-descr`, class: "ui5-hidden-text", children: this.valueStateText })] });
}
function displayOnlyIcon() {
  if (this.isCompletelyChecked) {
    return complete;
  }
  if (this.checked && this.indeterminate) {
    return triState;
  }
  return border;
}
var __decorate$A = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var CheckBox_1;
let isGlobalHandlerAttached$2 = false;
let activeCb;
let CheckBox$1 = CheckBox_1 = class CheckBox extends b$6 {
  get formValidityMessage() {
    return CheckBox_1.i18nBundle.getText(FORM_CHECKABLE_REQUIRED);
  }
  get formValidity() {
    return { valueMissing: this.required && !this.checked };
  }
  async formElementAnchor() {
    return this.getFocusDomRefAsync();
  }
  get formFormattedValue() {
    return this.checked ? this.value : null;
  }
  constructor() {
    super();
    this.disabled = false;
    this.readonly = false;
    this.displayOnly = false;
    this.required = false;
    this.indeterminate = false;
    this.checked = false;
    this.valueState = "None";
    this.wrappingType = "Normal";
    this.value = "on";
    this.active = false;
    this._deactivate = () => {
      if (activeCb) {
        activeCb.active = false;
      }
    };
    if (!isGlobalHandlerAttached$2) {
      document.addEventListener("mouseup", this._deactivate);
      isGlobalHandlerAttached$2 = true;
    }
  }
  onEnterDOM() {
    if (f$i()) {
      this.setAttribute("desktop", "");
    }
  }
  _onclick() {
    this.toggle();
  }
  _onmousedown() {
    if (this.readonly || this.disabled) {
      return;
    }
    this.active = true;
    activeCb = this;
  }
  _onmouseup() {
    this.active = false;
  }
  _onfocusout() {
    this.active = false;
  }
  _onkeydown(e2) {
    if (A$2(e2)) {
      e2.preventDefault();
    }
    if (this.readonly || this.disabled) {
      return;
    }
    if (b$4(e2)) {
      this.toggle();
    }
    this.active = true;
  }
  _onkeyup(e2) {
    if (A$2(e2)) {
      this.toggle();
    }
    this.active = false;
  }
  toggle() {
    if (this.canToggle()) {
      const lastState = {
        checked: this.checked,
        indeterminate: this.indeterminate
      };
      if (this.indeterminate) {
        this.indeterminate = false;
        this.checked = true;
      } else {
        this.checked = !this.checked;
      }
      const changePrevented = !this.fireDecoratorEvent("change");
      const valueChangePrevented = !this.fireDecoratorEvent("value-changed");
      if (changePrevented || valueChangePrevented) {
        this.checked = lastState.checked;
        this.indeterminate = lastState.indeterminate;
      }
    }
    return this;
  }
  canToggle() {
    return !(this.disabled || this.readonly || this.displayOnly);
  }
  valueStateTextMappings() {
    return {
      "Negative": CheckBox_1.i18nBundle.getText(VALUE_STATE_ERROR),
      "Critical": CheckBox_1.i18nBundle.getText(VALUE_STATE_WARNING),
      "Positive": CheckBox_1.i18nBundle.getText(VALUE_STATE_SUCCESS)
    };
  }
  get ariaLabelText() {
    return A$3(this) || M$1(this);
  }
  get classes() {
    return {
      main: {
        "ui5-checkbox--hoverable": !this.disabled && !this.readonly && f$i()
      }
    };
  }
  get ariaReadonly() {
    return this.readonly || this.displayOnly ? "true" : void 0;
  }
  get effectiveAriaDisabled() {
    return this.disabled ? "true" : void 0;
  }
  get effectiveAriaChecked() {
    return this.indeterminate && this.checked ? "mixed" : this.checked;
  }
  get ariaLabelledBy() {
    if (!this.ariaLabelText) {
      return this.text ? `${this._id}-label` : void 0;
    }
    return void 0;
  }
  get ariaDescribedBy() {
    return this.hasValueState ? `${this._id}-descr` : void 0;
  }
  get hasValueState() {
    return this.valueState !== o$4.None;
  }
  get valueStateText() {
    if (this.valueState !== o$4.None && this.valueState !== o$4.Information) {
      return this.valueStateTextMappings()[this.valueState];
    }
  }
  get effectiveTabIndex() {
    const tabindex = this.getAttribute("tabindex");
    if (this.tabbable) {
      return tabindex ? parseInt(tabindex) : 0;
    }
  }
  get tabbable() {
    return !this.disabled && !this.displayOnly;
  }
  get isCompletelyChecked() {
    return this.checked && !this.indeterminate;
  }
  get isDisplayOnly() {
    return this.displayOnly && !this.disabled;
  }
  get accInfo() {
    return {
      "role": this._accInfo ? this._accInfo.role : "checkbox",
      "ariaChecked": this._accInfo ? this._accInfo.ariaChecked : this.effectiveAriaChecked,
      "ariaReadonly": this._accInfo ? this._accInfo.ariaReadonly : this.ariaReadonly,
      "ariaDisabled": this._accInfo ? this._accInfo.ariaDisabled : this.effectiveAriaDisabled,
      "ariaRequired": this._accInfo ? this._accInfo.ariaRequired : this.required,
      "tabindex": this._accInfo ? this._accInfo.tabindex : this.effectiveTabIndex
    };
  }
};
__decorate$A([
  s$7()
], CheckBox$1.prototype, "accessibleNameRef", void 0);
__decorate$A([
  s$7()
], CheckBox$1.prototype, "accessibleName", void 0);
__decorate$A([
  s$7({ type: Boolean })
], CheckBox$1.prototype, "disabled", void 0);
__decorate$A([
  s$7({ type: Boolean })
], CheckBox$1.prototype, "readonly", void 0);
__decorate$A([
  s$7({ type: Boolean })
], CheckBox$1.prototype, "displayOnly", void 0);
__decorate$A([
  s$7({ type: Boolean })
], CheckBox$1.prototype, "required", void 0);
__decorate$A([
  s$7({ type: Boolean })
], CheckBox$1.prototype, "indeterminate", void 0);
__decorate$A([
  s$7({ type: Boolean })
], CheckBox$1.prototype, "checked", void 0);
__decorate$A([
  s$7()
], CheckBox$1.prototype, "text", void 0);
__decorate$A([
  s$7()
], CheckBox$1.prototype, "valueState", void 0);
__decorate$A([
  s$7()
], CheckBox$1.prototype, "wrappingType", void 0);
__decorate$A([
  s$7()
], CheckBox$1.prototype, "name", void 0);
__decorate$A([
  s$7()
], CheckBox$1.prototype, "value", void 0);
__decorate$A([
  s$7({ type: Boolean })
], CheckBox$1.prototype, "active", void 0);
__decorate$A([
  s$7({ type: Object })
], CheckBox$1.prototype, "_accInfo", void 0);
__decorate$A([
  i$8("@ui5/webcomponents")
], CheckBox$1, "i18nBundle", void 0);
CheckBox$1 = CheckBox_1 = __decorate$A([
  m$7({
    tag: "ui5-checkbox",
    languageAware: true,
    formAssociated: true,
    renderer: y$4,
    template: CheckBoxTemplate,
    styles: checkboxCss
  }),
  l$b("change", {
    bubbles: true,
    cancelable: true
  }),
  l$b("value-changed", {
    bubbles: true,
    cancelable: true
  })
], CheckBox$1);
CheckBox$1.define();
const CheckBox$2 = CheckBox$1;
const CheckBox2 = withWebComponent("ui5-checkbox", ["accessibleName", "accessibleNameRef", "name", "text", "value", "valueState", "wrappingType"], ["checked", "disabled", "displayOnly", "indeterminate", "readonly", "required"], [], ["change"]);
CheckBox2.displayName = "CheckBox";
var ButtonDesign;
(function(ButtonDesign2) {
  ButtonDesign2["Default"] = "Default";
  ButtonDesign2["Positive"] = "Positive";
  ButtonDesign2["Negative"] = "Negative";
  ButtonDesign2["Transparent"] = "Transparent";
  ButtonDesign2["Emphasized"] = "Emphasized";
  ButtonDesign2["Attention"] = "Attention";
})(ButtonDesign || (ButtonDesign = {}));
const ButtonDesign$1 = ButtonDesign;
function r$7(e2) {
  var t3, f4, n2 = "";
  if ("string" == typeof e2 || "number" == typeof e2) n2 += e2;
  else if ("object" == typeof e2) if (Array.isArray(e2)) {
    var o2 = e2.length;
    for (t3 = 0; t3 < o2; t3++) e2[t3] && (f4 = r$7(e2[t3])) && (n2 && (n2 += " "), n2 += f4);
  } else for (f4 in e2) e2[f4] && (n2 && (n2 += " "), n2 += f4);
  return n2;
}
function clsx() {
  for (var e2, t3, f4 = 0, n2 = "", o2 = arguments.length; f4 < o2; f4++) (e2 = arguments[f4]) && (t3 = r$7(e2)) && (n2 && (n2 += " "), n2 += t3);
  return n2;
}
const d$4 = (e2) => (l3, a3) => {
  const r3 = l3.constructor;
  Object.prototype.hasOwnProperty.call(r3, "metadata") || (r3.metadata = {});
  const o2 = r3.metadata;
  o2.slots || (o2.slots = {});
  const t3 = o2.slots;
  if (e2 && e2.default && t3.default) throw new Error("Only one slot can be the default slot.");
  const n2 = e2 && e2.default ? "default" : a3;
  e2 = e2 || { type: HTMLElement }, e2.type || (e2.type = HTMLElement), t3[n2] || (t3[n2] = e2), e2.default && (delete t3.default.default, t3.default.propertyName = a3), r3.metadata.managedSlots = true;
};
const t$6 = (r3) => Array.from(r3).filter((e2) => e2.nodeType !== Node.COMMENT_NODE && (e2.nodeType !== Node.TEXT_NODE || (e2.nodeValue || "").trim().length !== 0)).length > 0;
let e$6;
const l$6 = () => (e$6 === void 0 && (e$6 = b$c()), e$6);
function n$7(e2) {
  return e2.toLowerCase();
}
var ButtonType;
(function(ButtonType2) {
  ButtonType2["Button"] = "Button";
  ButtonType2["Submit"] = "Submit";
  ButtonType2["Reset"] = "Reset";
})(ButtonType || (ButtonType = {}));
const ButtonType$1 = ButtonType;
var ButtonBadgeDesign;
(function(ButtonBadgeDesign2) {
  ButtonBadgeDesign2["InlineText"] = "InlineText";
  ButtonBadgeDesign2["OverlayText"] = "OverlayText";
  ButtonBadgeDesign2["AttentionDot"] = "AttentionDot";
})(ButtonBadgeDesign || (ButtonBadgeDesign = {}));
const ButtonBadgeDesign$1 = ButtonBadgeDesign;
var BusyIndicatorTextPlacement;
(function(BusyIndicatorTextPlacement2) {
  BusyIndicatorTextPlacement2["Top"] = "Top";
  BusyIndicatorTextPlacement2["Bottom"] = "Bottom";
})(BusyIndicatorTextPlacement || (BusyIndicatorTextPlacement = {}));
const BusyIndicatorTextPlacement$1 = BusyIndicatorTextPlacement;
function BusyIndicatorTemplate() {
  return jsxs("div", { class: "ui5-busy-indicator-root", children: [this._isBusy && jsxs("div", { class: {
    "ui5-busy-indicator-busy-area": true,
    "ui5-busy-indicator-busy-area-over-content": this.hasContent
  }, title: this.ariaTitle, tabindex: 0, role: "progressbar", "aria-valuemin": 0, "aria-valuemax": 100, "aria-valuetext": "Busy", "aria-labelledby": this.labelId, "data-sap-focus-ref": true, children: [this.textPosition.top && BusyIndicatorBusyText.call(this), jsxs("div", { class: "ui5-busy-indicator-circles-wrapper", children: [jsx("div", { class: "ui5-busy-indicator-circle circle-animation-0" }), jsx("div", { class: "ui5-busy-indicator-circle circle-animation-1" }), jsx("div", { class: "ui5-busy-indicator-circle circle-animation-2" })] }), this.textPosition.bottom && BusyIndicatorBusyText.call(this)] }), jsx("slot", {}), this._isBusy && jsx("span", { "data-ui5-focus-redirect": true, tabindex: 0, role: "none", onFocusIn: this._redirectFocus })] });
}
function BusyIndicatorBusyText() {
  return jsx(Fragment, { children: this.text && jsx(Label$2, { id: `${this._id}-label`, class: "ui5-busy-indicator-text", children: this.text }) });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const busyIndicatorCss = `:host(:not([hidden])){display:inline-block}:host([_is-busy]){color:var(--_ui5-v2-14-0_busy_indicator_color)}:host([size="S"]) .ui5-busy-indicator-root{min-width:1.625rem;min-height:.5rem}:host([size="S"][text]:not([text=""])) .ui5-busy-indicator-root{min-height:1.75rem}:host([size="S"]) .ui5-busy-indicator-circle{width:.5rem;height:.5rem}:host([size="S"]) .ui5-busy-indicator-circle:first-child,:host([size="S"]) .ui5-busy-indicator-circle:nth-child(2){margin-inline-end:.0625rem}:host(:not([size])) .ui5-busy-indicator-root,:host([size="M"]) .ui5-busy-indicator-root{min-width:3.375rem;min-height:1rem}:host([size="M"]) .ui5-busy-indicator-circle:first-child,:host([size="M"]) .ui5-busy-indicator-circle:nth-child(2){margin-inline-end:.1875rem}:host(:not([size])[text]:not([text=""])) .ui5-busy-indicator-root,:host([size="M"][text]:not([text=""])) .ui5-busy-indicator-root{min-height:2.25rem}:host(:not([size])) .ui5-busy-indicator-circle,:host([size="M"]) .ui5-busy-indicator-circle{width:1rem;height:1rem}:host([size="L"]) .ui5-busy-indicator-root{min-width:6.5rem;min-height:2rem}:host([size="L"]) .ui5-busy-indicator-circle:first-child,:host([size="L"]) .ui5-busy-indicator-circle:nth-child(2){margin-inline-end:.25rem}:host([size="L"][text]:not([text=""])) .ui5-busy-indicator-root{min-height:3.25rem}:host([size="L"]) .ui5-busy-indicator-circle{width:2rem;height:2rem}.ui5-busy-indicator-root{display:flex;justify-content:center;align-items:center;position:relative;background-color:inherit;height:inherit;border-radius:inherit}.ui5-busy-indicator-busy-area.ui5-busy-indicator-busy-area-over-content{position:absolute;inset:0;z-index:99}.ui5-busy-indicator-busy-area{display:flex;justify-content:center;align-items:center;background-color:inherit;flex-direction:column;border-radius:inherit}:host([active]) ::slotted(*){opacity:var(--sapContent_DisabledOpacity)}:host([desktop]) .ui5-busy-indicator-busy-area:focus,.ui5-busy-indicator-busy-area:focus-visible{outline:var(--_ui5-v2-14-0_busy_indicator_focus_outline);outline-offset:-2px}.ui5-busy-indicator-circles-wrapper{line-height:0}.ui5-busy-indicator-circle{display:inline-block;background-color:currentColor;border-radius:50%}.ui5-busy-indicator-circle:before{content:"";width:100%;height:100%;border-radius:100%}.circle-animation-0{animation:grow 1.6s infinite cubic-bezier(.32,.06,.85,1.11)}.circle-animation-1{animation:grow 1.6s infinite cubic-bezier(.32,.06,.85,1.11);animation-delay:.2s}.circle-animation-2{animation:grow 1.6s infinite cubic-bezier(.32,.06,.85,1.11);animation-delay:.4s}.ui5-busy-indicator-text{width:100%;text-align:center}:host([text-placement="Top"]) .ui5-busy-indicator-text{margin-bottom:.5rem}:host(:not([text-placement])) .ui5-busy-indicator-text,:host([text-placement="Bottom"]) .ui5-busy-indicator-text{margin-top:.5rem}@keyframes grow{0%,50%,to{-webkit-transform:scale(.5);-moz-transform:scale(.5);transform:scale(.5)}25%{-webkit-transform:scale(1);-moz-transform:scale(1);transform:scale(1)}}
`;
var __decorate$z = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var BusyIndicator_1;
let BusyIndicator = BusyIndicator_1 = class BusyIndicator2 extends b$6 {
  constructor() {
    super();
    this.size = "M";
    this.active = false;
    this.delay = 1e3;
    this.textPlacement = "Bottom";
    this._isBusy = false;
    this._keydownHandler = this._handleKeydown.bind(this);
    this._preventEventHandler = this._preventEvent.bind(this);
  }
  onEnterDOM() {
    this.addEventListener("keydown", this._keydownHandler, {
      capture: true
    });
    this.addEventListener("keyup", this._preventEventHandler, {
      capture: true
    });
    if (f$i()) {
      this.setAttribute("desktop", "");
    }
  }
  onExitDOM() {
    if (this._busyTimeoutId) {
      clearTimeout(this._busyTimeoutId);
      delete this._busyTimeoutId;
    }
    this.removeEventListener("keydown", this._keydownHandler, true);
    this.removeEventListener("keyup", this._preventEventHandler, true);
  }
  get ariaTitle() {
    return BusyIndicator_1.i18nBundle.getText(BUSY_INDICATOR_TITLE);
  }
  get labelId() {
    return this.text ? `${this._id}-label` : void 0;
  }
  get textPosition() {
    return {
      top: this.text && this.textPlacement === BusyIndicatorTextPlacement$1.Top,
      bottom: this.text && this.textPlacement === BusyIndicatorTextPlacement$1.Bottom
    };
  }
  get hasContent() {
    return t$6(Array.from(this.children));
  }
  onBeforeRendering() {
    if (this.active) {
      if (!this._isBusy && !this._busyTimeoutId) {
        this._busyTimeoutId = setTimeout(() => {
          delete this._busyTimeoutId;
          this._isBusy = true;
        }, Math.max(0, this.delay));
      }
    } else {
      if (this._busyTimeoutId) {
        clearTimeout(this._busyTimeoutId);
        delete this._busyTimeoutId;
      }
      this._isBusy = false;
    }
  }
  _handleKeydown(e2) {
    if (!this._isBusy) {
      return;
    }
    e2.stopImmediatePropagation();
    if (x(e2)) {
      this.focusForward = true;
      this.shadowRoot.querySelector("[data-ui5-focus-redirect]").focus();
      this.focusForward = false;
    }
  }
  _preventEvent(e2) {
    if (this._isBusy) {
      e2.stopImmediatePropagation();
    }
  }
  /**
   * Moves the focus to busy area when coming with SHIFT + TAB
   */
  _redirectFocus(e2) {
    if (this.focusForward) {
      return;
    }
    e2.preventDefault();
    this.shadowRoot.querySelector(".ui5-busy-indicator-busy-area").focus();
  }
};
__decorate$z([
  s$7()
], BusyIndicator.prototype, "text", void 0);
__decorate$z([
  s$7()
], BusyIndicator.prototype, "size", void 0);
__decorate$z([
  s$7({ type: Boolean })
], BusyIndicator.prototype, "active", void 0);
__decorate$z([
  s$7({ type: Number })
], BusyIndicator.prototype, "delay", void 0);
__decorate$z([
  s$7()
], BusyIndicator.prototype, "textPlacement", void 0);
__decorate$z([
  s$7({ type: Boolean })
], BusyIndicator.prototype, "_isBusy", void 0);
__decorate$z([
  i$8("@ui5/webcomponents")
], BusyIndicator, "i18nBundle", void 0);
BusyIndicator = BusyIndicator_1 = __decorate$z([
  m$7({
    tag: "ui5-busy-indicator",
    languageAware: true,
    styles: busyIndicatorCss,
    renderer: y$4,
    template: BusyIndicatorTemplate
  })
], BusyIndicator);
BusyIndicator.define();
const BusyIndicator$1 = BusyIndicator;
var BusyIndicatorSize;
(function(BusyIndicatorSize2) {
  BusyIndicatorSize2["S"] = "S";
  BusyIndicatorSize2["M"] = "M";
  BusyIndicatorSize2["L"] = "L";
})(BusyIndicatorSize || (BusyIndicatorSize = {}));
const BusyIndicatorSize$1 = BusyIndicatorSize;
function ButtonTemplate(injectedProps) {
  return jsxs(Fragment, { children: [jsxs("button", { type: "button", class: {
    "ui5-button-root": true,
    "ui5-button-badge-placement-end": this.badge[0]?.design === "InlineText",
    "ui5-button-badge-placement-end-top": this.badge[0]?.design === "OverlayText",
    "ui5-button-badge-dot": this.badge[0]?.design === "AttentionDot"
  }, disabled: this.disabled, "data-sap-focus-ref": true, "aria-pressed": injectedProps?.ariaPressed, "aria-valuemin": injectedProps?.ariaValueMin, "aria-valuemax": injectedProps?.ariaValueMax, "aria-valuenow": injectedProps?.ariaValueNow, "aria-valuetext": injectedProps?.ariaValueText, onFocusOut: this._onfocusout, onClick: this._onclick, onMouseDown: this._onmousedown, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onTouchStart: this._ontouchstart, onTouchEnd: this._ontouchend, tabindex: this.tabIndexValue, "aria-expanded": this.accessibilityAttributes.expanded, "aria-controls": this.accessibilityAttributes.controls, "aria-haspopup": this._hasPopup, "aria-label": this.ariaLabelText, "aria-description": this.ariaDescriptionText, "aria-busy": this.loading ? "true" : void 0, title: this.buttonTitle, part: "button", role: this.effectiveAccRole, children: [this.icon && jsx(Icon$2, { class: "ui5-button-icon", name: this.icon, mode: "Decorative", part: "icon" }), jsx("span", { id: `${this._id}-content`, class: "ui5-button-text", children: jsx("bdi", { children: jsx("slot", {}) }) }), this.endIcon && jsx(Icon$2, { class: "ui5-button-end-icon", name: this.endIcon, mode: "Decorative", part: "endIcon" }), this.shouldRenderBadge && jsx("slot", { name: "badge" })] }), this.loading && jsx(BusyIndicator$1, { id: `${this._id}-button-busy-indicator`, class: "ui5-button-busy-indicator", size: this.iconOnly ? BusyIndicatorSize$1.S : BusyIndicatorSize$1.M, active: true, delay: this.loadingDelay, inert: this.loading })] });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const buttonCss = `:host{vertical-align:middle}.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:inline-block}:host{min-width:var(--_ui5-v2-14-0_button_base_min_width);height:var(--_ui5-v2-14-0_button_base_height);line-height:normal;font-family:var(--_ui5-v2-14-0_button_fontFamily);font-size:var(--sapFontSize);text-shadow:var(--_ui5-v2-14-0_button_text_shadow);border-radius:var(--_ui5-v2-14-0_button_border_radius);cursor:pointer;background-color:var(--sapButton_Background);border:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);color:var(--sapButton_TextColor);box-sizing:border-box;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;-webkit-tap-highlight-color:transparent}.ui5-button-root{min-width:inherit;cursor:inherit;height:100%;width:100%;box-sizing:border-box;display:flex;justify-content:center;align-items:center;outline:none;padding:0 var(--_ui5-v2-14-0_button_base_padding);position:relative;background:transparent;border:none;color:inherit;text-shadow:inherit;font:inherit;white-space:inherit;overflow:inherit;text-overflow:inherit;letter-spacing:inherit;word-spacing:inherit;line-height:inherit;-webkit-user-select:none;-moz-user-select:none;user-select:none}:host(:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host(:not([hidden]):not([disabled]).ui5_hovered){background:var(--sapButton_Hover_Background);border:1px solid var(--sapButton_Hover_BorderColor);color:var(--sapButton_Hover_TextColor)}.ui5-button-icon,.ui5-button-end-icon{color:inherit;flex-shrink:0}.ui5-button-end-icon{margin-inline-start:var(--_ui5-v2-14-0_button_base_icon_margin)}:host([icon-only]:not([has-end-icon])) .ui5-button-root{min-width:auto;padding:0}:host([icon-only]) .ui5-button-text{display:none}.ui5-button-text{outline:none;position:relative;white-space:inherit;overflow:inherit;text-overflow:inherit}:host([has-icon]:not(:empty)) .ui5-button-text{margin-inline-start:var(--_ui5-v2-14-0_button_base_icon_margin)}:host([has-end-icon]:not([has-icon]):empty) .ui5-button-end-icon{margin-inline-start:0}:host([disabled]){opacity:var(--sapContent_DisabledOpacity);pointer-events:unset;cursor:default}:host([has-icon]:not([icon-only]):not([has-end-icon])) .ui5-button-text{min-width:calc(var(--_ui5-v2-14-0_button_base_min_width) - var(--_ui5-v2-14-0_button_base_icon_margin) - 1rem)}:host([disabled]:active){pointer-events:none}:host([desktop]:not([loading])) .ui5-button-root:focus-within:after,:host(:not([active])) .ui5-button-root:focus-visible:after,:host([desktop][active][design="Emphasized"]) .ui5-button-root:focus-within:after,:host([active][design="Emphasized"]) .ui5-button-root:focus-visible:after,:host([desktop][active]) .ui5-button-root:focus-within:before,:host([active]) .ui5-button-root:focus-visible:before{content:"";position:absolute;box-sizing:border-box;inset:.0625rem;border:var(--_ui5-v2-14-0_button_focused_border);border-radius:var(--_ui5-v2-14-0_button_focused_border_radius)}:host([desktop][active]) .ui5-button-root:focus-within:before,:host([active]) .ui5-button-root:focus-visible:before{border-color:var(--_ui5-v2-14-0_button_pressed_focused_border_color)}:host([design="Emphasized"][desktop]) .ui5-button-root:focus-within:after,:host([design="Emphasized"]) .ui5-button-root:focus-visible:after{border-color:var(--_ui5-v2-14-0_button_emphasized_focused_border_color)}:host([design="Emphasized"][desktop]) .ui5-button-root:focus-within:before,:host([design="Emphasized"]) .ui5-button-root:focus-visible:before{content:"";position:absolute;box-sizing:border-box;inset:.0625rem;border:var(--_ui5-v2-14-0_button_emphasized_focused_border_before);border-radius:var(--_ui5-v2-14-0_button_focused_border_radius)}.ui5-button-root::-moz-focus-inner{border:0}bdi{display:block;white-space:inherit;overflow:inherit;text-overflow:inherit}:host([ui5-button][active]:not([disabled]):not([non-interactive])){background-image:none;background-color:var(--sapButton_Active_Background);border-color:var(--sapButton_Active_BorderColor);color:var(--sapButton_Active_TextColor)}:host([design="Positive"]){background-color:var(--sapButton_Accept_Background);border-color:var(--sapButton_Accept_BorderColor);color:var(--sapButton_Accept_TextColor)}:host([design="Positive"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host([design="Positive"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered){background-color:var(--sapButton_Accept_Hover_Background);border-color:var(--sapButton_Accept_Hover_BorderColor);color:var(--sapButton_Accept_Hover_TextColor)}:host([ui5-button][design="Positive"][active]:not([non-interactive])){background-color:var(--sapButton_Accept_Active_Background);border-color:var(--sapButton_Accept_Active_BorderColor);color:var(--sapButton_Accept_Active_TextColor)}:host([design="Negative"]){background-color:var(--sapButton_Reject_Background);border-color:var(--sapButton_Reject_BorderColor);color:var(--sapButton_Reject_TextColor)}:host([design="Negative"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host([design="Negative"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered){background-color:var(--sapButton_Reject_Hover_Background);border-color:var(--sapButton_Reject_Hover_BorderColor);color:var(--sapButton_Reject_Hover_TextColor)}:host([ui5-button][design="Negative"][active]:not([non-interactive])){background-color:var(--sapButton_Reject_Active_Background);border-color:var(--sapButton_Reject_Active_BorderColor);color:var(--sapButton_Reject_Active_TextColor)}:host([design="Attention"]){background-color:var(--sapButton_Attention_Background);border-color:var(--sapButton_Attention_BorderColor);color:var(--sapButton_Attention_TextColor)}:host([design="Attention"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host([design="Attention"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered){background-color:var(--sapButton_Attention_Hover_Background);border-color:var(--sapButton_Attention_Hover_BorderColor);color:var(--sapButton_Attention_Hover_TextColor)}:host([ui5-button][design="Attention"][active]:not([non-interactive])){background-color:var(--sapButton_Attention_Active_Background);border-color:var(--sapButton_Attention_Active_BorderColor);color:var(--sapButton_Attention_Active_TextColor)}:host([design="Emphasized"]){background-color:var(--sapButton_Emphasized_Background);border-color:var(--sapButton_Emphasized_BorderColor);border-width:var(--_ui5-v2-14-0_button_emphasized_border_width);color:var(--sapButton_Emphasized_TextColor);font-family:var(--sapButton_Emphasized_FontFamily)}:host([design="Emphasized"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host([design="Emphasized"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered){background-color:var(--sapButton_Emphasized_Hover_Background);border-color:var(--sapButton_Emphasized_Hover_BorderColor);border-width:var(--_ui5-v2-14-0_button_emphasized_border_width);color:var(--sapButton_Emphasized_Hover_TextColor)}:host([ui5-button][design="Empasized"][active]:not([non-interactive])){background-color:var(--sapButton_Emphasized_Active_Background);border-color:var(--sapButton_Emphasized_Active_BorderColor);color:var(--sapButton_Emphasized_Active_TextColor)}:host([design="Emphasized"][desktop]) .ui5-button-root:focus-within:after,:host([design="Emphasized"]) .ui5-button-root:focus-visible:after{border-color:var(--_ui5-v2-14-0_button_emphasized_focused_border_color);outline:none}:host([design="Emphasized"][desktop][active]:not([non-interactive])) .ui5-button-root:focus-within:after,:host([design="Emphasized"][active]:not([non-interactive])) .ui5-button-root:focus-visible:after{border-color:var(--_ui5-v2-14-0_button_emphasized_focused_active_border_color)}:host([design="Transparent"]){background-color:var(--sapButton_Lite_Background);color:var(--sapButton_Lite_TextColor);border-color:var(--sapButton_Lite_BorderColor)}:host([design="Transparent"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host([design="Transparent"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered){background-color:var(--sapButton_Lite_Hover_Background);border-color:var(--sapButton_Lite_Hover_BorderColor);color:var(--sapButton_Lite_Hover_TextColor)}:host([ui5-button][design="Transparent"][active]:not([non-interactive])){background-color:var(--sapButton_Lite_Active_Background);border-color:var(--sapButton_Lite_Active_BorderColor);color:var(--sapButton_Active_TextColor)}:host([ui5-segmented-button-item][active][desktop]) .ui5-button-root:focus-within:after,:host([ui5-segmented-button-item][active]) .ui5-button-root:focus-visible:after,:host([pressed][desktop]) .ui5-button-root:focus-within:after,:host([pressed]) .ui5-button-root:focus-visible:after{border-color:var(--_ui5-v2-14-0_button_pressed_focused_border_color);outline:none}:host([ui5-segmented-button-item][desktop]:not(:last-child)) .ui5-button-root:focus-within:after,:host([ui5-segmented-button-item]:not(:last-child)) .ui5-button-root:focus-visible:after{border-top-right-radius:var(--_ui5-v2-14-0_button_focused_inner_border_radius);border-bottom-right-radius:var(--_ui5-v2-14-0_button_focused_inner_border_radius)}:host([ui5-segmented-button-item][desktop]:not(:first-child)) .ui5-button-root:focus-within:after,:host([ui5-segmented-button-item]:not(:first-child)) .ui5-button-root:focus-visible:after{border-top-left-radius:var(--_ui5-v2-14-0_button_focused_inner_border_radius);border-bottom-left-radius:var(--_ui5-v2-14-0_button_focused_inner_border_radius)}::slotted([slot="badge"][design="InlineText"]){pointer-events:initial;font-family:var(--sapButton_FontFamily);font-size:var(--sapFontSmallSize);padding-inline-start:.25rem;--_ui5-v2-14-0-tag-height: .625rem}::slotted([slot="badge"][design="OverlayText"]){pointer-events:initial;position:absolute;top:0;inset-inline-end:0;margin:-.5rem;z-index:1;font-family:var(--sapButton_FontFamily);font-size:var(--sapFontSmallSize);--_ui5-v2-14-0-tag-height: .625rem}::slotted([slot="badge"][design="AttentionDot"]){pointer-events:initial;content:"";position:absolute;top:0;inset-inline-end:0;margin:-.25rem;z-index:1}:host(:state(has-overlay-badge)){overflow:visible;margin-inline-end:.3125rem}:host([loading]){position:relative;pointer-events:unset}:host([loading]) .ui5-button-root{opacity:var(--sapContent_DisabledOpacity)}:host([loading][design="Emphasized"]){background-color:inherit;border:inherit}:host([design="Emphasized"][loading]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host([design="Emphasized"][loading]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered){background-color:inherit;border:inherit}:host([design="Emphasized"][loading]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover) .ui5-button-root,:host([design="Emphasized"][loading]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered) .ui5-button-root{background-color:var(--sapButton_Emphasized_Hover_Background)}:host([loading][design="Emphasized"]) .ui5-button-root{background-color:var(--sapButton_Emphasized_Background);border-color:var(--sapButton_Emphasized_BorderColor)}.ui5-button-busy-indicator{position:absolute;height:100%;width:100%;top:0}
`;
var __decorate$y = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var Button_1;
let isGlobalHandlerAttached$1 = false;
let activeButton = null;
let Button$1 = Button_1 = class Button extends b$6 {
  constructor() {
    super();
    this.design = "Default";
    this.disabled = false;
    this.submits = false;
    this.accessibilityAttributes = {};
    this.type = "Button";
    this.accessibleRole = "Button";
    this.active = false;
    this.iconOnly = false;
    this.hasIcon = false;
    this.hasEndIcon = false;
    this.nonInteractive = false;
    this.loading = false;
    this.loadingDelay = 1e3;
    this._iconSettings = {};
    this.forcedTabIndex = "0";
    this._isTouch = false;
    this._cancelAction = false;
    this._clickHandlerAttached = false;
    this._deactivate = () => {
      if (activeButton) {
        activeButton._setActiveState(false);
      }
    };
    this._onclickBound = (e2) => {
      if (e2 instanceof CustomEvent) {
        return;
      }
      this._onclick(e2);
    };
    if (!this._clickHandlerAttached) {
      this.addEventListener("click", this._onclickBound);
      this._clickHandlerAttached = true;
    }
    if (!isGlobalHandlerAttached$1) {
      document.addEventListener("mouseup", this._deactivate);
      isGlobalHandlerAttached$1 = true;
    }
  }
  _ontouchstart() {
    if (this.nonInteractive) {
      return;
    }
    this._setActiveState(true);
  }
  onEnterDOM() {
    if (f$i()) {
      this.setAttribute("desktop", "");
    }
    if (!this._clickHandlerAttached) {
      this.addEventListener("click", this._onclickBound);
      this._clickHandlerAttached = true;
    }
  }
  onExitDOM() {
    if (this._clickHandlerAttached) {
      this.removeEventListener("click", this._onclickBound);
      this._clickHandlerAttached = false;
    }
  }
  async onBeforeRendering() {
    this._setBadgeOverlayStyle();
    this.hasIcon = !!this.icon;
    this.hasEndIcon = !!this.endIcon;
    this.iconOnly = this.isIconOnly;
    const defaultTooltip = await this.getDefaultTooltip();
    this.buttonTitle = this.iconOnly ? this.tooltip ?? defaultTooltip : this.tooltip;
  }
  _setBadgeOverlayStyle() {
    const needsOverflowVisible = this.badge.length && (this.badge[0].design === ButtonBadgeDesign$1.AttentionDot || this.badge[0].design === ButtonBadgeDesign$1.OverlayText);
    if (needsOverflowVisible) {
      this._internals.states.add("has-overlay-badge");
    } else {
      this._internals.states.delete("has-overlay-badge");
    }
  }
  _onclick(e2) {
    e2.stopImmediatePropagation();
    if (this.nonInteractive) {
      return;
    }
    if (this.loading) {
      e2.preventDefault();
      return;
    }
    const { altKey, ctrlKey, metaKey, shiftKey } = e2;
    const prevented = !this.fireDecoratorEvent("click", {
      originalEvent: e2,
      altKey,
      ctrlKey,
      metaKey,
      shiftKey
    });
    if (prevented) {
      e2.preventDefault();
      return;
    }
    if (this._isSubmit) {
      i$b(this);
    }
    if (this._isReset) {
      m$9(this);
    }
    if (h$9()) {
      this.getDomRef()?.focus();
    }
  }
  _onmousedown() {
    if (this.nonInteractive) {
      return;
    }
    this._setActiveState(true);
    activeButton = this;
  }
  _ontouchend(e2) {
    if (this.disabled || this.loading) {
      e2.preventDefault();
      e2.stopPropagation();
    }
    if (this.active) {
      this._setActiveState(false);
    }
    if (activeButton) {
      activeButton._setActiveState(false);
    }
  }
  _onkeydown(e2) {
    this._cancelAction = Ko(e2) || m$4(e2);
    if (A$2(e2) || b$4(e2)) {
      this._setActiveState(true);
    } else if (this._cancelAction) {
      this._setActiveState(false);
    }
  }
  _onkeyup(e2) {
    if (this._cancelAction) {
      e2.preventDefault();
    }
    if (A$2(e2) || b$4(e2)) {
      if (this.active) {
        this._setActiveState(false);
      }
    }
  }
  _onfocusout() {
    if (this.nonInteractive) {
      return;
    }
    if (this.active) {
      this._setActiveState(false);
    }
  }
  _setActiveState(active) {
    const eventPrevented = !this.fireDecoratorEvent("active-state-change");
    if (eventPrevented || this.loading) {
      return;
    }
    this.active = active;
  }
  get _hasPopup() {
    return this.accessibilityAttributes.hasPopup;
  }
  get hasButtonType() {
    return this.design !== ButtonDesign$1.Default && this.design !== ButtonDesign$1.Transparent;
  }
  get isIconOnly() {
    return !t$6(this.text);
  }
  static typeTextMappings() {
    return {
      "Positive": BUTTON_ARIA_TYPE_ACCEPT,
      "Negative": BUTTON_ARIA_TYPE_REJECT,
      "Emphasized": BUTTON_ARIA_TYPE_EMPHASIZED,
      "Attention": BUTTON_ARIA_TYPE_ATTENTION
    };
  }
  getDefaultTooltip() {
    if (!l$6()) {
      return;
    }
    return A$1(this.icon);
  }
  get buttonTypeText() {
    return Button_1.i18nBundle.getText(Button_1.typeTextMappings()[this.design]);
  }
  get effectiveAccRole() {
    return n$7(this.accessibleRole);
  }
  get tabIndexValue() {
    if (this.disabled) {
      return;
    }
    const tabindex = this.getAttribute("tabindex");
    if (tabindex) {
      return Number.parseInt(tabindex);
    }
    return this.nonInteractive ? -1 : Number.parseInt(this.forcedTabIndex);
  }
  get ariaLabelText() {
    const textContent = this.textContent || "";
    const ariaLabelText = A$3(this) || "";
    const typeLabelText = this.hasButtonType ? this.buttonTypeText : "";
    const internalLabelText = this.effectiveBadgeDescriptionText || "";
    const labelParts = [textContent, ariaLabelText, typeLabelText, internalLabelText].filter((part) => part);
    return labelParts.join(" ");
  }
  get ariaDescriptionText() {
    return this.accessibleDescription === "" ? void 0 : this.accessibleDescription;
  }
  get effectiveBadgeDescriptionText() {
    if (!this.shouldRenderBadge) {
      return "";
    }
    const badgeEffectiveText = this.badge[0].effectiveText;
    switch (badgeEffectiveText) {
      case "":
        return badgeEffectiveText;
      case "1":
        return Button_1.i18nBundle.getText(BUTTON_BADGE_ONE_ITEM, badgeEffectiveText);
      default:
        return Button_1.i18nBundle.getText(BUTTON_BADGE_MANY_ITEMS, badgeEffectiveText);
    }
  }
  get _isSubmit() {
    return this.type === ButtonType$1.Submit || this.submits;
  }
  get _isReset() {
    return this.type === ButtonType$1.Reset;
  }
  get shouldRenderBadge() {
    return !!this.badge.length && (!!this.badge[0].text.length || this.badge[0].design === ButtonBadgeDesign$1.AttentionDot);
  }
};
__decorate$y([
  s$7()
], Button$1.prototype, "design", void 0);
__decorate$y([
  s$7({ type: Boolean })
], Button$1.prototype, "disabled", void 0);
__decorate$y([
  s$7()
], Button$1.prototype, "icon", void 0);
__decorate$y([
  s$7()
], Button$1.prototype, "endIcon", void 0);
__decorate$y([
  s$7({ type: Boolean })
], Button$1.prototype, "submits", void 0);
__decorate$y([
  s$7()
], Button$1.prototype, "tooltip", void 0);
__decorate$y([
  s$7()
], Button$1.prototype, "accessibleName", void 0);
__decorate$y([
  s$7()
], Button$1.prototype, "accessibleNameRef", void 0);
__decorate$y([
  s$7({ type: Object })
], Button$1.prototype, "accessibilityAttributes", void 0);
__decorate$y([
  s$7()
], Button$1.prototype, "accessibleDescription", void 0);
__decorate$y([
  s$7()
], Button$1.prototype, "type", void 0);
__decorate$y([
  s$7()
], Button$1.prototype, "accessibleRole", void 0);
__decorate$y([
  s$7({ type: Boolean })
], Button$1.prototype, "active", void 0);
__decorate$y([
  s$7({ type: Boolean })
], Button$1.prototype, "iconOnly", void 0);
__decorate$y([
  s$7({ type: Boolean })
], Button$1.prototype, "hasIcon", void 0);
__decorate$y([
  s$7({ type: Boolean })
], Button$1.prototype, "hasEndIcon", void 0);
__decorate$y([
  s$7({ type: Boolean })
], Button$1.prototype, "nonInteractive", void 0);
__decorate$y([
  s$7({ type: Boolean })
], Button$1.prototype, "loading", void 0);
__decorate$y([
  s$7({ type: Number })
], Button$1.prototype, "loadingDelay", void 0);
__decorate$y([
  s$7({ noAttribute: true })
], Button$1.prototype, "buttonTitle", void 0);
__decorate$y([
  s$7({ type: Object })
], Button$1.prototype, "_iconSettings", void 0);
__decorate$y([
  s$7({ noAttribute: true })
], Button$1.prototype, "forcedTabIndex", void 0);
__decorate$y([
  s$7({ type: Boolean })
], Button$1.prototype, "_isTouch", void 0);
__decorate$y([
  s$7({ type: Boolean, noAttribute: true })
], Button$1.prototype, "_cancelAction", void 0);
__decorate$y([
  d$4({ type: Node, "default": true })
], Button$1.prototype, "text", void 0);
__decorate$y([
  d$4({ type: HTMLElement, invalidateOnChildChange: true })
], Button$1.prototype, "badge", void 0);
__decorate$y([
  i$8("@ui5/webcomponents")
], Button$1, "i18nBundle", void 0);
Button$1 = Button_1 = __decorate$y([
  m$7({
    tag: "ui5-button",
    formAssociated: true,
    languageAware: true,
    renderer: y$4,
    template: ButtonTemplate,
    styles: buttonCss,
    shadowRootOptions: { delegatesFocus: true }
  }),
  l$b("click", {
    bubbles: true,
    cancelable: true
  }),
  l$b("active-state-change", {
    bubbles: true,
    cancelable: true
  })
], Button$1);
Button$1.define();
const Button$2 = Button$1;
const Button2 = withWebComponent("ui5-button", ["accessibilityAttributes", "accessibleDescription", "accessibleName", "accessibleNameRef", "accessibleRole", "design", "endIcon", "icon", "loadingDelay", "tooltip", "type"], ["disabled", "loading", "submits"], ["badge"], ["click"]);
Button2.displayName = "Button";
const ICON_ACTION_SETTINGS = { key: "ICON_ACTION_SETTINGS", defaultText: "Settings" };
const ICON_DECLINE = { key: "ICON_DECLINE", defaultText: "Decline" };
const ICON_ERROR = { key: "ICON_ERROR", defaultText: "Error" };
const ICON_SAVE = { key: "ICON_SAVE", defaultText: "Save" };
const name$B = "decline";
const pathData$B = "M86 109l22-23q5-5 12-5 6 0 11 5l124 125L380 86q5-5 11-5 7 0 12 5l22 23q12 11 0 23L301 256l124 125q11 11 0 22l-22 23q-8 5-12 5-3 0-11-5L255 301 131 426q-5 5-11 5-4 0-12-5l-22-23q-11-11 0-22l124-125L86 132q-12-12 0-23z";
const ltr$B = false;
const accData$7 = ICON_DECLINE;
const collection$B = "SAP-icons-v4";
const packageName$B = "@ui5/webcomponents-icons";
y$1(name$B, { pathData: pathData$B, ltr: ltr$B, accData: accData$7, collection: collection$B, packageName: packageName$B });
const name$A = "decline";
const pathData$A = "M292 256l117 116q7 7 7 18 0 12-7.5 19t-18.5 7q-10 0-18-8L256 292 140 408q-8 8-18 8-11 0-18.5-7.5T96 390q0-10 8-18l116-116-116-116q-8-8-8-18 0-11 7.5-18.5T122 96t18 7l116 117 116-117q7-7 18-7t18.5 7.5T416 122t-7 18z";
const ltr$A = false;
const accData$6 = ICON_DECLINE;
const collection$A = "SAP-icons-v5";
const packageName$A = "@ui5/webcomponents-icons";
y$1(name$A, { pathData: pathData$A, ltr: ltr$A, accData: accData$6, collection: collection$A, packageName: packageName$A });
const decline = "decline";
function PopubBlockLayerTemplate() {
  return jsx("div", { class: "ui5-block-layer", onKeyDown: this._preventBlockLayerFocus, onMouseDown: this._preventBlockLayerFocus });
}
function PopupTemplate(hooks) {
  return jsxs(Fragment, { children: [PopubBlockLayerTemplate.call(this), jsxs("section", { "root-element": true, style: this.styles.root, class: this.classes.root, role: this._role, "aria-describedby": this.ariaDescribedByIds, "aria-modal": this._ariaModal, "aria-label": this._ariaLabel, "aria-labelledby": this._ariaLabelledBy, onKeyDown: this._onkeydown, onFocusOut: this._onfocusout, onMouseUp: this._onmouseup, onMouseDown: this._onmousedown, children: [jsx("span", { class: "first-fe", "data-ui5-focus-trap": true, role: "none", tabIndex: 0, onFocusIn: this.forwardToLast }), (hooks?.beforeContent || beforeContent$2).call(this), jsx("div", { style: this.styles.content, class: this.classes.content, onScroll: this._scroll, part: "content", children: jsx("slot", {}) }), this.ariaDescriptionText && jsx("span", { id: "accessibleDescription", class: "ui5-hidden-text", children: this.ariaDescriptionText }), (hooks?.afterContent || afterContent$2).call(this), jsx("span", { class: "last-fe", "data-ui5-focus-trap": true, role: "none", tabIndex: 0, onFocusIn: this.forwardToFirst })] })] });
}
function beforeContent$2() {
}
function afterContent$2() {
}
var TitleLevel;
(function(TitleLevel2) {
  TitleLevel2["H1"] = "H1";
  TitleLevel2["H2"] = "H2";
  TitleLevel2["H3"] = "H3";
  TitleLevel2["H4"] = "H4";
  TitleLevel2["H5"] = "H5";
  TitleLevel2["H6"] = "H6";
})(TitleLevel || (TitleLevel = {}));
const TitleLevel$1 = TitleLevel;
function TitleTemplate() {
  return jsx(Fragment, { children: title.call(this, this.level) });
}
function title(titleLevel) {
  switch (titleLevel) {
    case "H1":
      return jsx("h1", { class: "ui5-title-root", children: titleInner.call(this) });
    case "H2":
      return jsx("h2", { class: "ui5-title-root", children: titleInner.call(this) });
    case "H3":
      return jsx("h3", { class: "ui5-title-root", children: titleInner.call(this) });
    case "H4":
      return jsx("h4", { class: "ui5-title-root", children: titleInner.call(this) });
    case "H5":
      return jsx("h5", { class: "ui5-title-root", children: titleInner.call(this) });
    case "H6":
      return jsx("h6", { id: `${this._id}-inner`, class: "ui5-title-root", children: titleInner.call(this) });
    default:
      return jsx("h2", { class: "ui5-title-root", children: titleInner.call(this) });
  }
}
function titleInner() {
  return jsx("span", { id: `${this._id}-inner`, children: jsx("slot", {}) });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const titleCss = `:host(:not([hidden])){display:block;cursor:text}:host{max-width:100%;color:var(--sapGroup_TitleTextColor);font-size:var(--sapFontHeader5Size);font-family:var(--sapFontHeaderFamily);text-shadow:var(--sapContent_TextShadow)}.ui5-title-root{display:inline-block;position:relative;font-weight:400;font-size:inherit;box-sizing:border-box;overflow:hidden;text-overflow:ellipsis;max-width:100%;vertical-align:bottom;-webkit-margin-before:0;-webkit-margin-after:0;-webkit-margin-start:0;-webkit-margin-end:0;margin:0;cursor:inherit}:host{white-space:pre-line}:host([wrapping-type="None"]){white-space:nowrap}.ui5-title-root,:host ::slotted(*){white-space:inherit}::slotted(*){font-size:inherit;font-family:inherit;text-shadow:inherit}:host([size="H1"]){font-size:var(--sapFontHeader1Size)}:host([size="H2"]){font-size:var(--sapFontHeader2Size)}:host([size="H3"]){font-size:var(--sapFontHeader3Size)}:host([size="H4"]){font-size:var(--sapFontHeader4Size)}:host([size="H5"]){font-size:var(--sapFontHeader5Size)}:host([size="H6"]){font-size:var(--sapFontHeader6Size)}
`;
var __decorate$x = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
let Title = class Title2 extends b$6 {
  constructor() {
    super(...arguments);
    this.wrappingType = "Normal";
    this.level = "H2";
    this.size = "H5";
  }
  get h1() {
    return this.level === TitleLevel$1.H1;
  }
  get h2() {
    return this.level === TitleLevel$1.H2;
  }
  get h3() {
    return this.level === TitleLevel$1.H3;
  }
  get h4() {
    return this.level === TitleLevel$1.H4;
  }
  get h5() {
    return this.level === TitleLevel$1.H5;
  }
  get h6() {
    return this.level === TitleLevel$1.H6;
  }
};
__decorate$x([
  s$7()
], Title.prototype, "wrappingType", void 0);
__decorate$x([
  s$7()
], Title.prototype, "level", void 0);
__decorate$x([
  s$7()
], Title.prototype, "size", void 0);
Title = __decorate$x([
  m$7({
    tag: "ui5-title",
    renderer: y$4,
    template: TitleTemplate,
    styles: titleCss
  })
], Title);
Title.define();
const Title$1 = Title;
function PopoverTemplate() {
  return PopupTemplate.call(this, {
    beforeContent: beforeContent$1,
    afterContent: afterContent$1
  });
}
function beforeContent$1() {
  return jsxs(Fragment, { children: [jsx("span", { class: "ui5-popover-arrow", style: this.styles.arrow }), this._displayHeader && jsx("header", { class: "ui5-popup-header-root", id: "ui5-popup-header", part: "header", children: this.header.length ? jsx("slot", { name: "header" }) : jsx(Title$1, { level: "H1", class: "ui5-popup-header-text", children: this.headerText }) })] });
}
function afterContent$1() {
  return jsx(Fragment, { children: this._displayFooter && !!this.footer.length && jsx("footer", { class: "ui5-popup-footer-root", part: "footer", children: jsx("slot", { name: "footer" }) }) });
}
const m$3 = (t3, a3, e2) => Math.min(Math.max(t3, a3), Math.max(a3, e2));
const i$4 = (t3) => {
  if (t3.nodeName === "SLOT") return false;
  const e2 = window.getComputedStyle(t3);
  return e2.display !== "contents" && t3.offsetWidth <= 0 && t3.offsetHeight <= 0 || e2.visibility === "hidden";
};
const n$6 = /^(?:a|area)$/i, a$8 = /^(?:input|select|textarea|button)$/i, r$6 = (e2) => {
  if (e2.disabled) return false;
  const t3 = e2.getAttribute("tabindex");
  return t3 != null ? parseInt(t3) >= 0 : a$8.test(e2.nodeName) || n$6.test(e2.nodeName) && !!e2.href;
};
const c$1 = (e2) => e2.hasAttribute("data-ui5-focus-trap"), d$3 = (e2) => {
  const l3 = getComputedStyle(e2);
  return e2.scrollHeight > e2.clientHeight && ["scroll", "auto"].indexOf(l3.overflowY) >= 0 || e2.scrollWidth > e2.clientWidth && ["scroll", "auto"].indexOf(l3.overflowX) >= 0;
}, b$3 = async (e2, l3) => !e2 || i$4(e2) ? null : u$3(e2, true), H2 = async (e2, l3) => !e2 || i$4(e2) ? null : u$3(e2, false), T$1 = (e2) => e2.hasAttribute("data-ui5-focus-redirect") || !i$4(e2), L$1 = (e2) => {
  if (v$4(e2)) {
    const l3 = e2.getAttribute("tabindex");
    if (l3 !== null && parseInt(l3) < 0) return true;
  }
  return false;
}, u$3 = async (e2, l3, r3) => {
  let t3, s2, n2 = -1;
  e2.shadowRoot ? t3 = l3 ? e2.shadowRoot.firstElementChild : e2.shadowRoot.lastElementChild : e2 instanceof HTMLSlotElement && e2.assignedNodes() ? (s2 = e2.assignedElements(), n2 = l3 ? 0 : s2.length - 1, t3 = s2[n2]) : t3 = l3 ? e2.firstElementChild : e2.lastElementChild;
  let i3;
  for (; t3; ) {
    const m2 = t3;
    if (!i$4(m2) && !L$1(m2)) {
      if (v$4(t3) && (await t3._waitForDomRef(), t3 = t3.getDomRef()), !t3 || i$4(t3)) return null;
      if (t3.nodeType === 1 && T$1(t3) && !c$1(t3)) {
        if (r$6(t3) || (i3 = await u$3(t3, l3), !h$9() && !i3 && d$3(t3))) return t3 && typeof t3.focus == "function" ? t3 : null;
        if (i3) return i3 && typeof i3.focus == "function" ? i3 : null;
      }
    }
    t3 = l3 ? m2.nextElementSibling : m2.previousElementSibling, s2 && !s2[n2].contains(t3) && (n2 = l3 ? n2 + 1 : n2 - 1, t3 = s2[n2]);
  }
  return null;
};
const t$5 = () => {
  let e2 = document.activeElement;
  for (; e2 && e2.shadowRoot && e2.shadowRoot.activeElement; ) e2 = e2.shadowRoot.activeElement;
  return e2;
};
const r$5 = () => {
  const e2 = t$5();
  return e2 && typeof e2.focus == "function" ? e2 : null;
}, a$7 = (e2) => {
  const n2 = r$5();
  return n2 ? l$5(e2, n2) : false;
}, l$5 = (e2, n2) => {
  let t3 = e2;
  if (t3.shadowRoot && (t3 = Array.from(t3.shadowRoot.children).find((c2) => c2.localName !== "style"), !t3)) return false;
  if (t3 === n2) return true;
  const o2 = t3.localName === "slot" ? t3.assignedNodes() : t3.children;
  return o2 ? Array.from(o2).some((s2) => l$5(s2, n2)) : false;
}, m$2 = (e2, n2, t3) => e2 >= t3.left && e2 <= t3.right && n2 >= t3.top && n2 <= t3.bottom, f$4 = (e2, n2) => {
  let t3, o2;
  if (e2 instanceof MouseEvent) t3 = e2.clientX, o2 = e2.clientY;
  else {
    const s2 = e2.touches[0];
    t3 = s2.clientX, o2 = s2.clientY;
  }
  return m$2(t3, o2, n2);
};
function d$2(e2) {
  return "isUI5Element" in e2 && "_show" in e2;
}
const i$3 = (e2) => {
  const n2 = e2.parentElement || e2.getRootNode && e2.getRootNode().host;
  return n2 && (d$2(n2) || n2 === document.documentElement) ? n2 : i$3(n2);
};
let n$5;
const l$4 = /* @__PURE__ */ new Map(), a$6 = () => (n$5 || (n$5 = new window.ResizeObserver((r3) => {
  window.requestAnimationFrame(() => {
    r3.forEach((t3) => {
      const s2 = l$4.get(t3.target);
      s2 && Promise.all(s2.map((e2) => e2()));
    });
  });
})), n$5), c = (r3, t3) => {
  const s2 = l$4.get(r3) || [];
  s2.length || a$6().observe(r3), l$4.set(r3, [...s2, t3]);
}, b$2 = (r3, t3) => {
  const s2 = l$4.get(r3) || [];
  if (s2.length === 0) return;
  const e2 = s2.filter((o2) => o2 !== t3);
  e2.length === 0 ? (a$6().unobserve(r3), l$4.delete(r3)) : l$4.set(r3, e2);
};
let f$3 = class f {
  static register(t3, s2) {
    let e2 = t3;
    v$4(e2) && (e2 = e2.getDomRef()), e2 instanceof HTMLElement ? c(e2, s2) : console.warn("Cannot register ResizeHandler for element", t3);
  }
  static deregister(t3, s2) {
    let e2 = t3;
    v$4(e2) && (e2 = e2.getDomRef()), e2 instanceof HTMLElement ? b$2(e2, s2) : console.warn("Cannot deregister ResizeHandler for element", t3);
  }
};
var PopupAccessibleRole;
(function(PopupAccessibleRole2) {
  PopupAccessibleRole2["None"] = "None";
  PopupAccessibleRole2["Dialog"] = "Dialog";
  PopupAccessibleRole2["AlertDialog"] = "AlertDialog";
})(PopupAccessibleRole || (PopupAccessibleRole = {}));
const PopupAccessibleRole$1 = PopupAccessibleRole;
const OpenedPopupsRegistry = m$i("OpenedPopupsRegistry", { openedRegistry: [] });
const openUI5Support = n$w("OpenUI5Support");
function registerPopupWithOpenUI5Support(popupInfo) {
  openUI5Support?.addOpenedPopup(popupInfo);
}
function unregisterPopupWithOpenUI5Support(popup) {
  openUI5Support?.removeOpenedPopup(popup);
}
const addOpenedPopup = (instance, parentPopovers = []) => {
  if (!OpenedPopupsRegistry.openedRegistry.some((popup) => popup.instance === instance)) {
    OpenedPopupsRegistry.openedRegistry.push({
      instance,
      parentPopovers
    });
    registerPopupWithOpenUI5Support({
      type: "WebComponent",
      instance
    });
  }
  _updateTopModalPopup();
  if (OpenedPopupsRegistry.openedRegistry.length === 1) {
    attachGlobalListener();
  }
};
const removeOpenedPopup = (instance) => {
  OpenedPopupsRegistry.openedRegistry = OpenedPopupsRegistry.openedRegistry.filter((el) => {
    return el.instance !== instance;
  });
  unregisterPopupWithOpenUI5Support(instance);
  _updateTopModalPopup();
  if (!OpenedPopupsRegistry.openedRegistry.length) {
    detachGlobalListener();
  }
};
const getOpenedPopups = () => {
  return [...OpenedPopupsRegistry.openedRegistry];
};
const _keydownListener = (event) => {
  if (!OpenedPopupsRegistry.openedRegistry.length) {
    return;
  }
  if (m$4(event)) {
    const topmostPopup = OpenedPopupsRegistry.openedRegistry[OpenedPopupsRegistry.openedRegistry.length - 1].instance;
    if (openUI5Support && topmostPopup !== openUI5Support.getTopmostPopup()) {
      return;
    }
    event.stopPropagation();
    topmostPopup.closePopup(true);
  }
};
const attachGlobalListener = () => {
  document.addEventListener("keydown", _keydownListener);
};
const detachGlobalListener = () => {
  document.removeEventListener("keydown", _keydownListener);
};
const _updateTopModalPopup = () => {
  let popup;
  let hasModal = false;
  for (let i3 = OpenedPopupsRegistry.openedRegistry.length - 1; i3 >= 0; i3--) {
    popup = OpenedPopupsRegistry.openedRegistry[i3].instance;
    if (!hasModal && popup.isModal) {
      popup.isTopModalPopup = true;
      hasModal = true;
    } else {
      popup.isTopModalPopup = false;
    }
  }
};
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const popupStlyes = `:host{min-width:1px;overflow:visible;border:none;inset:unset;margin:0;padding:0}:host(:focus-visible){outline:none}
`;
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const popupBlockLayerStyles = `.ui5-block-layer{position:fixed;z-index:-1;display:none;inset:-500px;outline:none;pointer-events:all}
`;
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const globalStyles = `.ui5-popup-scroll-blocker{overflow:hidden}
`;
var __decorate$w = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var Popup_1;
const createBlockingStyle = () => {
  if (!S$4("data-ui5-popup-scroll-blocker")) {
    c$c(globalStyles, "data-ui5-popup-scroll-blocker");
  }
};
createBlockingStyle();
const pageScrollingBlockers = /* @__PURE__ */ new Set();
let Popup = Popup_1 = class Popup2 extends b$6 {
  constructor() {
    super();
    this.preventFocusRestore = false;
    this.accessibleRole = "Dialog";
    this.preventInitialFocus = false;
    this.isTopModalPopup = false;
    this.onPhone = false;
    this.onDesktop = false;
    this._opened = false;
    this._open = false;
    this._resizeHandlerRegistered = false;
    this._resizeHandler = this._resize.bind(this);
    this._getRealDomRef = () => {
      return this.shadowRoot.querySelector("[root-element]");
    };
  }
  onBeforeRendering() {
    this.onPhone = d$h();
    this.onDesktop = f$i();
  }
  onAfterRendering() {
    f$h().then(() => {
      this._updateMediaRange();
    });
    if (this.open) {
      this._registerResizeHandler();
    } else {
      this._deregisterResizeHandler();
    }
  }
  onEnterDOM() {
    this.setAttribute("popover", "manual");
    if (f$i()) {
      this.setAttribute("desktop", "");
    }
    this.tabIndex = -1;
    this.handleOpenOnEnterDOM();
    this.setAttribute("data-sap-ui-fastnavgroup-container", "true");
    y$3(this, this._updateAssociatedLabelsTexts.bind(this));
  }
  handleOpenOnEnterDOM() {
    if (this.open) {
      this.showPopover();
      this.openPopup();
    }
  }
  onExitDOM() {
    if (this._opened) {
      Popup_1.unblockPageScrolling(this);
      this._removeOpenedPopup();
    }
    f$3.deregister(this, this._resizeHandler);
    T$2(this);
  }
  /**
   * Indicates if the element is open
   * @public
   * @default false
   * @since 1.2.0
   */
  set open(value) {
    if (this._open === value) {
      return;
    }
    this._open = value;
    if (value) {
      this.openPopup();
    } else {
      this.closePopup();
    }
  }
  get open() {
    return this._open;
  }
  async openPopup() {
    if (this._opened) {
      return;
    }
    const prevented = !this.fireDecoratorEvent("before-open");
    if (prevented) {
      this.open = false;
      return;
    }
    if (this.isModal) {
      Popup_1.blockPageScrolling(this);
    }
    this._focusedElementBeforeOpen = r$5();
    this._show();
    this._opened = true;
    if (this.getDomRef()) {
      this._updateMediaRange();
    }
    this._addOpenedPopup();
    this.open = true;
    await this.applyInitialFocus();
    await f$h();
    if (this.isConnected) {
      this.fireDecoratorEvent("open");
    }
  }
  _resize() {
    this._updateMediaRange();
  }
  /**
   * Prevents the user from interacting with the content under the block layer
   */
  _preventBlockLayerFocus(e2) {
    e2.preventDefault();
  }
  /**
   * Temporarily removes scrollbars from the html element
   * @protected
   */
  static blockPageScrolling(popup) {
    pageScrollingBlockers.add(popup);
    if (pageScrollingBlockers.size !== 1) {
      return;
    }
    document.documentElement.classList.add("ui5-popup-scroll-blocker");
  }
  /**
   * Restores scrollbars on the html element, if needed
   * @protected
   */
  static unblockPageScrolling(popup) {
    pageScrollingBlockers.delete(popup);
    if (pageScrollingBlockers.size !== 0) {
      return;
    }
    document.documentElement.classList.remove("ui5-popup-scroll-blocker");
  }
  _scroll(e2) {
    this.fireDecoratorEvent("scroll", {
      scrollTop: e2.target.scrollTop,
      targetRef: e2.target
    });
  }
  _onkeydown(e2) {
    const isTabOutAttempt = e2.target === this._root && V(e2);
    const isEnterOnClosedPopupChild = b$4(e2) && !this.open;
    if (isTabOutAttempt || isEnterOnClosedPopupChild) {
      e2.preventDefault();
    }
  }
  _onfocusout(e2) {
    if (!e2.relatedTarget) {
      this._shouldFocusRoot = true;
    }
  }
  _onmousedown(e2) {
    if (this.shadowRoot.contains(e2.target)) {
      this._shouldFocusRoot = true;
    } else {
      this._shouldFocusRoot = false;
    }
  }
  _onmouseup() {
    if (this._shouldFocusRoot) {
      if (g$d()) {
        this._root.focus();
      }
      this._shouldFocusRoot = false;
    }
  }
  /**
   * Focus trapping
   * @private
   */
  async forwardToFirst() {
    const firstFocusable = await b$3(this);
    if (firstFocusable) {
      firstFocusable.focus();
    } else {
      this._root.focus();
    }
  }
  /**
   * Focus trapping
   * @private
   */
  async forwardToLast() {
    const lastFocusable = await H2(this);
    if (lastFocusable) {
      lastFocusable.focus();
    } else {
      this._root.focus();
    }
  }
  /**
   * Use this method to focus the element denoted by "initialFocus", if provided,
   * or the first focusable element otherwise.
   * @protected
   */
  async applyInitialFocus() {
    if (!this.preventInitialFocus) {
      await this.applyFocus();
    }
  }
  /**
   * Focuses the element denoted by `initialFocus`, if provided,
   * or the first focusable element otherwise.
   * @public
   * @returns Promise that resolves when the focus is applied
   */
  async applyFocus() {
    if (this.querySelector("[autofocus]")) {
      return;
    }
    await this._waitForDomRef();
    if (this.getRootNode() === this) {
      return;
    }
    let element;
    if (this.initialFocus) {
      element = this.getRootNode().getElementById(this.initialFocus) || document.getElementById(this.initialFocus);
    }
    element = element || await b$3(this) || this._root;
    if (element) {
      if (element === this._root) {
        element.tabIndex = -1;
      }
      element.focus();
    }
  }
  isFocusWithin() {
    return a$7(this._root);
  }
  _updateMediaRange() {
    this.mediaRange = i$q.getCurrentRange(i$q.RANGESETS.RANGE_4STEPS, this.getDomRef().offsetWidth);
  }
  _updateAssociatedLabelsTexts() {
    this._associatedDescriptionRefTexts = p$2(this);
  }
  /**
   * Adds the popup to the "opened popups registry"
   * @protected
   */
  _addOpenedPopup() {
    addOpenedPopup(this);
  }
  /**
   * Closes the popup.
   */
  closePopup(escPressed = false, preventRegistryUpdate = false, preventFocusRestore = false) {
    if (!this._opened) {
      return;
    }
    const prevented = !this.fireDecoratorEvent("before-close", { escPressed });
    if (prevented) {
      this.open = true;
      return;
    }
    this._opened = false;
    if (this.isModal) {
      Popup_1.unblockPageScrolling(this);
    }
    this.hide();
    this.open = false;
    if (!preventRegistryUpdate) {
      this._removeOpenedPopup();
    }
    if (!this.preventFocusRestore && !preventFocusRestore) {
      this.resetFocus();
    }
    this.fireDecoratorEvent("close");
  }
  /**
   * Removes the popup from the "opened popups registry"
   * @protected
   */
  _removeOpenedPopup() {
    removeOpenedPopup(this);
  }
  /**
   * Returns the focus to the previously focused element
   * @protected
   */
  resetFocus() {
    this._focusedElementBeforeOpen?.focus();
    this._focusedElementBeforeOpen = null;
  }
  /**
   * Sets "block" display to the popup. The property can be overriden by derivatives of Popup.
   * @protected
   */
  _show() {
    if (this.isConnected) {
      this.setAttribute("popover", "manual");
      this.showPopover();
    }
  }
  _registerResizeHandler() {
    if (!this._resizeHandlerRegistered) {
      f$3.register(this, this._resizeHandler);
      this._resizeHandlerRegistered = true;
    }
  }
  _deregisterResizeHandler() {
    if (this._resizeHandlerRegistered) {
      f$3.deregister(this, this._resizeHandler);
      this._resizeHandlerRegistered = false;
    }
  }
  /**
   * Sets "none" display to the popup
   * @protected
   */
  hide() {
    this.isConnected && this.hidePopover();
  }
  /**
   * Ensures ariaLabel is never null or empty string
   * @protected
   */
  get _ariaLabel() {
    return A$3(this);
  }
  get _accInfoAriaDescription() {
    return this.ariaDescriptionText || "";
  }
  get ariaDescriptionText() {
    return this._associatedDescriptionRefTexts || L$2(this);
  }
  get ariaDescriptionTextId() {
    return this.ariaDescriptionText ? "accessibleDescription" : "";
  }
  get ariaDescribedByIds() {
    return [
      this.ariaDescriptionTextId
    ].filter(Boolean).join(" ");
  }
  get _root() {
    return this.shadowRoot.querySelector(".ui5-popup-root");
  }
  get _role() {
    return this.accessibleRole === PopupAccessibleRole$1.None ? void 0 : n$7(this.accessibleRole);
  }
  get _ariaModal() {
    return this.accessibleRole === PopupAccessibleRole$1.None ? void 0 : "true";
  }
  get contentDOM() {
    return this.shadowRoot.querySelector(".ui5-popup-content");
  }
  get styles() {
    return {
      root: {},
      content: {}
    };
  }
  get classes() {
    return {
      root: {
        "ui5-popup-root": true
      },
      content: {
        "ui5-popup-content": true
      }
    };
  }
};
__decorate$w([
  s$7()
], Popup.prototype, "initialFocus", void 0);
__decorate$w([
  s$7({ type: Boolean })
], Popup.prototype, "preventFocusRestore", void 0);
__decorate$w([
  s$7()
], Popup.prototype, "accessibleName", void 0);
__decorate$w([
  s$7()
], Popup.prototype, "accessibleNameRef", void 0);
__decorate$w([
  s$7()
], Popup.prototype, "accessibleRole", void 0);
__decorate$w([
  s$7()
], Popup.prototype, "accessibleDescription", void 0);
__decorate$w([
  s$7()
], Popup.prototype, "accessibleDescriptionRef", void 0);
__decorate$w([
  s$7({ noAttribute: true })
], Popup.prototype, "_associatedDescriptionRefTexts", void 0);
__decorate$w([
  s$7()
], Popup.prototype, "mediaRange", void 0);
__decorate$w([
  s$7({ type: Boolean })
], Popup.prototype, "preventInitialFocus", void 0);
__decorate$w([
  s$7({ type: Boolean, noAttribute: true })
], Popup.prototype, "isTopModalPopup", void 0);
__decorate$w([
  d$4({ type: HTMLElement, "default": true })
], Popup.prototype, "content", void 0);
__decorate$w([
  s$7({ type: Boolean })
], Popup.prototype, "onPhone", void 0);
__decorate$w([
  s$7({ type: Boolean })
], Popup.prototype, "onDesktop", void 0);
__decorate$w([
  s$7({ type: Boolean })
], Popup.prototype, "open", null);
Popup = Popup_1 = __decorate$w([
  m$7({
    renderer: y$4,
    styles: [popupStlyes, popupBlockLayerStyles],
    template: PopupTemplate
  }),
  l$b("before-open", {
    cancelable: true
  }),
  l$b("open"),
  l$b("before-close", {
    cancelable: true
  }),
  l$b("close"),
  l$b("scroll", {
    bubbles: true
  })
], Popup);
const Popup$1 = Popup;
const name$z = "error";
const pathData$z = "M512 256q0 53-20.5 100t-55 81.5-81 54.5-99.5 20-100-20.5-81.5-55T20 355 0 256q0-54 20-100.5t55-81T156.5 20 256 0t99.5 20T437 75t55 81.5 20 99.5zM399 364q6-6 0-12l-86-86q-6-6 0-12l81-81q6-6 0-12l-37-37q-2-2-6-2t-6 2l-83 82q-1 3-6 3-3 0-6-3l-84-83q-1-2-6-2-4 0-6 2l-37 37q-6 6 0 12l83 82q6 6 0 12l-83 82q-2 2-2.5 6t2.5 6l36 37q4 2 6 2 4 0 6-2l85-84q2-2 6-2t6 2l88 88q4 2 6 2t6-2z";
const ltr$z = false;
const accData$5 = ICON_ERROR;
const collection$z = "SAP-icons-v4";
const packageName$z = "@ui5/webcomponents-icons";
y$1(name$z, { pathData: pathData$z, ltr: ltr$z, accData: accData$5, collection: collection$z, packageName: packageName$z });
const name$y = "error";
const pathData$y = "M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0zm45 256l74-73q9-11 9-23 0-13-9.5-22.5T352 128q-12 0-23 9l-73 74-73-74q-10-9-23-9t-22.5 9.5T128 160q0 12 9 23l74 73-74 73q-9 10-9 23t9.5 22.5T160 384t23-9l73-74 73 74q11 9 23 9 13 0 22.5-9.5T384 352t-9-23z";
const ltr$y = false;
const accData$4 = ICON_ERROR;
const collection$y = "SAP-icons-v5";
const packageName$y = "@ui5/webcomponents-icons";
y$1(name$y, { pathData: pathData$y, ltr: ltr$y, accData: accData$4, collection: collection$y, packageName: packageName$y });
const errorIcon = "error";
const name$x = "alert";
const pathData$x = "M501 374q5 10 7.5 19.5T512 412v5q0 31-23 47t-50 16H74q-13 0-26-4t-23.5-12-17-20T0 417q0-13 4-22.5t9-20.5L198 38q21-38 61-38 38 0 59 38zM257 127q-13 0-23.5 8T223 161q1 7 2 12 3 25 4.5 48t3.5 61q0 11 7.5 16t16.5 5q22 0 23-21l2-36 9-85q0-18-10.5-26t-23.5-8zm0 299q20 0 31.5-12t11.5-32q0-19-11.5-31T257 339t-31.5 12-11.5 31q0 20 11.5 32t31.5 12z";
const ltr$x = false;
const collection$x = "SAP-icons-v4";
const packageName$x = "@ui5/webcomponents-icons";
y$1(name$x, { pathData: pathData$x, ltr: ltr$x, collection: collection$x, packageName: packageName$x });
const name$w = "alert";
const pathData$w = "M505 399q7 13 7 27 0 21-15.5 37.5T456 480H56q-25 0-40.5-16.5T0 426q0-14 7-27L208 59q17-27 48-27 14 0 27 6.5T304 59zM288 176q0-14-9-23t-23-9-23 9-9 23v96q0 14 9 23t23 9 23-9 9-23v-96zm-32 240q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9z";
const ltr$w = false;
const collection$w = "SAP-icons-v5";
const packageName$w = "@ui5/webcomponents-icons";
y$1(name$w, { pathData: pathData$w, ltr: ltr$w, collection: collection$w, packageName: packageName$w });
const alertIcon = "alert";
const name$v = "sys-enter-2";
const pathData$v = "M512 256q0 54-20 100.5t-54.5 81T356 492t-100 20q-54 0-100.5-20t-81-55T20 355.5 0 256t20.5-100 55-81.5T157 20t99-20q53 0 100 20t81.5 54.5T492 156t20 100zm-118-87q4-8-1-13l-36-36q-3-4-8-4t-8 5L237 294q-3 1-4 0l-70-52q-4-3-7-3t-4.5 2-2.5 3l-29 41q-6 8 2 14l113 95q2 2 7 2t8-4z";
const ltr$v = true;
const collection$v = "SAP-icons-v4";
const packageName$v = "@ui5/webcomponents-icons";
y$1(name$v, { pathData: pathData$v, ltr: ltr$v, collection: collection$v, packageName: packageName$v });
const name$u = "sys-enter-2";
const pathData$u = "M256 0q53 0 100 20t81.5 54.5T492 156t20 100-20 100-54.5 81.5T356 492t-100 20-100-20-81.5-54.5T20 356 0 256t20-100 54.5-81.5T156 20 256 0zm150 183q10-9 10-23 0-13-9.5-22.5T384 128t-22 9L186 308l-68-63q-9-9-22-9t-22.5 9.5T64 268q0 15 10 24l91 83q9 9 21 9 13 0 23-9z";
const ltr$u = true;
const collection$u = "SAP-icons-v5";
const packageName$u = "@ui5/webcomponents-icons";
y$1(name$u, { pathData: pathData$u, ltr: ltr$u, collection: collection$u, packageName: packageName$u });
const successIcon = "sys-enter-2";
const name$t = "information";
const pathData$t = "M0 256q0-53 20.5-100t55-81.5T157 20t99-20q54 0 100.5 20t81 55 54.5 81.5 20 99.5q0 54-20 100.5t-54.5 81T356 492t-100 20q-54 0-100.5-20t-81-55T20 355.5 0 256zm192 112v33h128v-33h-32V215q0-6-7-6h-88v31h32v128h-33zm34-201q14 11 30 11 17 0 29.5-11.5T298 138q0-19-13-31-12-12-29-12-19 0-30.5 12.5T214 138q0 17 12 29z";
const ltr$t = false;
const collection$t = "SAP-icons-v4";
const packageName$t = "@ui5/webcomponents-icons";
y$1(name$t, { pathData: pathData$t, ltr: ltr$t, collection: collection$t, packageName: packageName$t });
const name$s = "information";
const pathData$s = "M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0zm0 160q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9zm32 64q0-14-9-23t-23-9-23 9-9 23v160q0 14 9 23t23 9 23-9 9-23V224z";
const ltr$s = false;
const collection$s = "SAP-icons-v5";
const packageName$s = "@ui5/webcomponents-icons";
y$1(name$s, { pathData: pathData$s, ltr: ltr$s, collection: collection$s, packageName: packageName$s });
const informationIcon = "information";
const name$r = "resize-corner";
const pathData$r = "M384 160v32q0 12-10 22L182 406q-10 10-22 10h-32zM224 416l160-160v32q0 12-10 22l-96 96q-10 10-22 10h-32zm160-64v32q0 12-10 22t-22 10h-32z";
const ltr$r = false;
const collection$r = "SAP-icons-v4";
const packageName$r = "@ui5/webcomponents-icons";
y$1(name$r, { pathData: pathData$r, ltr: ltr$r, collection: collection$r, packageName: packageName$r });
const name$q = "resize-corner";
const pathData$q = "M282 416q-11 0-18.5-7.5T256 390t7-18l109-109q7-7 18-7t18.5 7.5T416 282t-7 18L300 409q-7 7-18 7zm-160 0q-11 0-18.5-7.5T96 390t7-18l269-269q7-7 18-7t18.5 7.5T416 122t-7 18L140 409q-7 7-18 7z";
const ltr$q = false;
const collection$q = "SAP-icons-v5";
const packageName$q = "@ui5/webcomponents-icons";
y$1(name$q, { pathData: pathData$q, ltr: ltr$q, collection: collection$q, packageName: packageName$q });
const resizeCorner = "resize-corner";
function DialogTemplate() {
  return PopupTemplate.call(this, {
    beforeContent,
    afterContent
  });
}
function beforeContent() {
  return jsx(Fragment, { children: !!this._displayHeader && jsx("header", { children: jsxs("div", { class: "ui5-popup-header-root", id: "ui5-popup-header", role: "group", "aria-describedby": this.effectiveAriaDescribedBy, "aria-roledescription": this.ariaRoleDescriptionHeaderText, tabIndex: this._headerTabIndex, onKeyDown: this._onDragOrResizeKeyDown, onMouseDown: this._onDragMouseDown, part: "header", children: [this.hasValueState && jsx(Icon$2, { class: "ui5-dialog-value-state-icon", name: this._dialogStateIcon }), this.header.length ? jsx("slot", { name: "header" }) : jsx(Title$1, { level: "H1", id: "ui5-popup-header-text", class: "ui5-popup-header-text", children: this.headerText }), this.resizable ? this.draggable ? jsx("span", { id: `${this._id}-descr`, "aria-hidden": "true", class: "ui5-hidden-text", children: this.ariaDescribedByHeaderTextDraggableAndResizable }) : jsx("span", { id: `${this._id}-descr`, "aria-hidden": "true", class: "ui5-hidden-text", children: this.ariaDescribedByHeaderTextResizable }) : this.draggable && jsx("span", { id: `${this._id}-descr`, "aria-hidden": "true", class: "ui5-hidden-text", children: this.ariaDescribedByHeaderTextDraggable })] }) }) });
}
function afterContent() {
  return jsxs(Fragment, { children: [!!this.footer.length && jsx("footer", { class: "ui5-popup-footer-root", part: "footer", children: jsx("slot", { name: "footer" }) }), this._showResizeHandle && jsx("div", { class: "ui5-popup-resize-handle", onMouseDown: this._onResizeMouseDown, children: jsx(Icon$2, { name: resizeCorner }) })] });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const PopupsCommonCss = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host{position:fixed;background:var(--sapGroup_ContentBackground);border-radius:var(--_ui5-v2-14-0_popup_border_radius);min-height:2rem;box-sizing:border-box}:host([open]){display:flex}.ui5-popup-root{background:inherit;border-radius:inherit;width:100%;box-sizing:border-box;display:flex;flex-direction:column;overflow:hidden;flex:1 1 auto;outline:none}.ui5-popup-root .ui5-popup-header-root{box-shadow:var(--_ui5-v2-14-0_popup_header_shadow);border-bottom:var(--_ui5-v2-14-0_popup_header_border)}.ui5-popup-content{color:var(--sapTextColor);flex:auto}.ui5-popup-content:focus{outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);outline-offset:calc(-1 * var(--sapContent_FocusWidth));border-radius:var(--_ui5-v2-14-0_popup_border_radius)}.ui5-popup-footer-root{background:var(--sapPageFooter_Background);border-top:1px solid var(--sapPageFooter_BorderColor);color:var(--sapPageFooter_TextColor)}.ui5-popup-header-root,.ui5-popup-footer-root,:host([header-text]) .ui5-popup-header-text{margin:0;display:flex;justify-content:center;align-items:center}.ui5-popup-header-root .ui5-popup-header-text{font-weight:var(--sapFontHeaderFamily);font-size:var(--sapFontHeader5Size);color:var(--sapPageHeader_TextColor)}.ui5-popup-content{overflow:auto;box-sizing:border-box}:host([header-text]) .ui5-popup-header-text{min-height:var(--_ui5-v2-14-0_popup_default_header_height);max-height:var(--_ui5-v2-14-0_popup_default_header_height);line-height:var(--_ui5-v2-14-0_popup_default_header_height);text-overflow:ellipsis;overflow:hidden;white-space:nowrap;max-width:100%;display:inline-flex;justify-content:var(--_ui5-v2-14-0_popup_header_prop_header_text_alignment)}:host([header-text]) .ui5-popup-header-root{justify-content:var(--_ui5-v2-14-0_popup_header_prop_header_text_alignment)}:host(:not([header-text])) .ui5-popup-header-text{display:none}:host([media-range="S"]) .ui5-popup-content{padding:1rem var(--_ui5-v2-14-0_popup_content_padding_s)}:host([media-range="M"]) .ui5-popup-content,:host([media-range="L"]) .ui5-popup-content{padding:1rem var(--_ui5-v2-14-0_popup_content_padding_m_l)}:host([media-range="XL"]) .ui5-popup-content{padding:1rem var(--_ui5-v2-14-0_popup_content_padding_xl)}.ui5-popup-header-root{background:var(--_ui5-v2-14-0_popup_header_background)}:host([media-range="S"]) .ui5-popup-header-root,:host([media-range="S"]) .ui5-popup-footer-root{padding-left:var(--_ui5-v2-14-0_popup_header_footer_padding_s);padding-right:var(--_ui5-v2-14-0_popup_header_footer_padding_s)}:host([media-range="M"]) .ui5-popup-header-root,:host([media-range="L"]) .ui5-popup-header-root,:host([media-range="M"]) .ui5-popup-footer-root,:host([media-range="L"]) .ui5-popup-footer-root{padding-left:var(--_ui5-v2-14-0_popup_header_footer_padding_m_l);padding-right:var(--_ui5-v2-14-0_popup_header_footer_padding_m_l)}:host([media-range="XL"]) .ui5-popup-header-root,:host([media-range="XL"]) .ui5-popup-footer-root{padding-left:var(--_ui5-v2-14-0_popup_header_footer_padding_xl);padding-right:var(--_ui5-v2-14-0_popup_header_footer_padding_xl)}
`;
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const dialogCSS = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host{min-width:20rem;min-height:6rem;max-height:94%;max-width:90%;flex-direction:column;box-shadow:var(--sapContent_Shadow3);border-radius:var(--sapElement_BorderCornerRadius)}:host([stretch]){width:90%;height:94%}:host([stretch][on-phone]){width:100%;height:100%;max-height:100%;max-width:100%;border-radius:0;min-width:0}:host([draggable]) .ui5-popup-header-root,:host([draggable]) ::slotted([slot="header"]){cursor:move}:host([draggable]) .ui5-popup-header-root *{cursor:auto}:host([draggable]) .ui5-popup-root{user-select:text}::slotted([slot="header"]){max-width:100%}.ui5-popup-root{display:flex;flex-direction:column;max-width:100vw}.ui5-popup-header-root{position:relative}.ui5-popup-header-root:before{content:"";position:absolute;inset-block-start:auto;inset-block-end:0;inset-inline-start:0;inset-inline-end:0;height:var(--_ui5-v2-14-0_dialog_header_state_line_height);background:var(--sapObjectHeader_BorderColor)}:host([state="Negative"]) .ui5-popup-header-root:before{background:var(--sapErrorBorderColor)}:host([state="Information"]) .ui5-popup-header-root:before{background:var(--sapInformationBorderColor)}:host([state="Positive"]) .ui5-popup-header-root:before{background:var(--sapSuccessBorderColor)}:host([state="Critical"]) .ui5-popup-header-root:before{background:var(--sapWarningBorderColor)}.ui5-dialog-value-state-icon{margin-inline-end:.5rem;flex-shrink:0}:host([state="Negative"]) .ui5-dialog-value-state-icon{color:var(--_ui5-v2-14-0_dialog_header_error_state_icon_color)}:host([state="Information"]) .ui5-dialog-value-state-icon{color:var(--_ui5-v2-14-0_dialog_header_information_state_icon_color)}:host([state="Positive"]) .ui5-dialog-value-state-icon{color:var(--_ui5-v2-14-0_dialog_header_success_state_icon_color)}:host([state="Critical"]) .ui5-dialog-value-state-icon{color:var(--_ui5-v2-14-0_dialog_header_warning_state_icon_color)}.ui5-popup-header-root{outline:none}:host([desktop]) .ui5-popup-header-root:focus:after,.ui5-popup-header-root:focus-visible:after{content:"";position:absolute;left:var(--_ui5-v2-14-0_dialog_header_focus_left_offset);bottom:var(--_ui5-v2-14-0_dialog_header_focus_bottom_offset);right:var(--_ui5-v2-14-0_dialog_header_focus_right_offset);top:var(--_ui5-v2-14-0_dialog_header_focus_top_offset);border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);border-radius:var(--_ui5-v2-14-0_dialog_header_border_radius) var(--_ui5-v2-14-0_dialog_header_border_radius) 0 0;pointer-events:none}:host([stretch]) .ui5-popup-content{width:100%;height:100%}.ui5-popup-content{min-height:var(--_ui5-v2-14-0_dialog_content_min_height);flex:1 1 auto}.ui5-popup-resize-handle{position:absolute;bottom:-.5rem;inset-inline-end:-.5rem;cursor:var(--_ui5-v2-14-0_dialog_resize_cursor);width:1.5rem;height:1.5rem;border-radius:50%}.ui5-popup-resize-handle [ui5-icon]{color:var(--sapButton_Lite_TextColor)}::slotted([slot="footer"]){height:var(--_ui5-v2-14-0_dialog_footer_height)}::slotted([slot="footer"][ui5-bar][design="Footer"]){border-top:none}::slotted([slot="header"][ui5-bar]){box-shadow:none}::slotted([slot="footer"][ui5-toolbar]){border:0}:host::backdrop{background-color:var(--_ui5-v2-14-0_popup_block_layer_background);opacity:var(--_ui5-v2-14-0_popup_block_layer_opacity)}.ui5-block-layer{display:block}
`;
var __decorate$v = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var Dialog_1;
const STEP_SIZE = 16;
const ICON_PER_STATE = {
  [o$4.Negative]: "error",
  [o$4.Critical]: "alert",
  [o$4.Positive]: "sys-enter-2",
  [o$4.Information]: "information"
};
let Dialog$1 = Dialog_1 = class Dialog extends Popup$1 {
  constructor() {
    super();
    this.stretch = false;
    this.draggable = false;
    this.resizable = false;
    this.state = "None";
    this._draggedOrResized = false;
    this._revertSize = () => {
      Object.assign(this.style, {
        top: "",
        left: "",
        width: "",
        height: ""
      });
    };
    this._screenResizeHandler = this._screenResize.bind(this);
    this._dragMouseMoveHandler = this._onDragMouseMove.bind(this);
    this._dragMouseUpHandler = this._onDragMouseUp.bind(this);
    this._resizeMouseMoveHandler = this._onResizeMouseMove.bind(this);
    this._resizeMouseUpHandler = this._onResizeMouseUp.bind(this);
    this._dragStartHandler = this._handleDragStart.bind(this);
  }
  static _isHeader(element) {
    return element.classList.contains("ui5-popup-header-root") || element.getAttribute("slot") === "header";
  }
  get isModal() {
    return true;
  }
  get _ariaLabelledBy() {
    let ariaLabelledById;
    if (this.headerText && !this._ariaLabel) {
      ariaLabelledById = "ui5-popup-header-text";
    }
    return ariaLabelledById;
  }
  get ariaRoleDescriptionHeaderText() {
    return this.resizable || this.draggable ? Dialog_1.i18nBundle.getText(DIALOG_HEADER_ARIA_ROLE_DESCRIPTION) : void 0;
  }
  get effectiveAriaDescribedBy() {
    return this.resizable || this.draggable ? `${this._id}-descr` : void 0;
  }
  get ariaDescribedByHeaderTextResizable() {
    return Dialog_1.i18nBundle.getText(DIALOG_HEADER_ARIA_DESCRIBEDBY_RESIZABLE);
  }
  get ariaDescribedByHeaderTextDraggable() {
    return Dialog_1.i18nBundle.getText(DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE);
  }
  get ariaDescribedByHeaderTextDraggableAndResizable() {
    return Dialog_1.i18nBundle.getText(DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE_RESIZABLE);
  }
  /**
   * Determines if the header should be shown.
   */
  get _displayHeader() {
    return this.header.length || this.headerText || this.draggable || this.resizable;
  }
  get _movable() {
    return !this.stretch && this.onDesktop && (this.draggable || this.resizable);
  }
  get _headerTabIndex() {
    return this._movable ? 0 : void 0;
  }
  get _showResizeHandle() {
    return this.resizable && this.onDesktop;
  }
  get _minHeight() {
    let minHeight = Number.parseInt(window.getComputedStyle(this.contentDOM).minHeight);
    const header = this._root.querySelector(".ui5-popup-header-root");
    if (header) {
      minHeight += header.offsetHeight;
    }
    const footer = this._root.querySelector(".ui5-popup-footer-root");
    if (footer) {
      minHeight += footer.offsetHeight;
    }
    return minHeight;
  }
  get hasValueState() {
    return this.state !== o$4.None;
  }
  get _dialogStateIcon() {
    return ICON_PER_STATE[this.state];
  }
  get _role() {
    if (this.accessibleRole === PopupAccessibleRole$1.None) {
      return void 0;
    }
    if (this.state === o$4.Negative || this.state === o$4.Critical) {
      return n$7(PopupAccessibleRole$1.AlertDialog);
    }
    return n$7(this.accessibleRole);
  }
  _show() {
    super._show();
    this._center();
  }
  onBeforeRendering() {
    super.onBeforeRendering();
    this._isRTL = this.effectiveDir === "rtl";
  }
  onEnterDOM() {
    super.onEnterDOM();
    this._attachScreenResizeHandler();
    this.addEventListener("dragstart", this._dragStartHandler);
  }
  onExitDOM() {
    super.onExitDOM();
    this._detachScreenResizeHandler();
    this.removeEventListener("dragstart", this._dragStartHandler);
  }
  /**
   * @override
   */
  _resize() {
    super._resize();
    if (!this._draggedOrResized) {
      this._center();
    }
  }
  _screenResize() {
    this._center();
  }
  _attachScreenResizeHandler() {
    if (!this._screenResizeHandlerAttached) {
      window.addEventListener("resize", this._screenResizeHandler);
      this._screenResizeHandlerAttached = true;
    }
  }
  _detachScreenResizeHandler() {
    if (this._screenResizeHandlerAttached) {
      window.removeEventListener("resize", this._screenResizeHandler);
      this._screenResizeHandlerAttached = false;
    }
  }
  _center() {
    const height = window.innerHeight - this.offsetHeight, width = window.innerWidth - this.offsetWidth;
    Object.assign(this.style, {
      top: `${Math.round(height / 2)}px`,
      left: `${Math.round(width / 2)}px`
    });
  }
  /**
   * Event handlers
   */
  _onDragMouseDown(e2) {
    if (!this._movable || !this.draggable || !Dialog_1._isHeader(e2.target)) {
      return;
    }
    const { top, left } = this.getBoundingClientRect();
    const { width, height } = window.getComputedStyle(this);
    Object.assign(this.style, {
      top: `${top}px`,
      left: `${left}px`,
      width: `${Math.round(Number.parseFloat(width) * 100) / 100}px`,
      height: `${Math.round(Number.parseFloat(height) * 100) / 100}px`
    });
    this._x = e2.clientX;
    this._y = e2.clientY;
    this._draggedOrResized = true;
    this._attachMouseDragHandlers();
  }
  _onDragMouseMove(e2) {
    e2.preventDefault();
    const { clientX, clientY } = e2;
    const calcX = this._x - clientX;
    const calcY = this._y - clientY;
    const { left, top } = this.getBoundingClientRect();
    Object.assign(this.style, {
      left: `${Math.floor(left - calcX)}px`,
      top: `${Math.floor(top - calcY)}px`
    });
    this._x = clientX;
    this._y = clientY;
  }
  _onDragMouseUp() {
    delete this._x;
    delete this._y;
    this._detachMouseDragHandlers();
  }
  _onDragOrResizeKeyDown(e2) {
    if (!this._movable || !Dialog_1._isHeader(e2.target)) {
      return;
    }
    if (this.draggable && [P$1, _, D$3, R2].some((key) => key(e2))) {
      this._dragWithEvent(e2);
      return;
    }
    if (this.resizable && [O, N$1, h, I].some((key) => key(e2))) {
      this._resizeWithEvent(e2);
    }
  }
  _dragWithEvent(e2) {
    const { top, left, width, height } = this.getBoundingClientRect();
    let newPos = 0;
    let posDirection = "top";
    switch (true) {
      case P$1(e2):
        newPos = top - STEP_SIZE;
        posDirection = "top";
        break;
      case _(e2):
        newPos = top + STEP_SIZE;
        posDirection = "top";
        break;
      case D$3(e2):
        newPos = left - STEP_SIZE;
        posDirection = "left";
        break;
      case R2(e2):
        newPos = left + STEP_SIZE;
        posDirection = "left";
        break;
    }
    newPos = m$3(newPos, 0, posDirection === "left" ? window.innerWidth - width : window.innerHeight - height);
    this.style[posDirection] = `${newPos}px`;
  }
  _resizeWithEvent(e2) {
    this._draggedOrResized = true;
    this.addEventListener("ui5-before-close", this._revertSize, { once: true });
    const { top, left } = this.getBoundingClientRect(), style = window.getComputedStyle(this), minWidth = Number.parseFloat(style.minWidth), maxWidth = window.innerWidth - left, maxHeight = window.innerHeight - top;
    let width = Number.parseFloat(style.width), height = Number.parseFloat(style.height);
    switch (true) {
      case O(e2):
        height -= STEP_SIZE;
        break;
      case N$1(e2):
        height += STEP_SIZE;
        break;
      case h(e2):
        width -= STEP_SIZE;
        break;
      case I(e2):
        width += STEP_SIZE;
        break;
    }
    width = m$3(width, minWidth, maxWidth);
    height = m$3(height, this._minHeight, maxHeight);
    Object.assign(this.style, {
      width: `${width}px`,
      height: `${height}px`
    });
  }
  _attachMouseDragHandlers() {
    window.addEventListener("mousemove", this._dragMouseMoveHandler);
    window.addEventListener("mouseup", this._dragMouseUpHandler);
  }
  _detachMouseDragHandlers() {
    window.removeEventListener("mousemove", this._dragMouseMoveHandler);
    window.removeEventListener("mouseup", this._dragMouseUpHandler);
  }
  _onResizeMouseDown(e2) {
    if (!this._movable || !this.resizable) {
      return;
    }
    e2.preventDefault();
    const { top, left } = this.getBoundingClientRect();
    const { width, height, minWidth } = window.getComputedStyle(this);
    this._initialX = e2.clientX;
    this._initialY = e2.clientY;
    this._initialWidth = Number.parseFloat(width);
    this._initialHeight = Number.parseFloat(height);
    this._initialTop = top;
    this._initialLeft = left;
    this._minWidth = Number.parseFloat(minWidth);
    this._cachedMinHeight = this._minHeight;
    Object.assign(this.style, {
      top: `${top}px`,
      left: `${left}px`
    });
    this._draggedOrResized = true;
    this._attachMouseResizeHandlers();
  }
  _onResizeMouseMove(e2) {
    const { clientX, clientY } = e2;
    let newWidth, newLeft;
    if (this._isRTL) {
      newWidth = m$3(this._initialWidth - (clientX - this._initialX), this._minWidth, this._initialLeft + this._initialWidth);
      newLeft = m$3(this._initialLeft + (clientX - this._initialX), 0, this._initialX + this._initialWidth - this._minWidth);
    } else {
      newWidth = m$3(this._initialWidth + (clientX - this._initialX), this._minWidth, window.innerWidth - this._initialLeft);
    }
    const newHeight = m$3(this._initialHeight + (clientY - this._initialY), this._cachedMinHeight, window.innerHeight - this._initialTop);
    Object.assign(this.style, {
      height: `${newHeight}px`,
      width: `${newWidth}px`,
      left: newLeft ? `${newLeft}px` : void 0
    });
  }
  _onResizeMouseUp() {
    delete this._initialX;
    delete this._initialY;
    delete this._initialWidth;
    delete this._initialHeight;
    delete this._initialTop;
    delete this._initialLeft;
    delete this._minWidth;
    delete this._cachedMinHeight;
    this._detachMouseResizeHandlers();
  }
  _handleDragStart(e2) {
    if (this.draggable) {
      e2.preventDefault();
    }
  }
  _attachMouseResizeHandlers() {
    window.addEventListener("mousemove", this._resizeMouseMoveHandler);
    window.addEventListener("mouseup", this._resizeMouseUpHandler);
    this.addEventListener("ui5-before-close", this._revertSize, { once: true });
  }
  _detachMouseResizeHandlers() {
    window.removeEventListener("mousemove", this._resizeMouseMoveHandler);
    window.removeEventListener("mouseup", this._resizeMouseUpHandler);
  }
};
__decorate$v([
  s$7()
], Dialog$1.prototype, "headerText", void 0);
__decorate$v([
  s$7({ type: Boolean })
], Dialog$1.prototype, "stretch", void 0);
__decorate$v([
  s$7({ type: Boolean })
], Dialog$1.prototype, "draggable", void 0);
__decorate$v([
  s$7({ type: Boolean })
], Dialog$1.prototype, "resizable", void 0);
__decorate$v([
  s$7()
], Dialog$1.prototype, "state", void 0);
__decorate$v([
  d$4()
], Dialog$1.prototype, "header", void 0);
__decorate$v([
  d$4()
], Dialog$1.prototype, "footer", void 0);
__decorate$v([
  i$8("@ui5/webcomponents")
], Dialog$1, "i18nBundle", void 0);
Dialog$1 = Dialog_1 = __decorate$v([
  m$7({
    tag: "ui5-dialog",
    template: DialogTemplate,
    styles: [
      Popup$1.styles,
      PopupsCommonCss,
      dialogCSS
    ]
  })
], Dialog$1);
Dialog$1.define();
const Dialog$2 = Dialog$1;
function ResponsivePopoverTemplate() {
  if (!this._isPhone) {
    return PopoverTemplate.call(this);
  }
  return jsxs(Dialog$2, { "root-element": true, accessibleName: this.accessibleName, accessibleNameRef: this.accessibleNameRef, accessibleDescription: this.accessibleDescription, accessibleDescriptionRef: this.accessibleDescriptionRef, accessibleRole: this.accessibleRole, stretch: true, preventInitialFocus: this.preventInitialFocus, preventFocusRestore: this.preventFocusRestore, initialFocus: this.initialFocus, onBeforeOpen: this._beforeDialogOpen, onOpen: this._afterDialogOpen, onBeforeClose: this._beforeDialogClose, onClose: this._afterDialogClose, exportparts: "content, header, footer", open: this.open, children: [!this._hideHeader && jsx(Fragment, { children: this.header.length ? jsx("slot", { slot: "header", name: "header" }) : jsxs("div", { class: this.classes.header, slot: "header", children: [this.headerText && jsx(Title$1, { level: "H1", wrappingType: "None", class: "ui5-popup-header-text ui5-responsive-popover-header-text", children: this.headerText }), !this._hideCloseButton && jsx(Button$2, { icon: decline, design: "Transparent", accessibleName: this._closeDialogAriaLabel, onClick: this._dialogCloseButtonClick })] }) }), jsx("slot", {}), jsx("slot", { slot: "footer", name: "footer" })] });
}
const e$5 = { toAttribute(t3) {
  return t3 instanceof HTMLElement ? null : t3;
}, fromAttribute(t3) {
  return t3;
} };
var PopoverPlacement;
(function(PopoverPlacement2) {
  PopoverPlacement2["Start"] = "Start";
  PopoverPlacement2["End"] = "End";
  PopoverPlacement2["Top"] = "Top";
  PopoverPlacement2["Bottom"] = "Bottom";
})(PopoverPlacement || (PopoverPlacement = {}));
const PopoverPlacement$1 = PopoverPlacement;
var PopoverVerticalAlign;
(function(PopoverVerticalAlign2) {
  PopoverVerticalAlign2["Center"] = "Center";
  PopoverVerticalAlign2["Top"] = "Top";
  PopoverVerticalAlign2["Bottom"] = "Bottom";
  PopoverVerticalAlign2["Stretch"] = "Stretch";
})(PopoverVerticalAlign || (PopoverVerticalAlign = {}));
const PopoverVerticalAlign$1 = PopoverVerticalAlign;
var PopoverHorizontalAlign;
(function(PopoverHorizontalAlign2) {
  PopoverHorizontalAlign2["Center"] = "Center";
  PopoverHorizontalAlign2["Start"] = "Start";
  PopoverHorizontalAlign2["End"] = "End";
  PopoverHorizontalAlign2["Stretch"] = "Stretch";
})(PopoverHorizontalAlign || (PopoverHorizontalAlign = {}));
const PopoverHorizontalAlign$1 = PopoverHorizontalAlign;
const e$4 = (t3) => t3.parentElement ? t3.parentElement : t3.parentNode.host;
let updateInterval;
const intervalTimeout = 300;
const openedRegistry = [];
const repositionPopovers = () => {
  openedRegistry.forEach((popover) => {
    popover.instance.reposition();
  });
};
const closePopoversIfLostFocus = () => {
  let activeElement = t$5();
  if (activeElement.tagName === "IFRAME") {
    getRegistry().reverse().forEach((popup) => {
      const popover = popup.instance;
      const opener2 = popover.getOpenerHTMLElement(popover.opener);
      while (activeElement) {
        if (activeElement === opener2) {
          return;
        }
        activeElement = e$4(activeElement);
      }
      popover.closePopup(false, false, true);
    });
  }
};
const runUpdateInterval = () => {
  updateInterval = setInterval(() => {
    repositionPopovers();
    closePopoversIfLostFocus();
  }, intervalTimeout);
};
const stopUpdateInterval = () => {
  clearInterval(updateInterval);
};
const attachGlobalScrollHandler = () => {
  document.addEventListener("scroll", repositionPopovers, { capture: true });
};
const detachGlobalScrollHandler = () => {
  document.removeEventListener("scroll", repositionPopovers, { capture: true });
};
const attachScrollHandler = (popover) => {
  popover && popover.shadowRoot.addEventListener("scroll", repositionPopovers, { capture: true });
};
const detachScrollHandler = (popover) => {
  popover && popover.shadowRoot.removeEventListener("scroll", repositionPopovers, { capture: true });
};
const attachGlobalClickHandler = () => {
  document.addEventListener("mousedown", clickHandler, { capture: true });
};
const detachGlobalClickHandler = () => {
  document.removeEventListener("mousedown", clickHandler, { capture: true });
};
const clickHandler = (event) => {
  const openedPopups = getOpenedPopups();
  if (openedPopups.length === 0) {
    return;
  }
  const isTopPopupPopover = instanceOfPopover(openedPopups[openedPopups.length - 1].instance);
  if (!isTopPopupPopover) {
    return;
  }
  for (let i3 = openedPopups.length - 1; i3 !== -1; i3--) {
    const popup = openedPopups[i3].instance;
    if (popup.isModal || popup.isOpenerClicked(event)) {
      return;
    }
    if (f$4(event, popup.getBoundingClientRect())) {
      break;
    }
    popup.closePopup();
  }
};
const addOpenedPopover = (instance) => {
  const parentPopovers = getParentPopoversIfNested(instance);
  addOpenedPopup(instance, parentPopovers);
  openedRegistry.push({
    instance,
    parentPopovers
  });
  attachScrollHandler(instance);
  if (openedRegistry.length === 1) {
    attachGlobalScrollHandler();
    attachGlobalClickHandler();
    runUpdateInterval();
  }
};
const removeOpenedPopover = (instance) => {
  const popoversToClose = [instance];
  for (let i3 = 0; i3 < openedRegistry.length; i3++) {
    const indexOfCurrentInstance = openedRegistry[i3].parentPopovers.indexOf(instance);
    if (openedRegistry[i3].parentPopovers.length > 0 && indexOfCurrentInstance > -1) {
      popoversToClose.push(openedRegistry[i3].instance);
    }
  }
  for (let i3 = popoversToClose.length - 1; i3 >= 0; i3--) {
    for (let j2 = 0; j2 < openedRegistry.length; j2++) {
      let indexOfItemToRemove = -1;
      if (popoversToClose[i3] === openedRegistry[j2].instance) {
        indexOfItemToRemove = j2;
      }
      if (indexOfItemToRemove >= 0) {
        removeOpenedPopup(openedRegistry[indexOfItemToRemove].instance);
        detachScrollHandler(openedRegistry[indexOfItemToRemove].instance);
        const itemToClose = openedRegistry.splice(indexOfItemToRemove, 1);
        itemToClose[0].instance.closePopup(false, true);
      }
    }
  }
  if (!openedRegistry.length) {
    detachGlobalScrollHandler();
    detachGlobalClickHandler();
    stopUpdateInterval();
  }
};
const getRegistry = () => {
  return openedRegistry;
};
const getParentPopoversIfNested = (instance) => {
  let currentElement = instance.parentNode;
  const parentPopovers = [];
  while (currentElement && currentElement.parentNode) {
    for (let i3 = 0; i3 < openedRegistry.length; i3++) {
      if (currentElement === openedRegistry[i3].instance) {
        parentPopovers.push(currentElement);
      }
    }
    currentElement = currentElement.parentNode;
  }
  return parentPopovers;
};
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const PopoverCss = `:host{box-shadow:var(--_ui5-v2-14-0_popover_box_shadow);background-color:var(--_ui5-v2-14-0_popover_background);max-width:calc(100vw - (100vw - 100%) - 2 * var(--_ui5-v2-14-0_popup_viewport_margin))}:host([hide-arrow]){box-shadow:var(--_ui5-v2-14-0_popover_no_arrow_box_shadow)}:host([actual-placement="Bottom"]) .ui5-popover-arrow{left:calc(50% - .5625rem);top:-.5rem;height:.5rem}:host([actual-placement="Bottom"]) .ui5-popover-arrow:after{margin:var(--_ui5-v2-14-0_popover_upward_arrow_margin)}:host([actual-placement="Start"]) .ui5-popover-arrow{top:calc(50% - .5625rem);right:-.5625rem;width:.5625rem}:host([actual-placement="Start"]) .ui5-popover-arrow:after{margin:var(--_ui5-v2-14-0_popover_right_arrow_margin)}:host([actual-placement="Top"]) .ui5-popover-arrow{left:calc(50% - .5625rem);height:.5625rem;top:100%}:host([actual-placement="Top"]) .ui5-popover-arrow:after{margin:var(--_ui5-v2-14-0_popover_downward_arrow_margin)}:host(:not([actual-placement])) .ui5-popover-arrow,:host([actual-placement="End"]) .ui5-popover-arrow{left:-.5625rem;top:calc(50% - .5625rem);width:.5625rem;height:1rem}:host(:not([actual-placement])) .ui5-popover-arrow:after,:host([actual-placement="End"]) .ui5-popover-arrow:after{margin:var(--_ui5-v2-14-0_popover_left_arrow_margin)}:host([hide-arrow]) .ui5-popover-arrow{display:none}.ui5-popover-root{min-width:6.25rem}.ui5-popover-arrow{pointer-events:none;display:block;width:1rem;height:1rem;position:absolute;overflow:hidden}.ui5-popover-arrow:after{content:"";display:block;width:.7rem;height:.7rem;background-color:var(--_ui5-v2-14-0_popover_background);box-shadow:var(--_ui5-v2-14-0_popover_box_shadow);transform:rotate(-45deg)}:host([modal])::backdrop{background-color:var(--_ui5-v2-14-0_popup_block_layer_background);opacity:var(--_ui5-v2-14-0_popup_block_layer_opacity)}:host([modal]) .ui5-block-layer{display:block}
`;
var __decorate$u = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var Popover_1;
const ARROW_SIZE = 8;
let Popover = Popover_1 = class Popover2 extends Popup$1 {
  static get VIEWPORT_MARGIN() {
    return 10;
  }
  constructor() {
    super();
    this.placement = "End";
    this.horizontalAlign = "Center";
    this.verticalAlign = "Center";
    this.modal = false;
    this.hideArrow = false;
    this.allowTargetOverlap = false;
    this.arrowTranslateX = 0;
    this.arrowTranslateY = 0;
    this.actualPlacement = "End";
  }
  /**
   * Defines the ID or DOM Reference of the element at which the popover is shown.
   * When using this attribute in a declarative way, you must only use the `id` (as a string) of the element at which you want to show the popover.
   * You can only set the `opener` attribute to a DOM Reference when using JavaScript.
   * @public
   * @default undefined
   * @since 1.2.0
   */
  set opener(value) {
    if (this._opener === value) {
      return;
    }
    this._opener = value;
    if (value && this.open) {
      this.openPopup();
    }
  }
  get opener() {
    return this._opener;
  }
  async openPopup() {
    if (this._opened) {
      return;
    }
    const opener2 = this.getOpenerHTMLElement(this.opener);
    if (!opener2) {
      return;
    }
    if (!opener2 || this.isOpenerOutsideViewport(opener2.getBoundingClientRect())) {
      await f$h();
      this.open = false;
      this.fireDecoratorEvent("close");
      return;
    }
    this._openerRect = opener2.getBoundingClientRect();
    await super.openPopup();
  }
  isOpenerClicked(e2) {
    const target = e2.target;
    const opener2 = this.getOpenerHTMLElement(this.opener);
    if (!opener2) {
      return false;
    }
    if (target === opener2) {
      return true;
    }
    if (this._isUI5AbstractElement(target) && target.getFocusDomRef() === opener2) {
      return true;
    }
    return e2.composedPath().indexOf(opener2) > -1;
  }
  /**
   * Override for the _addOpenedPopup hook, which would otherwise just call addOpenedPopup(this)
   * @private
   */
  _addOpenedPopup() {
    addOpenedPopover(this);
  }
  /**
   * Override for the _removeOpenedPopup hook, which would otherwise just call removeOpenedPopup(this)
   * @private
   */
  _removeOpenedPopup() {
    removeOpenedPopover(this);
  }
  getOpenerHTMLElement(opener2) {
    if (opener2 === void 0 || opener2 === null) {
      return opener2;
    }
    if (opener2 instanceof HTMLElement) {
      return this._isUI5AbstractElement(opener2) ? opener2.getFocusDomRef() : opener2;
    }
    let rootNode = this.getRootNode();
    if (rootNode === this) {
      rootNode = document;
    }
    let openerHTMLElement = rootNode.getElementById(opener2);
    if (rootNode instanceof ShadowRoot && !openerHTMLElement) {
      openerHTMLElement = document.getElementById(opener2);
    }
    if (openerHTMLElement) {
      return this._isUI5AbstractElement(openerHTMLElement) ? openerHTMLElement.getFocusDomRef() : openerHTMLElement;
    }
    return openerHTMLElement;
  }
  shouldCloseDueToOverflow(placement, openerRect) {
    const threshold = 32;
    const limits = {
      "Start": openerRect.right,
      "End": openerRect.left,
      "Top": openerRect.top,
      "Bottom": openerRect.bottom
    };
    const opener2 = this.getOpenerHTMLElement(this.opener);
    const closedPopupParent = i$3(opener2);
    let overflowsBottom = false;
    let overflowsTop = false;
    if (closedPopupParent instanceof Popover_1) {
      const contentRect = closedPopupParent.getBoundingClientRect();
      overflowsBottom = openerRect.top > contentRect.top + contentRect.height;
      overflowsTop = openerRect.top + openerRect.height < contentRect.top;
    }
    return limits[placement] < 0 || limits[placement] + threshold > closedPopupParent.innerHeight || overflowsBottom || overflowsTop;
  }
  shouldCloseDueToNoOpener(openerRect) {
    return openerRect.top === 0 && openerRect.bottom === 0 && openerRect.left === 0 && openerRect.right === 0;
  }
  isOpenerOutsideViewport(openerRect) {
    return openerRect.bottom < 0 || openerRect.top > window.innerHeight || openerRect.right < 0 || openerRect.left > window.innerWidth;
  }
  /**
   * @override
   */
  _resize() {
    super._resize();
    if (this.open) {
      this.reposition();
    }
  }
  reposition() {
    this._show();
  }
  async _show() {
    super._show();
    const opener2 = this.getOpenerHTMLElement(this.opener);
    if (!opener2) {
      Object.assign(this.style, {
        top: `0px`,
        left: `0px`
      });
      return;
    }
    if (opener2 && v$4(opener2) && !opener2.getDomRef()) {
      return;
    }
    if (!this._opened) {
      this._showOutsideViewport();
    }
    const popoverSize = this.getPopoverSize();
    let placement;
    if (popoverSize.width === 0 || popoverSize.height === 0) {
      return;
    }
    if (this.open) {
      this._openerRect = opener2.getBoundingClientRect();
    }
    if (this._oldPlacement && this.shouldCloseDueToNoOpener(this._openerRect) && this.isFocusWithin()) {
      placement = this._oldPlacement;
    } else {
      placement = this.calcPlacement(this._openerRect, popoverSize);
    }
    if (this._preventRepositionAndClose || this.isOpenerOutsideViewport(this._openerRect)) {
      await this._waitForDomRef();
      return this.closePopup();
    }
    this._oldPlacement = placement;
    this.actualPlacement = placement.placement;
    let left = m$3(this._left, Popover_1.VIEWPORT_MARGIN, document.documentElement.clientWidth - popoverSize.width - Popover_1.VIEWPORT_MARGIN);
    if (this.actualPlacement === PopoverPlacement$1.End) {
      left = Math.max(left, this._left);
    }
    let top = m$3(this._top, Popover_1.VIEWPORT_MARGIN, document.documentElement.clientHeight - popoverSize.height - Popover_1.VIEWPORT_MARGIN);
    if (this.actualPlacement === PopoverPlacement$1.Bottom) {
      top = Math.max(top, this._top);
    }
    this.arrowTranslateX = placement.arrow.x;
    this.arrowTranslateY = placement.arrow.y;
    top = this._adjustForIOSKeyboard(top);
    Object.assign(this.style, {
      top: `${top}px`,
      left: `${left}px`
    });
    if (this.horizontalAlign === PopoverHorizontalAlign$1.Stretch && this._width) {
      this.style.width = this._width;
    }
    if (this.verticalAlign === PopoverVerticalAlign$1.Stretch && this._height) {
      this.style.height = this._height;
    }
  }
  /**
   * Adjust the desired top position to compensate for shift of the screen
   * caused by opened keyboard on iOS which affects all elements with position:fixed.
   * @private
   * @param top The target top in px.
   * @returns The adjusted top in px.
   */
  _adjustForIOSKeyboard(top) {
    if (!w$8()) {
      return top;
    }
    const actualTop = Math.ceil(this.getBoundingClientRect().top);
    return top + (Number.parseInt(this.style.top || "0") - actualTop);
  }
  getPopoverSize(calcScrollHeight = false) {
    const rect = this.getBoundingClientRect();
    const width = rect.width;
    let height;
    const domRef = this.getDomRef();
    if (calcScrollHeight && domRef) {
      const header = domRef.querySelector(".ui5-popup-header-root");
      const content2 = domRef.querySelector(".ui5-popup-content");
      const footer = domRef.querySelector(".ui5-popup-footer-root");
      height = content2?.scrollHeight || 0;
      height += header?.scrollHeight || 0;
      height += footer?.scrollHeight || 0;
    } else {
      height = rect.height;
    }
    return { width, height };
  }
  _showOutsideViewport() {
    Object.assign(this.style, {
      top: "-10000px",
      left: "-10000px"
    });
  }
  _isUI5AbstractElement(el) {
    return v$4(el) && el.isUI5AbstractElement;
  }
  get arrowDOM() {
    return this.shadowRoot.querySelector(".ui5-popover-arrow");
  }
  /**
   * @protected
   */
  focusOpener() {
    this.getOpenerHTMLElement(this.opener)?.focus();
  }
  /**
   * @private
   */
  calcPlacement(targetRect, popoverSize) {
    let left = Popover_1.VIEWPORT_MARGIN;
    let top = 0;
    const allowTargetOverlap = this.allowTargetOverlap;
    const clientWidth = document.documentElement.clientWidth;
    const clientHeight = document.documentElement.clientHeight;
    let maxHeight = clientHeight;
    let maxWidth = clientWidth;
    const placement = this.getActualPlacement(targetRect);
    this._preventRepositionAndClose = this.shouldCloseDueToNoOpener(targetRect) || this.shouldCloseDueToOverflow(placement, targetRect);
    const isVertical = placement === PopoverPlacement$1.Top || placement === PopoverPlacement$1.Bottom;
    if (this.horizontalAlign === PopoverHorizontalAlign$1.Stretch && isVertical) {
      popoverSize.width = targetRect.width;
      this._width = `${targetRect.width}px`;
    } else if (this.verticalAlign === PopoverVerticalAlign$1.Stretch && !isVertical) {
      popoverSize.height = targetRect.height;
      this._height = `${targetRect.height}px`;
    }
    const arrowOffset = this.hideArrow ? 0 : ARROW_SIZE;
    switch (placement) {
      case PopoverPlacement$1.Top:
        left = this.getVerticalLeft(targetRect, popoverSize);
        top = Math.max(targetRect.top - popoverSize.height - arrowOffset, 0);
        if (!allowTargetOverlap) {
          maxHeight = targetRect.top - arrowOffset;
        }
        break;
      case PopoverPlacement$1.Bottom:
        left = this.getVerticalLeft(targetRect, popoverSize);
        top = targetRect.bottom + arrowOffset;
        if (allowTargetOverlap) {
          top = Math.max(Math.min(top, clientHeight - popoverSize.height), 0);
        } else {
          maxHeight = clientHeight - targetRect.bottom - arrowOffset;
        }
        break;
      case PopoverPlacement$1.Start:
        left = Math.max(targetRect.left - popoverSize.width - arrowOffset, 0);
        top = this.getHorizontalTop(targetRect, popoverSize);
        if (!allowTargetOverlap) {
          maxWidth = targetRect.left - arrowOffset;
        }
        break;
      case PopoverPlacement$1.End:
        left = targetRect.left + targetRect.width + arrowOffset;
        top = this.getHorizontalTop(targetRect, popoverSize);
        if (allowTargetOverlap) {
          left = Math.max(Math.min(left, clientWidth - popoverSize.width), 0);
        } else {
          maxWidth = clientWidth - targetRect.right - arrowOffset;
        }
        break;
    }
    if (isVertical) {
      if (popoverSize.width > clientWidth || left < Popover_1.VIEWPORT_MARGIN) {
        left = Popover_1.VIEWPORT_MARGIN;
      } else if (left + popoverSize.width > clientWidth - Popover_1.VIEWPORT_MARGIN) {
        left = clientWidth - Popover_1.VIEWPORT_MARGIN - popoverSize.width;
      }
    } else {
      if (popoverSize.height > clientHeight || top < Popover_1.VIEWPORT_MARGIN) {
        top = Popover_1.VIEWPORT_MARGIN;
      } else if (top + popoverSize.height > clientHeight - Popover_1.VIEWPORT_MARGIN) {
        top = clientHeight - Popover_1.VIEWPORT_MARGIN - popoverSize.height;
      }
    }
    this._maxHeight = Math.round(maxHeight - Popover_1.VIEWPORT_MARGIN);
    this._maxWidth = Math.round(maxWidth - Popover_1.VIEWPORT_MARGIN);
    if (this._left === void 0 || Math.abs(this._left - left) > 1.5) {
      this._left = Math.round(left);
    }
    if (this._top === void 0 || Math.abs(this._top - top) > 1.5) {
      this._top = Math.round(top);
    }
    const borderRadius = Number.parseInt(window.getComputedStyle(this).getPropertyValue("border-radius"));
    const arrowPos = this.getArrowPosition(targetRect, popoverSize, left, top, isVertical, borderRadius);
    this._left += this.getRTLCorrectionLeft();
    return {
      arrow: arrowPos,
      top: this._top,
      left: this._left,
      placement
    };
  }
  getRTLCorrectionLeft() {
    return parseFloat(window.getComputedStyle(this).left) - this.getBoundingClientRect().left;
  }
  /**
   * Calculates the position for the arrow.
   * @private
   * @param targetRect BoundingClientRect of the target element
   * @param popoverSize Width and height of the popover
   * @param left Left offset of the popover
   * @param top Top offset of the popover
   * @param isVertical If the popover is positioned vertically to the target element
   * @param borderRadius Value of the border-radius property
   * @returns  Arrow's coordinates
   */
  getArrowPosition(targetRect, popoverSize, left, top, isVertical, borderRadius) {
    const horizontalAlign = this._actualHorizontalAlign;
    let arrowXCentered = horizontalAlign === PopoverHorizontalAlign$1.Center || horizontalAlign === PopoverHorizontalAlign$1.Stretch;
    if (horizontalAlign === PopoverHorizontalAlign$1.End && left <= targetRect.left) {
      arrowXCentered = true;
    }
    if (horizontalAlign === PopoverHorizontalAlign$1.Start && left + popoverSize.width >= targetRect.left + targetRect.width) {
      arrowXCentered = true;
    }
    let arrowTranslateX = 0;
    if (isVertical && arrowXCentered) {
      arrowTranslateX = targetRect.left + targetRect.width / 2 - left - popoverSize.width / 2;
    }
    let arrowTranslateY = 0;
    if (!isVertical) {
      arrowTranslateY = targetRect.top + targetRect.height / 2 - top - popoverSize.height / 2;
    }
    const safeRangeForArrowY = popoverSize.height / 2 - borderRadius - ARROW_SIZE / 2 - 2;
    arrowTranslateY = m$3(arrowTranslateY, -safeRangeForArrowY, safeRangeForArrowY);
    const safeRangeForArrowX = popoverSize.width / 2 - borderRadius - ARROW_SIZE / 2 - 2;
    arrowTranslateX = m$3(arrowTranslateX, -safeRangeForArrowX, safeRangeForArrowX);
    return {
      x: Math.round(arrowTranslateX),
      y: Math.round(arrowTranslateY)
    };
  }
  /**
   * Fallbacks to new placement, prioritizing `Left` and `Right` placements.
   * @private
   */
  fallbackPlacement(clientWidth, clientHeight, targetRect, popoverSize) {
    if (targetRect.left > popoverSize.width) {
      return PopoverPlacement$1.Start;
    }
    if (clientWidth - targetRect.right > targetRect.left) {
      return PopoverPlacement$1.End;
    }
    if (clientHeight - targetRect.bottom > popoverSize.height) {
      return PopoverPlacement$1.Bottom;
    }
    if (clientHeight - targetRect.bottom < targetRect.top) {
      return PopoverPlacement$1.Top;
    }
  }
  getActualPlacement(targetRect) {
    const placement = this.placement;
    let actualPlacement = placement;
    const isVertical = placement === PopoverPlacement$1.Top || placement === PopoverPlacement$1.Bottom;
    const popoverSize = this.getPopoverSize(!this.allowTargetOverlap);
    const clientWidth = document.documentElement.clientWidth;
    let clientHeight = document.documentElement.clientHeight;
    let popoverHeight = popoverSize.height;
    if (isVertical) {
      popoverHeight += this.hideArrow ? 0 : ARROW_SIZE;
      clientHeight -= Popover_1.VIEWPORT_MARGIN;
    }
    switch (placement) {
      case PopoverPlacement$1.Top:
        if (targetRect.top < popoverHeight && targetRect.top < clientHeight - targetRect.bottom) {
          actualPlacement = PopoverPlacement$1.Bottom;
        }
        break;
      case PopoverPlacement$1.Bottom:
        if (clientHeight - targetRect.bottom < popoverHeight && clientHeight - targetRect.bottom < targetRect.top) {
          actualPlacement = PopoverPlacement$1.Top;
        }
        break;
      case PopoverPlacement$1.Start:
        if (targetRect.left < popoverSize.width) {
          actualPlacement = this.fallbackPlacement(clientWidth, clientHeight, targetRect, popoverSize) || placement;
        }
        break;
      case PopoverPlacement$1.End:
        if (clientWidth - targetRect.right < popoverSize.width) {
          actualPlacement = this.fallbackPlacement(clientWidth, clientHeight, targetRect, popoverSize) || placement;
        }
        break;
    }
    return actualPlacement;
  }
  getVerticalLeft(targetRect, popoverSize) {
    const horizontalAlign = this._actualHorizontalAlign;
    let left = Popover_1.VIEWPORT_MARGIN;
    switch (horizontalAlign) {
      case PopoverHorizontalAlign$1.Center:
      case PopoverHorizontalAlign$1.Stretch:
        left = targetRect.left - (popoverSize.width - targetRect.width) / 2;
        break;
      case PopoverHorizontalAlign$1.Start:
        left = targetRect.left;
        break;
      case PopoverHorizontalAlign$1.End:
        left = targetRect.right - popoverSize.width;
        break;
    }
    return left;
  }
  getHorizontalTop(targetRect, popoverSize) {
    let top = 0;
    switch (this.verticalAlign) {
      case PopoverVerticalAlign$1.Center:
      case PopoverVerticalAlign$1.Stretch:
        top = targetRect.top - (popoverSize.height - targetRect.height) / 2;
        break;
      case PopoverVerticalAlign$1.Top:
        top = targetRect.top;
        break;
      case PopoverVerticalAlign$1.Bottom:
        top = targetRect.bottom - popoverSize.height;
        break;
    }
    return top;
  }
  get isModal() {
    return this.modal;
  }
  get _ariaLabelledBy() {
    if (!this._ariaLabel && this._displayHeader) {
      return "ui5-popup-header";
    }
    return void 0;
  }
  get styles() {
    return {
      ...super.styles,
      root: {
        "max-height": this._maxHeight ? `${this._maxHeight}px` : "",
        "max-width": this._maxWidth ? `${this._maxWidth}px` : ""
      },
      arrow: {
        transform: `translate(${this.arrowTranslateX}px, ${this.arrowTranslateY}px)`
      }
    };
  }
  get classes() {
    const allClasses = super.classes;
    allClasses.root["ui5-popover-root"] = true;
    return allClasses;
  }
  /**
   * Hook for descendants to hide header.
   */
  get _displayHeader() {
    return !!(this.header.length || this.headerText);
  }
  /**
   * Hook for descendants to hide footer.
   */
  get _displayFooter() {
    return true;
  }
  get _actualHorizontalAlign() {
    if (this.effectiveDir === "rtl") {
      if (this.horizontalAlign === PopoverHorizontalAlign$1.Start) {
        return PopoverHorizontalAlign$1.End;
      }
      if (this.horizontalAlign === PopoverHorizontalAlign$1.End) {
        return PopoverHorizontalAlign$1.Start;
      }
    }
    return this.horizontalAlign;
  }
};
__decorate$u([
  s$7()
], Popover.prototype, "headerText", void 0);
__decorate$u([
  s$7()
], Popover.prototype, "placement", void 0);
__decorate$u([
  s$7()
], Popover.prototype, "horizontalAlign", void 0);
__decorate$u([
  s$7()
], Popover.prototype, "verticalAlign", void 0);
__decorate$u([
  s$7({ type: Boolean })
], Popover.prototype, "modal", void 0);
__decorate$u([
  s$7({ type: Boolean })
], Popover.prototype, "hideArrow", void 0);
__decorate$u([
  s$7({ type: Boolean })
], Popover.prototype, "allowTargetOverlap", void 0);
__decorate$u([
  s$7({ type: Number, noAttribute: true })
], Popover.prototype, "arrowTranslateX", void 0);
__decorate$u([
  s$7({ type: Number, noAttribute: true })
], Popover.prototype, "arrowTranslateY", void 0);
__decorate$u([
  s$7()
], Popover.prototype, "actualPlacement", void 0);
__decorate$u([
  s$7({ type: Number, noAttribute: true })
], Popover.prototype, "_maxHeight", void 0);
__decorate$u([
  s$7({ type: Number, noAttribute: true })
], Popover.prototype, "_maxWidth", void 0);
__decorate$u([
  d$4({ type: HTMLElement })
], Popover.prototype, "header", void 0);
__decorate$u([
  d$4({ type: HTMLElement })
], Popover.prototype, "footer", void 0);
__decorate$u([
  s$7({ converter: e$5 })
], Popover.prototype, "opener", null);
Popover = Popover_1 = __decorate$u([
  m$7({
    tag: "ui5-popover",
    styles: [
      Popup$1.styles,
      PopupsCommonCss,
      PopoverCss
    ],
    template: PopoverTemplate
  })
], Popover);
const instanceOfPopover = (object) => {
  return "opener" in object;
};
Popover.define();
const Popover$1 = Popover;
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const ResponsivePopoverCss = `:host{--_ui5-v2-14-0_input_width: 100%;min-width:6.25rem;min-height:2rem}:host([on-phone]){display:contents}.ui5-responsive-popover-header{height:var(--_ui5-v2-14-0-responsive_popover_header_height);display:flex;justify-content:var(--_ui5-v2-14-0_popup_header_prop_header_text_alignment);align-items:center;width:100%}.ui5-responsive-popover-header-text{width:calc(100% - var(--_ui5-v2-14-0_button_base_min_width))}.ui5-responsive-popover-header-no-title{justify-content:flex-end}
`;
var __decorate$t = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var ResponsivePopover_1;
let ResponsivePopover = ResponsivePopover_1 = class ResponsivePopover2 extends Popover$1 {
  constructor() {
    super();
    this.contentOnlyOnDesktop = false;
    this._hideHeader = false;
    this._hideCloseButton = false;
  }
  async openPopup() {
    if (!d$h()) {
      await super.openPopup();
    } else if (this._dialog) {
      this._dialog.open = true;
    }
  }
  async _show() {
    if (!d$h()) {
      return super._show();
    }
  }
  handleOpenOnEnterDOM() {
    if (this.open && !d$h()) {
      this.showPopover();
      this.openPopup();
    }
  }
  _dialogCloseButtonClick() {
    this.closePopup();
  }
  /**
   * Closes the popover/dialog.
   * @override
   */
  closePopup(escPressed = false, preventRegistryUpdate = false, preventFocusRestore = false) {
    if (!d$h()) {
      super.closePopup(escPressed, preventRegistryUpdate, preventFocusRestore);
    } else {
      this._dialog?.closePopup(escPressed, preventRegistryUpdate, preventFocusRestore);
    }
  }
  toggle(opener2) {
    if (this.open) {
      this.closePopup();
      return;
    }
    this.opener = opener2;
    this.open = true;
  }
  get classes() {
    const allClasses = super.classes;
    allClasses.header = {
      "ui5-responsive-popover-header": true,
      "ui5-responsive-popover-header-no-title": !this.headerText
    };
    return allClasses;
  }
  get _dialog() {
    return this.shadowRoot.querySelector("[ui5-dialog]");
  }
  get contentDOM() {
    return d$h() ? this._dialog.contentDOM : super.contentDOM;
  }
  get _isPhone() {
    return d$h();
  }
  get _displayHeader() {
    return (d$h() || !this.contentOnlyOnDesktop) && super._displayHeader;
  }
  get _displayFooter() {
    return d$h() || !this.contentOnlyOnDesktop;
  }
  get _closeDialogAriaLabel() {
    return ResponsivePopover_1.i18nBundle.getText(RESPONSIVE_POPOVER_CLOSE_DIALOG_BUTTON);
  }
  _beforeDialogOpen() {
    this._opened = true;
    this.open = true;
    this.fireDecoratorEvent("before-open");
  }
  _afterDialogOpen() {
    this.fireDecoratorEvent("open");
  }
  _beforeDialogClose(e2) {
    this.fireDecoratorEvent("before-close", e2.detail);
  }
  _afterDialogClose() {
    this._opened = false;
    this.open = false;
    this.fireDecoratorEvent("close");
  }
  get isModal() {
    if (!d$h()) {
      return super.isModal;
    }
    return this._dialog.isModal;
  }
};
__decorate$t([
  s$7({ type: Boolean })
], ResponsivePopover.prototype, "contentOnlyOnDesktop", void 0);
__decorate$t([
  s$7({ type: Boolean })
], ResponsivePopover.prototype, "_hideHeader", void 0);
__decorate$t([
  s$7({ type: Boolean })
], ResponsivePopover.prototype, "_hideCloseButton", void 0);
__decorate$t([
  i$8("@ui5/webcomponents")
], ResponsivePopover, "i18nBundle", void 0);
ResponsivePopover = ResponsivePopover_1 = __decorate$t([
  m$7({
    tag: "ui5-responsive-popover",
    styles: [Popover$1.styles, ResponsivePopoverCss],
    template: ResponsivePopoverTemplate
  })
], ResponsivePopover);
ResponsivePopover.define();
const ResponsivePopover$1 = ResponsivePopover;
const Icon2 = withWebComponent("ui5-icon", ["accessibleName", "design", "mode", "name"], ["showTooltip"], [], ["click"]);
Icon2.displayName = "Icon";
var TextEmptyIndicatorMode;
(function(TextEmptyIndicatorMode2) {
  TextEmptyIndicatorMode2["Off"] = "Off";
  TextEmptyIndicatorMode2["On"] = "On";
})(TextEmptyIndicatorMode || (TextEmptyIndicatorMode = {}));
const TextEmptyIndicatorMode$1 = TextEmptyIndicatorMode;
function TextTemplate() {
  return jsx(Fragment, { children: jsx("span", { children: this._renderEmptyIndicator ? jsxs(Fragment, { children: [jsx("span", { className: "empty-indicator", "aria-hidden": "true", children: this._emptyIndicatorSymbol }), jsx("span", { className: "empty-indicator-aria-label", children: this._emptyIndicatorAriaLabel })] }) : jsx("slot", {}) }) });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const styles$2 = `:host{max-width:100%;font-size:var(--sapFontSize);font-family:var(--sapFontFamily);color:var(--sapTextColor);line-height:normal;cursor:text;overflow:hidden}:host([max-lines="1"]){display:inline-block;text-overflow:ellipsis;white-space:nowrap}:host(:not([max-lines="1"])){display:-webkit-box;-webkit-line-clamp:var(--_ui5-v2-14-0_text_max_lines);line-clamp:var(--_ui5-v2-14-0_text_max_lines);-webkit-box-orient:vertical;white-space:normal;word-wrap:break-word}.empty-indicator-aria-label{position:absolute!important;clip:rect(1px,1px,1px,1px);user-select:none;left:0;top:0;font-size:0}
`;
var __decorate$s = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var Text_1;
let Text$1 = Text_1 = class Text extends b$6 {
  constructor() {
    super(...arguments);
    this.maxLines = Infinity;
    this.emptyIndicatorMode = "Off";
  }
  onBeforeRendering() {
    this.style.setProperty(d$g("--_ui5_text_max_lines"), `${this.maxLines}`);
  }
  get hasText() {
    return t$6(this.text);
  }
  get _renderEmptyIndicator() {
    return !this.hasText && this.emptyIndicatorMode === TextEmptyIndicatorMode$1.On;
  }
  get _emptyIndicatorAriaLabel() {
    return Text_1.i18nBundle.getText(EMPTY_INDICATOR_ACCESSIBLE_TEXT);
  }
  get _emptyIndicatorSymbol() {
    return Text_1.i18nBundle.getText(EMPTY_INDICATOR_SYMBOL);
  }
};
__decorate$s([
  s$7({ type: Number })
], Text$1.prototype, "maxLines", void 0);
__decorate$s([
  s$7()
], Text$1.prototype, "emptyIndicatorMode", void 0);
__decorate$s([
  d$4({ type: Node, "default": true })
], Text$1.prototype, "text", void 0);
__decorate$s([
  i$8("@ui5/webcomponents")
], Text$1, "i18nBundle", void 0);
Text$1 = Text_1 = __decorate$s([
  m$7({
    tag: "ui5-text",
    renderer: y$4,
    template: TextTemplate,
    styles: styles$2
  })
], Text$1);
Text$1.define();
const Text$2 = Text$1;
const Text2 = withWebComponent("ui5-text", ["emptyIndicatorMode", "maxLines"], [], [], []);
Text2.displayName = "Text";
let FlexBoxAlignItems = /* @__PURE__ */ (function(FlexBoxAlignItems2) {
  FlexBoxAlignItems2["Start"] = "Start";
  FlexBoxAlignItems2["Center"] = "Center";
  FlexBoxAlignItems2["End"] = "End";
  FlexBoxAlignItems2["Baseline"] = "Baseline";
  FlexBoxAlignItems2["Stretch"] = "Stretch";
  return FlexBoxAlignItems2;
})({});
let FlexBoxDirection = /* @__PURE__ */ (function(FlexBoxDirection2) {
  FlexBoxDirection2["Column"] = "Column";
  FlexBoxDirection2["ColumnReverse"] = "ColumnReverse";
  FlexBoxDirection2["Row"] = "Row";
  FlexBoxDirection2["RowReverse"] = "RowReverse";
  return FlexBoxDirection2;
})({});
let FlexBoxJustifyContent = /* @__PURE__ */ (function(FlexBoxJustifyContent2) {
  FlexBoxJustifyContent2["Start"] = "Start";
  FlexBoxJustifyContent2["Center"] = "Center";
  FlexBoxJustifyContent2["End"] = "End";
  FlexBoxJustifyContent2["SpaceAround"] = "SpaceAround";
  FlexBoxJustifyContent2["SpaceBetween"] = "SpaceBetween";
  return FlexBoxJustifyContent2;
})({});
let FlexBoxWrap = /* @__PURE__ */ (function(FlexBoxWrap2) {
  FlexBoxWrap2["NoWrap"] = "NoWrap";
  FlexBoxWrap2["Wrap"] = "Wrap";
  FlexBoxWrap2["WrapReverse"] = "WrapReverse";
  return FlexBoxWrap2;
})({});
const styleData = `@layer ui5-webcomponents-react{._flexBox_11fgm_1{display:flex}._flexBox_11fgm_1:where(._fitContainer_11fgm_4){height:100%;width:100%}._flexBox_11fgm_1:where(._justifyContentStart_11fgm_11){justify-content:flex-start}._flexBox_11fgm_1:where(._justifyContentEnd_11fgm_15){justify-content:flex-end}._flexBox_11fgm_1:where(._justifyContentCenter_11fgm_19){justify-content:center}._flexBox_11fgm_1:where(._justifyContentSpaceAround_11fgm_23){justify-content:space-around}._flexBox_11fgm_1:where(._justifyContentSpaceBetween_11fgm_27){justify-content:space-between}._flexBox_11fgm_1:where(._alignItemsStart_11fgm_33){align-items:flex-start}._flexBox_11fgm_1:where(._alignItemsEnd_11fgm_37){align-items:flex-end}._flexBox_11fgm_1:where(._alignItemsCenter_11fgm_41){align-items:center}._flexBox_11fgm_1:where(._alignItemsStretch_11fgm_45){align-items:stretch}._flexBox_11fgm_1:where(._alignItemsBaseline_11fgm_49){align-items:baseline}._flexBoxDisplayInline_11fgm_54{display:inline-flex}._flexBoxDirectionColumn_11fgm_58{flex-direction:column}._flexBoxDirectionColumnReverse_11fgm_62{flex-direction:column-reverse}._flexBoxDirectionRow_11fgm_66{flex-direction:row}._flexBoxDirectionRowReverse_11fgm_70{flex-direction:row-reverse}._flexWrapNoWrap_11fgm_74{flex-wrap:nowrap}._flexWrapWrap_11fgm_78{flex-wrap:wrap}._flexWrapWrapReverse_11fgm_82{flex-wrap:wrap-reverse}}`;
const classNames = {
  "flexBox": "_flexBox_11fgm_1",
  "fitContainer": "_fitContainer_11fgm_4",
  "justifyContentStart": "_justifyContentStart_11fgm_11",
  "justifyContentEnd": "_justifyContentEnd_11fgm_15",
  "justifyContentCenter": "_justifyContentCenter_11fgm_19",
  "justifyContentSpaceAround": "_justifyContentSpaceAround_11fgm_23",
  "justifyContentSpaceBetween": "_justifyContentSpaceBetween_11fgm_27",
  "alignItemsStart": "_alignItemsStart_11fgm_33",
  "alignItemsEnd": "_alignItemsEnd_11fgm_37",
  "alignItemsCenter": "_alignItemsCenter_11fgm_41",
  "alignItemsStretch": "_alignItemsStretch_11fgm_45",
  "alignItemsBaseline": "_alignItemsBaseline_11fgm_49",
  "flexBoxDisplayInline": "_flexBoxDisplayInline_11fgm_54",
  "flexBoxDirectionColumn": "_flexBoxDirectionColumn_11fgm_58",
  "flexBoxDirectionColumnReverse": "_flexBoxDirectionColumnReverse_11fgm_62",
  "flexBoxDirectionRow": "_flexBoxDirectionRow_11fgm_66",
  "flexBoxDirectionRowReverse": "_flexBoxDirectionRowReverse_11fgm_70",
  "flexWrapNoWrap": "_flexWrapNoWrap_11fgm_74",
  "flexWrapWrap": "_flexWrapWrap_11fgm_78",
  "flexWrapWrapReverse": "_flexWrapWrapReverse_11fgm_82"
};
const FlexBox = /* @__PURE__ */ reactExports.forwardRef((props, ref) => {
  const {
    children,
    justifyContent = FlexBoxJustifyContent.Start,
    direction = FlexBoxDirection.Row,
    alignItems = FlexBoxAlignItems.Stretch,
    displayInline,
    wrap = FlexBoxWrap.NoWrap,
    className,
    fitContainer,
    gap,
    as = "div",
    style,
    ...rest
  } = props;
  useStylesheet(styleData, FlexBox.displayName);
  const flexBoxClasses = clsx(classNames.flexBox, classNames[`flexBoxDirection${direction}`], classNames[`justifyContent${justifyContent}`], classNames[`alignItems${alignItems}`], classNames[`flexWrap${wrap}`], displayInline && classNames.flexBoxDisplayInline, fitContainer && classNames.fitContainer, className);
  const CustomTag = as;
  return /* @__PURE__ */ jsxRuntimeExports.jsx(CustomTag, {
    ref,
    className: flexBoxClasses,
    style: {
      gap,
      ...style
    },
    ...rest,
    children
  });
});
FlexBox.displayName = "FlexBox";
const scriptRel = /* @__PURE__ */ (function detectScriptRel() {
  const relList = typeof document !== "undefined" && document.createElement("link").relList;
  return relList && relList.supports && relList.supports("modulepreload") ? "modulepreload" : "preload";
})();
const assetsURL = function(dep, importerUrl) {
  return new URL(dep, importerUrl).href;
};
const seen = {};
const __vitePreload = function preload(baseModule, deps, importerUrl) {
  let promise = Promise.resolve();
  if (deps && deps.length > 0) {
    let allSettled = function(promises$2) {
      return Promise.all(promises$2.map((p3) => Promise.resolve(p3).then((value$1) => ({
        status: "fulfilled",
        value: value$1
      }), (reason) => ({
        status: "rejected",
        reason
      }))));
    };
    const links = document.getElementsByTagName("link");
    const cspNonceMeta = document.querySelector("meta[property=csp-nonce]");
    const cspNonce = cspNonceMeta?.nonce || cspNonceMeta?.getAttribute("nonce");
    promise = allSettled(deps.map((dep) => {
      dep = assetsURL(dep, importerUrl);
      if (dep in seen) return;
      seen[dep] = true;
      const isCss = dep.endsWith(".css");
      const cssSelector = isCss ? '[rel="stylesheet"]' : "";
      if (!!importerUrl) for (let i$12 = links.length - 1; i$12 >= 0; i$12--) {
        const link$1 = links[i$12];
        if (link$1.href === dep && (!isCss || link$1.rel === "stylesheet")) return;
      }
      else if (document.querySelector(`link[href="${dep}"]${cssSelector}`)) return;
      const link = document.createElement("link");
      link.rel = isCss ? "stylesheet" : scriptRel;
      if (!isCss) link.as = "script";
      link.crossOrigin = "";
      link.href = dep;
      if (cspNonce) link.setAttribute("nonce", cspNonce);
      document.head.appendChild(link);
      if (isCss) return new Promise((res, rej) => {
        link.addEventListener("load", res);
        link.addEventListener("error", () => rej(/* @__PURE__ */ new Error(`Unable to preload CSS for ${dep}`)));
      });
    }));
  }
  function handlePreloadError(err$2) {
    const e$12 = new Event("vite:preloadError", { cancelable: true });
    e$12.payload = err$2;
    window.dispatchEvent(e$12);
    if (!e$12.defaultPrevented) throw err$2;
  }
  return promise.then((res) => {
    for (const item of res || []) {
      if (item.status !== "rejected") continue;
      handlePreloadError(item.reason);
    }
    return baseModule().catch(handlePreloadError);
  });
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var fnToHex = function(iChar, iLength) {
  var sHex = iChar.toString(16);
  return sHex;
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var rHtml = /[\x00-\x2b\x2f\x3a-\x40\x5b-\x5e\x60\x7b-\xff\u2028\u2029]/g, rHtmlReplace = /[\x00-\x08\x0b\x0c\x0e-\x1f\x7f-\x9f]/, mHtmlLookup = {
  "<": "&lt;",
  ">": "&gt;",
  "&": "&amp;",
  '"': "&quot;"
};
var fnHtml = function(sChar) {
  var sEncoded = mHtmlLookup[sChar];
  if (!sEncoded) {
    if (rHtmlReplace.test(sChar)) {
      sEncoded = "&#xfffd;";
    } else {
      sEncoded = "&#x" + fnToHex(sChar.charCodeAt(0)) + ";";
    }
    mHtmlLookup[sChar] = sEncoded;
  }
  return sEncoded;
};
var fnEncodeXML = function(sString) {
  return sString.replace(rHtml, fnHtml);
};
const f$2 = (t3, a3, e2, o2) => {
  x(t3) && (e2 !== a3.length - 1 ? (t3.stopImmediatePropagation(), t3.preventDefault(), a3[e2 + 1].focus()) : (o2.closeValueState(), o2.focusInput())), V(t3) && (t3.preventDefault(), t3.stopImmediatePropagation(), e2 > 0 ? a3[e2 - 1].focus() : o2.focusInput()), P$1(t3) && (t3.preventDefault(), t3.stopImmediatePropagation(), o2.isPopoverOpen() && o2.focusInput()), _(t3) && (t3.preventDefault(), t3.stopImmediatePropagation(), o2.navigateToItem()), m$4(t3) && (t3.preventDefault(), t3.stopImmediatePropagation());
};
const n$4 = (t3) => {
  let e2 = 0;
  return (t3.selectionStart || t3.selectionStart === 0) && (e2 = t3.selectionDirection === "backward" ? t3.selectionStart : t3.selectionEnd), e2;
}, o$2 = (t3, e2) => {
  t3.selectionStart ? (t3.focus(), t3.setSelectionRange(e2, e2)) : t3.focus();
};
var InputType;
(function(InputType2) {
  InputType2["Text"] = "Text";
  InputType2["Email"] = "Email";
  InputType2["Number"] = "Number";
  InputType2["Password"] = "Password";
  InputType2["Tel"] = "Tel";
  InputType2["URL"] = "URL";
  InputType2["Search"] = "Search";
})(InputType || (InputType = {}));
const InputType$1 = InputType;
function InputPopoverTemplate(hooks) {
  const suggestionsList = hooks?.suggestionsList;
  return jsxs(Fragment, { children: [this._effectiveShowSuggestions && this.Suggestions?.template.call(this, { suggestionsList, valueStateMessage: valueStateMessage$1, valueStateMessageInputIcon: valueStateMessageInputIcon$1 }), this.hasValueStateMessage && jsx(Popover$1, { preventInitialFocus: true, preventFocusRestore: true, hideArrow: true, class: "ui5-valuestatemessage-popover", placement: "Bottom", tabindex: -1, horizontalAlign: this._valueStatePopoverHorizontalAlign, opener: this, open: this.valueStateOpen, onClose: this._handleValueStatePopoverAfterClose, children: jsxs("div", { slot: "header", class: this.classes.popoverValueState, children: [jsx(Icon$2, { class: "ui5-input-value-state-message-icon", name: valueStateMessageInputIcon$1.call(this) }), this.valueStateOpen && valueStateMessage$1.call(this)] }) })] });
}
function valueStateMessage$1() {
  return jsx(Fragment, { children: this.shouldDisplayDefaultValueStateMessage ? this.valueStateText : jsx("slot", { name: "valueStateMessage" }) });
}
function valueStateMessageInputIcon$1() {
  const iconPerValueState = {
    Negative: errorIcon,
    Critical: alertIcon,
    Positive: successIcon,
    Information: informationIcon
  };
  return this.valueState !== o$4.None ? iconPerValueState[this.valueState] : "";
}
function InputTemplate(hooks) {
  const suggestionsList = hooks?.suggestionsList;
  const preContent = hooks?.preContent || defaultPreContent;
  const postContent = hooks?.postContent || defaultPostContent;
  return jsxs(Fragment, { children: [jsx("div", { class: "ui5-input-root ui5-input-focusable-element", part: "root", onFocusIn: this._onfocusin, onFocusOut: this._onfocusout, children: jsxs("div", { class: "ui5-input-content", children: [preContent.call(this), jsx("input", { id: "inner", part: "input", class: "ui5-input-inner", style: this.styles.innerInput, type: this.inputNativeType, "inner-input": true, "inner-input-with-icon": !!this.icon.length, disabled: this.disabled, readonly: this._readonly, value: this._innerValue, placeholder: this._placeholder, maxlength: this.maxlength, role: this.accInfo.role, enterkeyhint: this.hint, "aria-controls": this.accInfo.ariaControls, "aria-invalid": this.accInfo.ariaInvalid, "aria-haspopup": this.accInfo.ariaHasPopup, "aria-describedby": this.accInfo.ariaDescribedBy, "aria-roledescription": this.accInfo.ariaRoledescription, "aria-autocomplete": this.accInfo.ariaAutoComplete, "aria-expanded": this.accInfo.ariaExpanded, "aria-label": this.accInfo.ariaLabel, "aria-required": this.required, autocomplete: "off", "data-sap-focus-ref": true, step: this.nativeInputAttributes.step, min: this.nativeInputAttributes.min, max: this.nativeInputAttributes.max, onInput: this._handleNativeInput, onChange: this._handleChange, onSelect: this._handleSelect, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._click, onFocusIn: this.innerFocusIn }), this._effectiveShowClearIcon && jsx("div", { tabindex: -1, class: "ui5-input-clear-icon-wrapper inputIcon", part: "clear-icon-wrapper", onClick: this._clear, onMouseDown: this._iconMouseDown, children: jsx(Icon$2, { part: "clear-icon", class: "ui5-input-clear-icon", name: decline, tabindex: -1, accessibleName: this.clearIconAccessibleName }) }), this.icon.length > 0 && jsx("div", { class: "ui5-input-icon-root", tabindex: -1, children: jsx("slot", { name: "icon" }) }), jsx("div", { class: "ui5-input-value-state-icon", children: this._valueStateInputIcon }), postContent.call(this), this._effectiveShowSuggestions && jsxs(Fragment, { children: [jsx("span", { id: "suggestionsText", class: "ui5-hidden-text", children: this.suggestionsText }), jsx("span", { id: "selectionText", class: "ui5-hidden-text", "aria-live": "polite", role: "status" }), jsx("span", { id: "suggestionsCount", class: "ui5-hidden-text", "aria-live": "polite", children: this.availableSuggestionsCount })] }), this.accInfo.ariaDescription && jsx("span", { id: "descr", class: "ui5-hidden-text", children: this.accInfo.ariaDescription }), this.accInfo.accessibleDescription && jsx("span", { id: "accessibleDescription", class: "ui5-hidden-text", children: this.accInfo.accessibleDescription }), this.linksInAriaValueStateHiddenText.length > 0 && jsx("span", { id: "hiddenText-value-state-link-shortcut", class: "ui5-hidden-text", children: this.valueStateLinksShortcutsTextAcc }), this.hasValueState && jsx("span", { id: "valueStateDesc", class: "ui5-hidden-text", children: this.ariaValueStateHiddenText })] }) }), InputPopoverTemplate.call(this, { suggestionsList })] });
}
function defaultPreContent() {
}
function defaultPostContent() {
}
const StartsWith = (value, items, propName2) => items.filter((item) => (item[propName2] || "").toLowerCase().startsWith(value.toLowerCase()));
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const inputStyles = `:host{vertical-align:middle}.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}.inputIcon{color:var(--_ui5-v2-14-0_input_icon_color);cursor:pointer;outline:none;padding:var(--_ui5-v2-14-0_input_icon_padding);border-inline-start:var(--_ui5-v2-14-0_input_icon_border);min-width:1rem;min-height:1rem;border-radius:var(--_ui5-v2-14-0_input_icon_border_radius)}.inputIcon.inputIcon--pressed{background:var(--_ui5-v2-14-0_input_icon_pressed_bg);box-shadow:var(--_ui5-v2-14-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-14-0_select_hover_icon_left_border);color:var(--_ui5-v2-14-0_input_icon_pressed_color)}.inputIcon:active{background-color:var(--sapButton_Active_Background);box-shadow:var(--_ui5-v2-14-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-14-0_select_hover_icon_left_border);color:var(--_ui5-v2-14-0_input_icon_pressed_color)}.inputIcon:not(.inputIcon--pressed):not(:active):hover{background:var(--_ui5-v2-14-0_input_icon_hover_bg);box-shadow:var(--_ui5-v2-14-0_input_icon_box_shadow)}.inputIcon:hover{border-inline-start:var(--_ui5-v2-14-0_select_hover_icon_left_border);box-shadow:var(--_ui5-v2-14-0_input_icon_box_shadow)}:host(:not([hidden])){display:inline-block}:host{width:var(--_ui5-v2-14-0_input_width);min-width:calc(var(--_ui5-v2-14-0_input_min_width) + (var(--_ui5-v2-14-0-input-icons-count)*var(--_ui5-v2-14-0_input_icon_width)));margin:var(--_ui5-v2-14-0_input_margin_top_bottom) 0;height:var(--_ui5-v2-14-0_input_height);color:var(--sapField_TextColor);font-size:var(--sapFontSize);font-family:var(--sapFontFamily);font-style:normal;border:var(--_ui5-v2-14-0-input-border);border-radius:var(--_ui5-v2-14-0_input_border_radius);box-sizing:border-box;text-align:start;transition:var(--_ui5-v2-14-0_input_transition);background:var(--sapField_BackgroundStyle);background-color:var(--_ui5-v2-14-0_input_background_color)}:host(:not([readonly])),:host([readonly][disabled]){box-shadow:var(--sapField_Shadow)}:host([focused]:not([opened])){border-color:var(--_ui5-v2-14-0_input_focused_border_color);background-color:var(--sapField_Focus_Background)}.ui5-input-focusable-element{position:relative}:host([focused]:not([opened])) .ui5-input-focusable-element:after{content:var(--ui5-v2-14-0_input_focus_pseudo_element_content);position:absolute;pointer-events:none;z-index:2;border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--_ui5-v2-14-0_input_focus_outline_color);border-radius:var(--_ui5-v2-14-0_input_focus_border_radius);top:var(--_ui5-v2-14-0_input_focus_offset);bottom:var(--_ui5-v2-14-0_input_focus_offset);left:var(--_ui5-v2-14-0_input_focus_offset);right:var(--_ui5-v2-14-0_input_focus_offset)}:host([focused][readonly]:not([opened])) .ui5-input-focusable-element:after{top:var(--_ui5-v2-14-0_input_readonly_focus_offset);bottom:var(--_ui5-v2-14-0_input_readonly_focus_offset);left:var(--_ui5-v2-14-0_input_readonly_focus_offset);right:var(--_ui5-v2-14-0_input_readonly_focus_offset);border-radius:var(--_ui5-v2-14-0_input_readonly_focus_border_radius)}.ui5-input-root:before{content:"";position:absolute;width:calc(100% - 2px);left:1px;bottom:-2px;border-bottom-left-radius:8px;border-bottom-right-radius:8px;height:var(--_ui5-v2-14-0_input_bottom_border_height);transition:var(--_ui5-v2-14-0_input_transition);background-color:var(--_ui5-v2-14-0_input_bottom_border_color)}.ui5-input-root{width:100%;height:100%;position:relative;background:transparent;display:inline-block;outline:none;box-sizing:border-box;color:inherit;transition:border-color .2s ease-in-out;border-radius:var(--_ui5-v2-14-0_input_border_radius);overflow:hidden}:host([disabled]){opacity:var(--_ui5-v2-14-0_input_disabled_opacity);cursor:default;pointer-events:none;background-color:var(--_ui5-v2-14-0-input_disabled_background);border-color:var(--_ui5-v2-14-0_input_disabled_border_color)}:host([disabled]) .ui5-input-root:before,:host([readonly]) .ui5-input-root:before{content:none}[inner-input]{background:transparent;color:inherit;border:none;font-style:inherit;-webkit-appearance:none;-moz-appearance:textfield;padding:var(--_ui5-v2-14-0_input_inner_padding);box-sizing:border-box;width:100%;text-overflow:ellipsis;flex:1;outline:none;font-size:inherit;font-family:inherit;line-height:inherit;letter-spacing:inherit;word-spacing:inherit;text-align:inherit}[inner-input][inner-input-with-icon]{padding:var(--_ui5-v2-14-0_input_inner_padding_with_icon)}[inner-input][type=search]::-webkit-search-decoration,[inner-input][type=search]::-webkit-search-cancel-button,[inner-input][type=search]::-webkit-search-results-button,[inner-input][type=search]::-webkit-search-results-decoration{display:none}[inner-input]::-ms-reveal,[inner-input]::-ms-clear{display:none}.ui5-input-value-state-icon{height:100%;display:var(--_ui5-v2-14-0-input-value-state-icon-display);align-items:center}.ui5-input-value-state-icon>svg{margin-right:8px}[inner-input]::selection{background:var(--sapSelectedColor);color:var(--sapContent_ContrastTextColor)}:host([disabled]) [inner-input]::-webkit-input-placeholder{visibility:hidden}:host([readonly]) [inner-input]::-webkit-input-placeholder{visibility:hidden}:host([disabled]) [inner-input]::-moz-placeholder{visibility:hidden}:host([readonly]) [inner-input]::-moz-placeholder{visibility:hidden}[inner-input]::-webkit-input-placeholder{font-weight:400;font-style:var(--_ui5-v2-14-0_input_placeholder_style);color:var(--_ui5-v2-14-0_input_placeholder_color);padding-right:.125rem}[inner-input]::-moz-placeholder{font-weight:400;font-style:var(--_ui5-v2-14-0_input_placeholder_style);color:var(--_ui5-v2-14-0_input_placeholder_color);padding-right:.125rem}:host([value-state="Negative"]) [inner-input]::-webkit-input-placeholder{color:var(--_ui5-v2-14-0-input_error_placeholder_color);font-weight:var(--_ui5-v2-14-0_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Negative"]) [inner-input]::-moz-placeholder{color:var(--_ui5-v2-14-0-input_error_placeholder_color);font-weight:var(--_ui5-v2-14-0_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Critical"]) [inner-input]::-webkit-input-placeholder{font-weight:var(--_ui5-v2-14-0_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Critical"]) [inner-input]::-moz-placeholder{font-weight:var(--_ui5-v2-14-0_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Positive"]) [inner-input]::-webkit-input-placeholder{color:var(--_ui5-v2-14-0_input_placeholder_color)}:host([value-state="Positive"]) [inner-input]::-moz-placeholder{color:var(--_ui5-v2-14-0_input_placeholder_color)}:host([value-state="Information"]) [inner-input]::-webkit-input-placeholder{color:var(--_ui5-v2-14-0_input_placeholder_color)}:host([value-state="Information"]) [inner-input]::-moz-placeholder{color:var(--_ui5-v2-14-0_input_placeholder_color)}.ui5-input-content{height:100%;box-sizing:border-box;display:flex;flex-direction:row;justify-content:flex-end;overflow:hidden;outline:none;background:transparent;color:inherit;border-radius:var(--_ui5-v2-14-0_input_border_radius)}:host([readonly]:not([disabled])){border:var(--_ui5-v2-14-0_input_readonly_border);background:var(--sapField_ReadOnly_BackgroundStyle);background-color:var(--_ui5-v2-14-0_input_readonly_background)}:host([value-state="None"]:not([readonly]):hover),:host(:not([value-state]):not([readonly]):hover){border:var(--_ui5-v2-14-0_input_hover_border);border-color:var(--_ui5-v2-14-0_input_focused_border_color);box-shadow:var(--sapField_Hover_Shadow);background:var(--sapField_Hover_BackgroundStyle);background-color:var(--sapField_Hover_Background)}:host(:not([value-state]):not([readonly])[focused]:not([opened]):hover),:host([value-state="None"]:not([readonly])[focused]:not([opened]):hover){box-shadow:none}:host([focused]):not([opened]) .ui5-input-root:before{content:none}:host(:not([readonly]):not([disabled])[value-state]:not([value-state="None"])){border-width:var(--_ui5-v2-14-0_input_state_border_width)}:host([value-state="Negative"]) [inner-input],:host([value-state="Critical"]) [inner-input]{font-style:var(--_ui5-v2-14-0_input_error_warning_font_style);text-indent:var(--_ui5-v2-14-0_input_error_warning_text_indent)}:host([value-state="Negative"]) [inner-input]{font-weight:var(--_ui5-v2-14-0_input_error_font_weight)}:host([value-state="Critical"]) [inner-input]{font-weight:var(--_ui5-v2-14-0_input_warning_font_weight)}:host([value-state="Negative"]:not([readonly]):not([disabled])){background:var(--sapField_InvalidBackgroundStyle);background-color:var(--sapField_InvalidBackground);border-color:var(--_ui5-v2-14-0_input_value_state_error_border_color);box-shadow:var(--sapField_InvalidShadow)}:host([value-state="Negative"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v2-14-0_input_focused_value_state_error_background);border-color:var(--_ui5-v2-14-0_input_focused_value_state_error_border_color)}:host([value-state="Negative"][focused]:not([opened]):not([readonly])) .ui5-input-focusable-element:after{border-color:var(--_ui5-v2-14-0_input_focused_value_state_error_focus_outline_color)}:host([value-state="Negative"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v2-14-0-input-value-state-error-border-botom-color)}:host([value-state="Negative"]:not([readonly]):not([focused]):hover),:host([value-state="Negative"]:not([readonly])[focused][opened]:hover){background-color:var(--_ui5-v2-14-0_input_value_state_error_hover_background);box-shadow:var(--sapField_Hover_InvalidShadow)}:host([value-state="Negative"]:not([readonly]):not([disabled])),:host([value-state="Critical"]:not([readonly]):not([disabled])),:host([value-state="Information"]:not([readonly]):not([disabled])){border-style:var(--_ui5-v2-14-0_input_error_warning_border_style)}:host([value-state="Critical"]:not([readonly]):not([disabled])){background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border-color:var(--_ui5-v2-14-0_input_value_state_warning_border_color);box-shadow:var(--sapField_WarningShadow)}:host([value-state="Critical"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v2-14-0_input_focused_value_state_warning_background);border-color:var(--_ui5-v2-14-0_input_focused_value_state_warning_border_color)}:host([value-state="Critical"][focused]:not([opened]):not([readonly])) .ui5-input-focusable-element:after{border-color:var(--_ui5-v2-14-0_input_focused_value_state_warning_focus_outline_color)}:host([value-state="Critical"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v2-14-0_input_value_state_warning_border_botom_color)}:host([value-state="Critical"]:not([readonly]):not([focused]):hover),:host([value-state="Critical"]:not([readonly])[focused][opened]:hover){background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_WarningShadow)}:host([value-state="Positive"]:not([readonly]):not([disabled])){background:var(--sapField_SuccessBackgroundStyle);background-color:var(--sapField_SuccessBackground);border-color:var(--_ui5-v2-14-0_input_value_state_success_border_color);border-width:var(--_ui5-v2-14-0_input_value_state_success_border_width);box-shadow:var(--sapField_SuccessShadow)}:host([value-state="Positive"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v2-14-0_input_focused_value_state_success_background);border-color:var(--_ui5-v2-14-0_input_focused_value_state_success_border_color)}:host([value-state="Positive"][focused]:not([opened]):not([readonly])) .ui5-input-focusable-element:after{border-color:var(--_ui5-v2-14-0_input_focused_value_state_success_focus_outline_color)}:host([value-state="Positive"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v2-14-0_input_value_state_success_border_botom_color)}:host([value-state="Positive"]:not([readonly]):not([focused]):hover),:host([value-state="Positive"]:not([readonly])[focused][opened]:hover){background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_SuccessShadow)}:host([value-state="Information"]:not([readonly]):not([disabled])){background:var(--sapField_InformationBackgroundStyle);background-color:var(--sapField_InformationBackground);border-color:var(--_ui5-v2-14-0_input_value_state_information_border_color);border-width:var(--_ui5-v2-14-0_input_information_border_width);box-shadow:var(--sapField_InformationShadow)}:host([value-state="Information"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v2-14-0_input_focused_value_state_information_background);border-color:var(--_ui5-v2-14-0_input_focused_value_state_information_border_color)}:host([value-state="Information"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v2-14-0_input_value_success_information_border_botom_color)}:host([value-state="Information"]:not([readonly]):not([focused]):hover),:host([value-state="Information"]:not([readonly])[focused][opened]:hover){background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_InformationShadow)}.ui5-input-icon-root{min-width:var(--_ui5-v2-14-0_input_icon_min_width);height:100%;display:flex;justify-content:center;align-items:center}::slotted([ui5-icon][slot="icon"]){align-self:start;padding:var(--_ui5-v2-14-0_input_custom_icon_padding);box-sizing:content-box!important}:host([value-state="Negative"]) .inputIcon,:host([value-state="Critical"]) .inputIcon{padding:var(--_ui5-v2-14-0_input_error_warning_icon_padding)}:host([value-state="Negative"][focused]) .inputIcon,:host([value-state="Critical"][focused]) .inputIcon{padding:var(--_ui5-v2-14-0_input_error_warning_focused_icon_padding)}:host([value-state="Information"]) .inputIcon{padding:var(--_ui5-v2-14-0_input_information_icon_padding)}:host([value-state="Information"][focused]) .inputIcon{padding:var(--_ui5-v2-14-0_input_information_focused_icon_padding)}:host([value-state="Negative"]) ::slotted(.inputIcon[ui5-icon]),:host([value-state="Negative"]) ::slotted([ui5-icon][slot="icon"]),:host([value-state="Critical"]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v2-14-0_input_error_warning_custom_icon_padding)}:host([value-state="Negative"][focused]) ::slotted(.inputIcon[ui5-icon]),:host([value-state="Negative"][focused]) ::slotted([ui5-icon][slot="icon"]),:host([value-state="Critical"][focused]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v2-14-0_input_error_warning_custom_focused_icon_padding)}:host([value-state="Information"]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v2-14-0_input_information_custom_icon_padding)}:host([value-state="Information"][focused]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v2-14-0_input_information_custom_focused_icon_padding)}:host([value-state="Negative"]) .inputIcon:active,:host([value-state="Negative"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-14-0_input_error_icon_box_shadow);color:var(--_ui5-v2-14-0_input_icon_error_pressed_color)}:host([value-state="Negative"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-14-0_input_error_icon_box_shadow)}:host([value-state="Critical"]) .inputIcon:active,:host([value-state="Critical"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-14-0_input_warning_icon_box_shadow);color:var(--_ui5-v2-14-0_input_icon_warning_pressed_color)}:host([value-state="Critical"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-14-0_input_warning_icon_box_shadow)}:host([value-state="Information"]) .inputIcon:active,:host([value-state="Information"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-14-0_input_information_icon_box_shadow);color:var(--_ui5-v2-14-0_input_icon_information_pressed_color)}:host([value-state="Information"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-14-0_input_information_icon_box_shadow)}:host([value-state="Positive"]) .inputIcon:active,:host([value-state="Positive"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-14-0_input_success_icon_box_shadow);color:var(--_ui5-v2-14-0_input_icon_success_pressed_color)}:host([value-state="Positive"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-14-0_input_success_icon_box_shadow)}.ui5-input-clear-icon-wrapper{height:var(--_ui5-v2-14-0_input_icon_wrapper_height);padding:0;width:var(--_ui5-v2-14-0_input_icon_width);min-width:var(--_ui5-v2-14-0_input_icon_width);display:flex;justify-content:center;align-items:center;box-sizing:border-box}:host([value-state]:not([value-state="None"]):not([value-state="Positive"])) .ui5-input-clear-icon-wrapper{height:var(--_ui5-v2-14-0_input_icon_wrapper_state_height);vertical-align:top}:host([value-state="Positive"]) .ui5-input-clear-icon-wrapper{height:var(--_ui5-v2-14-0_input_icon_wrapper_success_state_height)}[ui5-icon].ui5-input-clear-icon{padding:0;color:inherit}[inner-input]::-webkit-outer-spin-button,[inner-input]::-webkit-inner-spin-button{-webkit-appearance:inherit;margin:inherit}
`;
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const ResponsivePopoverCommonCss = `.input-root-phone{flex:1;position:relative;height:var(--_ui5-v2-14-0_input_height);color:var(--sapField_TextColor);font-size:var(--sapFontSize);font-family:var(--sapFontFamily);background:var(--sapField_BackgroundStyle);background-color:var(--_ui5-v2-14-0_input_background_color);border:var(--_ui5-v2-14-0-input-border);border-radius:var(--_ui5-v2-14-0_input_border_radius);box-sizing:border-box}.input-root-phone [inner-input]{padding:0 .5rem;width:100%;height:100%}.input-root-phone [inner-input]:focus{background-color:var(--sapField_Focus_Background)}.input-root-phone:focus-within:before{content:"";position:absolute;pointer-events:none;z-index:2;border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);border-radius:var(--_ui5-v2-14-0_input_focus_border_radius);top:var(--_ui5-v2-14-0_input_focus_offset);bottom:var(--_ui5-v2-14-0_input_focus_offset);left:var(--_ui5-v2-14-0_input_focus_offset);right:var(--_ui5-v2-14-0_input_focus_offset)}.input-root-phone [value-state=Negative] .inputIcon[data-ui5-compact-size],.input-root-phone [value-state=Positive] .inputIcon[data-ui5-compact-size],.input-root-phone [value-state=Critical] .inputIcon[data-ui5-compact-size]{padding:.1875rem .5rem}[inner-input]{background:transparent;color:inherit;border:none;font-style:normal;-webkit-appearance:none;-moz-appearance:textfield;line-height:normal;padding:var(--_ui5-v2-14-0_input_inner_padding);box-sizing:border-box;min-width:3rem;text-overflow:ellipsis;flex:1;outline:none;font-size:inherit;font-family:inherit;border-radius:var(--_ui5-v2-14-0_input_border_radius)}[inner-input]::selection,[inner-input]::-moz-selection{background:var(--sapSelectedColor);color:var(--sapContent_ContrastTextColor)}[inner-input]::-webkit-input-placeholder{font-style:var(--_ui5-v2-14-0_input_placeholder_style);color:var(--sapField_PlaceholderTextColor)}[inner-input]::-moz-placeholder{font-style:var(--_ui5-v2-14-0_input_placeholder_style);color:var(--sapField_PlaceholderTextColor)}.input-root-phone[value-state]:not([value-state=None]){border-width:var(--_ui5-v2-14-0_input_state_border_width)}.input-root-phone[value-state=Negative] [inner-input],.input-root-phone[value-state=Critical] [inner-input]{font-style:var(--_ui5-v2-14-0_input_error_warning_font_style)}.input-root-phone[value-state=Negative] [inner-input]{font-weight:var(--_ui5-v2-14-0_input_error_font_weight)}.input-root-phone[value-state=Negative]:not([readonly]){background:var(--sapField_InvalidBackgroundStyle);background-color:var(--sapField_InvalidBackground);border-color:var(--_ui5-v2-14-0_input_value_state_error_border_color)}.input-root-phone[value-state=Negative]:not([readonly]) [inner-input]:focus{background-color:var(--_ui5-v2-14-0_input_focused_value_state_error_background);border-color:var(--_ui5-v2-14-0_input_focused_value_state_error_border_color)}.input-root-phone[value-state=Negative]:not([readonly]):focus-within:before{border-color:var(--_ui5-v2-14-0_input_focused_value_state_error_focus_outline_color)}.input-root-phone[value-state=Negative]:not([readonly]):not([disabled]),.input-root-phone[value-state=Critical]:not([readonly]):not([disabled]),.input-root-phone[value-state=Information]:not([readonly]):not([disabled]){border-style:var(--_ui5-v2-14-0_input_error_warning_border_style)}.input-root-phone[value-state=Critical]:not([readonly]){background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border-color:var(--_ui5-v2-14-0_input_value_state_warning_border_color)}.input-root-phone[value-state=Critical]:not([readonly]) [inner-input]:focus{background-color:var(--_ui5-v2-14-0_input_focused_value_state_warning_background);border-color:var(--_ui5-v2-14-0_input_focused_value_state_warning_border_color)}.input-root-phone[value-state=Critical]:not([readonly]):focus-within:before{border-color:var(--_ui5-v2-14-0_input_focused_value_state_warning_focus_outline_color)}.input-root-phone[value-state=Positive]:not([readonly]){background:var(--sapField_SuccessBackgroundStyle);background-color:var(--sapField_SuccessBackground);border-color:var(--_ui5-v2-14-0_input_value_state_success_border_color);border-width:var(--_ui5-v2-14-0_input_value_state_success_border_width)}.input-root-phone[value-state=Positive]:not([readonly]) [inner-input]:focus{background-color:var(--_ui5-v2-14-0_input_focused_value_state_success_background);border-color:var(--_ui5-v2-14-0_input_focused_value_state_success_border_color)}.input-root-phone[value-state=Positive]:not([readonly]):focus-within:before{border-color:var(--_ui5-v2-14-0_input_focused_value_state_success_focus_outline_color)}.input-root-phone[value-state=Information]:not([readonly]){background:var(--sapField_InformationBackgroundStyle);background-color:var(--sapField_InformationBackground);border-color:var(--_ui5-v2-14-0_input_value_state_information_border_color);border-width:var(--_ui5-v2-14-0_input_information_border_width)}.input-root-phone[value-state=Information]:not([readonly]) [inner-input]:focus{background-color:var(--_ui5-v2-14-0_input_focused_value_state_information_background);border-color:var(--_ui5-v2-14-0_input_focused_value_state_information_border_color)}.ui5-multi-combobox-toggle-button{margin-left:.5rem}.ui5-responsive-popover-header{width:100%;min-height:2.5rem;display:flex;flex-direction:column}.ui5-responsive-popover-header-text{width:calc(100% - var(--_ui5-v2-14-0_button_base_min_width))}.ui5-responsive-popover-header .row{box-sizing:border-box;padding:.25rem 1rem;min-height:2.5rem;display:flex;justify-content:center;align-items:center;font-size:var(--sapFontHeader5Size)}.ui5-responsive-popover-footer{display:flex;justify-content:flex-end;padding:.25rem 0;width:100%}.ui5-responsive-popover-close-btn{position:absolute;right:1rem}
`;
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const ValueStateMessageCss = `.ui5-valuestatemessage-popover{border-radius:var(--_ui5-v2-14-0_value_state_message_popover_border_radius);box-shadow:var(--_ui5-v2-14-0_value_state_message_popover_box_shadow)}.ui5-input-value-state-message-icon{width:var(--_ui5-v2-14-0_value_state_message_icon_width);height:var(--_ui5-v2-14-0_value_state_message_icon_height);display:var(--_ui5-v2-14-0_input_value_state_icon_display);position:absolute;padding-right:.375rem}.ui5-valuestatemessage-root .ui5-input-value-state-message-icon{left:var(--_ui5-v2-14-0_input_value_state_icon_offset)}.ui5-input-value-state-message-icon[name=error]{color:var(--sapNegativeElementColor)}.ui5-input-value-state-message-icon[name=alert]{color:var(--sapCriticalElementColor)}.ui5-input-value-state-message-icon[name=success]{color:var(--sapPositiveElementColor)}.ui5-input-value-state-message-icon[name=information]{color:var(--sapInformativeElementColor)}.ui5-valuestatemessage-root{box-sizing:border-box;display:inline-block;color:var(--sapTextColor);font-size:var(--sapFontSmallSize);font-family:var(--sapFontFamily);height:auto;padding:var(--_ui5-v2-14-0_value_state_message_padding);overflow:hidden;text-overflow:ellipsis;min-width:6.25rem;border:var(--_ui5-v2-14-0_value_state_message_border);line-height:var(--_ui5-v2-14-0_value_state_message_line_height)}[ui5-responsive-popover] .ui5-valuestatemessage-header,[ui5-popover] .ui5-valuestatemessage-header{min-height:var(--_ui5-v2-14-0_value_state_message_popover_header_min_height);min-width:var(--_ui5-v2-14-0_value_state_message_popover_header_min_width);max-width:var(--_ui5-v2-14-0_value_state_message_popover_header_max_width);width:var(--_ui5-v2-14-0_value_state_message_popover_header_width)}[ui5-responsive-popover] .ui5-valuestatemessage-header{padding:var(--_ui5-v2-14-0_value_state_header_padding);border:var(--_ui5-v2-14-0_value_state_header_border);border-bottom:var(--_ui5-v2-14-0_value_state_header_border_bottom);flex-grow:1;position:relative}.ui5-valuestatemessage--success{background:var(--sapSuccessBackground)}.ui5-valuestatemessage--warning{background:var(--sapWarningBackground)}.ui5-valuestatemessage--error{background:var(--sapErrorBackground)}.ui5-valuestatemessage--information{background:var(--sapInformationBackground)}.ui5-responsive-popover-header:focus{outline-offset:var(--_ui5-v2-14-0_value_state_header_offset);outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor)}.ui5-valuestatemessage-popover::part(header),.ui5-valuestatemessage-popover::part(content){padding:0}.ui5-valuestatemessage-popover::part(header),.ui5-valuestatemessage-popover::part(footer){min-height:0}.ui5-valuestatemessage-popover::part(header),.ui5-popover-with-value-state-header::part(header),.ui5-popover-with-value-state-header-phone::part(header){margin-bottom:0}.ui5-popover-with-value-state-header-phone .ui5-valuestatemessage-root{padding:var(--_ui5-v2-14-0_value_state_message_padding_phone);width:100%}.ui5-popover-with-value-state-header-phone .ui5-input-value-state-message-icon{left:var(--_ui5-v2-14-0_value_state_message_icon_offset_phone)}.ui5-popover-with-value-state-header-phone .ui5-valuestatemessage-header{position:relative;flex:none;top:0;left:0}.ui5-popover-with-value-state-header-phone::part(content){padding:0;overflow:hidden;display:flex;flex-direction:column}.ui5-popover-with-value-state-header-phone [ui5-list]{overflow:auto}[ui5-responsive-popover] .ui5-valuestatemessage--error{box-shadow:var(--_ui5-v2-14-0_value_state_header_box_shadow_error)}[ui5-responsive-popover] .ui5-valuestatemessage--information{box-shadow:var(--_ui5-v2-14-0_value_state_header_box_shadow_information)}[ui5-responsive-popover] .ui5-valuestatemessage--success{box-shadow:var(--_ui5-v2-14-0_value_state_header_box_shadow_success)}[ui5-responsive-popover] .ui5-valuestatemessage--warning{box-shadow:var(--_ui5-v2-14-0_value_state_header_box_shadow_warning)}[ui5-responsive-popover].ui5-popover-with-value-state-header .ui5-valuestatemessage-root:has(+[ui5-list]:empty){box-shadow:none}
`;
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const SuggestionsCss = `.ui5-suggestions-popover{box-shadow:var(--sapContent_Shadow1)}.ui5-suggestions-popover::part(header),.ui5-suggestions-popover::part(content){padding:0}.ui5-suggestions-popover::part(footer){padding:0 1rem}.input-root-phone.native-input-wrapper{display:contents}.input-root-phone.native-input-wrapper:before{display:none}.native-input-wrapper .ui5-input-inner-phone{margin:0}
`;
var __decorate$r = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var Input_1;
var INPUT_EVENTS;
(function(INPUT_EVENTS2) {
  INPUT_EVENTS2["CHANGE"] = "change";
  INPUT_EVENTS2["INPUT"] = "input";
  INPUT_EVENTS2["SELECTION_CHANGE"] = "selection-change";
})(INPUT_EVENTS || (INPUT_EVENTS = {}));
var INPUT_ACTIONS;
(function(INPUT_ACTIONS2) {
  INPUT_ACTIONS2["ACTION_ENTER"] = "enter";
  INPUT_ACTIONS2["ACTION_USER_INPUT"] = "input";
})(INPUT_ACTIONS || (INPUT_ACTIONS = {}));
let Input$1 = Input_1 = class Input extends b$6 {
  get formValidityMessage() {
    return Input_1.i18nBundle.getText(FORM_TEXTFIELD_REQUIRED);
  }
  get _effectiveShowSuggestions() {
    return !!(this.showSuggestions && this.Suggestions);
  }
  get formValidity() {
    return { valueMissing: this.required && !this.value };
  }
  async formElementAnchor() {
    return this.getFocusDomRefAsync();
  }
  get formFormattedValue() {
    return this.value;
  }
  constructor() {
    super();
    this.disabled = false;
    this.highlight = false;
    this.readonly = false;
    this.required = false;
    this.noTypeahead = false;
    this.type = "Text";
    this.value = "";
    this._innerValue = "";
    this.valueState = "None";
    this.showSuggestions = false;
    this.showClearIcon = false;
    this.open = false;
    this._effectiveShowClearIcon = false;
    this.focused = false;
    this.valueStateOpen = false;
    this._inputAccInfo = {};
    this._nativeInputAttributes = {};
    this._inputIconFocused = false;
    this._linksListenersArray = [];
    this._handleLinkNavigation = false;
    this.hasSuggestionItemSelected = false;
    this.valueBeforeItemSelection = "";
    this.valueBeforeSelectionStart = "";
    this.previousValue = "";
    this.firstRendering = true;
    this.typedInValue = "";
    this.lastConfirmedValue = "";
    this.isTyping = false;
    this._isLatestValueFromSuggestions = false;
    this._isChangeTriggeredBySuggestion = false;
    this._indexOfSelectedItem = -1;
    this._handleResizeBound = this._handleResize.bind(this);
    this._keepInnerValue = false;
    this._focusedAfterClear = false;
    this._valueStateLinks = [];
  }
  onEnterDOM() {
    f$3.register(this, this._handleResizeBound);
    y$3(this, this._updateAssociatedLabelsTexts.bind(this));
  }
  onExitDOM() {
    f$3.deregister(this, this._handleResizeBound);
    T$2(this);
    this._removeLinksEventListeners();
  }
  _highlightSuggestionItem(item) {
    item.markupText = this.typedInValue ? this.Suggestions?.hightlightInput(item.text || "", this.typedInValue) : fnEncodeXML(item.text || "");
  }
  _isGroupItem(item) {
    return item.hasAttribute("ui5-suggestion-item-group");
  }
  onBeforeRendering() {
    if (!this._keepInnerValue) {
      this._innerValue = this.value === null ? "" : this.value;
    }
    if (this.showSuggestions) {
      this.enableSuggestions();
      this._flattenItems.forEach((item) => {
        if (item.hasAttribute("ui5-suggestion-item")) {
          this._highlightSuggestionItem(item);
        } else if (this._isGroupItem(item)) {
          item.items?.forEach((nestedItem) => {
            this._highlightSuggestionItem(nestedItem);
          });
        }
      });
    }
    this._effectiveShowClearIcon = this.showClearIcon && !!this.value && !this.readonly && !this.disabled;
    this.style.setProperty(d$g("--_ui5-input-icons-count"), `${this.iconsCount}`);
    const hasItems = !!this._flattenItems.length;
    const hasValue = !!this.value;
    const isFocused = this.shadowRoot.querySelector("input") === t$5();
    if (this.shouldDisplayOnlyValueStateMessage) {
      this.openValueStatePopover();
    } else {
      this.closeValueStatePopover();
    }
    const preventOpenPicker = this.disabled || this.readonly;
    if (preventOpenPicker) {
      this.open = false;
    } else if (!this._isPhone) {
      this.open = hasItems && (this.open || hasValue && isFocused && this.isTyping);
    }
    const value = this.value;
    const innerInput = this.getInputDOMRefSync();
    if (!innerInput || !value) {
      return;
    }
    const autoCompletedChars = innerInput.selectionEnd - innerInput.selectionStart;
    if (this._shouldAutocomplete && !P$9() && !autoCompletedChars && !this._isKeyNavigation) {
      const item = this._getFirstMatchingItem(value);
      if (item) {
        this._handleTypeAhead(item);
        this._selectMatchingItem(item);
      }
    }
  }
  onAfterRendering() {
    const innerInput = this.getInputDOMRefSync();
    if (this.showSuggestions && this.Suggestions?._getPicker()) {
      this._listWidth = this.Suggestions._getListWidth();
      this.Suggestions._getList()._itemNavigation._getItems = () => [];
    }
    if (this._performTextSelection) {
      if (innerInput.value !== this._innerValue) {
        innerInput.value = this._innerValue;
      }
      if (this.typedInValue.length && this.value.length) {
        innerInput.setSelectionRange(this.typedInValue.length, this.value.length);
      }
      this.fireDecoratorEvent("type-ahead");
    }
    this._performTextSelection = false;
    if (!n$e(this._valueStateLinks, this.linksInAriaValueStateHiddenText)) {
      this._removeLinksEventListeners();
      this._addLinksEventListeners();
      this._valueStateLinks = this.linksInAriaValueStateHiddenText;
    }
  }
  _onkeydown(e2) {
    this._isKeyNavigation = true;
    this._shouldAutocomplete = !this.noTypeahead && !(Q(e2) || X(e2) || m$4(e2));
    if (P$1(e2)) {
      return this._handleUp(e2);
    }
    if (_(e2)) {
      return this._handleDown(e2);
    }
    if (A$2(e2)) {
      return this._handleSpace(e2);
    }
    if (x(e2)) {
      return this._handleTab();
    }
    if (b$4(e2)) {
      const isValueUnchanged = this.previousValue === this.getInputDOMRefSync().value;
      const shouldSubmit = this._internals.form && this._internals.form.querySelectorAll("[ui5-input]").length === 1;
      this._enterKeyDown = true;
      if (isValueUnchanged && shouldSubmit) {
        i$b(this);
      }
      return this._handleEnter(e2);
    }
    if (j(e2)) {
      return this._handlePageUp(e2);
    }
    if (q(e2)) {
      return this._handlePageDown(e2);
    }
    if (M2(e2)) {
      return this._handleHome(e2);
    }
    if (n$a(e2)) {
      return this._handleEnd(e2);
    }
    if (m$4(e2)) {
      return this._handleEscape();
    }
    if (Co(e2)) {
      return this._handleCtrlAltF8();
    }
    if (this.showSuggestions) {
      this._clearPopoverFocusAndSelection();
    }
    this._isKeyNavigation = false;
  }
  _onkeyup(e2) {
    if (X(e2)) {
      this.value = e2.target.value;
    }
    this._enterKeyDown = false;
  }
  get currentItemIndex() {
    const allItems = this.Suggestions?._getItems();
    const currentItem = allItems.find((item) => {
      return item.selected || item.focused;
    });
    const indexOfCurrentItem = currentItem ? allItems.indexOf(currentItem) : -1;
    return indexOfCurrentItem;
  }
  _handleUp(e2) {
    if (this.Suggestions?.isOpened()) {
      this.Suggestions.onUp(e2, this.currentItemIndex);
    }
  }
  _handleDown(e2) {
    if (this.Suggestions?.isOpened()) {
      this.Suggestions.onDown(e2, this.currentItemIndex);
    }
  }
  _handleSpace(e2) {
    if (this.Suggestions) {
      this.Suggestions.onSpace(e2);
    }
  }
  _handleTab() {
    if (this.Suggestions && this.previousValue !== this.value) {
      this.Suggestions.onTab();
    }
  }
  _handleCtrlAltF8() {
    this._handleLinkNavigation = true;
    const links = this.linksInAriaValueStateHiddenText;
    if (links.length) {
      links[0].focus();
    }
  }
  _addLinksEventListeners() {
    const links = this.linksInAriaValueStateHiddenText;
    links.forEach((link, index) => {
      this._linksListenersArray.push((e2) => {
        f$2(e2, links, index, {
          closeValueState: () => {
            if (this.Suggestions?.isOpened()) {
              this.Suggestions?.close();
            }
            if (this.valueStateOpen) {
              this.closeValueStatePopover();
            }
          },
          focusInput: () => {
            this._handleLinkNavigation = false;
            this.getInputDOMRef().focus();
          },
          navigateToItem: () => {
            if (this._handleLinkNavigation) {
              this._handleLinkNavigation = false;
              if (this.Suggestions?.isOpened()) {
                this.innerFocusIn();
                this.getInputDOMRef().focus();
                this.Suggestions.onDown(e2, this.currentItemIndex);
              }
            } else {
              this._handleDown(e2);
            }
          },
          isPopoverOpen: () => {
            return this.Suggestions && this.Suggestions?.isOpened() || false;
          }
        });
      });
      link.addEventListener("keydown", this._linksListenersArray[index]);
    });
  }
  _removeLinksEventListeners() {
    const links = this.linksInAriaValueStateHiddenText;
    links.forEach((link, index) => {
      link.removeEventListener("keydown", this._linksListenersArray[index]);
    });
    this._linksListenersArray = [];
    this._handleLinkNavigation = false;
  }
  _handleEnter(e2) {
    const suggestionItemPressed = !!this.Suggestions?.onEnter(e2);
    const innerInput = this.getInputDOMRefSync();
    const matchingItem = this._selectableItems.find((item) => {
      return item.text === this.value;
    });
    if (matchingItem) {
      const itemText = matchingItem.text || "";
      innerInput.setSelectionRange(itemText.length, itemText.length);
      if (!suggestionItemPressed) {
        this.fireSelectionChange(matchingItem, true);
        this.acceptSuggestion(matchingItem, true);
        this.open = false;
      }
    }
    if (this._isPhone && !this._flattenItems.length && !this.isTypeNumber) {
      innerInput.setSelectionRange(this.value.length, this.value.length);
    }
    if (!suggestionItemPressed) {
      this.lastConfirmedValue = this.value;
      return;
    }
    this.focused = true;
  }
  _handlePageUp(e2) {
    if (this._isSuggestionsFocused) {
      this.Suggestions?.onPageUp(e2);
    } else {
      e2.preventDefault();
    }
  }
  _handlePageDown(e2) {
    if (this._isSuggestionsFocused) {
      this.Suggestions?.onPageDown(e2);
    } else {
      e2.preventDefault();
    }
  }
  _handleHome(e2) {
    if (this._isSuggestionsFocused) {
      this.Suggestions?.onHome(e2);
    }
  }
  _handleEnd(e2) {
    if (this._isSuggestionsFocused) {
      this.Suggestions?.onEnd(e2);
    }
  }
  _handleEscape() {
    const hasSuggestions = this.showSuggestions && !!this.Suggestions;
    const isOpen = hasSuggestions && this.open;
    const innerInput = this.getInputDOMRefSync();
    const isAutoCompleted = innerInput.selectionEnd - innerInput.selectionStart > 0;
    this.isTyping = false;
    if (this.value !== this.previousValue && this.value !== this.lastConfirmedValue && !this.open) {
      this.value = this.lastConfirmedValue ? this.lastConfirmedValue : this.previousValue;
      this.fireDecoratorEvent(INPUT_EVENTS.INPUT, { inputType: "" });
      return;
    }
    if (!isOpen) {
      this.value = this.lastConfirmedValue ? this.lastConfirmedValue : this.previousValue;
      return;
    }
    if (isOpen && this.Suggestions?._isItemOnTarget()) {
      this.value = this.typedInValue || this.valueBeforeSelectionStart;
      this.focused = true;
      return;
    }
    if (isAutoCompleted) {
      this.value = this.typedInValue;
    }
    this.focused = true;
  }
  _onfocusin(e2) {
    this.focused = true;
    if (!this._focusedAfterClear) {
      this.previousValue = this.value;
    }
    this.valueBeforeSelectionStart = this.value;
    this._inputIconFocused = !!e2.target && e2.target === this.querySelector("[ui5-icon]");
    this._focusedAfterClear = false;
  }
  /**
   * Called on "focusin" of the native input HTML Element.
   * **Note:** implemented in MultiInput, but used in the Input template.
   */
  innerFocusIn() {
  }
  _onfocusout(e2) {
    const toBeFocused = e2.relatedTarget;
    if (this.Suggestions?._getPicker().contains(toBeFocused) || this.contains(toBeFocused) || this.getSlottedNodes("valueStateMessage").some((el) => el.contains(toBeFocused))) {
      return;
    }
    this._keepInnerValue = false;
    this.focused = false;
    this._isChangeTriggeredBySuggestion = false;
    if (this.showClearIcon && !this._effectiveShowClearIcon) {
      this._clearIconClicked = false;
      this._handleChange();
    }
    this.open = false;
    this._clearPopoverFocusAndSelection();
    if (!this._clearIconClicked) {
      this.previousValue = "";
    }
    this.lastConfirmedValue = "";
    this.isTyping = false;
    if (this.value !== this.previousValue && this.showClearIcon) {
      this._clearIconClicked = false;
    }
  }
  _clearPopoverFocusAndSelection() {
    if (!this.showSuggestions || !this.Suggestions) {
      return;
    }
    this.hasSuggestionItemSelected = false;
    this.Suggestions?._deselectItems();
    this.Suggestions?._clearItemFocus();
  }
  _click() {
    if (d$h() && !this.readonly && this.Suggestions) {
      this.blur();
      this.open = true;
    }
  }
  _handleChange() {
    const shouldSubmit = this._internals.form && this._internals.form.querySelectorAll("[ui5-input]").length === 1;
    if (this._clearIconClicked) {
      this._clearIconClicked = false;
      return;
    }
    const fireChange = () => {
      if (!this._isChangeTriggeredBySuggestion) {
        this.fireDecoratorEvent(INPUT_EVENTS.CHANGE);
      }
      this.previousValue = this.value;
      this.typedInValue = this.value;
      this._isChangeTriggeredBySuggestion = false;
    };
    if (this.previousValue !== this.getInputDOMRefSync().value) {
      if (this.Suggestions?._getPicker().open && this._flattenItems.some((item) => item.hasAttribute("ui5-suggestion-item") && item.selected)) {
        this._changeToBeFired = true;
      } else {
        fireChange();
        if (this._enterKeyDown && shouldSubmit) {
          i$b(this);
        }
      }
    }
  }
  _clear() {
    const valueBeforeClear = this.value;
    this.value = "";
    const prevented = !this.fireDecoratorEvent(INPUT_EVENTS.INPUT, { inputType: "" });
    if (prevented) {
      this.value = valueBeforeClear;
      return;
    }
    this.typedInValue = "";
    if (!this._isPhone) {
      this.fireResetSelectionChange();
      this.focus();
      this._focusedAfterClear = true;
    }
  }
  _iconMouseDown() {
    this._clearIconClicked = true;
  }
  _scroll(e2) {
    this.fireDecoratorEvent("suggestion-scroll", {
      scrollTop: e2.detail.scrollTop,
      scrollContainer: e2.detail.targetRef
    });
  }
  _handleSelect() {
    this.fireDecoratorEvent("select");
  }
  _handleInput(e2) {
    const eventType = e2.detail && e2.detail.inputType || "";
    this._input(e2, eventType);
  }
  _handleNativeInput(e2) {
    const eventType = e2.inputType || "";
    this._input(e2, eventType);
  }
  _input(e2, eventType) {
    const inputDomRef = this.getInputDOMRefSync();
    const emptyValueFiredOnNumberInput = this.value && this.isTypeNumber && !inputDomRef.value;
    this._keepInnerValue = false;
    const allowedEventTypes = [
      "deleteWordBackward",
      "deleteWordForward",
      "deleteSoftLineBackward",
      "deleteSoftLineForward",
      "deleteEntireSoftLine",
      "deleteHardLineBackward",
      "deleteHardLineForward",
      "deleteByDrag",
      "deleteByCut",
      "deleteContent",
      "deleteContentBackward",
      "deleteContentForward",
      "historyUndo"
    ];
    this._shouldAutocomplete = !allowedEventTypes.includes(eventType) && !this.noTypeahead;
    if (e2 instanceof InputEvent) {
      const delimiterCase = this.isTypeNumber && (e2.inputType === "deleteContentForward" || e2.inputType === "deleteContentBackward") && !e2.target.value.includes(".") && this.value.includes(".");
      const eNotationCase = emptyValueFiredOnNumberInput && e2.data === "e";
      const minusRemovalCase = emptyValueFiredOnNumberInput && this.value.startsWith("-") && this.value.length === 2 && (e2.inputType === "deleteContentForward" || e2.inputType === "deleteContentBackward");
      if (delimiterCase || eNotationCase || minusRemovalCase) {
        this.value = e2.target.value;
        this._keepInnerValue = true;
      }
    }
    if (e2.target === inputDomRef) {
      this.focused = true;
      e2.stopImmediatePropagation();
    }
    this.fireEventByAction(INPUT_ACTIONS.ACTION_ENTER, e2);
    this.hasSuggestionItemSelected = false;
    if (this.Suggestions) {
      this.Suggestions.updateSelectedItemPosition(-1);
    }
    this.isTyping = true;
  }
  _startsWithMatchingItems(str) {
    return StartsWith(str, this._selectableItems, "text");
  }
  _getFirstMatchingItem(current) {
    if (!this._flattenItems.length) {
      return;
    }
    const matchingItems = this._startsWithMatchingItems(current).filter((item) => !this._isGroupItem(item));
    if (matchingItems.length) {
      return matchingItems[0];
    }
  }
  _handleSelectionChange(e2) {
    this.Suggestions?.onItemPress(e2);
  }
  _selectMatchingItem(item) {
    item.selected = true;
  }
  _handleTypeAhead(item) {
    const value = item.text ? item.text : "";
    this._innerValue = value;
    this.value = value;
    this._performTextSelection = true;
    this._shouldAutocomplete = false;
  }
  _handleResize() {
    this._inputWidth = this.offsetWidth;
  }
  _updateAssociatedLabelsTexts() {
    this._associatedLabelsTexts = M$1(this);
    this._accessibleLabelsRefTexts = E$1(this);
    this._associatedDescriptionRefTexts = p$2(this);
  }
  _closePicker() {
    this.open = false;
  }
  _afterOpenPicker() {
    if (d$h()) {
      this.getInputDOMRef().focus();
    }
    this._handlePickerAfterOpen();
  }
  _afterClosePicker() {
    this.announceSelectedItem();
    if (d$h()) {
      this.blur();
      this.focused = false;
    }
    if (this._changeToBeFired && !this._isChangeTriggeredBySuggestion) {
      this.previousValue = this.value;
      this.fireDecoratorEvent(INPUT_EVENTS.CHANGE);
    } else {
      this._isChangeTriggeredBySuggestion = false;
    }
    this._changeToBeFired = false;
    this.open = false;
    this.isTyping = false;
    if (this.hasSuggestionItemSelected) {
      this.focus();
    }
    this._handlePickerAfterClose();
  }
  _handlePickerAfterOpen() {
    this.fireDecoratorEvent("open");
  }
  _handlePickerAfterClose() {
    this.Suggestions?._onClose();
    this.fireDecoratorEvent("close");
  }
  openValueStatePopover() {
    this.valueStateOpen = true;
  }
  closeValueStatePopover() {
    this.valueStateOpen = false;
  }
  _handleValueStatePopoverAfterClose() {
    this.valueStateOpen = false;
    this._handleLinkNavigation = false;
  }
  _getValueStatePopover() {
    return this.shadowRoot.querySelector("[ui5-popover]");
  }
  enableSuggestions() {
    if (this.Suggestions) {
      return;
    }
    const setup = (Suggestions) => {
      Suggestions.i18nBundle = Input_1.i18nBundle;
      this.Suggestions = new Suggestions(this, "suggestionItems", true, false);
    };
    if (Input_1.SuggestionsClass) {
      setup(Input_1.SuggestionsClass);
    } else {
      __vitePreload(() => import("./InputSuggestions-BXX6Clcl.js"), true ? [] : void 0, import.meta.url).then((SuggestionsModule) => {
        setup(SuggestionsModule.default);
      });
    }
  }
  acceptSuggestion(item, keyboardUsed) {
    if (this._isGroupItem(item)) {
      return;
    }
    const itemText = item.text || "";
    const fireChange = keyboardUsed ? this.valueBeforeItemSelection !== itemText : this.previousValue !== itemText;
    this.hasSuggestionItemSelected = true;
    this.value = itemText;
    if (fireChange && this.previousValue !== itemText) {
      this.valueBeforeItemSelection = itemText;
      this.lastConfirmedValue = itemText;
      this._performTextSelection = true;
      this.fireDecoratorEvent(INPUT_EVENTS.CHANGE);
      this._isChangeTriggeredBySuggestion = true;
      this.typedInValue = this.value;
      this.previousValue = this.value;
    }
    this.valueBeforeSelectionStart = "";
    this.isTyping = false;
    this.open = false;
  }
  /**
   * Updates the input value on item select.
   * @param item The item that is on select
   */
  updateValueOnSelect(item) {
    const itemValue = this._isGroupItem(item) ? this.valueBeforeSelectionStart : item.text;
    this.value = itemValue || "";
    this._performTextSelection = true;
  }
  fireEventByAction(action, e2) {
    const valueBeforeInput = this.value;
    const inputRef = this.getInputDOMRefSync();
    if (this.disabled || this.readonly) {
      return;
    }
    const inputValue = this.getInputValue();
    const isUserInput = action === INPUT_ACTIONS.ACTION_ENTER;
    this.value = inputValue;
    this.typedInValue = inputValue;
    this.valueBeforeSelectionStart = inputValue;
    const valueAfterInput = this.value;
    if (isUserInput) {
      const inputType = e2.inputType || "";
      const prevented = !this.fireDecoratorEvent(INPUT_EVENTS.INPUT, { inputType });
      if (prevented) {
        if (valueAfterInput === this.value) {
          this.value = valueBeforeInput;
        }
        inputRef && (inputRef.value = this.value);
      }
      this.fireResetSelectionChange();
    }
  }
  getInputValue() {
    const domRef = this.getDomRef();
    if (domRef) {
      return this.getInputDOMRef().value;
    }
    return "";
  }
  getInputDOMRef() {
    if (d$h() && this.Suggestions) {
      return this.Suggestions._getPicker().querySelector(".ui5-input-inner-phone");
    }
    return this.nativeInput;
  }
  getInputDOMRefSync() {
    if (d$h() && this.Suggestions?._getPicker()) {
      return this.Suggestions._getPicker().querySelector(".ui5-input-inner-phone").shadowRoot.querySelector("input");
    }
    return this.nativeInput;
  }
  /**
   * Returns a reference to the native input element
   * @protected
   */
  get nativeInput() {
    const domRef = this.getDomRef();
    return domRef ? domRef.querySelector(`input`) : null;
  }
  get nativeInputWidth() {
    return this.nativeInput ? this.nativeInput.offsetWidth : 0;
  }
  /**
   * Returns if the suggestions popover is scrollable.
   * The method returns `Promise` that resolves to true,
   * if the popup is scrollable and false otherwise.
   */
  isSuggestionsScrollable() {
    if (!this.Suggestions) {
      return Promise.resolve(false);
    }
    return this.Suggestions?._isScrollable();
  }
  onItemMouseDown(e2) {
    e2.preventDefault();
  }
  onItemSelected(suggestionItem, keyboardUsed) {
    const shouldFireSelectionChange = !keyboardUsed && !suggestionItem?.focused && this.valueBeforeItemSelection !== suggestionItem.text;
    if (shouldFireSelectionChange) {
      this.fireSelectionChange(suggestionItem, true);
    }
    this.acceptSuggestion(suggestionItem, keyboardUsed);
  }
  _handleSuggestionItemPress(e2) {
    this.Suggestions?.onItemPress(e2);
  }
  onItemSelect(item) {
    this.valueBeforeItemSelection = this.value;
    this.updateValueOnSelect(item);
    this.announceSelectedItem();
    this.fireSelectionChange(item, true);
  }
  get _flattenItems() {
    return this.getSlottedNodes("suggestionItems").flatMap((item) => {
      return this._isGroupItem(item) ? [item, ...item.items] : [item];
    });
  }
  get _selectableItems() {
    return this._flattenItems.filter((item) => !this._isGroupItem(item));
  }
  get valueStateTypeMappings() {
    return {
      "Positive": Input_1.i18nBundle.getText(VALUE_STATE_TYPE_SUCCESS),
      "Information": Input_1.i18nBundle.getText(VALUE_STATE_TYPE_INFORMATION),
      "Negative": Input_1.i18nBundle.getText(VALUE_STATE_TYPE_ERROR),
      "Critical": Input_1.i18nBundle.getText(VALUE_STATE_TYPE_WARNING)
    };
  }
  valueStateTextMappings() {
    return {
      "Positive": Input_1.i18nBundle.getText(VALUE_STATE_SUCCESS),
      "Information": Input_1.i18nBundle.getText(VALUE_STATE_INFORMATION),
      "Negative": Input_1.i18nBundle.getText(VALUE_STATE_ERROR),
      "Critical": Input_1.i18nBundle.getText(VALUE_STATE_WARNING)
    };
  }
  announceSelectedItem() {
    const invisibleText = this.shadowRoot.querySelector(`#selectionText`);
    if (invisibleText) {
      invisibleText.textContent = this.itemSelectionAnnounce;
    }
  }
  fireSelectionChange(item, isValueFromSuggestions) {
    if (this.Suggestions) {
      this.fireDecoratorEvent(INPUT_EVENTS.SELECTION_CHANGE, { item });
      this._isLatestValueFromSuggestions = isValueFromSuggestions;
    }
  }
  fireResetSelectionChange() {
    if (this._isLatestValueFromSuggestions) {
      this.fireSelectionChange(null, false);
      this.valueBeforeItemSelection = this.value;
    }
  }
  get _readonly() {
    return this.readonly && !this.disabled;
  }
  get _headerTitleText() {
    return Input_1.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);
  }
  get _suggestionsOkButtonText() {
    return Input_1.i18nBundle.getText(INPUT_SUGGESTIONS_OK_BUTTON);
  }
  get clearIconAccessibleName() {
    return Input_1.i18nBundle.getText(INPUT_CLEAR_ICON_ACC_NAME);
  }
  get _popupLabel() {
    return Input_1.i18nBundle.getText(INPUT_AVALIABLE_VALUES);
  }
  get inputType() {
    return this.type;
  }
  get inputNativeType() {
    return this.type.toLowerCase();
  }
  get isTypeNumber() {
    return this.type === InputType$1.Number;
  }
  get suggestionsTextId() {
    return this.showSuggestions ? `suggestionsText` : "";
  }
  get valueStateTextId() {
    return this.hasValueState ? `valueStateDesc` : "";
  }
  get _accInfoAriaDescription() {
    return this._inputAccInfo && this._inputAccInfo.ariaDescription || "";
  }
  get _accInfoAriaDescriptionId() {
    const hasAriaDescription = this._accInfoAriaDescription !== "";
    return hasAriaDescription ? "descr" : "";
  }
  get ariaDescriptionText() {
    return this._associatedDescriptionRefTexts || L$2(this);
  }
  get ariaDescriptionTextId() {
    return this.ariaDescriptionText ? "accessibleDescription" : "";
  }
  get ariaDescribedByIds() {
    return [
      this.suggestionsTextId,
      this.valueStateTextId,
      this._valueStateLinksShortcutsTextAccId,
      this._inputAccInfo.ariaDescribedBy,
      this._accInfoAriaDescriptionId,
      this.ariaDescriptionTextId
    ].filter(Boolean).join(" ");
  }
  get accInfo() {
    const ariaHasPopupDefault = this.showSuggestions ? "dialog" : void 0;
    const ariaAutoCompleteDefault = this.showSuggestions ? "list" : void 0;
    return {
      "ariaRoledescription": this._inputAccInfo && (this._inputAccInfo.ariaRoledescription || void 0),
      "ariaDescribedBy": this.ariaDescribedByIds || void 0,
      "ariaInvalid": this.valueState === o$4.Negative ? true : void 0,
      "ariaHasPopup": this._inputAccInfo.ariaHasPopup ? this._inputAccInfo.ariaHasPopup : ariaHasPopupDefault,
      "ariaAutoComplete": this._inputAccInfo.ariaAutoComplete ? this._inputAccInfo.ariaAutoComplete : ariaAutoCompleteDefault,
      "role": this._inputAccInfo && this._inputAccInfo.role,
      "ariaControls": this._inputAccInfo && this._inputAccInfo.ariaControls,
      "ariaExpanded": this._inputAccInfo && this._inputAccInfo.ariaExpanded,
      "ariaDescription": this._accInfoAriaDescription,
      "accessibleDescription": this.ariaDescriptionText,
      "ariaLabel": this._inputAccInfo && this._inputAccInfo.ariaLabel || this._accessibleLabelsRefTexts || this.accessibleName || this._associatedLabelsTexts || void 0
    };
  }
  get nativeInputAttributes() {
    return {
      "min": this.isTypeNumber ? this._nativeInputAttributes.min : void 0,
      "max": this.isTypeNumber ? this._nativeInputAttributes.max : void 0,
      "step": this.isTypeNumber ? this._nativeInputAttributes.step || "any" : void 0
    };
  }
  get ariaValueStateHiddenText() {
    if (!this.hasValueState) {
      return;
    }
    const valueState = this.valueState !== o$4.None ? this.valueStateTypeMappings[this.valueState] : "";
    if (this.shouldDisplayDefaultValueStateMessage) {
      return this.valueStateText ? `${valueState} ${this.valueStateText}` : valueState;
    }
    return this.valueStateMessage.length ? `${valueState} ${this.valueStateMessage.map((el) => el.textContent).join(" ")}` : valueState;
  }
  get itemSelectionAnnounce() {
    return this.Suggestions ? this.Suggestions.itemSelectionAnnounce : "";
  }
  get linksInAriaValueStateHiddenText() {
    const links = [];
    if (this.valueStateMessage) {
      this.valueStateMessage.forEach((element) => {
        if (element.children.length) {
          element.querySelectorAll("ui5-link").forEach((link) => {
            links.push(link);
          });
        }
      });
    }
    return links;
  }
  get valueStateLinksShortcutsTextAcc() {
    const links = this.linksInAriaValueStateHiddenText;
    if (!links.length) {
      return "";
    }
    if (A$7()) {
      return links.length === 1 ? Input_1.i18nBundle.getText(VALUE_STATE_LINK_MAC) : Input_1.i18nBundle.getText(VALUE_STATE_LINKS_MAC);
    }
    return links.length === 1 ? Input_1.i18nBundle.getText(VALUE_STATE_LINK) : Input_1.i18nBundle.getText(VALUE_STATE_LINKS);
  }
  get _valueStateLinksShortcutsTextAccId() {
    return this.linksInAriaValueStateHiddenText.length > 0 ? `hiddenText-value-state-link-shortcut` : "";
  }
  get iconsCount() {
    const slottedIconsCount = this.icon ? this.icon.length : 0;
    const clearIconCount = Number(this._effectiveShowClearIcon) ?? 0;
    return slottedIconsCount + clearIconCount;
  }
  get classes() {
    return {
      popover: {
        "ui5-suggestions-popover": this.showSuggestions,
        "ui5-popover-with-value-state-header-phone": this._isPhone && this.showSuggestions && this.hasValueStateMessage,
        "ui5-popover-with-value-state-header": !this._isPhone && this.showSuggestions && this.hasValueStateMessage
      },
      popoverValueState: {
        "ui5-valuestatemessage-root": true,
        "ui5-valuestatemessage-header": true,
        "ui5-valuestatemessage--success": this.valueState === o$4.Positive,
        "ui5-valuestatemessage--error": this.valueState === o$4.Negative,
        "ui5-valuestatemessage--warning": this.valueState === o$4.Critical,
        "ui5-valuestatemessage--information": this.valueState === o$4.Information
      }
    };
  }
  get styles() {
    const remSizeInPx = parseInt(getComputedStyle(document.documentElement).fontSize);
    const stylesObject = {
      suggestionPopoverHeader: {
        "display": this._listWidth === 0 ? "none" : "inline-block",
        "width": this._listWidth ? `${this._listWidth}px` : "",
        "max-width": "inherit"
      },
      suggestionsPopover: {
        "min-width": this._inputWidth ? `${this._inputWidth}px` : "",
        "max-width": this._inputWidth && this._inputWidth / remSizeInPx > 40 ? `${this._inputWidth}px` : "40rem"
      },
      innerInput: {
        "padding": ""
      }
    };
    return stylesObject;
  }
  get suggestionSeparators() {
    return "None";
  }
  get shouldDisplayOnlyValueStateMessage() {
    return this.hasValueStateMessage && !this.readonly && !this.open && this.focused;
  }
  get shouldDisplayDefaultValueStateMessage() {
    return !this.valueStateMessage.length && this.hasValueStateMessage;
  }
  get hasValueState() {
    return this.valueState !== o$4.None;
  }
  get hasValueStateMessage() {
    return this.hasValueState && this.valueState !== o$4.Positive && (!this._inputIconFocused || !!(this._isPhone && this.Suggestions));
  }
  get valueStateText() {
    return this.valueState !== o$4.None ? this.valueStateTextMappings()[this.valueState] : void 0;
  }
  get suggestionsText() {
    return Input_1.i18nBundle.getText(INPUT_SUGGESTIONS);
  }
  get availableSuggestionsCount() {
    if (this.showSuggestions && (this.value || this.Suggestions?.isOpened())) {
      const nonGroupItems = this._selectableItems;
      switch (nonGroupItems.length) {
        case 0:
          return Input_1.i18nBundle.getText(INPUT_SUGGESTIONS_NO_HIT);
        case 1:
          return Input_1.i18nBundle.getText(INPUT_SUGGESTIONS_ONE_HIT);
        default:
          return Input_1.i18nBundle.getText(INPUT_SUGGESTIONS_MORE_HITS, nonGroupItems.length);
      }
    }
    return void 0;
  }
  get step() {
    return this.isTypeNumber ? "any" : void 0;
  }
  get _isPhone() {
    return d$h();
  }
  get _isSuggestionsFocused() {
    return !this.focused && this.Suggestions?.isOpened();
  }
  /**
   * Returns the placeholder value.
   * @protected
   */
  get _placeholder() {
    return this.placeholder;
  }
  /**
   * This method is relevant for sap_horizon theme only
   */
  get _valueStateInputIcon() {
    const iconPerValueState = {
      Negative: `<path xmlns="http://www.w3.org/2000/svg" fill-rule="evenodd" clip-rule="evenodd" d="M10 20C4.47715 20 0 15.5228 0 10C0 4.47715 4.47715 0 10 0C15.5228 0 20 4.47715 20 10C20 15.5228 15.5228 20 10 20ZM7.70711 13.7071C7.31658 14.0976 6.68342 14.0976 6.29289 13.7071C5.90237 13.3166 5.90237 12.6834 6.29289 12.2929L8.58579 10L6.29289 7.70711C5.90237 7.31658 5.90237 6.68342 6.29289 6.29289C6.68342 5.90237 7.31658 5.90237 7.70711 6.29289L10 8.58579L12.2929 6.29289C12.6834 5.90237 13.3166 5.90237 13.7071 6.29289C14.0976 6.68342 14.0976 7.31658 13.7071 7.70711L11.4142 10L13.7071 12.2929C14.0976 12.6834 14.0976 13.3166 13.7071 13.7071C13.3166 14.0976 12.6834 14.0976 12.2929 13.7071L10 11.4142L7.70711 13.7071Z" fill="#EE3939"/>`,
      Critical: `<path xmlns="http://www.w3.org/2000/svg" fill-rule="evenodd" clip-rule="evenodd" d="M11.8619 0.49298C11.6823 0.187541 11.3544 0 11 0C10.6456 0 10.3177 0.187541 10.1381 0.49298L0.138066 17.493C-0.0438112 17.8022 -0.0461447 18.1851 0.13195 18.4965C0.310046 18.8079 0.641283 19 1 19H21C21.3587 19 21.69 18.8079 21.868 18.4965C22.0461 18.1851 22.0438 17.8022 21.8619 17.493L11.8619 0.49298ZM11 6C11.5523 6 12 6.44772 12 7V10C12 10.5523 11.5523 11 11 11C10.4477 11 10 10.5523 10 10V7C10 6.44772 10.4477 6 11 6ZM11 16C11.8284 16 12.5 15.3284 12.5 14.5C12.5 13.6716 11.8284 13 11 13C10.1716 13 9.5 13.6716 9.5 14.5C9.5 15.3284 10.1716 16 11 16Z" fill="#F58B00"/>`,
      Positive: `<path xmlns="http://www.w3.org/2000/svg" fill-rule="evenodd" clip-rule="evenodd" d="M0 10C0 15.5228 4.47715 20 10 20C15.5228 20 20 15.5228 20 10C20 4.47715 15.5228 0 10 0C4.47715 0 0 4.47715 0 10ZM14.7071 6.29289C14.3166 5.90237 13.6834 5.90237 13.2929 6.29289L8 11.5858L6.70711 10.2929C6.31658 9.90237 5.68342 9.90237 5.29289 10.2929C4.90237 10.6834 4.90237 11.3166 5.29289 11.7071L7.29289 13.7071C7.68342 14.0976 8.31658 14.0976 8.70711 13.7071L14.7071 7.70711C15.0976 7.31658 15.0976 6.68342 14.7071 6.29289Z" fill="#36A41D"/>`,
      Information: `<path xmlns="http://www.w3.org/2000/svg" fill-rule="evenodd" clip-rule="evenodd" d="M3 0C1.34315 0 0 1.34315 0 3V15C0 16.6569 1.34315 18 3 18H15C16.6569 18 18 16.6569 18 15V3C18 1.34315 16.6569 0 15 0H3ZM9 6.5C9.82843 6.5 10.5 5.82843 10.5 5C10.5 4.17157 9.82843 3.5 9 3.5C8.17157 3.5 7.5 4.17157 7.5 5C7.5 5.82843 8.17157 6.5 9 6.5ZM9 8.5C9.55228 8.5 10 8.94772 10 9.5V13.5C10 14.0523 9.55228 14.5 9 14.5C8.44771 14.5 8 14.0523 8 13.5V9.5C8 8.94772 8.44771 8.5 9 8.5Z" fill="#1B90FF"/>`
    };
    if (this.valueState !== o$4.None) {
      return `
			<svg xmlns="http://www.w3.org/2000/svg" width="24" height="20" viewBox="0 0 20 20" fill="none">
				${iconPerValueState[this.valueState]};
			</svg>
			`;
    }
    return "";
  }
  get _valueStatePopoverHorizontalAlign() {
    return this.effectiveDir !== "rtl" ? "Start" : "End";
  }
  /**
   * This method is relevant for sap_horizon theme only
   */
  get _valueStateMessageInputIcon() {
    const iconPerValueState = {
      Negative: "error",
      Critical: "alert",
      Positive: "sys-enter-2",
      Information: "information"
    };
    return this.valueState !== o$4.None ? iconPerValueState[this.valueState] : "";
  }
  /**
   * Returns the caret position inside the native input
   * @protected
   */
  getCaretPosition() {
    return n$4(this.nativeInput);
  }
  /**
   * Sets the caret to a certain position inside the native input
   * @protected
   */
  setCaretPosition(pos) {
    o$2(this.nativeInput, pos);
  }
  /**
   * Removes the fractional part of floating-point number.
   * @param value the numeric value of Input of type "Number"
   */
  removeFractionalPart(value) {
    if (value.includes(".")) {
      return value.slice(0, value.indexOf("."));
    }
    if (value.includes(",")) {
      return value.slice(0, value.indexOf(","));
    }
    return value;
  }
};
__decorate$r([
  s$7({ type: Boolean })
], Input$1.prototype, "disabled", void 0);
__decorate$r([
  s$7({ type: Boolean })
], Input$1.prototype, "highlight", void 0);
__decorate$r([
  s$7()
], Input$1.prototype, "placeholder", void 0);
__decorate$r([
  s$7({ type: Boolean })
], Input$1.prototype, "readonly", void 0);
__decorate$r([
  s$7({ type: Boolean })
], Input$1.prototype, "required", void 0);
__decorate$r([
  s$7({ type: Boolean })
], Input$1.prototype, "noTypeahead", void 0);
__decorate$r([
  s$7()
], Input$1.prototype, "type", void 0);
__decorate$r([
  s$7()
], Input$1.prototype, "value", void 0);
__decorate$r([
  s$7({ noAttribute: true })
], Input$1.prototype, "_innerValue", void 0);
__decorate$r([
  s$7()
], Input$1.prototype, "valueState", void 0);
__decorate$r([
  s$7()
], Input$1.prototype, "name", void 0);
__decorate$r([
  s$7({ type: Boolean })
], Input$1.prototype, "showSuggestions", void 0);
__decorate$r([
  s$7({ type: Number })
], Input$1.prototype, "maxlength", void 0);
__decorate$r([
  s$7()
], Input$1.prototype, "accessibleName", void 0);
__decorate$r([
  s$7()
], Input$1.prototype, "accessibleNameRef", void 0);
__decorate$r([
  s$7()
], Input$1.prototype, "accessibleDescription", void 0);
__decorate$r([
  s$7()
], Input$1.prototype, "accessibleDescriptionRef", void 0);
__decorate$r([
  s$7({ type: Boolean })
], Input$1.prototype, "showClearIcon", void 0);
__decorate$r([
  s$7({ type: Boolean })
], Input$1.prototype, "open", void 0);
__decorate$r([
  s$7({ type: Boolean })
], Input$1.prototype, "_effectiveShowClearIcon", void 0);
__decorate$r([
  s$7({ type: Boolean })
], Input$1.prototype, "focused", void 0);
__decorate$r([
  s$7()
], Input$1.prototype, "hint", void 0);
__decorate$r([
  s$7({ type: Boolean })
], Input$1.prototype, "valueStateOpen", void 0);
__decorate$r([
  s$7({ type: Object })
], Input$1.prototype, "_inputAccInfo", void 0);
__decorate$r([
  s$7({ type: Object })
], Input$1.prototype, "_nativeInputAttributes", void 0);
__decorate$r([
  s$7({ type: Number })
], Input$1.prototype, "_inputWidth", void 0);
__decorate$r([
  s$7({ type: Number })
], Input$1.prototype, "_listWidth", void 0);
__decorate$r([
  s$7({ type: Boolean, noAttribute: true })
], Input$1.prototype, "_inputIconFocused", void 0);
__decorate$r([
  s$7({ noAttribute: true })
], Input$1.prototype, "_associatedLabelsTexts", void 0);
__decorate$r([
  s$7({ noAttribute: true })
], Input$1.prototype, "_accessibleLabelsRefTexts", void 0);
__decorate$r([
  s$7({ noAttribute: true })
], Input$1.prototype, "_associatedDescriptionRefTexts", void 0);
__decorate$r([
  s$7({ type: Object })
], Input$1.prototype, "Suggestions", void 0);
__decorate$r([
  s$7({ type: Array })
], Input$1.prototype, "_linksListenersArray", void 0);
__decorate$r([
  d$4({ type: HTMLElement, "default": true })
], Input$1.prototype, "suggestionItems", void 0);
__decorate$r([
  d$4()
], Input$1.prototype, "icon", void 0);
__decorate$r([
  d$4({
    type: HTMLElement,
    invalidateOnChildChange: true
  })
], Input$1.prototype, "valueStateMessage", void 0);
__decorate$r([
  i$8("@ui5/webcomponents")
], Input$1, "i18nBundle", void 0);
Input$1 = Input_1 = __decorate$r([
  m$7({
    tag: "ui5-input",
    languageAware: true,
    formAssociated: true,
    renderer: y$4,
    template: InputTemplate,
    styles: [
      inputStyles,
      ResponsivePopoverCommonCss,
      ValueStateMessageCss,
      SuggestionsCss
    ]
  }),
  l$b("change", {
    bubbles: true
  }),
  l$b("input", {
    bubbles: true,
    cancelable: true
  }),
  l$b("select", {
    bubbles: true
  }),
  l$b("selection-change", {
    bubbles: true
  }),
  l$b("type-ahead", {
    bubbles: true
  }),
  l$b("suggestion-scroll", {
    bubbles: true
  }),
  l$b("open", {
    bubbles: true
  }),
  l$b("close")
], Input$1);
Input$1.define();
const Input$2 = Input$1;
const Input2 = withWebComponent("ui5-input", ["accessibleDescription", "accessibleDescriptionRef", "accessibleName", "accessibleNameRef", "maxlength", "name", "placeholder", "type", "value", "valueState"], ["disabled", "noTypeahead", "open", "readonly", "required", "showClearIcon", "showSuggestions"], ["icon", "valueStateMessage"], ["change", "close", "input", "open", "select", "selection-change"]);
Input2.displayName = "Input";
var ListItemType;
(function(ListItemType2) {
  ListItemType2["Inactive"] = "Inactive";
  ListItemType2["Active"] = "Active";
  ListItemType2["Detail"] = "Detail";
  ListItemType2["Navigation"] = "Navigation";
})(ListItemType || (ListItemType = {}));
const ListItemType$1 = ListItemType;
var r$4 = ((l3) => (l3.Auto = "Auto", l3.Vertical = "Vertical", l3.Horizontal = "Horizontal", l3.Paging = "Paging", l3))(r$4 || {});
var l$3 = ((c2) => (c2.Static = "Static", c2.Cyclic = "Cyclic", c2))(l$3 || {});
let f$1 = class f2 {
  constructor(e2, t3) {
    if (!e2.isUI5Element) throw new Error("The root web component must be a UI5 Element instance");
    if (this.rootWebComponent = e2, this.rootWebComponent.addEventListener("keydown", this._onkeydown.bind(this)), this._initBound = this._init.bind(this), this.rootWebComponent.attachComponentStateFinalized(this._initBound), typeof t3.getItemsCallback != "function") throw new Error("getItemsCallback is required");
    this._getItems = t3.getItemsCallback, this._currentIndex = t3.currentIndex || 0, this._rowSize = t3.rowSize || 1, this._behavior = t3.behavior || l$3.Static, this._navigationMode = t3.navigationMode || r$4.Auto, this._affectedPropertiesNames = t3.affectedPropertiesNames || [], this._skipItemsSize = t3.skipItemsSize || null;
  }
  setCurrentItem(e2) {
    const t3 = this._getItems().indexOf(e2);
    if (t3 === -1) {
      console.warn("The provided item is not managed by ItemNavigation", e2);
      return;
    }
    this._currentIndex = t3, this._applyTabIndex();
  }
  setRowSize(e2) {
    this._rowSize = e2;
  }
  _init() {
    this._getItems().forEach((e2, t3) => {
      e2.forcedTabIndex = t3 === this._currentIndex ? "0" : "-1";
    });
  }
  _onkeydown(e2) {
    if (!this._canNavigate()) return;
    const t3 = this._navigationMode === r$4.Horizontal || this._navigationMode === r$4.Auto, i3 = this._navigationMode === r$4.Vertical || this._navigationMode === r$4.Auto, s2 = this.rootWebComponent.effectiveDir === "rtl";
    if (s2 && D$3(e2) && t3) this._handleRight();
    else if (s2 && R2(e2) && t3) this._handleLeft();
    else if (D$3(e2) && t3) this._handleLeft();
    else if (R2(e2) && t3) this._handleRight();
    else if (P$1(e2) && i3) this._handleUp();
    else if (_(e2) && i3) this._handleDown();
    else if (M2(e2)) this._handleHome();
    else if (n$a(e2)) this._handleEnd();
    else if (j(e2)) this._handlePageUp();
    else if (q(e2)) this._handlePageDown();
    else return;
    e2.preventDefault(), this._applyTabIndex(), this._focusCurrentItem();
  }
  _handleUp() {
    const e2 = this._getItems().length;
    if (this._currentIndex - this._rowSize >= 0) {
      this._currentIndex -= this._rowSize;
      return;
    }
    if (this._behavior === l$3.Cyclic) {
      const t3 = this._currentIndex % this._rowSize, i3 = t3 === 0 ? this._rowSize - 1 : t3 - 1, s2 = Math.ceil(e2 / this._rowSize);
      let o2 = i3 + (s2 - 1) * this._rowSize;
      o2 > e2 - 1 && (o2 -= this._rowSize), this._currentIndex = o2;
    } else this._currentIndex = 0;
  }
  _handleDown() {
    const e2 = this._getItems().length;
    if (this._currentIndex + this._rowSize < e2) {
      this._currentIndex += this._rowSize;
      return;
    }
    if (this._behavior === l$3.Cyclic) {
      const i3 = (this._currentIndex % this._rowSize + 1) % this._rowSize;
      this._currentIndex = i3;
    } else this._currentIndex = e2 - 1;
  }
  _handleLeft() {
    const e2 = this._getItems().length;
    if (this._currentIndex > 0) {
      this._currentIndex -= 1;
      return;
    }
    this._behavior === l$3.Cyclic && (this._currentIndex = e2 - 1);
  }
  _handleRight() {
    const e2 = this._getItems().length;
    if (this._currentIndex < e2 - 1) {
      this._currentIndex += 1;
      return;
    }
    this._behavior === l$3.Cyclic && (this._currentIndex = 0);
  }
  _handleHome() {
    const e2 = this._rowSize > 1 ? this._rowSize : this._getItems().length;
    this._currentIndex -= this._currentIndex % e2;
  }
  _handleEnd() {
    const e2 = this._rowSize > 1 ? this._rowSize : this._getItems().length;
    this._currentIndex += e2 - 1 - this._currentIndex % e2;
  }
  _handlePageUp() {
    this._rowSize > 1 || this._handlePageUpFlat();
  }
  _handlePageDown() {
    this._rowSize > 1 || this._handlePageDownFlat();
  }
  _handlePageUpFlat() {
    if (this._skipItemsSize === null) {
      this._currentIndex -= this._currentIndex;
      return;
    }
    this._currentIndex + 1 > this._skipItemsSize ? this._currentIndex -= this._skipItemsSize : this._currentIndex -= this._currentIndex;
  }
  _handlePageDownFlat() {
    if (this._skipItemsSize === null) {
      this._currentIndex = this._getItems().length - 1;
      return;
    }
    this._getItems().length - this._currentIndex - 1 > this._skipItemsSize ? this._currentIndex += this._skipItemsSize : this._currentIndex = this._getItems().length - 1;
  }
  _applyTabIndex() {
    const e2 = this._getItems();
    for (let t3 = 0; t3 < e2.length; t3++) e2[t3].forcedTabIndex = t3 === this._currentIndex ? "0" : "-1";
    this._affectedPropertiesNames.forEach((t3) => {
      const i3 = this.rootWebComponent[t3];
      this.rootWebComponent[t3] = Array.isArray(i3) ? [...i3] : { ...i3 };
    });
  }
  _focusCurrentItem() {
    const e2 = this._getCurrentItem();
    e2 && e2.focus();
  }
  _canNavigate() {
    const e2 = this._getCurrentItem(), t3 = t$5();
    return e2 && e2 === t3;
  }
  _getCurrentItem() {
    const e2 = this._getItems();
    if (!e2.length) return;
    for (; this._currentIndex >= e2.length; ) this._currentIndex -= this._rowSize;
    this._currentIndex < 0 && (this._currentIndex = 0);
    const t3 = e2[this._currentIndex];
    if (!t3) return;
    if (v$4(t3)) return t3.getFocusDomRef();
    const i3 = this.rootWebComponent.getDomRef();
    if (i3 && t3.id) return i3.querySelector(`[id="${t3.id}"]`);
  }
};
const s$2 = ":host{justify-content:center;align-items:center;display:flex;color:var(--sapList_TextColor);background-color:var(--sapList_Background);font-family:var(--sapFontFamily);height:var(--sapElement_LineHeight);border-bottom:var(--sapList_BorderWidth) solid var(--sapList_BorderColor);opacity:.8;position:absolute;padding:0 1rem;top:-1000px;left:-1000px}";
const e$3 = { key: "DRAG_DROP_MULTIPLE_TEXT", defaultText: "{0} items" };
const l$2 = 2;
let a$5 = null;
const g = (e2) => {
  a$5 = e2;
}, d$1 = () => {
  a$5 = null;
}, p$1 = () => a$5, u$2 = async (e2) => {
  const t3 = document.createElement("div"), n2 = await f$c("@ui5/webcomponents-base"), r3 = t3.attachShadow({ mode: "open" }), o2 = new CSSStyleSheet();
  return o2.replaceSync(s$2), r3.adoptedStyleSheets = [o2], r3.textContent = n2.getText(e$3, e2), t3;
}, m$1 = async (e2, t3) => {
  if (e2 < l$2) {
    console.warn(`Cannot start multiple drag with count ${e2}. Minimum is ${l$2}.`);
    return;
  }
  if (!t3.dataTransfer) return;
  const n2 = await u$2(e2);
  document.body.appendChild(n2), t3.dataTransfer.setDragImage(n2, 0, 0), requestAnimationFrame(() => {
    n2.remove();
  });
}, D$1 = { setDraggedElement: g, clearDraggedElement: d$1, getDraggedElement: p$1, startMultipleDrag: m$1 };
function i$2(t3, o2, n2, m2, r3 = {}) {
  const a3 = D$1.getDraggedElement(), e2 = { targetReference: null, placement: null };
  if (!a3 && !r3?.crossDnD) return e2;
  const s2 = n2.placements;
  return e2.targetReference = t3.target, s2.some((l3) => {
    const c2 = r3.originalEvent ? { originalEvent: t3 } : {};
    return o2.fireDecoratorEvent("move-over", { ...c2, source: { element: a3 }, destination: { element: m2, placement: l3 } }) ? false : (t3.preventDefault(), e2.targetReference = n2.element, e2.placement = l3, true);
  }) || (e2.targetReference = null), e2;
}
function m(t3, r3, o2, a3, n2 = {}) {
  t3.preventDefault();
  const e2 = D$1.getDraggedElement();
  if (!e2 && n2?.crossDnD) return;
  const i3 = n2.originalEvent ? { originalEvent: t3 } : {};
  r3.fireDecoratorEvent("move", { ...i3, source: { element: e2 }, destination: { element: o2, placement: a3 } }), e2?.focus();
}
var r$3 = ((f4) => (f4.On = "On", f4.Before = "Before", f4.After = "After", f4))(r$3 || {});
var a$4 = ((l3) => (l3.Vertical = "Vertical", l3.Horizontal = "Horizontal", l3))(a$4 || {});
const A = (e2, t3, r3, a3) => {
  const o2 = Math.abs(e2 - t3), m2 = Math.abs(e2 - r3), s2 = Math.abs(e2 - a3), c2 = Math.min(o2, m2, s2);
  let l3 = [];
  switch (c2) {
    case o2:
      l3 = [r$3.Before];
      break;
    case m2:
      l3 = [r$3.On, o2 < s2 ? r$3.Before : r$3.After];
      break;
    case s2:
      l3 = [r$3.After];
      break;
  }
  return l3;
}, L2 = (e2, t3, r3) => {
  let a3 = Number.POSITIVE_INFINITY, o2 = null;
  for (let f4 = 0; f4 < e2.length; f4++) {
    const h2 = e2[f4], { left: p3, width: w2, top: B2, height: H3 } = h2.getBoundingClientRect();
    let u3;
    r3 === a$4.Vertical ? u3 = B2 + H3 / 2 : u3 = p3 + w2 / 2;
    const M3 = Math.abs(t3 - u3);
    M3 < a3 && (a3 = M3, o2 = h2);
  }
  if (!o2) return null;
  const { width: m2, height: s2, left: c2, right: l3, top: b3, bottom: d2 } = o2.getBoundingClientRect();
  let i3;
  return r3 === a$4.Vertical ? i3 = A(t3, b3, b3 + s2 / 2, d2) : i3 = A(t3, c2, c2 + m2 / 2, l3), { element: o2, placements: i3 };
}, T = (e2, t3) => (t3--, t3 < 0 ? [] : [{ element: e2[t3], placement: r$3.Before }]), y = (e2, t3) => (t3++, t3 >= e2.length ? [] : [{ element: e2[t3], placement: r$3.After }]), E = { ArrowLeft: T, ArrowUp: T, ArrowRight: y, ArrowDown: y, Home: (e2, t3) => e2.slice(0, t3).map((r3) => ({ element: r3, placement: r$3.Before })), End: (e2, t3) => e2.slice(t3 + 1, e2.length).reverse().map((r3) => ({ element: r3, placement: r$3.After })) }, k2 = (e2, t3, r3) => P(r3.key) ? E[r3.key](e2, e2.indexOf(t3)) : [], P = (e2) => e2 in E;
class DragAndDropHandler {
  constructor(component, config) {
    this.component = component;
    this.config = {
      orientation: a$4.Vertical,
      clientCoordinate: "clientY",
      ...config
    };
  }
  ondragenter(e2) {
    e2.preventDefault();
  }
  ondragleave(e2) {
    if (e2.relatedTarget instanceof Node && this.component.shadowRoot?.contains(e2.relatedTarget)) {
      return;
    }
    const dropIndicator = this.config.getDropIndicator();
    if (dropIndicator) {
      dropIndicator.targetReference = null;
    }
  }
  ondragover(e2) {
    if (!this._validateDragOver(e2)) {
      return;
    }
    const draggedElement = D$1.getDraggedElement();
    const dropIndicator = this.config.getDropIndicator();
    const closestPosition = this._findClosestPosition(e2);
    if (!closestPosition) {
      dropIndicator.targetReference = null;
      return;
    }
    const targetElement = this._transformTargetElement(closestPosition.element);
    if (!this._isValidDragTarget(draggedElement, targetElement)) {
      dropIndicator.targetReference = null;
      return;
    }
    const placements = this._filterPlacements(closestPosition.placements, draggedElement, targetElement);
    const settings = this.config.useOriginalEvent ? { originalEvent: true } : {};
    const { targetReference, placement } = i$2(e2, this.component, {
      element: targetElement,
      placements
    }, targetElement, settings);
    dropIndicator.targetReference = targetReference;
    dropIndicator.placement = placement;
  }
  ondrop(e2) {
    const dropIndicator = this.config.getDropIndicator();
    if (!dropIndicator?.targetReference || !dropIndicator?.placement) {
      e2.preventDefault();
      return;
    }
    const settings = this.config.useOriginalEvent ? { originalEvent: true } : {};
    m(e2, this.component, dropIndicator.targetReference, dropIndicator.placement, settings);
    dropIndicator.targetReference = null;
  }
  _validateDragOver(e2) {
    if (!(e2.target instanceof HTMLElement)) {
      return false;
    }
    const draggedElement = D$1.getDraggedElement();
    const dropIndicator = this.config.getDropIndicator();
    return !!(draggedElement && dropIndicator);
  }
  _findClosestPosition(e2) {
    const items = this.config.getItems();
    const coordinate = this.config.clientCoordinate === "clientX" ? e2.clientX : e2.clientY;
    return L2(items, coordinate, this.config.orientation);
  }
  _transformTargetElement(element) {
    if (this.config.transformElement) {
      return this.config.transformElement(element);
    }
    return element;
  }
  _isValidDragTarget(draggedElement, targetElement) {
    if (this.config.validateDraggedElement) {
      return this.config.validateDraggedElement(draggedElement, targetElement);
    }
    return true;
  }
  _filterPlacements(placements, draggedElement, targetElement) {
    if (this.config.filterPlacements) {
      return this.config.filterPlacements(placements, draggedElement, targetElement);
    }
    return placements;
  }
}
const t$4 = (e2) => {
  let o2 = e2;
  return e2.shadowRoot && e2.shadowRoot.activeElement && (o2 = e2.shadowRoot.activeElement), o2;
};
let e$2 = null;
const u$1 = (t3, o2) => {
  e$2 && clearTimeout(e$2), e$2 = setTimeout(() => {
    e$2 = null, t3();
  }, o2);
};
const n$3 = (e2) => {
  const t3 = e2.getBoundingClientRect();
  return t3.top >= 0 && t3.left >= 0 && t3.bottom <= (window.innerHeight || document.documentElement.clientHeight) && t3.right <= (window.innerWidth || document.documentElement.clientWidth);
};
var ListSelectionMode;
(function(ListSelectionMode2) {
  ListSelectionMode2["None"] = "None";
  ListSelectionMode2["Single"] = "Single";
  ListSelectionMode2["SingleStart"] = "SingleStart";
  ListSelectionMode2["SingleEnd"] = "SingleEnd";
  ListSelectionMode2["SingleAuto"] = "SingleAuto";
  ListSelectionMode2["Multiple"] = "Multiple";
  ListSelectionMode2["Delete"] = "Delete";
})(ListSelectionMode || (ListSelectionMode = {}));
var ListGrowingMode;
(function(ListGrowingMode2) {
  ListGrowingMode2["Button"] = "Button";
  ListGrowingMode2["Scroll"] = "Scroll";
  ListGrowingMode2["None"] = "None";
})(ListGrowingMode || (ListGrowingMode = {}));
var ListAccessibleRole;
(function(ListAccessibleRole2) {
  ListAccessibleRole2["List"] = "List";
  ListAccessibleRole2["Menu"] = "Menu";
  ListAccessibleRole2["Tree"] = "Tree";
  ListAccessibleRole2["ListBox"] = "ListBox";
})(ListAccessibleRole || (ListAccessibleRole = {}));
var ListSeparator;
(function(ListSeparator2) {
  ListSeparator2["All"] = "All";
  ListSeparator2["Inner"] = "Inner";
  ListSeparator2["None"] = "None";
})(ListSeparator || (ListSeparator = {}));
function DropIndicatorTemplate() {
  return jsx("div", { class: {
    "ui5-di-rect": this.placement === r$3.On,
    "ui5-di-needle": this.placement !== r$3.On
  } });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const DropIndicatorCss = `:host{position:absolute;pointer-events:none;z-index:99}:host([orientation="Vertical"]) .ui5-di-needle{width:.125rem;height:100%;inset-block:0;background:var(--sapContent_DragAndDropActiveColor)}:host([orientation="Vertical"]){margin-left:-.0625rem}:host([orientation="Horizontal"]) .ui5-di-needle{height:.125rem;width:100%;inset-inline:0;background:var(--sapContent_DragAndDropActiveColor)}:host([orientation="Horizontal"]){margin-top:-.0625rem}:host([orientation="Horizontal"][placement="Before"][first]){margin-top:.3125rem}:host([orientation="Horizontal"][placement="After"][last]){margin-top:-.3125rem}:host([orientation="Vertical"]) .ui5-di-needle:before{left:-.1875rem;content:"";position:absolute;width:.25rem;height:.25rem;border-radius:.25rem;border:.125rem solid var(--sapContent_DragAndDropActiveColor);background-color:#fff;pointer-events:none}:host([orientation="Horizontal"]) .ui5-di-needle:before{top:-.1875rem;content:"";position:absolute;width:.25rem;height:.25rem;border-radius:.25rem;border:.125rem solid var(--sapContent_DragAndDropActiveColor);background-color:#fff;pointer-events:none}:host .ui5-di-rect{border:.125rem solid var(--sapContent_DragAndDropActiveColor);position:absolute;inset:0}:host .ui5-di-rect:before{content:" ";position:absolute;inset:0;background:var(--sapContent_DragAndDropActiveColor);opacity:.05}
`;
var __decorate$q = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
let DropIndicator = class DropIndicator2 extends b$6 {
  get _positionProperty() {
    if (this.orientation === a$4.Vertical) {
      return "left";
    }
    return "top";
  }
  constructor() {
    super();
    this.targetReference = null;
    this.ownerReference = null;
    this.placement = "Before";
    this.orientation = "Vertical";
  }
  onAfterRendering() {
    if (!this.targetReference || !this.ownerReference) {
      Object.assign(this.style, {
        display: "none"
      });
      return;
    }
    const { left, width, right, top, bottom, height } = this.targetReference.getBoundingClientRect();
    const { top: containerTop, height: containerHeight } = this.ownerReference.getBoundingClientRect();
    const style = {
      display: "",
      [this._positionProperty]: "",
      width: "",
      height: ""
    };
    let position = 0;
    let isLast = false;
    let isFirst = false;
    if (this.orientation === a$4.Vertical) {
      switch (this.placement) {
        case r$3.Before:
          position = left;
          break;
        case r$3.On:
          style.width = `${width}px`;
          position = left;
          break;
        case r$3.After:
          position = right;
          break;
      }
      style.height = `${height}px`;
    }
    if (this.orientation === a$4.Horizontal) {
      switch (this.placement) {
        case r$3.Before:
          position = top;
          break;
        case r$3.On:
          style.height = `${height}px`;
          position = top;
          break;
        case r$3.After:
          position = bottom;
          break;
      }
      style.width = `${width}px`;
      position -= containerTop;
      if (position <= 0) {
        isFirst = true;
      }
      if (position >= containerHeight) {
        isLast = true;
      }
    }
    style[this._positionProperty] = `${position}px`;
    this.toggleAttribute("first", isFirst);
    this.toggleAttribute("last", isLast);
    Object.assign(this.style, style);
  }
};
__decorate$q([
  s$7({ type: Object })
], DropIndicator.prototype, "targetReference", void 0);
__decorate$q([
  s$7({ type: Object })
], DropIndicator.prototype, "ownerReference", void 0);
__decorate$q([
  s$7()
], DropIndicator.prototype, "placement", void 0);
__decorate$q([
  s$7()
], DropIndicator.prototype, "orientation", void 0);
DropIndicator = __decorate$q([
  m$7({
    tag: "ui5-drop-indicator",
    renderer: y$4,
    styles: DropIndicatorCss,
    template: DropIndicatorTemplate
  })
], DropIndicator);
DropIndicator.define();
const DropIndicator$1 = DropIndicator;
function ListTemplate() {
  return jsx("div", { class: "ui5-list-root", onFocusIn: this._onfocusin, onKeyDown: this._onkeydown, onDragEnter: this._ondragenter, onDragOver: this._ondragover, onDrop: this._ondrop, onDragLeave: this._ondragleave, "onui5-_close": this.onItemClose, "onui5-toggle": this.onItemToggle, "onui5-request-tabindex-change": this.onItemTabIndexChange, "onui5-_focused": this.onItemFocused, "onui5-forward-after": this.onForwardAfter, "onui5-forward-before": this.onForwardBefore, "onui5-selection-requested": this.onSelectionRequested, "onui5-focus-requested": this.onFocusRequested, "onui5-_press": this.onItemPress, children: jsxs(BusyIndicator$1, { id: `${this._id}-busyIndicator`, delay: this.loadingDelay, active: this.showBusyIndicatorOverlay, class: "ui5-list-busy-indicator", children: [jsxs("div", { class: "ui5-list-scroll-container", children: [this.header.length > 0 && jsx("slot", { name: "header" }), this.shouldRenderH1 && jsx("header", { id: this.headerID, class: "ui5-list-header", children: this.headerText }), this.hasData && jsx("div", { id: `${this._id}-before`, tabindex: 0, role: "none", class: "ui5-list-focusarea" }), jsx("span", { id: `${this._id}-modeLabel`, class: "ui5-hidden-text", children: this.ariaLabelModeText }), jsxs("ul", { id: `${this._id}-listUl`, class: "ui5-list-ul", role: this.listAccessibleRole, "aria-label": this.ariaLabelTxt, "aria-labelledby": this.ariaLabelledBy, "aria-description": this.ariaDescriptionText, children: [jsx("slot", {}), this.showNoDataText && jsx("li", { tabindex: 0, id: `${this._id}-nodata`, class: "ui5-list-nodata", role: "listitem", children: jsx("div", { id: `${this._id}-nodata-text`, class: "ui5-list-nodata-text", children: this.noDataText }) })] }), this.growsWithButton && moreRow.call(this), this.footerText && jsx("footer", { id: `${this._id}-footer`, class: "ui5-list-footer", children: this.footerText }), this.hasData && jsx("div", { id: `${this._id}-after`, tabindex: 0, role: "none", class: "ui5-list-focusarea" }), jsx("span", { tabindex: -1, "aria-hidden": "true", class: "ui5-list-end-marker" })] }), jsx(DropIndicator$1, { orientation: "Horizontal", ownerReference: this })] }) });
}
function moreRow() {
  return jsx("div", { class: "ui5-growing-button", part: "growing-button", children: jsxs("div", { id: `${this._id}-growing-btn`, role: "button", tabindex: 0, part: "growing-button-inner", class: {
    "ui5-growing-button-inner": true,
    "ui5-growing-button-inner-active": this._loadMoreActive
  }, "aria-label": this.growingButtonAriaLabel, "aria-labelledby": this.growingButtonAriaLabelledBy, onClick: this._onLoadMoreClick, onKeyDown: this._onLoadMoreKeydown, onKeyUp: this._onLoadMoreKeyup, onMouseDown: this._onLoadMoreMousedown, onMouseUp: this._onLoadMoreMouseup, children: [this.loading && jsx(BusyIndicator$1, { delay: this.loadingDelay, part: "growing-button-busy-indicator", class: "ui5-list-growing-button-busy-indicator", active: true }), jsx("span", { id: `${this._id}-growingButton-text`, class: "ui5-growing-button-text", "growing-button-text": true, children: this._growingButtonText })] }) });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const listCss = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}.ui5-growing-button{display:flex;align-items:center;padding:var(--_ui5-v2-14-0_load_more_padding);border-top:1px solid var(--sapList_BorderColor);border-bottom:var(--_ui5-v2-14-0_load_more_border-bottom);box-sizing:border-box;cursor:pointer;outline:none}.ui5-growing-button-inner{display:flex;align-items:center;justify-content:center;flex-direction:row;min-height:var(--_ui5-v2-14-0_load_more_text_height);width:100%;color:var(--sapButton_TextColor);background-color:var(--sapList_Background);border:var(--_ui5-v2-14-0_load_more_border);border-radius:var(--_ui5-v2-14-0_load_more_border_radius);box-sizing:border-box}.ui5-growing-button-inner:focus-visible{outline:var(--_ui5-v2-14-0_load_more_outline_width) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);outline-offset:-.125rem;border-color:transparent}.ui5-growing-button-inner:hover{background-color:var(--sapList_Hover_Background)}.ui5-growing-button-inner:active,.ui5-growing-button-inner.ui5-growing-button-inner--active{background-color:var(--sapList_Active_Background);border-color:var(--sapList_Active_Background)}.ui5-growing-button-inner:active>*,.ui5-growing-button-inner.ui5-growing-button-inner--active>*{color:var(--sapList_Active_TextColor)}.ui5-growing-button-text{text-align:center;font-family:var(--sapFontFamily);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;box-sizing:border-box}.ui5-growing-button-text{height:var(--_ui5-v2-14-0_load_more_text_height);padding:.875rem 1rem 1rem;font-size:var(--_ui5-v2-14-0_load_more_text_font_size);font-weight:700}:host([loading]) .ui5-list-growing-button-busy-indicator:not([_is-busy]){display:none}:host([loading]) .ui5-list-growing-button-busy-indicator[_is-busy]+.ui5-growing-button-text{padding-left:.5rem}:host(:not([hidden])){display:block;max-width:100%;width:100%;-webkit-tap-highlight-color:transparent}:host([indent]) .ui5-list-root{padding:2rem}:host([separators="None"]) .ui5-list-nodata{border-bottom:0}.ui5-list-root,.ui5-list-busy-indicator{width:100%;height:100%;position:relative;box-sizing:border-box}.ui5-list-scroll-container{overflow:auto;height:100%;width:100%}.ui5-list-ul{list-style-type:none;padding:0;margin:0}.ui5-list-ul:focus{outline:none}.ui5-list-focusarea{position:fixed}.ui5-list-header{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;box-sizing:border-box;font-size:var(--sapFontHeader4Size);font-family:var(--sapFontFamily);color:var(--sapGroup_TitleTextColor);height:3rem;line-height:3rem;padding:0 1rem;background-color:var(--sapGroup_TitleBackground);border-bottom:1px solid var(--sapGroup_TitleBorderColor)}.ui5-list-footer{height:2rem;box-sizing:border-box;-webkit-text-size-adjust:none;font-size:var(--sapFontSize);font-family:var(--sapFontFamily);line-height:2rem;background-color:var(--sapList_FooterBackground);color:var(--ui5-v2-14-0_list_footer_text_color);padding:0 1rem;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ui5-list-nodata{list-style-type:none;display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-pack:center;justify-content:center;color:var(--sapTextColor);background-color:var(--sapList_Background);border-bottom:1px solid var(--sapList_BorderColor);padding:0 1rem!important;outline:none;min-height:var(--_ui5-v2-14-0_list_no_data_height);font-size:var(--_ui5-v2-14-0_list_no_data_font_size);font-family:var(--sapFontFamily);position:relative}.ui5-list-nodata:focus:after{content:"";border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);position:absolute;inset:.125rem;pointer-events:none}.ui5-list-nodata-text{overflow:hidden;text-overflow:ellipsis;white-space:normal;margin:var(--_ui5-v2-14-0_list_item_content_vertical_offset) 0}:host([growing="Scroll"]) .ui5-list-end-marker{display:inline-block}
`;
const r$2 = (e2) => {
  if (!e2 || e2.hasAttribute("data-sap-no-tab-ref") || i$4(e2)) return false;
  const t3 = e2.getAttribute("tabindex");
  if (t3 != null) return parseInt(t3) >= 0;
  const n2 = e2.nodeName.toLowerCase();
  return n2 === "a" || /^(input|select|textarea|button|object)$/.test(n2) ? !e2.disabled : false;
};
const b$1 = (t3) => a$3([...t3.children]), a$3 = (t3, n2) => {
  const l3 = n2 || [];
  return t3 && t3.forEach((r3) => {
    if (r3.nodeType === Node.TEXT_NODE || r3.nodeType === Node.COMMENT_NODE) return;
    const e2 = r3;
    if (!e2.hasAttribute("data-sap-no-tab-ref")) if (r$2(e2) && l3.push(e2), e2.tagName === "SLOT") a$3(e2.assignedNodes(), l3);
    else {
      const s2 = e2.shadowRoot ? e2.shadowRoot.children : e2.children;
      a$3([...s2], l3);
    }
  }), l3;
};
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const styles$1 = `:host{box-sizing:border-box;height:var(--_ui5-v2-14-0_list_item_base_height);background-color:var(--ui5-v2-14-0-listitem-background-color);border-bottom:.0625rem solid transparent}:host(:not([hidden])){display:block}:host([disabled]){opacity:var(--_ui5-v2-14-0-listitembase_disabled_opacity);pointer-events:none}:host([actionable]:not([disabled]):not([ui5-li-group-header])){cursor:pointer}:host([has-border]){border-bottom:var(--ui5-v2-14-0-listitem-border-bottom)}:host([selected]){background-color:var(--sapList_SelectionBackgroundColor);border-bottom:var(--ui5-v2-14-0-listitem-selected-border-bottom)}:host([selected]) .ui5-li-additional-text{text-shadow:var(--sapContent_TextShadow)}:host([actionable]:not([active]):not([selected]):not([ui5-li-group-header]):hover){background-color:var(--sapList_Hover_Background)}:host([actionable]:not([active]):not([selected]):not([ui5-li-group-header]):hover) .ui5-li-additional-text{text-shadow:var(--sapContent_TextShadow)}:host([actionable][selected]:not([active],[data-moving]):hover){background-color:var(--sapList_Hover_SelectionBackground)}:host([active][actionable]:not([data-moving])),:host([active][actionable][selected]:not([data-moving])){background-color:var(--sapList_Active_Background)}:host([desktop]:not([data-moving])) .ui5-li-root.ui5-li--focusable:focus:after,:host([desktop][focused]:not([data-moving])) .ui5-li-root.ui5-li--focusable:after,:host(:not([data-moving])) .ui5-li-root.ui5-li--focusable:focus-visible:after,:host([desktop]:not([data-moving])) .ui5-li-root .ui5-li-content:focus:after,:host([desktop][focused]:not([data-moving])) .ui5-li-root .ui5-li-content:after,:host(:not([data-moving])) .ui5-li-root .ui5-li-content:focus-visible:after{content:"";border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);position:absolute;inset:.125rem;pointer-events:none}.ui5-li-root{position:relative;display:flex;align-items:center;width:100%;height:100%;padding:var(--_ui5-v2-14-0_list_item_base_padding);box-sizing:border-box;background-color:inherit}.ui5-li-root.ui5-li--focusable{outline:none}.ui5-li-content{display:flex;align-items:center;flex:auto;overflow:hidden;max-width:100%;font-family:var(--sapFontFamily);color:var(--sapList_TextColor)}.ui5-li-content .ui5-li-title{color:var(--sapList_TextColor);font-size:var(--_ui5-v2-14-0_list_item_title_size)}.ui5-li-text-wrapper{display:flex;flex-direction:row;justify-content:space-between;flex:auto;min-width:1px;line-height:normal}
`;
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const draggableElementStyles = `[draggable=true]{cursor:grab!important}[draggable=true][data-moving]{cursor:grabbing!important;opacity:var(--sapContent_DisabledOpacity)}
`;
var __decorate$p = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
let ListItemBase = class ListItemBase2 extends b$6 {
  constructor() {
    super(...arguments);
    this.selected = false;
    this.movable = false;
    this.hasBorder = false;
    this.disabled = false;
    this.focused = false;
    this.actionable = false;
  }
  onEnterDOM() {
    if (f$i()) {
      this.setAttribute("desktop", "");
    }
  }
  onBeforeRendering() {
    this.actionable = true;
  }
  _onfocusin(e2) {
    this.fireDecoratorEvent("request-tabindex-change", e2);
    if (e2.target !== this.getFocusDomRef()) {
      return;
    }
    this.fireDecoratorEvent("_focused", e2);
  }
  _onkeydown(e2) {
    if (x(e2)) {
      return this._handleTabNext(e2);
    }
    if (V(e2)) {
      return this._handleTabPrevious(e2);
    }
    if (this.getFocusDomRef().matches(":has(:focus-within)")) {
      return;
    }
    if (this._isSpace(e2)) {
      e2.preventDefault();
    }
    if (this._isEnter(e2)) {
      this.fireItemPress(e2);
    }
  }
  _onkeyup(e2) {
    if (this.getFocusDomRef().matches(":has(:focus-within)")) {
      return;
    }
    if (this._isSpace(e2)) {
      this.fireItemPress(e2);
    }
  }
  _onclick(e2) {
    if (this.getFocusDomRef().matches(":has(:focus-within)")) {
      return;
    }
    this.fireItemPress(e2);
  }
  /**
   * Override from subcomponent, if needed
   */
  _isSpace(e2) {
    return A$2(e2);
  }
  /**
   * Override from subcomponent, if needed
   */
  _isEnter(e2) {
    return b$4(e2);
  }
  fireItemPress(e2) {
    if (this.disabled || !this._pressable) {
      return;
    }
    if (b$4(e2)) {
      e2.preventDefault();
    }
    this.fireDecoratorEvent("_press", { item: this, selected: this.selected, key: e2.key });
  }
  _handleTabNext(e2) {
    if (this.shouldForwardTabAfter()) {
      if (!this.fireDecoratorEvent("forward-after")) {
        e2.preventDefault();
      }
    }
  }
  _handleTabPrevious(e2) {
    const target = e2.target;
    if (this.shouldForwardTabBefore(target)) {
      this.fireDecoratorEvent("forward-before");
    }
  }
  /**
   * Determines if th current list item either has no tabbable content or
   * [Tab] is performed onto the last tabbale content item.
   */
  shouldForwardTabAfter() {
    const aContent = b$1(this.getFocusDomRef());
    return aContent.length === 0 || aContent[aContent.length - 1] === t$5();
  }
  /**
   * Determines if the current list item is target of [SHIFT+TAB].
   */
  shouldForwardTabBefore(target) {
    return this.getFocusDomRef() === target;
  }
  get classes() {
    return {
      main: {
        "ui5-li-root": true,
        "ui5-li--focusable": this._focusable
      }
    };
  }
  get _ariaDisabled() {
    return this.disabled ? true : void 0;
  }
  get _focusable() {
    return !this.disabled;
  }
  get _pressable() {
    return true;
  }
  get hasConfigurableMode() {
    return false;
  }
  get _effectiveTabIndex() {
    if (!this._focusable) {
      return -1;
    }
    if (this.selected) {
      return 0;
    }
    return this.forcedTabIndex ? parseInt(this.forcedTabIndex) : void 0;
  }
  get isListItemBase() {
    return true;
  }
};
__decorate$p([
  s$7({ type: Boolean })
], ListItemBase.prototype, "selected", void 0);
__decorate$p([
  s$7({ type: Boolean })
], ListItemBase.prototype, "movable", void 0);
__decorate$p([
  s$7({ type: Boolean })
], ListItemBase.prototype, "hasBorder", void 0);
__decorate$p([
  s$7()
], ListItemBase.prototype, "forcedTabIndex", void 0);
__decorate$p([
  s$7({ type: Boolean })
], ListItemBase.prototype, "disabled", void 0);
__decorate$p([
  s$7({ type: Boolean })
], ListItemBase.prototype, "focused", void 0);
__decorate$p([
  s$7({ type: Boolean })
], ListItemBase.prototype, "actionable", void 0);
ListItemBase = __decorate$p([
  m$7({
    renderer: y$4,
    styles: [styles$1, draggableElementStyles]
  }),
  l$b("request-tabindex-change", {
    bubbles: true
  }),
  l$b("_press", {
    bubbles: true
  }),
  l$b("_focused", {
    bubbles: true
  }),
  l$b("forward-after", {
    bubbles: true,
    cancelable: true
  }),
  l$b("forward-before", {
    bubbles: true
  })
], ListItemBase);
const ListItemBase$1 = ListItemBase;
var WrappingType;
(function(WrappingType2) {
  WrappingType2["None"] = "None";
  WrappingType2["Normal"] = "Normal";
})(WrappingType || (WrappingType = {}));
const WrappingType$1 = WrappingType;
function ListItemGroupHeaderTemplate() {
  return jsxs("div", { part: "native-li", role: this.effectiveAccRole, tabindex: this.forcedTabIndex ? parseInt(this.forcedTabIndex) : void 0, class: {
    "ui5-ghli-root": true,
    ...this.classes.main
  }, "aria-label": this.ariaLabelText, "aria-roledescription": this.groupHeaderText, onFocusIn: this._onfocusin, onKeyDown: this._onkeydown, children: [jsx("div", { id: `${this._id}-content`, class: "ui5-li-content", children: renderTitle.call(this) }), this.hasSubItems && jsx("slot", { name: "subItems" })] });
}
function renderTitle() {
  if (this.wrappingType === WrappingType$1.Normal) {
    return this.expandableTextTemplate?.call(this, {
      className: "ui5-ghli-title",
      text: this._textContent,
      maxCharacters: this._maxCharacters,
      part: "title"
    });
  }
  return jsx("span", { part: "title", class: "ui5-ghli-title", children: jsx("slot", {}) });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const ListItemGroupHeaderCss = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host{height:var(--_ui5-v2-14-0_group_header_list_item_height);background:var(--ui5-v2-14-0-group-header-listitem-background-color);color:var(--sapList_TableGroupHeaderTextColor)}:host([wrapping-type="Normal"]){height:auto}:host([has-border]){border-bottom:var(--sapList_BorderWidth) solid var(--sapList_GroupHeaderBorderColor)}:host([actionable]:not([disabled])){cursor:default}.ui5-li-root.ui5-ghli-root{padding-top:.5rem;color:currentColor;font-size:var(--sapFontHeader6Size);font-weight:400;line-height:2rem;margin:0}.ui5-ghli-title{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-weight:700;font-family:var(--sapFontHeaderFamily)}.ui5-li-content{width:100%}
`;
var ListItemAccessibleRole;
(function(ListItemAccessibleRole2) {
  ListItemAccessibleRole2["Group"] = "Group";
  ListItemAccessibleRole2["ListItem"] = "ListItem";
  ListItemAccessibleRole2["MenuItem"] = "MenuItem";
  ListItemAccessibleRole2["TreeItem"] = "TreeItem";
  ListItemAccessibleRole2["Option"] = "Option";
  ListItemAccessibleRole2["None"] = "None";
})(ListItemAccessibleRole || (ListItemAccessibleRole = {}));
const ListItemAccessibleRole$1 = ListItemAccessibleRole;
var __decorate$o = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var ListItemGroupHeader_1;
const MAX_CHARACTERS_SIZE_S = 100;
const MAX_CHARACTERS_SIZE_M = 300;
let ListItemGroupHeader = ListItemGroupHeader_1 = class ListItemGroupHeader2 extends ListItemBase$1 {
  constructor() {
    super(...arguments);
    this.accessibleRole = ListItemAccessibleRole$1.ListItem;
    this.wrappingType = "None";
    this.mediaRange = "S";
  }
  get effectiveAccRole() {
    return n$7(this.accessibleRole);
  }
  get groupItem() {
    return true;
  }
  get _pressable() {
    return false;
  }
  get groupHeaderText() {
    return ListItemGroupHeader_1.i18nBundle.getText(GROUP_HEADER_TEXT);
  }
  get defaultSlotText() {
    return this.textContent;
  }
  get ariaLabelText() {
    return [this.textContent, this.accessibleName].filter(Boolean).join(" ");
  }
  get hasSubItems() {
    return this.subItems.length > 0;
  }
  onBeforeRendering() {
    super.onBeforeRendering();
    if (this.wrappingType === "Normal") {
      if (ListItemGroupHeader_1.ExpandableTextTemplate) {
        this.expandableTextTemplate = ListItemGroupHeader_1.ExpandableTextTemplate;
      } else {
        __vitePreload(() => import("./ListItemStandardExpandableTextTemplate-BYju2UGK.js"), true ? [] : void 0, import.meta.url).then((module) => {
          this.expandableTextTemplate = module.default;
        });
      }
    }
  }
  /**
   * Determines the maximum characters to display based on the current media range.
   * - Size S: 100 characters
   * - Size M and larger: 300 characters
   * @private
   */
  get _maxCharacters() {
    return this.mediaRange === "S" ? MAX_CHARACTERS_SIZE_S : MAX_CHARACTERS_SIZE_M;
  }
  /**
   * Returns the content text, either from text property or from the default slot
   * @private
   */
  get _textContent() {
    return this.defaultSlotText || this.groupHeaderText || "";
  }
};
__decorate$o([
  s$7()
], ListItemGroupHeader.prototype, "accessibleName", void 0);
__decorate$o([
  s$7()
], ListItemGroupHeader.prototype, "accessibleRole", void 0);
__decorate$o([
  s$7()
], ListItemGroupHeader.prototype, "wrappingType", void 0);
__decorate$o([
  s$7()
], ListItemGroupHeader.prototype, "mediaRange", void 0);
__decorate$o([
  s$7({ noAttribute: true })
], ListItemGroupHeader.prototype, "expandableTextTemplate", void 0);
__decorate$o([
  d$4()
], ListItemGroupHeader.prototype, "subItems", void 0);
__decorate$o([
  i$8("@ui5/webcomponents")
], ListItemGroupHeader, "i18nBundle", void 0);
ListItemGroupHeader = ListItemGroupHeader_1 = __decorate$o([
  m$7({
    tag: "ui5-li-group-header",
    languageAware: true,
    template: ListItemGroupHeaderTemplate,
    styles: [ListItemBase$1.styles, ListItemGroupHeaderCss]
  })
], ListItemGroupHeader);
ListItemGroupHeader.define();
const ListItemGroupHeader$1 = ListItemGroupHeader;
function ListItemGroupTemplate() {
  return jsxs(Fragment, { children: [this.hasHeader && jsxs(ListItemGroupHeader$1, { wrappingType: this.wrappingType, focused: this.focused, part: "header", accessibleRole: ListItemAccessibleRole$1.ListItem, children: [this.hasFormattedHeader ? jsx("slot", { name: "header" }) : this.headerText, jsx("div", { role: "list", slot: "subItems", "aria-owns": `${this._id}-content`, "aria-label": this.headerText })] }), jsxs("div", { class: "ui5-group-li-root", onDragEnter: this._ondragenter, onDragOver: this._ondragover, onDrop: this._ondrop, onDragLeave: this._ondragleave, id: `${this._id}-content`, children: [jsx("slot", {}), jsx(DropIndicator$1, { orientation: "Horizontal", ownerReference: this })] })] });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const ListItemGroupCss = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host{height:var(--_ui5-v2-14-0_group_header_list_item_height);background:var(--ui5-v2-14-0-group-header-listitem-background-color);color:var(--sapList_TableGroupHeaderTextColor)}.ui5-group-li-root{width:100%;height:100%;position:relative;box-sizing:border-box;padding:0;margin:0;list-style-type:none}
`;
var __decorate$n = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
let ListItemGroup = class ListItemGroup2 extends b$6 {
  constructor() {
    super();
    this.wrappingType = "None";
    this.focused = false;
    this._dragAndDropHandler = new DragAndDropHandler(this, {
      getItems: () => this.items,
      getDropIndicator: () => this.dropIndicatorDOM,
      filterPlacements: this._filterPlacements.bind(this)
    });
  }
  get groupHeaderItem() {
    return this.shadowRoot.querySelector("[ui5-li-group-header]");
  }
  get hasHeader() {
    return !!this.headerText || this.hasFormattedHeader;
  }
  get hasFormattedHeader() {
    return !!this.header.length;
  }
  get isListItemGroup() {
    return true;
  }
  get dropIndicatorDOM() {
    return this.shadowRoot.querySelector("[ui5-drop-indicator]");
  }
  _ondragenter(e2) {
    this._dragAndDropHandler.ondragenter(e2);
  }
  _ondragleave(e2) {
    this._dragAndDropHandler.ondragleave(e2);
  }
  _ondragover(e2) {
    this._dragAndDropHandler.ondragover(e2);
  }
  _ondrop(e2) {
    this._dragAndDropHandler.ondrop(e2);
  }
  _filterPlacements(placements, draggedElement, targetElement) {
    if (targetElement === draggedElement) {
      return placements.filter((placement) => placement !== r$3.On);
    }
    return placements;
  }
  getFocusDomRef() {
    return this.groupHeaderItem || this.items.at(0);
  }
};
__decorate$n([
  s$7()
], ListItemGroup.prototype, "headerText", void 0);
__decorate$n([
  s$7()
], ListItemGroup.prototype, "headerAccessibleName", void 0);
__decorate$n([
  d$4({
    "default": true,
    invalidateOnChildChange: true,
    type: HTMLElement
  })
], ListItemGroup.prototype, "items", void 0);
__decorate$n([
  s$7()
], ListItemGroup.prototype, "wrappingType", void 0);
__decorate$n([
  s$7({ type: Boolean })
], ListItemGroup.prototype, "focused", void 0);
__decorate$n([
  d$4({ type: HTMLElement })
], ListItemGroup.prototype, "header", void 0);
ListItemGroup = __decorate$n([
  m$7({
    tag: "ui5-li-group",
    renderer: y$4,
    languageAware: true,
    template: ListItemGroupTemplate,
    styles: [ListItemGroupCss]
  }),
  l$b("move-over", {
    bubbles: true,
    cancelable: true
  }),
  l$b("move", {
    bubbles: true
  })
], ListItemGroup);
ListItemGroup.define();
const isInstanceOfListItemGroup = (object) => {
  return "isListItemGroup" in object;
};
const ListItemGroup$1 = ListItemGroup;
const findVerticalScrollContainer = (element) => {
  while (element) {
    const { overflowY } = window.getComputedStyle(element);
    if (overflowY === "auto" || overflowY === "scroll") {
      return element;
    }
    if (element.parentNode instanceof ShadowRoot) {
      element = element.parentNode.host;
    } else {
      element = element.parentElement;
    }
  }
  return document.scrollingElement || document.documentElement;
};
var __decorate$m = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var List_1;
const INFINITE_SCROLL_DEBOUNCE_RATE = 250;
const PAGE_UP_DOWN_SIZE$1 = 10;
let List = List_1 = class List2 extends b$6 {
  constructor() {
    super();
    this.indent = false;
    this.selectionMode = "None";
    this.separators = "All";
    this.growing = "None";
    this.loading = false;
    this.loadingDelay = 1e3;
    this.accessibilityAttributes = {};
    this.accessibleRole = "List";
    this._inViewport = false;
    this._loadMoreActive = false;
    this.mediaRange = "S";
    this._previouslyFocusedItem = null;
    this._forwardingFocus = false;
    this.listEndObserved = false;
    this._itemNavigation = new f$1(this, {
      skipItemsSize: PAGE_UP_DOWN_SIZE$1,
      // PAGE_UP and PAGE_DOWN will skip trough 10 items
      navigationMode: r$4.Vertical,
      getItemsCallback: () => this.getEnabledItems()
    });
    this._handleResizeCallback = this._handleResize.bind(this);
    this.initialIntersection = true;
    this._groupCount = 0;
    this._groupItemCount = 0;
    this.onItemFocusedBound = this.onItemFocused.bind(this);
    this.onForwardAfterBound = this.onForwardAfter.bind(this);
    this.onForwardBeforeBound = this.onForwardBefore.bind(this);
    this.onItemTabIndexChangeBound = this.onItemTabIndexChange.bind(this);
    this._dragAndDropHandler = new DragAndDropHandler(this, {
      getItems: () => this.items,
      getDropIndicator: () => this.dropIndicatorDOM,
      useOriginalEvent: true
    });
  }
  /**
   * Returns an array containing the list item instances without the groups in a flat structure.
   * @default []
   * @since 2.0.0
   * @public
   */
  get listItems() {
    return this.getItems();
  }
  _updateAssociatedLabelsTexts() {
    this._associatedDescriptionRefTexts = p$2(this);
    this._associatedLabelsRefTexts = E$1(this);
  }
  onEnterDOM() {
    y$3(this, this._updateAssociatedLabelsTexts.bind(this));
    f$3.register(this.getDomRef(), this._handleResizeCallback);
  }
  onExitDOM() {
    T$2(this);
    this.unobserveListEnd();
    f$3.deregister(this.getDomRef(), this._handleResizeCallback);
  }
  onBeforeRendering() {
    this.detachGroupHeaderEvents();
    this.prepareListItems();
  }
  onAfterRendering() {
    this.attachGroupHeaderEvents();
    if (this.growsOnScroll) {
      this.observeListEnd();
    } else if (this.listEndObserved) {
      this.unobserveListEnd();
    }
    if (this.grows) {
      this.checkListInViewport();
    }
  }
  attachGroupHeaderEvents() {
    this.getItems().forEach((item) => {
      if (item.hasAttribute("ui5-li-group-header")) {
        item.addEventListener("ui5-_focused", this.onItemFocusedBound);
        item.addEventListener("ui5-forward-after", this.onForwardAfterBound);
        item.addEventListener("ui5-forward-before", this.onForwardBeforeBound);
      }
    });
  }
  detachGroupHeaderEvents() {
    this.getItems().forEach((item) => {
      if (item.hasAttribute("ui5-li-group-header")) {
        item.removeEventListener("ui5-_focused", this.onItemFocusedBound);
        item.removeEventListener("ui5-forward-after", this.onForwardAfterBound);
        item.removeEventListener("ui5-forward-before", this.onForwardBeforeBound);
      }
    });
  }
  getFocusDomRef() {
    return this._itemNavigation._getCurrentItem();
  }
  get shouldRenderH1() {
    return !this.header.length && this.headerText;
  }
  get headerID() {
    return `${this._id}-header`;
  }
  get modeLabelID() {
    return `${this._id}-modeLabel`;
  }
  get listEndDOM() {
    return this.shadowRoot.querySelector(".ui5-list-end-marker");
  }
  get dropIndicatorDOM() {
    return this.shadowRoot.querySelector("[ui5-drop-indicator]");
  }
  get hasData() {
    return this.getItems().length !== 0;
  }
  get showBusyIndicatorOverlay() {
    return !this.growsWithButton && this.loading;
  }
  get showNoDataText() {
    return !this.hasData && this.noDataText;
  }
  get isDelete() {
    return this.selectionMode === ListSelectionMode.Delete;
  }
  get isSingleSelect() {
    return [
      ListSelectionMode.Single,
      ListSelectionMode.SingleStart,
      ListSelectionMode.SingleEnd,
      ListSelectionMode.SingleAuto
    ].includes(this.selectionMode);
  }
  get isMultiple() {
    return this.selectionMode === ListSelectionMode.Multiple;
  }
  get ariaLabelledBy() {
    if (this.accessibleNameRef || this.accessibleName) {
      return void 0;
    }
    const ids = [];
    if (this.isMultiple || this.isSingleSelect || this.isDelete) {
      ids.push(this.modeLabelID);
    }
    if (this.shouldRenderH1) {
      ids.push(this.headerID);
    }
    return ids.length ? ids.join(" ") : void 0;
  }
  get ariaLabelTxt() {
    return this._associatedLabelsRefTexts || A$3(this);
  }
  get ariaDescriptionText() {
    return this._associatedDescriptionRefTexts || L$2(this) || this._getDescriptionForGroups();
  }
  get growingButtonAriaLabel() {
    return this.accessibilityAttributes.growingButton?.name;
  }
  get growingButtonAriaLabelledBy() {
    return this.accessibilityAttributes.growingButton?.name ? void 0 : `${this._id}-growingButton-text`;
  }
  get scrollContainer() {
    return this.shadowRoot.querySelector(".ui5-list-scroll-container");
  }
  hasGrowingComponent() {
    if (this.growsOnScroll && this.scrollContainer) {
      return this.scrollContainer.clientHeight !== this.scrollContainer.scrollHeight;
    }
    return this.growsWithButton;
  }
  _getDescriptionForGroups() {
    let description = "";
    if (this._groupCount > 0) {
      if (this.accessibleRole === ListAccessibleRole.List) {
        description = List_1.i18nBundle.getText(LIST_ROLE_LIST_GROUP_DESCRIPTION, this._groupCount, this._groupItemCount);
      } else if (this.accessibleRole === ListAccessibleRole.ListBox) {
        description = List_1.i18nBundle.getText(LIST_ROLE_LISTBOX_GROUP_DESCRIPTION, this._groupCount);
      }
    }
    return description;
  }
  get ariaLabelModeText() {
    if (this.hasData) {
      if (this.isMultiple) {
        return List_1.i18nBundle.getText(ARIA_LABEL_LIST_MULTISELECTABLE);
      }
      if (this.isSingleSelect) {
        return List_1.i18nBundle.getText(ARIA_LABEL_LIST_SELECTABLE);
      }
      if (this.isDelete) {
        return List_1.i18nBundle.getText(ARIA_LABEL_LIST_DELETABLE);
      }
    }
    return "";
  }
  get grows() {
    return this.growing !== ListGrowingMode.None;
  }
  get growsOnScroll() {
    return this.growing === ListGrowingMode.Scroll;
  }
  get growsWithButton() {
    return this.growing === ListGrowingMode.Button;
  }
  get _growingButtonText() {
    return this.growingButtonText || List_1.i18nBundle.getText(LOAD_MORE_TEXT);
  }
  get listAccessibleRole() {
    return n$7(this.accessibleRole);
  }
  get classes() {
    return {
      root: {
        "ui5-list-root": true
      }
    };
  }
  prepareListItems() {
    const slottedItems = this.getItemsForProcessing();
    slottedItems.forEach((item, key) => {
      const isLastChild = key === slottedItems.length - 1;
      const showBottomBorder = this.separators === ListSeparator.All || this.separators === ListSeparator.Inner && !isLastChild;
      if (item.hasConfigurableMode) {
        item._selectionMode = this.selectionMode;
      }
      item.hasBorder = showBottomBorder;
      item.mediaRange = this.mediaRange;
    });
  }
  async observeListEnd() {
    if (!this.listEndObserved) {
      await f$h();
      this.getIntersectionObserver().observe(this.listEndDOM);
      this.listEndObserved = true;
    }
  }
  unobserveListEnd() {
    if (this.growingIntersectionObserver) {
      this.growingIntersectionObserver.disconnect();
      this.growingIntersectionObserver = null;
      this.listEndObserved = false;
    }
  }
  onInteresection(entries) {
    if (this.initialIntersection) {
      this.initialIntersection = false;
      return;
    }
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        u$1(this.loadMore.bind(this), INFINITE_SCROLL_DEBOUNCE_RATE);
      }
    });
  }
  /*
  * ITEM SELECTION BASED ON THE CURRENT MODE
  */
  onSelectionRequested(e2) {
    const previouslySelectedItems = this.getSelectedItems();
    let selectionChange = false;
    if (this.selectionMode !== ListSelectionMode.None && this[`handle${this.selectionMode}`]) {
      selectionChange = this[`handle${this.selectionMode}`](e2.detail.item, !!e2.detail.selected);
    }
    if (selectionChange) {
      const changePrevented = !this.fireDecoratorEvent("selection-change", {
        selectedItems: this.getSelectedItems(),
        previouslySelectedItems,
        selectionComponentPressed: e2.detail.selectionComponentPressed,
        targetItem: e2.detail.item,
        key: e2.detail.key
      });
      if (changePrevented) {
        this._revertSelection(previouslySelectedItems);
      }
    }
  }
  handleSingle(item) {
    if (item.selected) {
      return false;
    }
    this.deselectSelectedItems();
    item.selected = true;
    return true;
  }
  handleSingleStart(item) {
    return this.handleSingle(item);
  }
  handleSingleEnd(item) {
    return this.handleSingle(item);
  }
  handleSingleAuto(item) {
    return this.handleSingle(item);
  }
  handleMultiple(item, selected) {
    item.selected = selected;
    return true;
  }
  handleDelete(item) {
    this.fireDecoratorEvent("item-delete", { item });
    return true;
  }
  deselectSelectedItems() {
    this.getSelectedItems().forEach((item) => {
      item.selected = false;
    });
  }
  getSelectedItems() {
    return this.getItems().filter((item) => item.selected);
  }
  getEnabledItems() {
    return this.getItems().filter((item) => item._focusable);
  }
  getItems() {
    const items = [];
    const slottedItems = this.getSlottedNodes("items");
    let groupCount = 0;
    let groupItemCount = 0;
    slottedItems.forEach((item) => {
      if (isInstanceOfListItemGroup(item)) {
        const groupItems = [item.groupHeaderItem, ...item.items.filter((listItem) => listItem.assignedSlot)].filter(Boolean);
        items.push(...groupItems);
        groupCount++;
        groupItemCount += groupItems.length - 1;
      } else {
        item.assignedSlot && items.push(item);
      }
    });
    this._groupCount = groupCount;
    this._groupItemCount = groupItemCount;
    return items;
  }
  getItemsForProcessing() {
    return this.getItems();
  }
  _revertSelection(previouslySelectedItems) {
    this.getItems().forEach((item) => {
      const oldSelection = previouslySelectedItems.indexOf(item) !== -1;
      const multiSelectCheckBox = item.shadowRoot.querySelector(".ui5-li-multisel-cb");
      const singleSelectRadioButton = item.shadowRoot.querySelector(".ui5-li-singlesel-radiobtn");
      item.selected = oldSelection;
      if (multiSelectCheckBox) {
        multiSelectCheckBox.checked = oldSelection;
      } else if (singleSelectRadioButton) {
        singleSelectRadioButton.checked = oldSelection;
      }
    });
  }
  _onkeydown(e2) {
    if (n$a(e2)) {
      this._handleEnd();
      e2.preventDefault();
      return;
    }
    if (M2(e2)) {
      this._handleHome();
      return;
    }
    if (_(e2)) {
      this._handleDown();
      e2.preventDefault();
      return;
    }
    if (C(e2)) {
      this._moveItem(e2.target, e2);
      return;
    }
    if (x(e2)) {
      this._handleTabNext(e2);
    }
  }
  _moveItem(item, e2) {
    if (!item || !item.movable) {
      return;
    }
    const closestPositions = k2(this.items, item, e2);
    if (!closestPositions.length) {
      return;
    }
    e2.preventDefault();
    const acceptedPosition = closestPositions.find(({ element, placement }) => {
      return !this.fireDecoratorEvent("move-over", {
        originalEvent: e2,
        source: {
          element: item
        },
        destination: {
          element,
          placement
        }
      });
    });
    if (acceptedPosition) {
      this.fireDecoratorEvent("move", {
        originalEvent: e2,
        source: {
          element: item
        },
        destination: {
          element: acceptedPosition.element,
          placement: acceptedPosition.placement
        }
      });
      item.focus();
    }
  }
  _onLoadMoreKeydown(e2) {
    if (A$2(e2)) {
      e2.preventDefault();
      this._loadMoreActive = true;
    }
    if (b$4(e2)) {
      this._onLoadMoreClick();
      this._loadMoreActive = true;
    }
    if (x(e2)) {
      this.focusAfterElement();
    }
    if (P$1(e2)) {
      this._handleLodeMoreUp(e2);
      return;
    }
    if (V(e2)) {
      if (this.getPreviouslyFocusedItem()) {
        this.focusPreviouslyFocusedItem();
      } else {
        this.focusFirstItem();
      }
      e2.preventDefault();
    }
  }
  _onLoadMoreKeyup(e2) {
    if (A$2(e2)) {
      this._onLoadMoreClick();
    }
    this._loadMoreActive = false;
  }
  _onLoadMoreMousedown() {
    this._loadMoreActive = true;
  }
  _onLoadMoreMouseup() {
    this._loadMoreActive = false;
  }
  _onLoadMoreClick() {
    this.loadMore();
  }
  _handleLodeMoreUp(e2) {
    const growingButton = this.getGrowingButton();
    if (growingButton === e2.target) {
      const items = this.getItems();
      const lastItem = items[items.length - 1];
      this.focusItem(lastItem);
      e2.preventDefault();
      e2.stopImmediatePropagation();
    }
  }
  checkListInViewport() {
    this._inViewport = n$3(this.getDomRef());
  }
  loadMore() {
    if (this.hasGrowingComponent()) {
      this.fireDecoratorEvent("load-more");
    }
  }
  _handleResize() {
    this.checkListInViewport();
    const width = this.getBoundingClientRect().width;
    this.mediaRange = i$q.getCurrentRange(i$q.RANGESETS.RANGE_4STEPS, width);
  }
  /*
  * KEYBOARD SUPPORT
  */
  _handleTabNext(e2) {
    t$4(e2.target);
    {
      return;
    }
  }
  _handleHome() {
    if (!this.growsWithButton) {
      return;
    }
    this.focusFirstItem();
  }
  _handleEnd() {
    if (!this.growsWithButton) {
      return;
    }
    this._shouldFocusGrowingButton();
  }
  _handleDown() {
    if (!this.growsWithButton) {
      return;
    }
    this._shouldFocusGrowingButton();
  }
  _onfocusin(e2) {
    const target = t$4(e2.target);
    if (!this.isForwardElement(target)) {
      return;
    }
    if (!this.getPreviouslyFocusedItem()) {
      if (this.growsWithButton && this.isForwardAfterElement(target)) {
        this.focusGrowingButton();
      } else {
        this.focusFirstItem();
      }
      e2.stopImmediatePropagation();
      return;
    }
    if (!this.getForwardingFocus()) {
      if (this.growsWithButton && this.isForwardAfterElement(target)) {
        this.focusGrowingButton();
        e2.stopImmediatePropagation();
        return;
      }
      this.focusPreviouslyFocusedItem();
    }
    e2.stopImmediatePropagation();
    this.setForwardingFocus(false);
  }
  _ondragenter(e2) {
    this._dragAndDropHandler.ondragenter(e2);
  }
  _ondragleave(e2) {
    this._dragAndDropHandler.ondragleave(e2);
  }
  _ondragover(e2) {
    this._dragAndDropHandler.ondragover(e2);
  }
  _ondrop(e2) {
    this._dragAndDropHandler.ondrop(e2);
  }
  isForwardElement(element) {
    const elementId = element.id;
    const beforeElement = this.getBeforeElement();
    if (this._id === elementId || beforeElement && beforeElement.id === elementId) {
      return true;
    }
    return this.isForwardAfterElement(element);
  }
  isForwardAfterElement(element) {
    const elementId = element.id;
    const afterElement = this.getAfterElement();
    return afterElement && afterElement.id === elementId;
  }
  onItemTabIndexChange(e2) {
    e2.stopPropagation();
    const target = e2.target;
    this._itemNavigation.setCurrentItem(target);
  }
  onItemFocused(e2) {
    const target = e2.target;
    e2.stopPropagation();
    this._itemNavigation.setCurrentItem(target);
    this.fireDecoratorEvent("item-focused", { item: target });
    if (this.selectionMode === ListSelectionMode.SingleAuto) {
      const detail = {
        item: target,
        selectionComponentPressed: false,
        selected: true,
        key: e2.detail.key
      };
      this.onSelectionRequested({ detail });
    }
  }
  onItemPress(e2) {
    const pressedItem = e2.detail.item;
    if (!this.fireDecoratorEvent("item-click", { item: pressedItem })) {
      return;
    }
    if (this.selectionMode !== ListSelectionMode.Delete) {
      const detail = {
        item: pressedItem,
        selectionComponentPressed: false,
        selected: !pressedItem.selected,
        key: e2.detail.key
      };
      this.onSelectionRequested({ detail });
    }
  }
  // This is applicable to NotificationListItem
  onItemClose(e2) {
    const target = e2.target;
    const shouldFireItemClose = target?.hasAttribute("ui5-li-notification") || target?.hasAttribute("ui5-li-notification-group");
    if (shouldFireItemClose) {
      this.fireDecoratorEvent("item-close", { item: e2.detail?.item });
    }
  }
  onItemToggle(e2) {
    if (!e2.target?.isListItemBase) {
      return;
    }
    this.fireDecoratorEvent("item-toggle", { item: e2.detail.item });
  }
  onForwardBefore(e2) {
    this.setPreviouslyFocusedItem(e2.target);
    this.focusBeforeElement();
    e2.stopPropagation();
  }
  onForwardAfter(e2) {
    this.setPreviouslyFocusedItem(e2.target);
    if (!this.growsWithButton) {
      this.focusAfterElement();
    } else {
      this.focusGrowingButton();
      e2.preventDefault();
    }
    e2.stopPropagation();
  }
  focusBeforeElement() {
    this.setForwardingFocus(true);
    this.getBeforeElement().focus();
  }
  focusAfterElement() {
    this.setForwardingFocus(true);
    this.getAfterElement().focus();
  }
  focusGrowingButton() {
    const growingBtn = this.getGrowingButton();
    if (growingBtn) {
      growingBtn.focus();
    }
  }
  _shouldFocusGrowingButton() {
    const items = this.getItems();
    const lastIndex = items.length - 1;
    const currentIndex = this._itemNavigation._currentIndex;
    if (currentIndex !== -1 && currentIndex === lastIndex) {
      this.focusGrowingButton();
    }
  }
  getGrowingButton() {
    return this.shadowRoot.querySelector(`[id="${this._id}-growing-btn"]`);
  }
  /**
   * Focuses the first list item and sets its tabindex to "0" via the ItemNavigation
   * @protected
   */
  focusFirstItem() {
    const firstItem = this.getFirstItem((x2) => x2._focusable);
    if (firstItem) {
      firstItem.focus();
    }
  }
  focusPreviouslyFocusedItem() {
    const previouslyFocusedItem = this.getPreviouslyFocusedItem();
    if (previouslyFocusedItem) {
      previouslyFocusedItem.focus();
    }
  }
  focusFirstSelectedItem() {
    const firstSelectedItem = this.getFirstItem((x2) => x2.selected && x2._focusable);
    if (firstSelectedItem) {
      firstSelectedItem.focus();
    }
  }
  /**
   * Focuses a list item and sets its tabindex to "0" via the ItemNavigation
   * @protected
   * @param item
   */
  focusItem(item) {
    this._itemNavigation.setCurrentItem(item);
    item.focus();
  }
  onFocusRequested(e2) {
    setTimeout(() => {
      this.setPreviouslyFocusedItem(e2.target);
      this.focusPreviouslyFocusedItem();
    }, 0);
  }
  setForwardingFocus(forwardingFocus) {
    this._forwardingFocus = forwardingFocus;
  }
  getForwardingFocus() {
    return this._forwardingFocus;
  }
  setPreviouslyFocusedItem(item) {
    this._previouslyFocusedItem = item;
  }
  getPreviouslyFocusedItem() {
    return this._previouslyFocusedItem;
  }
  getFirstItem(filter2) {
    const slottedItems = this.getItems();
    let firstItem = null;
    if (!filter2) {
      return slottedItems.length ? slottedItems[0] : null;
    }
    for (let i3 = 0; i3 < slottedItems.length; i3++) {
      if (filter2(slottedItems[i3])) {
        firstItem = slottedItems[i3];
        break;
      }
    }
    return firstItem;
  }
  getAfterElement() {
    if (!this._afterElement) {
      this._afterElement = this.shadowRoot.querySelector(`[id="${this._id}-after"]`);
    }
    return this._afterElement;
  }
  getBeforeElement() {
    if (!this._beforeElement) {
      this._beforeElement = this.shadowRoot.querySelector(`[id="${this._id}-before"]`);
    }
    return this._beforeElement;
  }
  getIntersectionObserver() {
    if (!this.growingIntersectionObserver) {
      const scrollContainer = this.scrollContainer || findVerticalScrollContainer(this.getDomRef());
      this.growingIntersectionObserver = new IntersectionObserver(this.onInteresection.bind(this), {
        root: scrollContainer,
        rootMargin: "5px",
        threshold: 1
      });
    }
    return this.growingIntersectionObserver;
  }
};
__decorate$m([
  s$7()
], List.prototype, "headerText", void 0);
__decorate$m([
  s$7()
], List.prototype, "footerText", void 0);
__decorate$m([
  s$7({ type: Boolean })
], List.prototype, "indent", void 0);
__decorate$m([
  s$7()
], List.prototype, "selectionMode", void 0);
__decorate$m([
  s$7()
], List.prototype, "noDataText", void 0);
__decorate$m([
  s$7()
], List.prototype, "separators", void 0);
__decorate$m([
  s$7()
], List.prototype, "growing", void 0);
__decorate$m([
  s$7()
], List.prototype, "growingButtonText", void 0);
__decorate$m([
  s$7({ type: Boolean })
], List.prototype, "loading", void 0);
__decorate$m([
  s$7({ type: Number })
], List.prototype, "loadingDelay", void 0);
__decorate$m([
  s$7()
], List.prototype, "accessibleName", void 0);
__decorate$m([
  s$7({ type: Object })
], List.prototype, "accessibilityAttributes", void 0);
__decorate$m([
  s$7()
], List.prototype, "accessibleNameRef", void 0);
__decorate$m([
  s$7()
], List.prototype, "accessibleDescription", void 0);
__decorate$m([
  s$7()
], List.prototype, "accessibleDescriptionRef", void 0);
__decorate$m([
  s$7({ noAttribute: true })
], List.prototype, "_associatedDescriptionRefTexts", void 0);
__decorate$m([
  s$7({ noAttribute: true })
], List.prototype, "_associatedLabelsRefTexts", void 0);
__decorate$m([
  s$7()
], List.prototype, "accessibleRole", void 0);
__decorate$m([
  s$7({ type: Boolean })
], List.prototype, "_inViewport", void 0);
__decorate$m([
  s$7({ type: Boolean })
], List.prototype, "_loadMoreActive", void 0);
__decorate$m([
  s$7()
], List.prototype, "mediaRange", void 0);
__decorate$m([
  d$4({
    type: HTMLElement,
    "default": true,
    invalidateOnChildChange: true
  })
], List.prototype, "items", void 0);
__decorate$m([
  d$4()
], List.prototype, "header", void 0);
__decorate$m([
  i$8("@ui5/webcomponents")
], List, "i18nBundle", void 0);
List = List_1 = __decorate$m([
  m$7({
    tag: "ui5-list",
    fastNavigation: true,
    renderer: y$4,
    template: ListTemplate,
    styles: [
      listCss
    ]
  }),
  l$b("item-click", {
    bubbles: true,
    cancelable: true
  }),
  l$b("item-close", {
    bubbles: true
  }),
  l$b("item-toggle", {
    bubbles: true
  }),
  l$b("item-delete", {
    bubbles: true
  }),
  l$b("selection-change", {
    bubbles: true,
    cancelable: true
  }),
  l$b("load-more", {
    bubbles: true
  }),
  l$b("item-focused", {
    bubbles: true
  }),
  l$b("move-over", {
    bubbles: true,
    cancelable: true
  }),
  l$b("move", {
    bubbles: true
  })
], List);
List.define();
const name$p = "edit";
const pathData$p = "M475 104q5 7 5 12 0 6-5 11L150 453q-4 4-8 4L32 480l22-110q0-5 4-9L384 36q4-4 11-4t11 4zm-121 99l-46-45L84 381l46 46zm87-88l-46-44-64 64 45 45z";
const ltr$p = false;
const collection$p = "SAP-icons-v4";
const packageName$p = "@ui5/webcomponents-icons";
y$1(name$p, { pathData: pathData$p, ltr: ltr$p, collection: collection$p, packageName: packageName$p });
const name$o = "edit";
const pathData$o = "M505 94q7 7 7 18t-6 17L130 505q-7 7-18 7H26q-11 0-18.5-7.5T0 486v-86q1-10 6-16L382 7q7-7 18-7t18 7zm-55 18l-50-50-50 50 50 50zm-86 86l-50-50L62 400l50 50z";
const ltr$o = false;
const collection$o = "SAP-icons-v5";
const packageName$o = "@ui5/webcomponents-icons";
y$1(name$o, { pathData: pathData$o, ltr: ltr$o, collection: collection$o, packageName: packageName$o });
const edit = "edit";
var Highlight;
(function(Highlight2) {
  Highlight2["None"] = "None";
  Highlight2["Positive"] = "Positive";
  Highlight2["Critical"] = "Critical";
  Highlight2["Negative"] = "Negative";
  Highlight2["Information"] = "Information";
})(Highlight || (Highlight = {}));
const Highlight$1 = Highlight;
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const styles = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host([navigated]) .ui5-li-root .ui5-li-navigated{width:.1875rem;position:absolute;right:0;top:0;bottom:0;background-color:var(--sapList_SelectionBorderColor)}:host([active][actionable]) .ui5-li-root .ui5-li-icon{color:var(--sapList_Active_TextColor)}:host([active][actionable]) .ui5-li-title,:host([active][actionable]) .ui5-li-desc,:host([active][actionable]) .ui5-li-additional-text{color:var(--sapList_Active_TextColor)}:host([active][actionable]) .ui5-li-additional-text{text-shadow:none}:host([additional-text-state="Critical"]) .ui5-li-additional-text{color:var(--sapCriticalTextColor)}:host([additional-text-state="Positive"]) .ui5-li-additional-text{color:var(--sapPositiveTextColor)}:host([additional-text-state="Negative"]) .ui5-li-additional-text{color:var(--sapNegativeTextColor)}:host([additional-text-state="Information"]) .ui5-li-additional-text{color:var(--sapInformativeTextColor)}:host([has-title][description]){height:5rem}:host([has-title][image]){height:5rem}:host([_has-image]){height:5rem}:host([image]) .ui5-li-content{height:3rem}::slotted(img[slot="image"]){width:var(--_ui5-v2-14-0_list_item_img_size);height:var(--_ui5-v2-14-0_list_item_img_size);border-radius:var(--ui5-v2-14-0-avatar-border-radius);object-fit:contain}::slotted([ui5-icon][slot="image"]){color:var(--sapContent_NonInteractiveIconColor);min-width:var(--_ui5-v2-14-0_list_item_icon_size);min-height:var(--_ui5-v2-14-0_list_item_icon_size);padding-inline-end:var(--_ui5-v2-14-0_list_item_icon_padding-inline-end)}::slotted([ui5-avatar][slot="image"]){min-width:var(--_ui5-v2-14-0_list_item_img_size);min-height:var(--_ui5-v2-14-0_list_item_img_size);margin-top:var(--_ui5-v2-14-0_list_item_img_top_margin);margin-bottom:var(--_ui5-v2-14-0_list_item_img_bottom_margin);margin-inline-end:var(--_ui5-v2-14-0_list_item_img_hn_margin)}:host([wrapping-type="None"][description]) .ui5-li-root{padding:1rem}:host([description]) .ui5-li-content{height:3rem}:host([has-title][description]) .ui5-li-title{padding-bottom:.5rem}.ui5-li-text-wrapper{flex-direction:column}:host([description]) .ui5-li-text-wrapper{justify-content:space-between;padding:.125rem 0}.ui5-li-description-info-wrapper{display:flex;justify-content:space-between}.ui5-li-additional-text,:host(:not([wrapping-type="Normal"])) .ui5-li-title,.ui5-li-desc{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}:host([wrapping-type="Normal"]){height:auto}:host([wrapping-type="Normal"]) .ui5-li-content{margin:var(--_ui5-v2-14-0_list_item_content_vertical_offset) 0}.ui5-li-desc{color:var(--sapContent_LabelColor);font-size:var(--sapFontSize)}:host([description]) .ui5-li-additional-text{align-self:flex-end}.ui5-li-icon{min-width:var(--_ui5-v2-14-0_list_item_icon_size);min-height:var(--_ui5-v2-14-0_list_item_icon_size);color:var(--sapContent_NonInteractiveIconColor);padding-inline-end:var(--_ui5-v2-14-0_list_item_icon_padding-inline-end)}:host([icon-end]) .ui5-li-icon{padding-inline-start:var(--_ui5-v2-14-0_list_item_icon_padding-inline-end)}.ui5-li-detailbtn,.ui5-li-deletebtn{display:flex;align-items:center;margin-left:var(--_ui5-v2-14-0_list_buttons_left_space)}.ui5-li-multisel-cb,.ui5-li-singlesel-radiobtn{flex-shrink:0}:host([description]) .ui5-li-singlesel-radiobtn{align-self:flex-start;margin-top:var(--_ui5-v2-14-0_list_item_selection_btn_margin_top)}:host([description]) .ui5-li-multisel-cb{align-self:flex-start;margin-top:var(--_ui5-v2-14-0_list_item_selection_btn_margin_top)}:host([_selection-mode="SingleStart"][wrapping-type]) .ui5-li-root{padding-inline:0 1rem}:host([_selection-mode="Multiple"][wrapping-type]) .ui5-li-root{padding-inline:0 1rem}:host([_selection-mode="SingleEnd"][wrapping-type]) .ui5-li-root{padding-inline:1rem 0}:host [ui5-checkbox].ui5-li-singlesel-radiobtn{margin-right:var(--_ui5-v2-14-0_list_item_cb_margin_right)}.ui5-li-highlight{position:absolute;width:.375rem;bottom:0;left:0;top:0;border-inline-end:.0625rem solid var(--ui5-v2-14-0-listitem-background-color);box-sizing:border-box}:host([highlight="Negative"]) .ui5-li-highlight{background:var(--sapNegativeTextColor)}:host([highlight="Critical"]) .ui5-li-highlight{background:var(--sapCriticalTextColor)}:host([highlight="Positive"]) .ui5-li-highlight{background:var(--sapPositiveTextColor)}:host([highlight="Information"]) .ui5-li-highlight{background:var(--sapInformativeTextColor)}:host([wrapping-type="Normal"][description]),:host([wrapping-type="Normal"][has-title][description]),:host([wrapping-type="Normal"][has-title][image]){height:auto;min-height:5rem}:host([wrapping-type="Normal"][description]) .ui5-li-content,:host([wrapping-type="Normal"][image]) .ui5-li-content{height:auto;min-height:3rem}:host([wrapping-type="Normal"][has-title][description]) .ui5-li-title{padding-bottom:.75rem}:host([wrapping-type="Normal"][additional-text]) .ui5-li-additional-text{padding-inline-start:.75rem}:host([wrapping-type="Normal"]) .ui5-li-description-info-wrapper{flex-direction:column}:host([wrapping-type="Normal"]) .ui5-li-description-info-wrapper .ui5-li-additional-text{white-space:normal}:host([wrapping-type="Normal"]) .ui5-li-multisel-cb,:host([wrapping-type="Normal"]) .ui5-li-singlesel-radiobtn{display:flex;align-self:flex-start}:host([wrapping-type="Normal"][description]) .ui5-li-multisel-cb,:host([wrapping-type="Normal"][description]) .ui5-li-singlesel-radiobtn{margin-top:0}:host([wrapping-type="Normal"]) .ui5-li-icon,:host([wrapping-type="Normal"]) .ui5-li-image{display:flex;align-self:flex-start}:host([wrapping-type="Normal"][icon-end]) .ui5-li-icon{margin-top:var(--_ui5-v2-14-0_list_item_content_vertical_offset)}:host([wrapping-type="Normal"]) ::slotted([ui5-avatar][slot="image"]){margin-top:0;margin-bottom:0}:host([wrapping-type="Normal"]) .ui5-li-detailbtn,:host([wrapping-type="Normal"]) .ui5-li-deletebtn{margin-inline-start:.875rem}
`;
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const listItemAdditionalTextCss = `.ui5-li-additional-text{margin:0 .25rem;color:var(--sapNeutralTextColor);font-size:var(--sapFontSize);min-width:3.75rem;text-align:end;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}
`;
const name$n = "slim-arrow-right";
const pathData$n = "M357.5 233q10 10 10 23t-10 23l-165 165q-12 11-23 0t0-23l160-159q6-6 0-12l-159-159q-5-5-5-11t5-11 11-5 11 5z";
const ltr$n = false;
const collection$n = "SAP-icons-v4";
const packageName$n = "@ui5/webcomponents-icons";
y$1(name$n, { pathData: pathData$n, ltr: ltr$n, collection: collection$n, packageName: packageName$n });
const name$m = "slim-arrow-right";
const pathData$m = "M186 416q-11 0-18.5-7.5T160 390q0-10 8-18l121-116-121-116q-8-8-8-18 0-11 7.5-18.5T186 96q10 0 17 7l141 134q8 8 8 19 0 12-8 18L203 409q-7 7-17 7z";
const ltr$m = false;
const collection$m = "SAP-icons-v5";
const packageName$m = "@ui5/webcomponents-icons";
y$1(name$m, { pathData: pathData$m, ltr: ltr$m, collection: collection$m, packageName: packageName$m });
const iconArrowRight = "slim-arrow-right";
var __decorate$l = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var ListItem_1;
let ListItem = ListItem_1 = class ListItem2 extends ListItemBase$1 {
  constructor() {
    super();
    this.type = "Active";
    this.accessibilityAttributes = {};
    this.navigated = false;
    this.active = false;
    this.highlight = "None";
    this.accessibleRole = "ListItem";
    this._selectionMode = "None";
    this.mediaRange = "S";
    this.deactivateByKey = (e2) => {
      if (b$4(e2)) {
        this.deactivate();
      }
    };
    this.deactivate = () => {
      if (this.active) {
        this.active = false;
      }
    };
  }
  onBeforeRendering() {
    super.onBeforeRendering();
    this.actionable = (this.type === ListItemType$1.Active || this.type === ListItemType$1.Navigation) && this._selectionMode !== ListSelectionMode.Delete;
  }
  onEnterDOM() {
    super.onEnterDOM();
    document.addEventListener("mouseup", this.deactivate);
    document.addEventListener("touchend", this.deactivate);
    document.addEventListener("keyup", this.deactivateByKey);
  }
  onExitDOM() {
    document.removeEventListener("mouseup", this.deactivate);
    document.removeEventListener("keyup", this.deactivateByKey);
    document.removeEventListener("touchend", this.deactivate);
  }
  async _onkeydown(e2) {
    if ((A$2(e2) || b$4(e2)) && this._isTargetSelfFocusDomRef(e2)) {
      return;
    }
    super._onkeydown(e2);
    const itemActive = this.type === ListItemType$1.Active, itemNavigated = this.typeNavigation;
    if ((A$2(e2) || b$4(e2)) && (itemActive || itemNavigated)) {
      this.activate();
    }
    if (ro(e2)) {
      const activeElement = t$5();
      const focusDomRef = this.getFocusDomRef();
      if (activeElement === focusDomRef) {
        const firstFocusable = await b$3(focusDomRef);
        firstFocusable?.focus();
      } else {
        focusDomRef.focus();
      }
    }
  }
  _onkeyup(e2) {
    super._onkeyup(e2);
    if (A$2(e2) || b$4(e2)) {
      this.deactivate();
    }
    if (this.modeDelete && X(e2)) {
      this.onDelete();
    }
  }
  _onmousedown() {
    this.activate();
  }
  _onmouseup() {
    if (this.getFocusDomRef().matches(":has(:focus-within)")) {
      return;
    }
    this.deactivate();
  }
  _ontouchend() {
    this._onmouseup();
  }
  _onfocusin(e2) {
    super._onfocusin(e2);
    if (e2.target !== this.getFocusDomRef()) {
      this.deactivate();
    }
  }
  _onfocusout(e2) {
    if (e2.target !== this.getFocusDomRef()) {
      return;
    }
    this.deactivate();
  }
  _ondragstart(e2) {
    if (!e2.dataTransfer) {
      return;
    }
    if (e2.target === this._listItem) {
      D$1.setDraggedElement(this);
      this.setAttribute("data-moving", "");
      e2.dataTransfer.dropEffect = "move";
      e2.dataTransfer.effectAllowed = "move";
    }
  }
  _ondragend(e2) {
    if (e2.target === this._listItem) {
      D$1.clearDraggedElement();
      this.removeAttribute("data-moving");
    }
  }
  _isTargetSelfFocusDomRef(e2) {
    const target = e2.target, focusDomRef = this.getFocusDomRef();
    return target !== focusDomRef;
  }
  /**
   * Called when selection components in Single (ui5-radio-button)
   * and Multi (ui5-checkbox) selection modes are used.
   */
  onMultiSelectionComponentPress(e2) {
    if (this.isInactive) {
      return;
    }
    this.fireDecoratorEvent("selection-requested", { item: this, selected: e2.target.checked, selectionComponentPressed: true });
  }
  onSingleSelectionComponentPress(e2) {
    if (this.isInactive) {
      return;
    }
    this.fireDecoratorEvent("selection-requested", { item: this, selected: !e2.target.checked, selectionComponentPressed: true });
  }
  activate() {
    if (this.type === ListItemType$1.Active || this.type === ListItemType$1.Navigation) {
      this.active = true;
    }
  }
  onDelete() {
    this.fireDecoratorEvent("selection-requested", { item: this, selectionComponentPressed: false });
  }
  onDetailClick() {
    this.fireDecoratorEvent("detail-click", { item: this, selected: this.selected });
  }
  fireItemPress(e2) {
    if (this.isInactive) {
      return;
    }
    super.fireItemPress(e2);
    if (document.activeElement !== this) {
      this.focus();
    }
  }
  get isInactive() {
    return this.type === ListItemType$1.Inactive || this.type === ListItemType$1.Detail;
  }
  get placeSelectionElementBefore() {
    return this._selectionMode === ListSelectionMode.Multiple || this._selectionMode === ListSelectionMode.SingleStart;
  }
  get placeSelectionElementAfter() {
    return !this.placeSelectionElementBefore && (this._selectionMode === ListSelectionMode.SingleEnd || this._selectionMode === ListSelectionMode.Delete);
  }
  get modeSingleSelect() {
    return [
      ListSelectionMode.SingleStart,
      ListSelectionMode.SingleEnd,
      ListSelectionMode.Single
    ].includes(this._selectionMode);
  }
  get modeMultiple() {
    return this._selectionMode === ListSelectionMode.Multiple;
  }
  get modeDelete() {
    return this._selectionMode === ListSelectionMode.Delete;
  }
  get typeDetail() {
    return this.type === ListItemType$1.Detail;
  }
  get typeNavigation() {
    return this.type === ListItemType$1.Navigation;
  }
  get typeActive() {
    return this.type === ListItemType$1.Active;
  }
  get _ariaSelected() {
    if (this.modeMultiple || this.modeSingleSelect) {
      return this.selected;
    }
    return void 0;
  }
  get listItemAccessibleRole() {
    return this._forcedAccessibleRole || this.accessibleRole.toLowerCase();
  }
  get ariaSelectedText() {
    let ariaSelectedText;
    if (this._ariaSelected !== void 0) {
      ariaSelectedText = this._ariaSelected ? ListItem_1.i18nBundle.getText(LIST_ITEM_SELECTED) : ListItem_1.i18nBundle.getText(LIST_ITEM_NOT_SELECTED);
    }
    return ariaSelectedText;
  }
  get deleteText() {
    return ListItem_1.i18nBundle.getText(DELETE);
  }
  get hasDeleteButtonSlot() {
    return !!this.deleteButton.length;
  }
  get _accessibleNameRef() {
    if (this.accessibleName) {
      return `${this._id}-invisibleText`;
    }
    return `${this._id}-content ${this._id}-invisibleText`;
  }
  get ariaLabelledByText() {
    const texts = [
      this._accInfo.listItemAriaLabel,
      this.accessibleName,
      this.typeActive ? ListItem_1.i18nBundle.getText(LIST_ITEM_ACTIVE) : void 0
    ].filter(Boolean);
    return texts.join(" ");
  }
  get _accInfo() {
    return {
      role: this.listItemAccessibleRole,
      ariaExpanded: void 0,
      ariaLevel: void 0,
      ariaLabel: ListItem_1.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_CHECKBOX),
      ariaLabelRadioButton: ListItem_1.i18nBundle.getText(ARIA_LABEL_LIST_ITEM_RADIO_BUTTON),
      ariaSelectedText: this.ariaSelectedText,
      ariaHaspopup: this.accessibilityAttributes.hasPopup,
      setsize: this.accessibilityAttributes.ariaSetsize,
      posinset: this.accessibilityAttributes.ariaPosinset,
      tooltip: this.tooltip
    };
  }
  get _hasHighlightColor() {
    return this.highlight !== Highlight$1.None;
  }
  get hasConfigurableMode() {
    return true;
  }
  get _listItem() {
    return this.shadowRoot.querySelector("li");
  }
};
__decorate$l([
  s$7()
], ListItem.prototype, "type", void 0);
__decorate$l([
  s$7({ type: Object })
], ListItem.prototype, "accessibilityAttributes", void 0);
__decorate$l([
  s$7({ type: Boolean })
], ListItem.prototype, "navigated", void 0);
__decorate$l([
  s$7()
], ListItem.prototype, "tooltip", void 0);
__decorate$l([
  s$7({ type: Boolean })
], ListItem.prototype, "active", void 0);
__decorate$l([
  s$7()
], ListItem.prototype, "highlight", void 0);
__decorate$l([
  s$7({ type: Boolean })
], ListItem.prototype, "selected", void 0);
__decorate$l([
  s$7()
], ListItem.prototype, "accessibleRole", void 0);
__decorate$l([
  s$7()
], ListItem.prototype, "_forcedAccessibleRole", void 0);
__decorate$l([
  s$7()
], ListItem.prototype, "_selectionMode", void 0);
__decorate$l([
  s$7()
], ListItem.prototype, "mediaRange", void 0);
__decorate$l([
  d$4()
], ListItem.prototype, "deleteButton", void 0);
__decorate$l([
  i$8("@ui5/webcomponents")
], ListItem, "i18nBundle", void 0);
ListItem = ListItem_1 = __decorate$l([
  m$7({
    languageAware: true,
    renderer: y$4,
    styles: [
      ListItemBase$1.styles,
      listItemAdditionalTextCss,
      styles
    ]
  }),
  l$b("detail-click", {
    bubbles: true
  }),
  l$b("selection-requested", {
    bubbles: true
  })
], ListItem);
const ListItem$1 = ListItem;
class RadioButtonGroup {
  static hasGroup(groupName) {
    return this.groups.has(groupName);
  }
  static getGroup(groupName) {
    return this.groups.get(groupName);
  }
  static getCheckedRadioFromGroup(groupName) {
    return this.checkedRadios.get(groupName);
  }
  static removeGroup(groupName) {
    this.checkedRadios.delete(groupName);
    return this.groups.delete(groupName);
  }
  static addToGroup(radioBtn, groupName) {
    if (this.hasGroup(groupName)) {
      this.enforceSingleSelection(radioBtn, groupName);
      if (this.getGroup(groupName)) {
        this.getGroup(groupName).push(radioBtn);
      }
    } else {
      this.createGroup(radioBtn, groupName);
    }
    this.updateTabOrder(groupName);
  }
  static removeFromGroup(radioBtn, groupName) {
    const group = this.getGroup(groupName);
    if (!group) {
      return;
    }
    const checkedRadio = this.getCheckedRadioFromGroup(groupName);
    group.forEach((_radioBtn, idx, arr) => {
      if (radioBtn._id === _radioBtn._id) {
        return arr.splice(idx, 1);
      }
    });
    if (checkedRadio === radioBtn) {
      this.checkedRadios.set(groupName, null);
    }
    if (!group.length) {
      this.removeGroup(groupName);
    }
    this.updateTabOrder(groupName);
  }
  static createGroup(radioBtn, groupName) {
    if (radioBtn.checked) {
      this.checkedRadios.set(groupName, radioBtn);
    }
    this.groups.set(groupName, [radioBtn]);
  }
  static selectNextItem(item, groupName) {
    const group = this.getGroup(groupName);
    if (!group) {
      return;
    }
    const groupLength = group.length, currentItemPosition = group.indexOf(item);
    if (groupLength <= 1) {
      return;
    }
    const nextItemToFocus = this._nextFocusable(currentItemPosition, group);
    if (!nextItemToFocus) {
      return;
    }
    this.updateSelectionInGroup(nextItemToFocus, groupName);
  }
  static updateFormValidity(groupName) {
    const group = this.getGroup(groupName);
    if (!group) {
      return;
    }
    const hasRequired = group.some((r3) => r3.required);
    const hasChecked = group.some((r3) => r3.checked);
    group.forEach((r3) => {
      r3._groupChecked = hasChecked;
      r3._groupRequired = hasRequired;
    });
  }
  static updateTabOrder(groupName) {
    const group = this.getGroup(groupName);
    if (!group) {
      return;
    }
    const hasCheckedRadio = group.some((radioBtn) => radioBtn.checked);
    group.filter((radioBtn) => !radioBtn.disabled).forEach((radioBtn, idx) => {
      let activeElement = t$5();
      if (activeElement?.classList.contains("ui5-radio-root")) {
        activeElement = activeElement.getRootNode();
        if (activeElement instanceof ShadowRoot) {
          activeElement = activeElement.host;
        }
      }
      if (hasCheckedRadio) {
        if (activeElement?.hasAttribute("ui5-radio-button") && activeElement.readonly) {
          radioBtn._tabIndex = activeElement === radioBtn && radioBtn.readonly ? 0 : -1;
        } else {
          radioBtn._tabIndex = radioBtn.checked ? 0 : -1;
        }
      } else {
        radioBtn._tabIndex = idx === 0 ? 0 : -1;
      }
    });
  }
  static selectPreviousItem(item, groupName) {
    const group = this.getGroup(groupName);
    if (!group) {
      return;
    }
    const groupLength = group.length, currentItemPosition = group.indexOf(item);
    if (groupLength <= 1) {
      return;
    }
    const previousItemToFocus = this._previousFocusable(currentItemPosition, group);
    if (!previousItemToFocus) {
      return;
    }
    this.updateSelectionInGroup(previousItemToFocus, groupName);
  }
  static selectItem(item, groupName) {
    this.updateSelectionInGroup(item, groupName);
    this.updateTabOrder(groupName);
    this.updateFormValidity(groupName);
  }
  static updateSelectionInGroup(radioBtnToSelect, groupName) {
    const checkedRadio = this.getCheckedRadioFromGroup(groupName);
    if (checkedRadio && !radioBtnToSelect.readonly) {
      this._deselectRadio(checkedRadio);
      this.checkedRadios.set(groupName, radioBtnToSelect);
    }
    if (radioBtnToSelect) {
      radioBtnToSelect.focus();
      if (!radioBtnToSelect.readonly) {
        this._selectRadio(radioBtnToSelect);
      } else {
        setTimeout(() => {
          this.updateTabOrder(groupName);
        }, 0);
      }
    }
  }
  static _deselectRadio(radioBtn) {
    if (radioBtn) {
      radioBtn.checked = false;
    }
  }
  static _selectRadio(radioBtn) {
    radioBtn.checked = true;
    radioBtn._checked = true;
    radioBtn.fireDecoratorEvent("change");
  }
  static _nextFocusable(pos, group) {
    if (!group) {
      return null;
    }
    const groupLength = group.length;
    let nextRadioToFocus = null;
    if (pos === groupLength - 1) {
      if (group[0].disabled) {
        return this._nextFocusable(1, group);
      }
      nextRadioToFocus = group[0];
    } else if (group[pos + 1].disabled) {
      return this._nextFocusable(pos + 1, group);
    } else {
      nextRadioToFocus = group[pos + 1];
    }
    return nextRadioToFocus;
  }
  static _previousFocusable(pos, group) {
    const groupLength = group.length;
    let previousRadioToFocus = null;
    if (pos === 0) {
      if (group[groupLength - 1].disabled) {
        return this._previousFocusable(groupLength - 1, group);
      }
      previousRadioToFocus = group[groupLength - 1];
    } else if (group[pos - 1].disabled) {
      return this._previousFocusable(pos - 1, group);
    } else {
      previousRadioToFocus = group[pos - 1];
    }
    return previousRadioToFocus;
  }
  static enforceSingleSelection(radioBtn, groupName) {
    const checkedRadio = this.getCheckedRadioFromGroup(groupName);
    if (radioBtn.checked) {
      if (!checkedRadio) {
        this.checkedRadios.set(groupName, radioBtn);
      } else if (radioBtn !== checkedRadio) {
        this._deselectRadio(checkedRadio);
        this.checkedRadios.set(groupName, radioBtn);
      }
    } else if (radioBtn === checkedRadio) {
      this.checkedRadios.set(groupName, null);
    }
    this.updateTabOrder(groupName);
    this.updateFormValidity(groupName);
  }
  static get groups() {
    if (!this._groups) {
      this._groups = /* @__PURE__ */ new Map();
    }
    return this._groups;
  }
  static get checkedRadios() {
    if (!this._checkedRadios) {
      this._checkedRadios = /* @__PURE__ */ new Map();
    }
    return this._checkedRadios;
  }
}
function RadioButtonTemplate() {
  return jsxs("div", { role: "radio", class: "ui5-radio-root", "aria-checked": this.checked, "aria-disabled": this.effectiveAriaDisabled, "aria-describedby": this.effectiveAriaDescribedBy, "aria-label": this.ariaLabelText, tabindex: this.effectiveTabIndex, onClick: this._onclick, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onMouseDown: this._onmousedown, onMouseUp: this._onmouseup, onFocusOut: this._onfocusout, children: [jsxs("div", { class: {
    "ui5-radio-inner": true,
    "ui5-radio-inner--hoverable": !this.disabled && !this.readonly && f$i()
  }, children: [jsxs("svg", { class: "ui5-radio-svg", focusable: "false", "aria-hidden": "true", children: [jsx("circle", { part: "outer-ring", class: "ui5-radio-svg-outer", cx: "50%", cy: "50%", r: "50%" }), jsx("circle", { part: "inner-ring", class: "ui5-radio-svg-inner", cx: "50%", cy: "50%" })] }), jsx("input", { type: "radio", required: this.required, checked: this.checked, readonly: this.readonly, disabled: this.disabled, name: this.name, "data-sap-no-tab-ref": true })] }), this.text && jsx(Label$2, { id: `${this._id}-label`, class: "ui5-radio-label", for: this._id, wrappingType: this.wrappingType, children: this.text }), this.hasValueState && jsx("span", { id: `${this._id}-descr`, class: "ui5-hidden-text", children: this.valueStateText })] });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const radioButtonCss = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:inline-block}:host{min-width:var(--_ui5-v2-14-0_radio_button_min_width);max-width:100%;text-overflow:ellipsis;overflow:hidden;color:var(--_ui5-v2-14-0_radio_button_color);border-radius:var(--_ui5-v2-14-0_radio_button_border_radius)}:host(:not([disabled])) .ui5-radio-root{cursor:pointer}:host([checked]){color:var(--_ui5-v2-14-0_radio_button_checked_fill)}:host([checked]) .ui5-radio-svg-inner{fill:var(--_ui5-v2-14-0_radio_button_inner_ring_color)}:host([checked]) .ui5-radio-svg-outer{stroke:var(--_ui5-v2-14-0_radio_button_outer_ring_color)}:host([disabled]) .ui5-radio-root{color:var(--_ui5-v2-14-0_radio_button_color);opacity:var(--sapContent_DisabledOpacity)}:host([disabled][checked]) .ui5-radio-svg-outer{stroke:var(--_ui5-v2-14-0_radio_button_color)}:host(:not([disabled])[desktop]) .ui5-radio-root:focus:before,:host(:not([disabled])) .ui5-radio-root:focus-visible:before{content:"";display:var(--_ui5-v2-14-0_radio_button_focus_outline);position:absolute;inset:var(--_ui5-v2-14-0_radio_button_focus_dist);pointer-events:none;border:var(--_ui5-v2-14-0_radio_button_border_width) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);border-radius:var(--_ui5-v2-14-0_radio_button_border_radius)}:host(:not([value-state="Negative"]):not([value-state="Critical"]):not([value-state="Positive"]):not([value-state="Information"])) .ui5-radio-root:hover .ui5-radio-inner--hoverable .ui5-radio-svg-outer{stroke:var(--_ui5-v2-14-0_radio_button_outer_ring_hover_color)}:host(:not([value-state="Negative"]):not([value-state="Critical"]):not([value-state="Positive"]):not([value-state="Information"])[checked]) .ui5-radio-root:hover .ui5-radio-inner--hoverable .ui5-radio-svg-outer{stroke:var(--_ui5-v2-14-0_radio_button_outer_ring_checked_hover_color)}.ui5-radio-root:hover .ui5-radio-inner--hoverable .ui5-radio-svg-outer,:host([checked]) .ui5-radio-root:hover .ui5-radio-inner--hoverable .ui5-radio-svg-outer{fill:var(--_ui5-v2-14-0_radio_button_hover_fill)}:host([active][checked]:not([value-state]):not([disabled]):not([readonly])) .ui5-radio-svg-outer{stroke:var(--_ui5-v2-14-0_radio_button_outer_ring_checked_hover_color)}:host([active]:not([checked]):not([value-state]):not([disabled]):not([readonly])) .ui5-radio-svg-outer{stroke:var(--_ui5-v2-14-0_radio_button_outer_ring_active_color)}:host([text]) .ui5-radio-root{padding-inline-end:var(--_ui5-v2-14-0_radio_button_border_width)}:host([text][desktop]) .ui5-radio-root:focus:before,:host([text]) .ui5-radio-root:focus-visible:before{inset-inline-end:0px}:host([text]) .ui5-radio-inner{padding:var(--_ui5-v2-14-0_radio_button_outer_ring_padding_with_label)}:host([checked][readonly]) .ui5-radio-svg-inner{fill:var(--_ui5-v2-14-0_radio_button_read_only_inner_ring_color)}:host([readonly]) .ui5-radio-root .ui5-radio-svg-outer{fill:var(--sapField_ReadOnly_Background);stroke:var(--sapField_ReadOnly_BorderColor);stroke-dasharray:var(--_ui5-v2-14-0_radio_button_read_only_border_type);stroke-width:var(--_ui5-v2-14-0_radio_button_read_only_border_width)}:host([value-state="Negative"]) .ui5-radio-svg-outer,:host([value-state="Critical"]) .ui5-radio-svg-outer{stroke-width:var(--sapField_InvalidBorderWidth)}:host([value-state="Information"]) .ui5-radio-svg-outer{stroke-width:var(--_ui5-v2-14-0_radio_button_information_border_width)}:host([value-state="Negative"][checked]) .ui5-radio-svg-inner{fill:var(--_ui5-v2-14-0_radio_button_checked_error_fill)}:host([value-state="Negative"]) .ui5-radio-svg-outer,:host([value-state="Negative"]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable:hover .ui5-radio-svg-outer{stroke:var(--sapField_InvalidColor);fill:var(--sapField_InvalidBackground)}:host([value-state="Negative"]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable .ui5-radio-svg-outer{fill:var(--_ui5-v2-14-0_radio_button_hover_fill_error)}:host([value-state="Critical"][checked]) .ui5-radio-svg-inner{fill:var(--_ui5-v2-14-0_radio_button_checked_warning_fill)}:host([value-state="Critical"]) .ui5-radio-svg-outer,:host([value-state="Critical"]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable:hover .ui5-radio-svg-outer{stroke:var(--sapField_WarningColor);fill:var(--sapField_WarningBackground)}:host([value-state="Critical"]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable .ui5-radio-svg-outer{fill:var(--_ui5-v2-14-0_radio_button_hover_fill_warning)}:host([value-state="Positive"][checked]) .ui5-radio-svg-inner{fill:var(--_ui5-v2-14-0_radio_button_checked_success_fill)}:host([value-state="Positive"]) .ui5-radio-svg-outer,:host([value-state="Positive"]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable:hover .ui5-radio-svg-outer{stroke:var(--sapField_SuccessColor);fill:var(--sapField_SuccessBackground)}:host([value-state="Positive"]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable .ui5-radio-svg-outer{fill:var(--_ui5-v2-14-0_radio_button_hover_fill_success)}:host([value-state="Information"][checked]) .ui5-radio-svg-inner{fill:var(--_ui5-v2-14-0_radio_button_checked_information_fill)}:host([value-state="Information"]) .ui5-radio-svg-outer,:host([value-state="Information"]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable:hover .ui5-radio-svg-outer{stroke:var(--sapField_InformationColor);fill:var(--sapField_InformationBackground)}:host([value-state="Information"]) .ui5-radio-root:hover .ui5-radio-inner.ui5-radio-inner--hoverable .ui5-radio-svg-outer{fill:var(--_ui5-v2-14-0_radio_button_hover_fill_information)}:host([value-state="Negative"]) .ui5-radio-root,:host([value-state="Critical"]) .ui5-radio-root,:host([value-state="Information"]) .ui5-radio-root{stroke-dasharray:var(--_ui5-v2-14-0_radio_button_warning_error_border_dash)}.ui5-radio-root{height:auto;position:relative;display:inline-flex;flex-wrap:nowrap;outline:none;max-width:100%;box-sizing:border-box;border:var(--_ui5-v2-14-0_radio_button_border);border-radius:var(--_ui5-v2-14-0_radio_button_border_radius)}.ui5-radio-inner{display:flex;align-items:center;padding:var(--_ui5-v2-14-0_radio_button_outer_ring_padding);flex-shrink:0;height:var(--_ui5-v2-14-0_radio_button_inner_size);font-size:1rem;pointer-events:none;vertical-align:top}.ui5-radio-inner{outline:none}.ui5-radio-inner input{-webkit-appearance:none;visibility:hidden;width:0;left:0;position:absolute;font-size:inherit;margin:0}[ui5-label].ui5-radio-label{display:flex;align-items:center;padding-inline-end:var(--_ui5-v2-14-0_radio_button_label_offset);padding-block:var(--_ui5-v2-14-0_radio_button_label_side_padding);vertical-align:top;max-width:100%;pointer-events:none;color:var(--_ui5-v2-14-0_radio_button_label_color);overflow-wrap:break-word}:host([wrapping-type="None"][text]) .ui5-radio-root{height:var(--_ui5-v2-14-0_radio_button_height)}:host([wrapping-type="None"][text]) [ui5-label].ui5-radio-label{text-overflow:ellipsis;overflow:hidden}.ui5-radio-svg{height:var(--_ui5-v2-14-0_radio_button_svg_size);width:var(--_ui5-v2-14-0_radio_button_svg_size);overflow:visible;pointer-events:none}.ui5-radio-svg-outer{fill:var(--_ui5-v2-14-0_radio_button_outer_ring_bg);stroke:currentColor;stroke-width:var(--_ui5-v2-14-0_radio_button_outer_ring_width)}.ui5-radio-svg-inner{fill:none;r:var(--_ui5-v2-14-0_radio_button_inner_ring_radius)}.ui5-radio-svg-outer,.ui5-radio-svg-inner{flex-shrink:0}:host(.ui5-li-singlesel-radiobtn) .ui5-radio-root .ui5-radio-inner .ui5-radio-svg-outer{fill:var(--sapList_Background)}
`;
var __decorate$k = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var RadioButton_1;
let isGlobalHandlerAttached = false;
let activeRadio;
let RadioButton = RadioButton_1 = class RadioButton2 extends b$6 {
  get formValidityMessage() {
    return RadioButton_1.i18nBundle.getText(FORM_SELECTABLE_REQUIRED2);
  }
  get formValidity() {
    return { valueMissing: this._groupRequired && !this._groupChecked };
  }
  async formElementAnchor() {
    return this.getFocusDomRefAsync();
  }
  get formFormattedValue() {
    return this.checked ? this.value || "on" : null;
  }
  constructor() {
    super();
    this.disabled = false;
    this.readonly = false;
    this.required = false;
    this.checked = false;
    this.valueState = "None";
    this.value = "";
    this.wrappingType = "Normal";
    this.active = false;
    this._groupChecked = false;
    this._groupRequired = false;
    this._name = "";
    this._checked = false;
    this._deactivate = () => {
      if (activeRadio) {
        activeRadio.active = false;
      }
    };
    if (!isGlobalHandlerAttached) {
      document.addEventListener("mouseup", this._deactivate);
      isGlobalHandlerAttached = true;
    }
  }
  onAfterRendering() {
    this.syncGroup();
  }
  onEnterDOM() {
    if (f$i()) {
      this.setAttribute("desktop", "");
    }
  }
  onExitDOM() {
    this.syncGroup(true);
  }
  syncGroup(forceRemove) {
    const oldGroup = this._name;
    const currentGroup = this.name;
    const oldChecked = this._checked;
    const currentChecked = this.checked;
    if (forceRemove) {
      RadioButtonGroup.removeFromGroup(this, oldGroup);
    }
    if (currentGroup !== oldGroup) {
      if (oldGroup) {
        RadioButtonGroup.removeFromGroup(this, oldGroup);
      }
      if (currentGroup) {
        RadioButtonGroup.addToGroup(this, currentGroup);
      }
    } else if (currentGroup && this.isConnected) {
      RadioButtonGroup.enforceSingleSelection(this, currentGroup);
    }
    if (this.name && currentChecked !== oldChecked) {
      RadioButtonGroup.updateTabOrder(this.name);
    }
    this._name = this.name || "";
    this._checked = this.checked;
  }
  _onclick() {
    return this.toggle();
  }
  _handleDown(e2) {
    const currentGroup = this.name;
    if (!currentGroup) {
      return;
    }
    e2.preventDefault();
    RadioButtonGroup.selectNextItem(this, currentGroup);
  }
  _handleUp(e2) {
    const currentGroup = this.name;
    if (!currentGroup) {
      return;
    }
    e2.preventDefault();
    RadioButtonGroup.selectPreviousItem(this, currentGroup);
  }
  _onkeydown(e2) {
    if (A$2(e2)) {
      this.active = true;
      return e2.preventDefault();
    }
    if (b$4(e2)) {
      this.active = true;
      return this.toggle();
    }
    const isRTL = this.effectiveDir === "rtl";
    if (_(e2) || !isRTL && R2(e2) || isRTL && D$3(e2)) {
      this._handleDown(e2);
    }
    if (P$1(e2) || !isRTL && D$3(e2) || isRTL && R2(e2)) {
      this._handleUp(e2);
    }
  }
  _onkeyup(e2) {
    if (A$2(e2)) {
      this.toggle();
    }
    this.active = false;
  }
  _onmousedown() {
    this.active = true;
    activeRadio = this;
  }
  _onmouseup() {
    this.active = false;
  }
  _onfocusout() {
    this.active = false;
  }
  toggle() {
    if (!this.canToggle()) {
      return this;
    }
    if (!this.name) {
      this.checked = !this.checked;
      this.fireDecoratorEvent("change");
      return this;
    }
    RadioButtonGroup.selectItem(this, this.name);
    return this;
  }
  canToggle() {
    return !(this.disabled || this.readonly || this.checked);
  }
  get effectiveAriaDisabled() {
    return this.disabled || this.readonly ? true : void 0;
  }
  get ariaLabelText() {
    return [A$3(this), this.text].filter(Boolean).join(" ");
  }
  get effectiveAriaDescribedBy() {
    return this.hasValueState ? `${this._id}-descr` : void 0;
  }
  get hasValueState() {
    return this.valueState !== o$4.None;
  }
  get valueStateText() {
    switch (this.valueState) {
      case o$4.Negative:
        return RadioButton_1.i18nBundle.getText(VALUE_STATE_ERROR);
      case o$4.Critical:
        return RadioButton_1.i18nBundle.getText(VALUE_STATE_WARNING);
      case o$4.Positive:
        return RadioButton_1.i18nBundle.getText(VALUE_STATE_SUCCESS);
      case o$4.Information:
        return RadioButton_1.i18nBundle.getText(VALUE_STATE_INFORMATION);
      default:
        return "";
    }
  }
  get effectiveTabIndex() {
    const tabindex = this.getAttribute("tabindex");
    if (this.disabled) {
      return -1;
    }
    if (this.name) {
      return this._tabIndex;
    }
    return tabindex ? parseInt(tabindex) : 0;
  }
};
__decorate$k([
  s$7({ type: Boolean })
], RadioButton.prototype, "disabled", void 0);
__decorate$k([
  s$7({ type: Boolean })
], RadioButton.prototype, "readonly", void 0);
__decorate$k([
  s$7({ type: Boolean })
], RadioButton.prototype, "required", void 0);
__decorate$k([
  s$7({ type: Boolean })
], RadioButton.prototype, "checked", void 0);
__decorate$k([
  s$7()
], RadioButton.prototype, "text", void 0);
__decorate$k([
  s$7()
], RadioButton.prototype, "valueState", void 0);
__decorate$k([
  s$7()
], RadioButton.prototype, "name", void 0);
__decorate$k([
  s$7()
], RadioButton.prototype, "value", void 0);
__decorate$k([
  s$7()
], RadioButton.prototype, "wrappingType", void 0);
__decorate$k([
  s$7()
], RadioButton.prototype, "accessibleName", void 0);
__decorate$k([
  s$7()
], RadioButton.prototype, "accessibleNameRef", void 0);
__decorate$k([
  s$7({ type: Number })
], RadioButton.prototype, "_tabIndex", void 0);
__decorate$k([
  s$7({ type: Boolean })
], RadioButton.prototype, "active", void 0);
__decorate$k([
  s$7({ type: Boolean, noAttribute: true })
], RadioButton.prototype, "_groupChecked", void 0);
__decorate$k([
  s$7({ type: Boolean, noAttribute: true })
], RadioButton.prototype, "_groupRequired", void 0);
__decorate$k([
  i$8("@ui5/webcomponents")
], RadioButton, "i18nBundle", void 0);
RadioButton = RadioButton_1 = __decorate$k([
  m$7({
    tag: "ui5-radio-button",
    languageAware: true,
    formAssociated: true,
    renderer: y$4,
    template: RadioButtonTemplate,
    styles: radioButtonCss
  }),
  l$b("change", {
    bubbles: true
  })
], RadioButton);
RadioButton.define();
const RadioButton$1 = RadioButton;
const predefinedHooks$1 = {
  listItemPreContent,
  listItemContent: listItemContent$1,
  imageBegin,
  iconBegin,
  iconEnd,
  selectionElement
};
function ListItemTemplate(hooks) {
  const currentHooks = { ...predefinedHooks$1, ...hooks };
  return jsxs("li", { part: "native-li", "data-sap-focus-ref": true, tabindex: this._effectiveTabIndex, class: this.classes.main, onFocusIn: this._onfocusin, onFocusOut: this._onfocusout, onKeyUp: this._onkeyup, onKeyDown: this._onkeydown, onMouseUp: this._onmouseup, onMouseDown: this._onmousedown, onTouchStart: this._onmousedown, onTouchEnd: this._ontouchend, onClick: this._onclick, draggable: this.movable, onDragStart: this._ondragstart, onDragEnd: this._ondragend, role: this._accInfo.role, title: this._accInfo.tooltip, "aria-expanded": this._accInfo.ariaExpanded, "aria-level": this._accInfo.ariaLevel, "aria-haspopup": this._accInfo.ariaHaspopup, "aria-posinset": this._accInfo.posinset, "aria-setsize": this._accInfo.setsize, "aria-describedby": `${this._id}-invisibleText-describedby`, "aria-labelledby": this._accessibleNameRef, "aria-disabled": this._ariaDisabled, "aria-selected": this._accInfo.ariaSelected, "aria-checked": this._accInfo.ariaChecked, "aria-owns": this._accInfo.ariaOwns, "aria-keyshortcuts": this._accInfo.ariaKeyShortcuts, children: [currentHooks.listItemPreContent.call(this), this.placeSelectionElementBefore && selectionElement.call(this), this._hasHighlightColor && jsx("div", { class: "ui5-li-highlight" }), jsxs("div", { part: "content", id: `${this._id}-content`, class: "ui5-li-content", children: [currentHooks.imageBegin.call(this), currentHooks.iconBegin.call(this), currentHooks.listItemContent.call(this)] }), currentHooks.iconEnd.call(this), this.typeDetail && jsx("div", { class: "ui5-li-detailbtn", children: jsx(Button$2, { part: "detail-button", design: "Transparent", onClick: this.onDetailClick, icon: edit }) }), this.typeNavigation && jsx(Icon$2, { name: iconArrowRight }), this.navigated && jsx("div", { class: "ui5-li-navigated" }), this.placeSelectionElementAfter && currentHooks.selectionElement.call(this), jsx("span", { id: `${this._id}-invisibleText`, class: "ui5-hidden-text", children: this.ariaLabelledByText }), jsx("span", { id: `${this._id}-invisibleText-describedby`, class: "ui5-hidden-text", children: this._accInfo.ariaSelectedText })] });
}
function listItemPreContent() {
}
function listItemContent$1() {
}
function imageBegin() {
}
function iconBegin() {
}
function iconEnd() {
}
function selectionElement() {
  switch (true) {
    case this.modeSingleSelect:
      return jsx(RadioButton$1, { part: "radio", disabled: this.isInactive, accessibleName: this._accInfo.ariaLabelRadioButton, tabindex: -1, id: `${this._id}-singleSelectionElement`, class: "ui5-li-singlesel-radiobtn", checked: this.selected, onChange: this.onSingleSelectionComponentPress });
    case this.modeMultiple:
      return jsx(CheckBox$2, { part: "checkbox", disabled: this.isInactive, indeterminate: this.indeterminate, tabindex: -1, id: `${this._id}-multiSelectionElement`, class: "ui5-li-multisel-cb", checked: this.selected, accessibleName: this._accInfo.ariaLabel, onChange: this.onMultiSelectionComponentPress });
    case this.modeDelete:
      return jsx("div", { class: "ui5-li-deletebtn", children: this.hasDeleteButtonSlot ? jsx("slot", { name: "deleteButton" }) : jsx(Button$2, { part: "delete-button", tabindex: -1, "data-sap-no-tab-ref": true, id: `${this._id}-deleteSelectionElement`, design: "Transparent", icon: decline, onClick: this.onDelete, tooltip: this.deleteText }) });
  }
}
const predefinedHooks = {
  listItemContent
};
function ListItemCustomTemplate(hooks) {
  const currentHooks = { ...predefinedHooks, ...hooks };
  return ListItemTemplate.call(this, currentHooks);
}
function listItemContent() {
  return jsx("slot", {});
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const ListItemCustomCss = `:host(:not([hidden])){display:block}:host{min-height:var(--_ui5-v2-14-0_list_item_base_height);height:auto;box-sizing:border-box}.ui5-li-root.ui5-custom-li-root{pointer-events:inherit;min-height:inherit}.ui5-li-root.ui5-custom-li-root .ui5-li-content{pointer-events:inherit}[ui5-checkbox].ui5-li-singlesel-radiobtn,[ui5-radio-button].ui5-li-singlesel-radiobtn{display:flex;align-items:center}.ui5-li-root.ui5-custom-li-root,[ui5-checkbox].ui5-li-singlesel-radiobtn,[ui5-radio-button].ui5-li-singlesel-radiobtn{min-width:var(--_ui5-v2-14-0_custom_list_item_rb_min_width)}:host([_selection-mode="SingleStart"]) .ui5-li-root.ui5-custom-li-root{padding-inline:0 1rem}:host([_selection-mode="Multiple"]) .ui5-li-root.ui5-custom-li-root{padding-inline:0 1rem}:host([_selection-mode="SingleEnd"]) .ui5-li-root.ui5-custom-li-root{padding-inline:1rem 0}
`;
var __decorate$j = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
let ListItemCustom = class ListItemCustom2 extends ListItem$1 {
  constructor() {
    super(...arguments);
    this.movable = false;
  }
  async _onkeydown(e2) {
    const isTab = x(e2) || V(e2);
    const isFocused = this.matches(":focus");
    if (!isTab && !isFocused && !ro(e2)) {
      return;
    }
    await super._onkeydown(e2);
  }
  _onkeyup(e2) {
    const isTab = x(e2) || V(e2);
    const isFocused = this.matches(":focus");
    if (!isTab && !isFocused && !ro(e2)) {
      return;
    }
    super._onkeyup(e2);
  }
  get classes() {
    const result = super.classes;
    result.main["ui5-custom-li-root"] = true;
    return result;
  }
};
__decorate$j([
  s$7({ type: Boolean })
], ListItemCustom.prototype, "movable", void 0);
__decorate$j([
  s$7()
], ListItemCustom.prototype, "accessibleName", void 0);
ListItemCustom = __decorate$j([
  m$7({
    tag: "ui5-li-custom",
    template: ListItemCustomTemplate,
    renderer: y$4,
    styles: [ListItem$1.styles, ListItemCustomCss]
  })
], ListItemCustom);
ListItemCustom.define();
const ListItemCustom$1 = ListItemCustom;
let t$3, n$2;
const l$1 = (e2) => {
  e2.style.position = "absolute", e2.style.clip = "rect(1px,1px,1px,1px)", e2.style.userSelect = "none", e2.style.left = "-1000px", e2.style.top = "-1000px", e2.style.pointerEvents = "none";
};
P$4(() => {
  t$3 && n$2 || (t$3 = document.createElement("span"), n$2 = document.createElement("span"), t$3.classList.add("ui5-invisiblemessage-polite"), n$2.classList.add("ui5-invisiblemessage-assertive"), t$3.setAttribute("aria-live", "polite"), n$2.setAttribute("aria-live", "assertive"), t$3.setAttribute("role", "alert"), n$2.setAttribute("role", "alert"), l$1(t$3), l$1(n$2), o$j("ui5-announcement-area").appendChild(t$3), o$j("ui5-announcement-area").appendChild(n$2));
});
const p2 = (e2, s2) => {
  const i3 = n$2;
  i3.textContent = "", i3.textContent = e2, setTimeout(() => {
    i3.textContent === e2 && (i3.textContent = "");
  }, 3e3);
};
const Label2 = withWebComponent("ui5-label", ["for", "wrappingType"], ["required", "showColon"], [], []);
Label2.displayName = "Label";
const o$1 = (e2) => (t3, r3) => {
  Object.defineProperty(t3, r3, { get() {
    return this.shadowRoot?.querySelector(e2);
  } });
};
function BarTemplate() {
  return jsxs("div", { class: "ui5-bar-root", "aria-label": this.accInfo.role && this.accInfo.label, role: this.accInfo.role, part: "bar", children: [jsx("div", { class: "ui5-bar-content-container ui5-bar-startcontent-container", part: "startContent", children: jsx("slot", { name: "startContent" }) }), jsx("div", { class: "ui5-bar-content-container ui5-bar-midcontent-container", part: "midContent", children: jsx("slot", {}) }), jsx("div", { class: "ui5-bar-content-container ui5-bar-endcontent-container", part: "endContent", children: jsx("slot", { name: "endContent" }) })] });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const BarCss = `:host{background-color:var(--sapPageHeader_Background);height:var(--_ui5-v2-14-0_bar_base_height);width:100%;box-shadow:var(--sapContent_HeaderShadow);display:block}.ui5-bar-root{display:flex;align-items:center;justify-content:space-between;height:100%;width:100%;background-color:inherit;box-shadow:inherit;border-radius:inherit;min-width:0;overflow:hidden}.ui5-bar-root .ui5-bar-startcontent-container,.ui5-bar-root .ui5-bar-endcontent-container,.ui5-bar-root .ui5-bar-midcontent-container{display:flex;align-items:center}.ui5-bar-root .ui5-bar-startcontent-container,.ui5-bar-root .ui5-bar-endcontent-container{flex:0 0 auto}.ui5-bar-root .ui5-bar-midcontent-container{justify-content:center;flex:1 1 auto;padding:0 var(--_ui5-v2-14-0_bar-mid-container-padding-start-end);min-width:0;overflow:hidden}.ui5-bar-root .ui5-bar-startcontent-container{padding-inline-start:var(--_ui5-v2-14-0_bar-start-container-padding-start)}.ui5-bar-root .ui5-bar-content-container{min-width:calc(30% - calc(var(--_ui5-v2-14-0_bar-start-container-padding-start) + var(--_ui5-v2-14-0_bar-end-container-padding-end) + (2*var(--_ui5-v2-14-0_bar-mid-container-padding-start-end))))}.ui5-bar-root.ui5-bar-root-shrinked .ui5-bar-content-container{min-width:0px;overflow:hidden;height:100%}.ui5-bar-root .ui5-bar-endcontent-container{padding-inline-end:var(--_ui5-v2-14-0_bar-end-container-padding-end)}:host([design="Footer"]){background-color:var(--sapPageFooter_Background);border-top:.0625rem solid var(--sapPageFooter_BorderColor);box-shadow:none}:host([design="Subheader"]){height:var(--_ui5-v2-14-0_bar_subheader_height);margin-top:var(--_ui5-v2-14-0_bar_subheader_margin-top)}:host([design="FloatingFooter"]){border-radius:var(--sapElement_BorderCornerRadius);background-color:var(--sapPageFooter_Background);box-shadow:var(--sapContent_Shadow1);border:none}::slotted(*){margin:0 .25rem}
`;
var __decorate$i = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
let Bar$1 = class Bar extends b$6 {
  get accInfo() {
    return {
      "label": this.design,
      "role": this.effectiveRole
    };
  }
  constructor() {
    super();
    this.design = "Header";
    this.accessibleRole = "Toolbar";
    this._handleResizeBound = this.handleResize.bind(this);
  }
  handleResize() {
    const bar = this.getDomRef();
    const barWidth = bar.offsetWidth;
    const needShrinked = Array.from(bar.children).some((child) => {
      return child.offsetWidth > barWidth / 3;
    });
    bar.classList.toggle("ui5-bar-root-shrinked", needShrinked);
  }
  onEnterDOM() {
    f$3.register(this, this._handleResizeBound);
    this.getDomRef().querySelectorAll(".ui5-bar-content-container").forEach((child) => {
      f$3.register(child, this._handleResizeBound);
    }, this);
  }
  onExitDOM() {
    f$3.deregister(this, this._handleResizeBound);
    this.getDomRef().querySelectorAll(".ui5-bar-content-container").forEach((child) => {
      f$3.deregister(child, this._handleResizeBound);
    }, this);
  }
  get effectiveRole() {
    return this.accessibleRole.toLowerCase() === "toolbar" ? "toolbar" : void 0;
  }
};
__decorate$i([
  s$7()
], Bar$1.prototype, "design", void 0);
__decorate$i([
  s$7()
], Bar$1.prototype, "accessibleRole", void 0);
__decorate$i([
  d$4({ type: HTMLElement })
], Bar$1.prototype, "startContent", void 0);
__decorate$i([
  d$4({ type: HTMLElement, "default": true })
], Bar$1.prototype, "middleContent", void 0);
__decorate$i([
  d$4({ type: HTMLElement })
], Bar$1.prototype, "endContent", void 0);
Bar$1 = __decorate$i([
  m$7({
    tag: "ui5-bar",
    fastNavigation: true,
    renderer: y$4,
    styles: BarCss,
    template: BarTemplate
  })
], Bar$1);
Bar$1.define();
const Bar2 = withWebComponent("ui5-bar", ["accessibleRole", "design"], [], ["endContent", "startContent"], []);
Bar2.displayName = "Bar";
const Dialog2 = withWebComponent("ui5-dialog", ["accessibleDescription", "accessibleDescriptionRef", "accessibleName", "accessibleNameRef", "accessibleRole", "headerText", "initialFocus", "state"], ["draggable", "open", "preventFocusRestore", "preventInitialFocus", "resizable", "stretch"], ["footer", "header"], ["before-close", "before-open", "close", "open"]);
Dialog2.displayName = "Dialog";
const t$2 = /* @__PURE__ */ new WeakMap();
let a$2 = class a {
  static get tasks() {
    return t$2;
  }
  static enqueue(s2, e2) {
    t$2.has(s2) || t$2.set(s2, []), t$2.get(s2).push(e2);
  }
  static run(s2, e2) {
    return t$2.has(s2) || t$2.set(s2, []), e2().then(() => {
      const T2 = t$2.get(s2);
      if (T2.length > 0) return a.run(s2, T2.shift());
      t$2.delete(s2);
    });
  }
  static push(s2, e2) {
    t$2.get(s2) ? a.enqueue(s2, e2) : a.run(s2, e2);
  }
};
const f3 = (e2) => {
  let n2 = null, a3 = false, i3, o2, r3;
  const m2 = new Promise((t3, c2) => {
    r3 = (u3) => {
      n2 = n2 || u3;
      const d2 = u3 - n2, l3 = e2.duration - d2;
      if (d2 <= e2.duration) {
        const s2 = 1 - l3 / e2.duration;
        e2.advance(s2), a3 || (i3 = requestAnimationFrame(r3));
      } else e2.advance(1), t3();
    }, o2 = () => {
      a3 = true, cancelAnimationFrame(i3), c2(new Error("animation stopped"));
    };
  }).catch((t3) => t3);
  return a$2.push(e2.element, () => (typeof e2.beforeStart == "function" && e2.beforeStart(), requestAnimationFrame(r3), new Promise((t3) => {
    m2.then(() => t3());
  }))), { promise: () => m2, stop: () => o2 };
}, v = 400;
const b2 = (t3) => {
  let o2, a3, d2, r3, s2, p3, g2, y2, n2, l3, h2, T2;
  const B2 = f3({ beforeStart: () => {
    t3.style.display = "block", o2 = getComputedStyle(t3), a3 = parseFloat(o2.paddingTop), d2 = parseFloat(o2.paddingBottom), r3 = parseFloat(o2.marginTop), s2 = parseFloat(o2.marginBottom), p3 = parseFloat(o2.height), g2 = t3.style.overflow, y2 = t3.style.paddingTop, n2 = t3.style.paddingBottom, l3 = t3.style.marginTop, h2 = t3.style.marginBottom, T2 = t3.style.height, t3.style.overflow = "hidden", t3.style.paddingTop = "0", t3.style.paddingBottom = "0", t3.style.marginTop = "0", t3.style.marginBottom = "0", t3.style.height = "0";
  }, duration: v, element: t3, advance: (i3) => {
    t3.style.display = "block", t3.style.paddingTop = `${a3 * i3}px`, t3.style.paddingBottom = `${d2 * i3}px`, t3.style.marginTop = `${r3 * i3}px`, t3.style.marginBottom = `${s2 * i3}px`, t3.style.height = `${p3 * i3}px`;
  } });
  return B2.promise().then(() => {
    t3.style.overflow = g2, t3.style.paddingTop = y2, t3.style.paddingBottom = n2, t3.style.marginTop = l3, t3.style.marginBottom = h2, t3.style.height = T2;
  }), B2;
};
const u2 = (o2) => {
  let i3, a3, r3, d2, n2, s2, p3, g2, e2, l3, y2, m2;
  const h2 = f3({ beforeStart: () => {
    const t3 = o2;
    i3 = getComputedStyle(t3), a3 = parseFloat(i3.paddingTop), r3 = parseFloat(i3.paddingBottom), d2 = parseFloat(i3.marginTop), n2 = parseFloat(i3.marginBottom), s2 = parseFloat(i3.height), p3 = t3.style.overflow, g2 = t3.style.paddingTop, e2 = t3.style.paddingBottom, l3 = t3.style.marginTop, y2 = t3.style.marginBottom, m2 = t3.style.height, t3.style.overflow = "hidden";
  }, duration: v, element: o2, advance: (t3) => {
    o2.style.paddingTop = `${a3 - a3 * t3}px`, o2.style.paddingBottom = `${r3 - r3 * t3}px`, o2.style.marginTop = `${d2 - d2 * t3}px`, o2.style.marginBottom = `${n2 - n2 * t3}px`, o2.style.height = `${s2 - s2 * t3}px`;
  } });
  return h2.promise().then((t3) => {
    t3 instanceof Error || (o2.style.overflow = p3, o2.style.paddingTop = g2, o2.style.paddingBottom = e2, o2.style.marginTop = l3, o2.style.marginBottom = y2, o2.style.height = m2, o2.style.display = "none");
  }), h2;
};
let n$1;
i$n(() => {
  n$1 = void 0;
});
const d = () => (n$1 === void 0 && (n$1 = C$6()), n$1);
const name$l = "slim-arrow-down";
const pathData$l = "M420.5 187q11-12 23 0 5 5 5 11t-5 11l-165 165q-10 9-23 9t-22-9l-166-165q-5-5-5-11.5t5-11.5 11.5-5 11.5 5l160 160q5 6 11 0z";
const ltr$l = false;
const collection$l = "SAP-icons-v4";
const packageName$l = "@ui5/webcomponents-icons";
y$1(name$l, { pathData: pathData$l, ltr: ltr$l, collection: collection$l, packageName: packageName$l });
const name$k = "slim-arrow-down";
const pathData$k = "M96 186q0-11 7.5-18.5T122 160q10 0 18 8l116 121 116-121q8-8 18-8 11 0 18.5 7.5T416 186q0 10-7 17L275 344q-8 8-19 8-12 0-18-8L103 203q-7-7-7-17z";
const ltr$k = false;
const collection$k = "SAP-icons-v5";
const packageName$k = "@ui5/webcomponents-icons";
y$1(name$k, { pathData: pathData$k, ltr: ltr$k, collection: collection$k, packageName: packageName$k });
const iconArrowDown = "slim-arrow-down";
var s$1 = ((i3) => (i3.Gregorian = "Gregorian", i3.Islamic = "Islamic", i3.Japanese = "Japanese", i3.Buddhist = "Buddhist", i3.Persian = "Persian", i3))(s$1 || {});
let n, e$1;
i$n(() => {
  n = void 0, e$1 = void 0;
});
const i$1 = () => (n === void 0 && (n = D$6()), n && n in s$1 ? n : s$1.Gregorian), o = () => (e$1 === void 0 && (e$1 = I$7()), e$1);
let e;
i$n(() => {
  e = void 0;
});
const r$1 = () => (e === void 0 && (e = O$4()), e);
const t$1 = (r3) => {
  const e2 = /\$([-a-z0-9A-Z._]+)(?::([^$]*))?\$/.exec(r3);
  return e2 && e2[2] ? e2[2].split(/,/) : null;
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var TimezoneUtils = {};
var sLocalTimezone = "";
var aSupportedTimezoneIDs;
var oIntlDateTimeFormatCache = {
  _oCache: /* @__PURE__ */ new Map(),
  /**
   * When cache limit is reached, it gets cleared
   */
  _iCacheLimit: 10,
  /**
   * Creates or gets an instance of Intl.DateTimeFormat.
   *
   * @param {string} sTimezone IANA timezone ID
   * @returns {Intl.DateTimeFormat} Intl.DateTimeFormat instance
   */
  get: function(sTimezone) {
    var cacheEntry = this._oCache.get(sTimezone);
    if (cacheEntry) {
      return cacheEntry;
    }
    var oOptions = {
      hourCycle: "h23",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit",
      fractionalSecondDigits: 3,
      day: "2-digit",
      month: "2-digit",
      year: "numeric",
      timeZone: sTimezone,
      timeZoneName: "short",
      era: "narrow",
      weekday: "short"
    };
    var oInstance = new Intl.DateTimeFormat("en-US", oOptions);
    if (this._oCache.size === this._iCacheLimit) {
      this._oCache = /* @__PURE__ */ new Map();
    }
    this._oCache.set(sTimezone, oInstance);
    return oInstance;
  }
};
TimezoneUtils.isValidTimezone = function(sTimezone) {
  if (!sTimezone) {
    return false;
  }
  if (Intl.supportedValuesOf) {
    try {
      aSupportedTimezoneIDs = aSupportedTimezoneIDs || Intl.supportedValuesOf("timeZone");
      if (aSupportedTimezoneIDs.includes(sTimezone)) {
        return true;
      }
    } catch (oError) {
      aSupportedTimezoneIDs = [];
    }
  }
  try {
    oIntlDateTimeFormatCache.get(sTimezone);
    return true;
  } catch (oError) {
    return false;
  }
};
TimezoneUtils.convertToTimezone = function(oDate, sTargetTimezone) {
  var oFormatParts = this._getParts(oDate, sTargetTimezone);
  return TimezoneUtils._getDateFromParts(oFormatParts);
};
TimezoneUtils._getParts = function(oDate, sTargetTimezone) {
  var sKey, oPart, oDateParts = /* @__PURE__ */ Object.create(null), oIntlDate = oIntlDateTimeFormatCache.get(sTargetTimezone), oParts = oIntlDate.formatToParts(new Date(oDate.getTime()));
  for (sKey in oParts) {
    oPart = oParts[sKey];
    if (oPart.type !== "literal") {
      oDateParts[oPart.type] = oPart.value;
    }
  }
  return oDateParts;
};
TimezoneUtils._getDateFromParts = function(oParts) {
  var oDate = /* @__PURE__ */ new Date(0), iUTCYear = parseInt(oParts.year);
  if (oParts.era === "B") {
    iUTCYear = iUTCYear * -1 + 1;
  }
  oDate.setUTCFullYear(iUTCYear, parseInt(oParts.month) - 1, parseInt(oParts.day));
  oDate.setUTCHours(parseInt(oParts.hour), parseInt(oParts.minute), parseInt(oParts.second), parseInt(oParts.fractionalSecond || 0));
  return oDate;
};
TimezoneUtils.calculateOffset = function(oDate, sTimezoneSource) {
  const oDateInTimezone = TimezoneUtils.convertToTimezone(oDate, sTimezoneSource);
  const iGivenTimestamp = oDate.getTime();
  const iInitialOffset = iGivenTimestamp - oDateInTimezone.getTime();
  const oFirstGuess = new Date(iGivenTimestamp + iInitialOffset);
  const oFirstGuessInTimezone = TimezoneUtils.convertToTimezone(oFirstGuess, sTimezoneSource);
  const iFirstGuessInTimezoneTimestamp = oFirstGuessInTimezone.getTime();
  const iSecondOffset = oFirstGuess.getTime() - iFirstGuessInTimezoneTimestamp;
  let iTimezoneOffset = iSecondOffset;
  if (iInitialOffset !== iSecondOffset) {
    const oSecondGuess = new Date(iGivenTimestamp + iSecondOffset);
    const oSecondGuessInTimezone = TimezoneUtils.convertToTimezone(oSecondGuess, sTimezoneSource);
    const iSecondGuessInTimezoneTimestamp = oSecondGuessInTimezone.getTime();
    if (iSecondGuessInTimezoneTimestamp !== iGivenTimestamp && iFirstGuessInTimezoneTimestamp > iSecondGuessInTimezoneTimestamp) {
      iTimezoneOffset = iInitialOffset;
    }
  }
  return iTimezoneOffset / 1e3;
};
TimezoneUtils.mCLDR2ABAPTimezones = {
  "America/Buenos_Aires": "America/Argentina/Buenos_Aires",
  "America/Catamarca": "America/Argentina/Catamarca",
  "America/Cordoba": "America/Argentina/Cordoba",
  "America/Jujuy": "America/Argentina/Jujuy",
  "America/Mendoza": "America/Argentina/Mendoza",
  "America/Indianapolis": "America/Indiana/Indianapolis",
  "America/Louisville": "America/Kentucky/Louisville",
  "Africa/Asmera": "Africa/Asmara",
  "Asia/Katmandu": "Asia/Kathmandu",
  "Asia/Calcutta": "Asia/Kolkata",
  "Atlantic/Faeroe": "Atlantic/Faroe",
  "Pacific/Ponape": "Pacific/Pohnpei",
  "Asia/Rangoon": "Asia/Yangon",
  "Pacific/Truk": "Pacific/Chuuk",
  "America/Godthab": "America/Nuuk",
  "Asia/Saigon": "Asia/Ho_Chi_Minh",
  "America/Coral_Harbour": "America/Atikokan"
};
TimezoneUtils.getLocalTimezone = function() {
  if (sLocalTimezone === "") {
    sLocalTimezone = new Intl.DateTimeFormat().resolvedOptions().timeZone;
    sLocalTimezone = TimezoneUtils.mCLDR2ABAPTimezones[sLocalTimezone] || sLocalTimezone;
  }
  return sLocalTimezone;
};
TimezoneUtils._clearLocalTimezoneCache = function() {
  sLocalTimezone = "";
};
const emptyFn$2 = () => {
};
const FormatSettings = {
  getFormatLocale: s$i,
  getLegacyDateFormat: emptyFn$2,
  getCustomLocaleData: emptyFn$2
};
const emptyFn$1 = () => {
};
const Configuration = {
  getLanguage: l$i,
  getCalendarType: i$1,
  getSupportedLanguages: () => t$1("$core-i18n-locales:,ar,bg,ca,cs,da,de,el,en,es,et,fi,fr,hi,hr,hu,it,iw,ja,ko,lt,lv,nl,no,pl,pt,ro,ru,sh,sk,sl,sv,th,tr,uk,vi,zh_CN,zh_TW$"),
  getOriginInfo: emptyFn$1,
  getFormatSettings: () => FormatSettings,
  getTimezone: () => r$1() || TimezoneUtils.getLocalTimezone(),
  // Calculate calendar week numbering by active format locale
  getCalendarWeekNumbering: () => "Default"
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var aAllParts = ["year", "month", "day", "hour", "minute", "second", "fractionalSecond"], rIsUTCString = /Z|GMT|:.*[\+|\-]|^([\+|\-]\d{2})?\d{4}(-\d{2}){0,2}$/, aWeekday = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], aMonths = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], mWeekdayToDay = {
  Sun: 0,
  Mon: 1,
  Tue: 2,
  Wed: 3,
  Thu: 4,
  Fri: 5,
  Sat: 6
};
function addLeadingZeros(iValue, iLength) {
  return (iValue < 0 ? "-" : "") + Math.abs(iValue).toString().padStart(iLength, "0");
}
function UI5Date$1(vDateParts, sTimezoneID) {
  var oDateInstance = UI5Date$1._createDateInstance(vDateParts);
  Object.defineProperties(this, {
    sTimezoneID: {
      value: sTimezoneID
    },
    oDate: {
      value: oDateInstance,
      writable: true
    },
    oDateParts: {
      value: void 0,
      writable: true
    }
  });
  if (isNaN(oDateInstance)) {
    return;
  }
  if (vDateParts.length > 1 || vDateParts.length === 1 && typeof vDateParts[0] === "string" && !rIsUTCString.test(vDateParts[0])) {
    this._setParts(
      aAllParts,
      // JavaScript Date parsed the arguments already in local browser time zone
      [oDateInstance.getFullYear(), oDateInstance.getMonth(), oDateInstance.getDate(), oDateInstance.getHours(), oDateInstance.getMinutes(), oDateInstance.getSeconds(), oDateInstance.getMilliseconds()]
    );
  }
}
UI5Date$1.prototype = Object.create(Date.prototype, {
  constructor: {
    value: Date
  }
});
UI5Date$1.prototype[Symbol.toStringTag] = "Date";
UI5Date$1.prototype._getPart = function(sPart) {
  var iResult;
  if (isNaN(this.oDate)) {
    return NaN;
  }
  this.oDateParts = this.oDateParts || TimezoneUtils._getParts(this.oDate, this.sTimezoneID);
  if (sPart === "weekday") {
    return mWeekdayToDay[this.oDateParts.weekday];
  }
  iResult = parseInt(this.oDateParts[sPart]);
  if (sPart === "month") {
    iResult -= 1;
  } else if (sPart === "year") {
    if (this.oDateParts.era === "B") {
      iResult = 1 - iResult;
    }
  }
  return iResult;
};
UI5Date$1.prototype._setParts = function(aParts, aValues) {
  var i3, oCurrentDateParts, oNewDateAsUTCTimestamp, iNewTimestamp, sPart, vValue, oDateParts = {}, iMaxLength = Math.min(aParts.length, aValues.length);
  if (iMaxLength === 0) {
    return this.setTime(NaN);
  }
  for (i3 = 0; i3 < iMaxLength; i3 += 1) {
    vValue = parseInt(+aValues[i3]);
    sPart = aParts[i3];
    if (isNaN(vValue)) {
      return this.setTime(NaN);
    }
    if (sPart === "month") {
      vValue += 1;
    } else if (sPart === "year") {
      if (vValue <= 0) {
        vValue = 1 - vValue;
        oDateParts.era = "B";
      } else {
        oDateParts.era = "A";
      }
    }
    oDateParts[sPart] = vValue.toString();
  }
  if (this.oDateParts) {
    oCurrentDateParts = this.oDateParts;
  } else if (isNaN(this.oDate)) {
    oCurrentDateParts = {
      day: "1",
      fractionalSecond: "0",
      hour: "0",
      minute: "0",
      month: "1",
      second: "0"
    };
  } else {
    oCurrentDateParts = TimezoneUtils._getParts(this.oDate, this.sTimezoneID);
  }
  oDateParts = Object.assign({}, oCurrentDateParts, oDateParts);
  oNewDateAsUTCTimestamp = TimezoneUtils._getDateFromParts(oDateParts);
  if (isNaN(oNewDateAsUTCTimestamp)) {
    return this.setTime(NaN);
  }
  iNewTimestamp = oNewDateAsUTCTimestamp.getTime() + TimezoneUtils.calculateOffset(oNewDateAsUTCTimestamp, this.sTimezoneID) * 1e3;
  return this.setTime(iNewTimestamp);
};
UI5Date$1.prototype.clone = function() {
  return UI5Date$1.getInstance(this);
};
UI5Date$1.prototype.getDate = function() {
  return this._getPart("day");
};
UI5Date$1.prototype.getDay = function() {
  return this._getPart("weekday");
};
UI5Date$1.prototype.getFullYear = function() {
  return this._getPart("year");
};
UI5Date$1.prototype.getHours = function() {
  return this._getPart("hour");
};
UI5Date$1.prototype.getMilliseconds = function() {
  return this._getPart("fractionalSecond");
};
UI5Date$1.prototype.getMinutes = function() {
  return this._getPart("minute");
};
UI5Date$1.prototype.getMonth = function() {
  return this._getPart("month");
};
UI5Date$1.prototype.getSeconds = function() {
  return this._getPart("second");
};
UI5Date$1.prototype.getTimezoneOffset = function() {
  return TimezoneUtils.calculateOffset(this.oDate, this.sTimezoneID) / 60;
};
UI5Date$1.prototype.getYear = function() {
  return this._getPart("year") - 1900;
};
UI5Date$1.prototype.setDate = function(iDay) {
  return this._setParts(["day"], arguments);
};
UI5Date$1.prototype.setFullYear = function(iYear, iMonth, iDay) {
  return this._setParts(["year", "month", "day"], arguments);
};
UI5Date$1.prototype.setHours = function(iHours, iMinutes, iSeconds, iMilliseconds) {
  return this._setParts(["hour", "minute", "second", "fractionalSecond"], arguments);
};
UI5Date$1.prototype.setMilliseconds = function(iMilliseconds) {
  return this._setParts(["fractionalSecond"], arguments);
};
UI5Date$1.prototype.setMinutes = function(iMinutes, iSeconds, iMilliseconds) {
  return this._setParts(["minute", "second", "fractionalSecond"], arguments);
};
UI5Date$1.prototype.setMonth = function(iMonth, iDay) {
  return this._setParts(["month", "day"], arguments);
};
UI5Date$1.prototype.setSeconds = function(iSeconds, iMilliseconds) {
  return this._setParts(["second", "fractionalSecond"], arguments);
};
UI5Date$1.prototype.setTime = function(iTime) {
  this.oDateParts = void 0;
  return this.oDate.setTime(iTime);
};
UI5Date$1.prototype.setYear = function(iYear) {
  var iValue = parseInt(iYear);
  iValue = iValue < 0 || iValue > 99 ? iValue : iValue + 1900;
  return this._setParts(["year"], [iValue]);
};
UI5Date$1.prototype.toDateString = function() {
  if (isNaN(this.oDate)) {
    return this.oDate.toDateString();
  }
  return aWeekday[this.getDay()] + " " + aMonths[this.getMonth()] + " " + addLeadingZeros(this.getDate(), 2) + " " + addLeadingZeros(this.getFullYear(), 4);
};
UI5Date$1.prototype.toString = function() {
  if (isNaN(this.oDate)) {
    return this.oDate.toString();
  }
  return this.toDateString() + " " + this.toTimeString();
};
UI5Date$1.prototype.toTimeString = function() {
  var iHours, iMinutes, sSign, iTimeZoneOffset;
  if (isNaN(this.oDate)) {
    return this.oDate.toTimeString();
  }
  iTimeZoneOffset = this.getTimezoneOffset();
  sSign = iTimeZoneOffset > 0 ? "-" : "+";
  iHours = Math.floor(Math.abs(iTimeZoneOffset) / 60);
  iMinutes = Math.abs(iTimeZoneOffset) % 60;
  return addLeadingZeros(this.getHours(), 2) + ":" + addLeadingZeros(this.getMinutes(), 2) + ":" + addLeadingZeros(this.getSeconds(), 2) + " GMT" + sSign + addLeadingZeros(iHours, 2) + addLeadingZeros(iMinutes, 2);
};
["getTime", "getUTCDate", "getUTCDay", "getUTCFullYear", "getUTCHours", "getUTCMilliseconds", "getUTCMinutes", "getUTCMonth", "getUTCSeconds", "toGMTString", "toISOString", "toJSON", "toUTCString", "valueOf"].forEach(function(sMethod) {
  UI5Date$1.prototype[sMethod] = function() {
    return this.oDate[sMethod].apply(this.oDate, arguments);
  };
});
["toLocaleDateString", "toLocaleString", "toLocaleTimeString"].forEach(function(sMethod) {
  UI5Date$1.prototype[sMethod] = function(sLocale, oOptions) {
    return this.oDate[sMethod](sLocale || Configuration.getLanguageTag(), Object.assign({
      timeZone: this.sTimezoneID
    }, oOptions));
  };
});
["setUTCDate", "setUTCFullYear", "setUTCHours", "setUTCMilliseconds", "setUTCMinutes", "setUTCMonth", "setUTCSeconds"].forEach(function(sMethod) {
  UI5Date$1.prototype[sMethod] = function() {
    this.oDateParts = void 0;
    return this.oDate[sMethod].apply(this.oDate, arguments);
  };
});
UI5Date$1._createDateInstance = function(vParts) {
  if (vParts[0] instanceof Date) {
    vParts[0] = vParts[0].valueOf();
  }
  return new (Function.prototype.bind.apply(Date, [].concat.apply([null], vParts)))();
};
UI5Date$1.getInstance = function() {
  var sTimezone = Configuration.getTimezone();
  if (sTimezone !== TimezoneUtils.getLocalTimezone()) {
    return new UI5Date$1(arguments, sTimezone);
  }
  return UI5Date$1._createDateInstance(arguments);
};
UI5Date$1.checkDate = function(oDate) {
  if (isNaN(oDate.getTime())) {
    throw new Error("The given Date is not valid");
  }
  if (!(oDate instanceof UI5Date$1) && Configuration.getTimezone() !== TimezoneUtils.getLocalTimezone()) {
    throw new Error("Configured time zone requires the parameter 'oDate' to be an instance of sap.ui.core.date.UI5Date");
  }
};
const UI5DateWrapped = UI5Date$1;
class UI5Date extends UI5DateWrapped {
}
const emptyFn = () => {
};
const Core = {
  getConfiguration: () => Configuration,
  getLibraryResourceBundle: emptyFn(),
  getFormatSettings: () => FormatSettings
};
const ObjectPath = {
  set() {
  }
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var fnAssert = function(bResult, vMessage) {
  if (!bResult) {
    var sMessage = typeof vMessage === "function" ? vMessage() : vMessage;
    console.assert(bResult, sMessage);
  }
};
const Log = console;
Log.warning = console.warn;
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var fnUniqueSort = function(aArray) {
  fnAssert(Array.isArray(aArray), "uniqueSort: input parameter must be an Array");
  var iLength = aArray.length;
  if (iLength > 1) {
    aArray.sort();
    var j2 = 0;
    for (var i3 = 1; i3 < iLength; i3++) {
      if (aArray.indexOf(aArray[i3]) === i3) {
        aArray[++j2] = aArray[i3];
      }
    }
    if (++j2 < iLength) {
      aArray.splice(j2, iLength - j2);
    }
  }
  return aArray;
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
function isFunction$2(obj) {
  return typeof obj === "function";
}
var Metadata = function(sClassName, oClassInfo) {
  fnAssert(typeof sClassName === "string" && sClassName, "Metadata: sClassName must be a non-empty string");
  fnAssert(typeof oClassInfo === "object", "Metadata: oClassInfo must be empty or an object");
  if (!oClassInfo || typeof oClassInfo.metadata !== "object") {
    oClassInfo = {
      metadata: oClassInfo || {},
      // retrieve class by its name. Using a lookup costs time but avoids the need for redundant arguments to this function
      constructor: ObjectPath.get(sClassName)
      // legacy-relevant, code path not used by extend call
    };
    oClassInfo.metadata.__version = 1;
  }
  oClassInfo.metadata.__version = oClassInfo.metadata.__version || 2;
  if (!isFunction$2(oClassInfo.constructor)) {
    throw Error("constructor for class " + sClassName + " must have been declared before creating metadata for it");
  }
  this._sClassName = sClassName;
  this._oClass = oClassInfo.constructor;
  this.extend(oClassInfo);
};
Metadata.prototype.extend = function(oClassInfo) {
  this.applySettings(oClassInfo);
  this.afterApplySettings();
};
Metadata.prototype.applySettings = function(oClassInfo) {
  var that = this, oStaticInfo = oClassInfo.metadata, oPrototype;
  if (oStaticInfo.baseType) {
    var oParentClass;
    if (isFunction$2(oStaticInfo.baseType)) {
      oParentClass = oStaticInfo.baseType;
      if (!isFunction$2(oParentClass.getMetadata)) {
        throw new TypeError("baseType must be a UI5 class with a static getMetadata function");
      }
    } else {
      oParentClass = ObjectPath.get(oStaticInfo.baseType);
      if (!isFunction$2(oParentClass)) {
        Log.fatal("base class '" + oStaticInfo.baseType + "' does not exist");
      }
    }
    if (oParentClass.getMetadata) {
      this._oParent = oParentClass.getMetadata();
      fnAssert(oParentClass === oParentClass.getMetadata().getClass(), "Metadata: oParentClass must match the class in the parent metadata");
    } else {
      this._oParent = new Metadata(oStaticInfo.baseType, {});
    }
  } else {
    this._oParent = void 0;
  }
  this._bAbstract = !!oStaticInfo["abstract"];
  this._bFinal = !!oStaticInfo["final"];
  this._sStereotype = oStaticInfo.stereotype || (this._oParent ? this._oParent._sStereotype : "object");
  this._bDeprecated = !!oStaticInfo["deprecated"];
  this._aInterfaces = oStaticInfo.interfaces || [];
  this._aPublicMethods = oStaticInfo.publicMethods || [];
  this._bInterfacesUnique = false;
  oPrototype = this._oClass.prototype;
  for (var n2 in oClassInfo) {
    if (n2 !== "metadata" && n2 !== "constructor") {
      oPrototype[n2] = oClassInfo[n2];
      if (!n2.match(/^_|^on|^init$|^exit$/)) {
        that._aPublicMethods.push(n2);
      }
    }
  }
};
Metadata.prototype.afterApplySettings = function() {
  if (this._oParent) {
    this._aAllPublicMethods = this._oParent._aAllPublicMethods.concat(this._aPublicMethods);
    this._bInterfacesUnique = false;
  } else {
    this._aAllPublicMethods = this._aPublicMethods;
  }
};
Metadata.prototype.getStereotype = function() {
  return this._sStereotype;
};
Metadata.prototype.getName = function() {
  return this._sClassName;
};
Metadata.prototype.getClass = function() {
  return this._oClass;
};
Metadata.prototype.getParent = function() {
  return this._oParent;
};
Metadata.prototype._dedupInterfaces = function() {
  if (!this._bInterfacesUnique) {
    fnUniqueSort(this._aInterfaces);
    fnUniqueSort(this._aPublicMethods);
    fnUniqueSort(this._aAllPublicMethods);
    this._bInterfacesUnique = true;
  }
};
Metadata.prototype.getPublicMethods = function() {
  this._dedupInterfaces();
  return this._aPublicMethods;
};
Metadata.prototype.getAllPublicMethods = function() {
  this._dedupInterfaces();
  return this._aAllPublicMethods;
};
Metadata.prototype.getInterfaces = function() {
  this._dedupInterfaces();
  return this._aInterfaces;
};
Metadata.prototype.isInstanceOf = function(sInterface) {
  if (this._oParent) {
    if (this._oParent.isInstanceOf(sInterface)) {
      return true;
    }
  }
  var a3 = this._aInterfaces;
  for (var i3 = 0, l3 = a3.length; i3 < l3; i3++) {
    if (a3[i3] === sInterface) {
      return true;
    }
  }
  return false;
};
Object.defineProperty(Metadata.prototype, "_mImplementedTypes", {
  get: function() {
    if (this === Metadata.prototype) {
      throw new Error("sap.ui.base.Metadata: The '_mImplementedTypes' property must not be accessed on the prototype");
    }
    var result = Object.create(this._oParent ? this._oParent._mImplementedTypes : null);
    result[this._sClassName] = true;
    var aInterfaces = this._aInterfaces, i3 = aInterfaces.length;
    while (i3-- > 0) {
      if (!result[aInterfaces[i3]]) {
        result[aInterfaces[i3]] = true;
      }
    }
    Object.defineProperty(this, "_mImplementedTypes", {
      value: Object.freeze(result),
      writable: false,
      configurable: false
    });
    return result;
  },
  configurable: true
});
Metadata.prototype.isA = function(vTypeName) {
  var mTypes2 = this._mImplementedTypes;
  if (Array.isArray(vTypeName)) {
    for (var i3 = 0; i3 < vTypeName.length; i3++) {
      if (vTypeName[i3] in mTypes2) {
        return true;
      }
    }
    return false;
  }
  return vTypeName in mTypes2;
};
Metadata.prototype.isAbstract = function() {
  return this._bAbstract;
};
Metadata.prototype.isFinal = function() {
  return this._bFinal;
};
Metadata.prototype.isDeprecated = function() {
  return this._bDeprecated;
};
Metadata.prototype.addPublicMethods = function(sMethod) {
  var aNames = sMethod instanceof Array ? sMethod : arguments;
  Array.prototype.push.apply(this._aPublicMethods, aNames);
  Array.prototype.push.apply(this._aAllPublicMethods, aNames);
  this._bInterfacesUnique = false;
};
Metadata.createClass = function(fnBaseClass, sClassName, oClassInfo, FNMetaImpl) {
  if (typeof fnBaseClass === "string") {
    FNMetaImpl = oClassInfo;
    oClassInfo = sClassName;
    sClassName = fnBaseClass;
    fnBaseClass = null;
  }
  fnAssert(!fnBaseClass || isFunction$2(fnBaseClass));
  fnAssert(typeof sClassName === "string" && !!sClassName);
  fnAssert(!oClassInfo || typeof oClassInfo === "object");
  fnAssert(!FNMetaImpl || isFunction$2(FNMetaImpl));
  FNMetaImpl = FNMetaImpl || Metadata;
  if (isFunction$2(FNMetaImpl.preprocessClassInfo)) {
    oClassInfo = FNMetaImpl.preprocessClassInfo(oClassInfo);
  }
  oClassInfo = oClassInfo || {};
  oClassInfo.metadata = oClassInfo.metadata || {};
  if (!oClassInfo.hasOwnProperty("constructor")) {
    oClassInfo.constructor = void 0;
  }
  var fnClass = oClassInfo.constructor;
  fnAssert(!fnClass || isFunction$2(fnClass));
  if (fnBaseClass) {
    if (!fnClass) {
      if (oClassInfo.metadata.deprecated) {
        fnClass = function() {
          Log.warning("Usage of deprecated class: " + sClassName);
          fnBaseClass.apply(this, arguments);
        };
      } else {
        fnClass = function() {
          fnBaseClass.apply(this, arguments);
        };
      }
    }
    fnClass.prototype = Object.create(fnBaseClass.prototype);
    fnClass.prototype.constructor = fnClass;
    oClassInfo.metadata.baseType = fnBaseClass;
  } else {
    fnClass = fnClass || function() {
    };
    delete oClassInfo.metadata.baseType;
  }
  oClassInfo.constructor = fnClass;
  ObjectPath.set(sClassName, fnClass);
  var oMetadata = new FNMetaImpl(sClassName, oClassInfo);
  fnClass.getMetadata = fnClass.prototype.getMetadata = function() {
    return oMetadata;
  };
  if (!fnClass.getMetadata().isFinal()) {
    fnClass.extend = function(sSCName, oSCClassInfo, fnSCMetaImpl) {
      return Metadata.createClass(fnClass, sSCName, oSCClassInfo, fnSCMetaImpl || FNMetaImpl);
    };
  }
  return fnClass;
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var BaseObject = Metadata.createClass("sap.ui.base.Object", {
  constructor: function() {
    if (!(this instanceof BaseObject)) {
      throw Error('Cannot instantiate object: "new" is missing!');
    }
  }
});
BaseObject.prototype.destroy = function() {
};
BaseObject.prototype.getInterface = function() {
  var oInterface = new BaseObject._Interface(this, this.getMetadata().getAllPublicMethods());
  this.getInterface = function() {
    return oInterface;
  };
  return oInterface;
};
BaseObject.defineClass = function(sClassName, oStaticInfo, FNMetaImpl) {
  var oMetadata = new (FNMetaImpl || Metadata)(sClassName, oStaticInfo);
  var fnClass = oMetadata.getClass();
  fnClass.getMetadata = fnClass.prototype.getMetadata = function() {
    return oMetadata;
  };
  if (!oMetadata.isFinal()) {
    fnClass.extend = function(sSCName, oSCClassInfo, fnSCMetaImpl) {
      return Metadata.createClass(fnClass, sSCName, oSCClassInfo, fnSCMetaImpl || FNMetaImpl);
    };
  }
  Log.debug("defined class '" + sClassName + "'" + (oMetadata.getParent() ? " as subclass of " + oMetadata.getParent().getName() : ""));
  return oMetadata;
};
BaseObject.prototype.isA = function(vTypeName) {
  return this.getMetadata().isA(vTypeName);
};
BaseObject.isA = function(oObject, vTypeName) {
  return oObject instanceof BaseObject && oObject.isA(vTypeName);
};
BaseObject.isObjectA = function(oObject, vTypeName) {
  return oObject instanceof BaseObject && oObject.isA(vTypeName);
};
BaseObject._Interface = function(oObject, aMethods, _bReturnFacade) {
  if (!oObject) {
    return oObject;
  }
  function fCreateDelegator(oObject2, sMethodName2) {
    return function() {
      var tmp = oObject2[sMethodName2].apply(oObject2, arguments);
      if (_bReturnFacade) {
        return this;
      } else {
        return tmp instanceof BaseObject ? tmp.getInterface() : tmp;
      }
    };
  }
  if (!aMethods) {
    return {};
  }
  var sMethodName;
  for (var i3 = 0, ml = aMethods.length; i3 < ml; i3++) {
    sMethodName = aMethods[i3];
    //!oObject[sMethodName] for 'lazy' loading interface methods ;-)
    if (!oObject[sMethodName] || typeof oObject[sMethodName] === "function") {
      this[sMethodName] = fCreateDelegator(oObject, sMethodName);
    }
  }
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var class2type = {};
var hasOwn = class2type.hasOwnProperty;
var toString$1 = class2type.toString;
var fnToString = hasOwn.toString;
var ObjectFunctionString = fnToString.call(Object);
var fnIsPlainObject = function(obj) {
  var proto, Ctor;
  if (!obj || toString$1.call(obj) !== "[object Object]") {
    return false;
  }
  proto = Object.getPrototypeOf(obj);
  if (!proto) {
    return true;
  }
  Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
  return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
};
const resolveReference = (function() {
  throw new Error("not implemented");
});
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var DataType = function() {
  throw new Error();
};
DataType.prototype.getName = function() {
  return void 0;
};
DataType.prototype.getBaseType = function() {
  return void 0;
};
DataType.prototype.getPrimitiveType = function() {
  var oType = this;
  while (oType.getBaseType()) {
    oType = oType.getBaseType();
  }
  return oType;
};
DataType.prototype.getComponentType = function() {
  return void 0;
};
DataType.prototype.getDefaultValue = function() {
  return void 0;
};
DataType.prototype.isArrayType = function() {
  return false;
};
DataType.prototype.isEnumType = function() {
  return false;
};
DataType.prototype.getEnumValues = function() {
  return void 0;
};
DataType.prototype.parseValue = function(sValue) {
  return sValue;
};
DataType.prototype.isValid = void 0;
DataType.prototype.setNormalizer = function(fnNormalizer) {
  fnAssert(typeof fnNormalizer === "function", "DataType.setNormalizer: fnNormalizer must be a function");
  this._fnNormalizer = typeof fnNormalizer === "function" ? fnNormalizer : void 0;
};
DataType.prototype.normalize = function(oValue) {
  return this._fnNormalizer ? this._fnNormalizer(oValue) : oValue;
};
function createType(sName, mSettings, oBase) {
  mSettings = mSettings || {};
  var oBaseObject = oBase || DataType.prototype;
  var oType = Object.create(oBaseObject);
  oType.getName = function() {
    return sName;
  };
  if (mSettings.hasOwnProperty("defaultValue")) {
    var vDefault = mSettings.defaultValue;
    oType.getDefaultValue = function() {
      return vDefault;
    };
  }
  if (mSettings.isValid) {
    var fnIsValid = mSettings.isValid;
    oType.isValid = oBaseObject.isValid ? function(vValue) {
      if (!oBaseObject.isValid(vValue)) {
        return false;
      }
      return fnIsValid(vValue);
    } : fnIsValid;
  }
  if (mSettings.parseValue) {
    oType.parseValue = mSettings.parseValue;
  }
  oType.getBaseType = function() {
    return oBase;
  };
  return oType;
}
var mTypes = {
  "any": createType("any", {
    defaultValue: null,
    isValid: function(vValue) {
      return true;
    }
  }),
  "boolean": createType("boolean", {
    defaultValue: false,
    isValid: function(vValue) {
      return typeof vValue === "boolean";
    },
    parseValue: function(sValue) {
      return sValue == "true";
    }
  }),
  "int": createType("int", {
    defaultValue: 0,
    isValid: function(vValue) {
      return typeof vValue === "number" && (isNaN(vValue) || Math.floor(vValue) == vValue);
    },
    parseValue: function(sValue) {
      return parseInt(sValue);
    }
  }),
  "float": createType("float", {
    defaultValue: 0,
    isValid: function(vValue) {
      return typeof vValue === "number";
    },
    parseValue: function(sValue) {
      return parseFloat(sValue);
    }
  }),
  "string": createType("string", {
    defaultValue: "",
    isValid: function(vValue) {
      return typeof vValue === "string" || vValue instanceof String;
    },
    parseValue: function(sValue) {
      return sValue;
    }
  }),
  "object": createType("object", {
    defaultValue: null,
    isValid: function(vValue) {
      return typeof vValue === "object" || typeof vValue === "function";
    },
    parseValue: function(sValue) {
      return sValue ? JSON.parse(sValue) : null;
    }
  }),
  "function": createType("function", {
    defaultValue: null,
    isValid: function(vValue) {
      return vValue == null || typeof vValue === "function";
    },
    /*
     * Note: the second parameter <code>_oOptions</code> is a hidden feature for internal use only.
     * Its structure is subject to change. No code other than the XMLTemplateProcessor must use it.
     */
    parseValue: function(sValue, _oOptions) {
      if (sValue === "") {
        return void 0;
      }
      if (!/^\.?[A-Z_\$][A-Z0-9_\$]*(\.[A-Z_\$][A-Z0-9_\$]*)*$/i.test(sValue)) {
        throw new Error("Function references must consist of dot separated simple identifiers (A-Z, 0-9, _ or $) only, but was '" + sValue + "'");
      }
      var fnResult, oContext = _oOptions && _oOptions.context, oLocals = _oOptions && _oOptions.locals;
      fnResult = resolveReference(sValue, Object.assign({
        ".": oContext
      }, oLocals));
      if (fnResult && this.isValid(fnResult)) {
        return fnResult;
      }
      throw new TypeError("The string '" + sValue + "' couldn't be resolved to a function");
    }
  })
};
var arrayType = createType("array", {
  defaultValue: []
});
function createArrayType(componentType) {
  fnAssert(componentType instanceof DataType, "DataType.<createArrayType>: componentType must be a DataType");
  var oType = Object.create(DataType.prototype);
  oType.getName = function() {
    return componentType.getName() + "[]";
  };
  oType.getComponentType = function() {
    return componentType;
  };
  oType.isValid = function(aValues) {
    if (aValues === null) {
      return true;
    }
    if (Array.isArray(aValues)) {
      for (var i3 = 0; i3 < aValues.length; i3++) {
        if (!componentType.isValid(aValues[i3])) {
          return false;
        }
      }
      return true;
    }
    return false;
  };
  oType.parseValue = function(sValue) {
    var aValues = sValue.split(",");
    for (var i3 = 0; i3 < aValues.length; i3++) {
      aValues[i3] = componentType.parseValue(aValues[i3]);
    }
    return aValues;
  };
  oType.isArrayType = function() {
    return true;
  };
  oType.getBaseType = function() {
    return arrayType;
  };
  return oType;
}
const mEnumRegistry = /* @__PURE__ */ Object.create(null);
function createEnumType(sTypeName, oEnum) {
  var mValues = {}, sDefaultValue;
  for (var sName in oEnum) {
    var sValue = oEnum[sName];
    if (!sDefaultValue) {
      sDefaultValue = sValue;
    }
    if (typeof sValue !== "string") {
      throw new Error("Value " + sValue + " for enum type " + sTypeName + " is not a string");
    }
    if (!mValues.hasOwnProperty(sValue) || sName == sValue) {
      mValues[sValue] = sName;
    }
  }
  var oType = Object.create(DataType.prototype);
  oType.getName = function() {
    return sTypeName;
  };
  oType.isValid = function(v2) {
    return typeof v2 === "string" && mValues.hasOwnProperty(v2);
  };
  oType.parseValue = function(sValue2) {
    return oEnum[sValue2];
  };
  oType.getDefaultValue = function() {
    return sDefaultValue;
  };
  oType.getBaseType = function() {
    return mTypes.string;
  };
  oType.isEnumType = function() {
    return true;
  };
  oType.getEnumValues = function() {
    return oEnum;
  };
  return oType;
}
DataType.getType = function(sTypeName) {
  fnAssert(sTypeName && typeof sTypeName === "string", "sTypeName must be a non-empty string");
  var oType = mTypes[sTypeName];
  if (!(oType instanceof DataType)) {
    if (sTypeName.indexOf("[]", sTypeName.length - 2) > 0) {
      var sComponentTypeName = sTypeName.slice(0, -2), oComponentType = this.getType(sComponentTypeName);
      oType = oComponentType && createArrayType(oComponentType);
      if (oType) {
        mTypes[sTypeName] = oType;
      }
    } else if (sTypeName !== "array") {
      oType = mEnumRegistry[sTypeName];
      if (oType == null) {
        oType = ObjectPath.get(sTypeName);
        if (oType != null) {
          Log.error(`The type '${sTypeName}' was accessed via globals. Defining enums via globals is deprecated. Please require the module 'sap/ui/base/DataType' and call the static 'DataType.registerEnum' API.`);
        }
      }
      if (oType instanceof DataType) {
        mTypes[sTypeName] = oType;
      } else if (fnIsPlainObject(oType)) {
        oType = mTypes[sTypeName] = createEnumType(sTypeName, oType);
        delete mEnumRegistry[sTypeName];
      } else if (oType) {
        Log.warning("[FUTURE FATAL] '" + sTypeName + "' is not a valid data type. Falling back to type 'any'.");
        oType = mTypes.any;
      } else {
        Log.error("[FUTURE FATAL] data type '" + sTypeName + "' could not be found.");
        oType = void 0;
      }
    }
  }
  return oType;
};
DataType.createType = function(sName, mSettings, vBase) {
  fnAssert(typeof sName === "string" && sName, "DataType.createType: type name must be a non-empty string");
  fnAssert(vBase == null || vBase instanceof DataType || typeof vBase === "string" && vBase, "DataType.createType: base type must be empty or a DataType or a non-empty string");
  if (/[\[\]]/.test(sName)) {
    Log.error("[FUTURE FATAL] DataType.createType: array types ('something[]') must not be created with createType, they're created on-the-fly by DataType.getType");
  }
  if (typeof vBase === "string") {
    vBase = DataType.getType(vBase);
  }
  vBase = vBase || mTypes.any;
  if (vBase.isArrayType() || vBase.isEnumType()) {
    Log.error("[FUTURE FATAL] DataType.createType: base type must not be an array- or enum-type");
  }
  if (sName === "array" || mTypes[sName] instanceof DataType) {
    if (sName === "array" || mTypes[sName].getBaseType() == null) {
      throw new Error("DataType.createType: primitive or hidden type " + sName + " can't be re-defined");
    }
    Log.warning("[FUTURE FATAL] DataTypes.createType: type " + sName + " is redefined. This is an unsupported usage of DataType and might cause issues.");
  }
  var oType = mTypes[sName] = createType(sName, mSettings, vBase);
  return oType;
};
var oInterfaces = /* @__PURE__ */ new Set();
DataType.registerInterfaceTypes = function(aTypes) {
  aTypes.forEach(function(sType) {
    oInterfaces.add(sType);
    ObjectPath.set(sType, sType);
  });
};
DataType.registerEnum = function(sTypeName, mContent) {
  mEnumRegistry[sTypeName] = mContent;
};
DataType._isEnumCandidate = function(oObject) {
  return !Object.keys(oObject).some((key) => {
    const propertyType = typeof oObject[key];
    return propertyType === "object" || propertyType === "function";
  });
};
DataType.isInterfaceType = function(sType) {
  return oInterfaces.has(sType);
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var CalendarType = {
  /**
   * The Gregorian calendar
   * @public
   */
  Gregorian: "Gregorian",
  /**
   * The Islamic calendar
   * @public
   */
  Islamic: "Islamic",
  /**
   * The Japanese emperor calendar
   * @public
   */
  Japanese: "Japanese",
  /**
   * The Persian Jalali calendar
   * @public
   */
  Persian: "Persian",
  /**
   * The Thai buddhist calendar
   * @public
   */
  Buddhist: "Buddhist"
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
DataType.registerEnum("sap.ui.core.CalendarType", CalendarType);
const M_ISO639_OLD_TO_NEW = {
  "iw": "he",
  "ji": "yi"
};
const getModernLanguage = (sLanguage) => {
  return M_ISO639_OLD_TO_NEW[sLanguage] || sLanguage;
};
const Localization = {
  getModernLanguage
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var rLanguageTag = /^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?((?:-[0-9A-Z]{5,8}|-[0-9][0-9A-Z]{3})*)((?:-[0-9A-WYZ](?:-[0-9A-Z]{2,8})+)*)(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;
class LanguageTag {
  /**
   * Get the language.
   *
   * Note that the case might differ from the original script tag
   * (Lower case is enforced as recommended by BCP47/ISO639).
   *
   * @type {string}
   * @public
   */
  language;
  /**
   * Get the script or <code>null</code> if none was specified.
   *
   * Note that the case might differ from the original language tag
   * (Upper case first letter and lower case reminder enforced as
   * recommended by BCP47/ISO15924)
   *
   * @type {string|null}
   * @public
   */
  script;
  /**
   * Get the region or <code>null</code> if none was specified.
   *
   * Note that the case might differ from the original script tag
   * (Upper case is enforced as recommended by BCP47/ISO3166-1).
   *
   * @type {string}
   * @public
   */
  region;
  /**
   * Get the variants as a single string or <code>null</code>.
   *
   * Multiple variants are separated by a dash '-'.
   *
   * @type {string|null}
   * @public
   */
  variant;
  /**
   * Get the variants as an array of individual variants.
   *
   * The separating dashes are not part of the result.
   * If there is no variant section in the language tag, an empty array is returned.
   *
   * @type {string[]}
   * @public
   */
  variantSubtags;
  /**
   * Get the extension as a single string or <code>null</code>.
   *
   * The extension always consists of a singleton character (not 'x'),
   * a dash '-' and one or more extension token, each separated
   * again with a dash.
   *
   * @type {string|null}
   * @public
   */
  extension;
  /**
   * Get the extensions as an array of tokens.
   *
   * The leading singleton and the separating dashes are not part of the result.
   * If there is no extensions section in the language tag, an empty array is returned.
   *
   * @type {string[]}
   * @public
   */
  extensionSubtags;
  /**
   * Get the private use section or <code>null</code>.
   *
   * @type {string}
   */
  privateUse;
  /**
   * Get the private use section as an array of tokens.
   *
   * The leading singleton and the separating dashes are not part of the result.
   * If there is no private use section in the language tag, an empty array is returned.
   *
   * @type {string[]}
   */
  privateUseSubtags;
  constructor(sLanguageTag) {
    var aResult = rLanguageTag.exec(sLanguageTag.replace(/_/g, "-"));
    if (aResult === null) {
      throw new TypeError("The given language tag'" + sLanguageTag + "' does not adhere to BCP-47.");
    }
    this.language = aResult[1] || null;
    this.script = aResult[2] || null;
    this.region = aResult[3] || null;
    this.variant = aResult[4] && aResult[4].slice(1) || null;
    this.variantSubtags = this.variant ? this.variant.split("-") : [];
    this.extension = aResult[5] && aResult[5].slice(1) || null;
    this.extensionSubtags = this.variant ? this.variant.split("-") : [];
    this.privateUse = aResult[6] || null;
    this.privateUseSubtags = this.privateUse ? this.privateUse.slice(2).split("-") : [];
    if (this.language) {
      this.language = this.language.toLowerCase();
    }
    if (this.script) {
      this.script = this.script.toLowerCase().replace(/^[a-z]/, function($2) {
        return $2.toUpperCase();
      });
    }
    if (this.region) {
      this.region = this.region.toUpperCase();
    }
    Object.freeze(this);
  }
  toString() {
    return this.#join(this.language, this.script, this.region, this.variant, this.extension, this.privateUse);
  }
  #join() {
    return Array.prototype.filter.call(arguments, Boolean).join("-");
  }
}
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var mCache = /* @__PURE__ */ Object.create(null);
var Locale = BaseObject.extend(
  "sap.ui.core.Locale",
  /** @lends sap.ui.core.Locale.prototype */
  {
    constructor: function(vLocale) {
      BaseObject.apply(this);
      if (vLocale instanceof LanguageTag) {
        this.oLanguageTag = vLocale;
        this.sLocaleId = this.oLanguageTag.toString();
      } else {
        this.oLanguageTag = new LanguageTag(vLocale);
        this.sLocaleId = vLocale;
      }
      Object.assign(this, this.oLanguageTag);
      this.sLanguage = this.language;
    },
    /**
     * Get the locale language.
     *
     * Note that the case might differ from the original script tag
     * (Lower case is enforced as recommended by BCP47/ISO639).
     *
     * @returns {string} the language code
     * @public
     */
    getLanguage: function() {
      return this.language;
    },
    /**
     * Get the locale script or <code>null</code> if none was specified.
     *
     * Note that the case might differ from the original language tag
     * (Upper case first letter and lower case reminder enforced as
     * recommended by BCP47/ISO15924)
     *
     * @returns {string|null} the script code or <code>null</code>
     * @public
     */
    getScript: function() {
      return this.script;
    },
    /**
     * Get the locale region or <code>null</code> if none was specified.
     *
     * Note that the case might differ from the original script tag
     * (Upper case is enforced as recommended by BCP47/ISO3166-1).
     *
     * @returns {string} the ISO3166-1 region code (2-letter or 3-digits)
     * @public
     */
    getRegion: function() {
      return this.region;
    },
    /**
     * Get the locale variants as a single string or <code>null</code>.
     *
     * Multiple variants are separated by a dash '-'.
     *
     * @returns {string|null} the variant or <code>null</code>
     * @public
     */
    getVariant: function() {
      return this.variant;
    },
    /**
     * Get the locale variants as an array of individual variants.
     *
     * The separating dashes are not part of the result.
     * If there is no variant section in the locale tag, an empty array is returned.
     *
     * @returns {string[]} the individual variant sections
     * @public
     */
    getVariantSubtags: function() {
      return this.variantSubtags;
    },
    /**
     * Get the locale extension as a single string or <code>null</code>.
     *
     * The extension always consists of a singleton character (not 'x'),
     * a dash '-' and one or more extension token, each separated
     * again with a dash.
     *
     * Use {@link #getExtensions} to get the individual extension tokens as an array.
     *
     * @returns {string|null} the extension or <code>null</code>
     * @public
     */
    getExtension: function() {
      return this.extension;
    },
    /**
     * Get the locale extensions as an array of tokens.
     *
     * The leading singleton and the separating dashes are not part of the result.
     * If there is no extensions section in the locale tag, an empty array is returned.
     *
     * @returns {string[]} the individual extension sections
     * @public
     */
    getExtensionSubtags: function() {
      return this.extensionSubtags;
    },
    /**
     * Get the locale private use section or <code>null</code>.
     *
     * @returns {string} the private use section
     * @public
     */
    getPrivateUse: function() {
      return this.privateUse;
    },
    /**
     * Get the locale private use section as an array of tokens.
     *
     * The leading singleton and the separating dashes are not part of the result.
     * If there is no private use section in the locale tag, an empty array is returned.
     *
     * @returns {string[]} the tokens of the private use section
     * @public
     */
    getPrivateUseSubtags: function() {
      return this.privateUseSubtags;
    },
    /**
     * Check if a subtag is provided
     *
     * @param {string} sSubtag The subtag to check
     * @returns {boolean} Wether the subtag is provided or not
     */
    hasPrivateUseSubtag: function(sSubtag) {
      fnAssert(sSubtag && sSubtag.match(/^[0-9A-Z]{1,8}$/i), "subtag must be a valid BCP47 private use tag");
      return this.privateUseSubtags.indexOf(sSubtag) >= 0;
    },
    toString: function() {
      return this.oLanguageTag.toString();
    },
    /**
     * Best guess to get a proper SAP Logon Language for this locale.
     *
     * Conversions taken into account:
     * <ul>
     * <li>use the language part only</li>
     * <li>convert old ISO639 codes to newer ones (e.g. 'iw' to 'he')</li>
     * <li>for Chinese, map 'Traditional Chinese' or region 'TW' to SAP proprietary code 'zf'</li>
     * <li>map private extensions x-saptrc, x-sappsd and saprigi to SAP pseudo languages '1Q', '2Q' and '3Q'</li>
     * <li>remove ext. language sub tags</li>
     * <li>convert to uppercase</li>
     * </ul>
     *
     * Note that the conversion also returns a result for languages that are not
     * supported by the default set of SAP languages. This method has no knowledge
     * about the concrete languages of any given backend system.
     *
     * @returns {string} a language code that should
     * @public
     * @since 1.17.0
     * @deprecated As of 1.44, use {@link sap.ui.core.Configuration#getSAPLogonLanguage} instead
     *   as that class allows to configure an SAP Logon language.
     */
    getSAPLogonLanguage: function() {
      return Localization._getSAPLogonLanguage(this);
    }
  }
);
Locale._getCoreLocale = function(oLocale) {
  if (oLocale instanceof LanguageTag) {
    oLocale = mCache[oLocale.toString()] || new Locale(oLocale);
    mCache[oLocale.toString()] = oLocale;
  }
  return oLocale;
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var oToken = /* @__PURE__ */ Object.create(null);
var fnMerge = function() {
  var src, copyIsArray, copy, name2, options, clone, target = arguments[2] || {}, i3 = 3, length = arguments.length, deep = arguments[0] || false, skipToken = arguments[1] ? void 0 : oToken;
  if (typeof target !== "object" && typeof target !== "function") {
    target = {};
  }
  for (; i3 < length; i3++) {
    if ((options = arguments[i3]) != null) {
      for (name2 in options) {
        src = target[name2];
        copy = options[name2];
        if (name2 === "__proto__" || target === copy) {
          continue;
        }
        if (deep && copy && (fnIsPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
          if (copyIsArray) {
            copyIsArray = false;
            clone = src && Array.isArray(src) ? src : [];
          } else {
            clone = src && fnIsPlainObject(src) ? src : {};
          }
          target[name2] = fnMerge(deep, arguments[1], clone, copy);
        } else if (copy !== skipToken) {
          target[name2] = copy;
        }
      }
    }
  }
  return target;
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var fnExtend = function() {
  var args = [false, true];
  args.push.apply(args, arguments);
  return fnMerge.apply(null, args);
};
const loadResource = (moduleName) => {
  const moduleFormat = moduleName.match(/sap\/ui\/core\/cldr\/(\w+)\.json/);
  if (!moduleFormat) {
    throw new Error(`Unknown module "${moduleName}"`);
  }
  const localeId = moduleFormat[1];
  return S$1(localeId);
};
const LoaderExtensions = {
  loadResource
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var CalendarWeekNumbering = {
  /**
   * The default calendar week numbering:
   *
   * The framework determines the week numbering scheme; currently it is derived from the
   * active format locale. Future versions of UI5 might select a different week numbering
   * scheme.
   *
   * @public
   */
  Default: "Default",
  /**
   * Official calendar week numbering in most of Europe (ISO 8601 standard):
   * <ul>
   * <li>Monday is first day of the week,
   * <li>the week containing January 4th is first week of the year.
   * </ul>
   *
   * @public
   */
  ISO_8601: "ISO_8601",
  /**
   * Official calendar week numbering in much of the Middle East (Middle Eastern calendar):
   * <ul>
   * <li>Saturday is first day of the week,
   * <li>the week containing January 1st is first week of the year.
   * </ul>
   *
   * @public
   */
  MiddleEastern: "MiddleEastern",
  /**
   * Official calendar week numbering in the United States, Canada, Brazil, Israel, Japan, and
   * other countries (Western traditional calendar):
   * <ul>
   * <li>Sunday is first day of the week,
   * <li>the week containing January 1st is first week of the year.
   * </ul>
   *
   * @public
   */
  WesternTraditional: "WesternTraditional"
};
Object.defineProperty(CalendarWeekNumbering, "getWeekConfigurationValues", {
  // configurable : false,
  // enumerable : false,
  value: function(sCalendarWeekNumbering) {
    switch (sCalendarWeekNumbering) {
      case CalendarWeekNumbering.ISO_8601:
        return {
          firstDayOfWeek: 1,
          minimalDaysInFirstWeek: 4
        };
      case CalendarWeekNumbering.MiddleEastern:
        return {
          firstDayOfWeek: 6,
          minimalDaysInFirstWeek: 1
        };
      case CalendarWeekNumbering.WesternTraditional:
        return {
          firstDayOfWeek: 0,
          minimalDaysInFirstWeek: 1
        };
      default:
        return void 0;
    }
  }
  // writable : false
});
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
DataType.registerEnum("sap.ui.core.date.CalendarWeekNumbering", CalendarWeekNumbering);
var rCIgnoreCase = /c/i, rEIgnoreCase = /e/i, mLegacyUnit2CurrentUnit = {
  "acceleration-meter-per-second-squared": "acceleration-meter-per-square-second",
  "concentr-milligram-per-deciliter": "concentr-milligram-ofglucose-per-deciliter",
  "concentr-part-per-million": "concentr-permillion",
  "consumption-liter-per-100kilometers": "consumption-liter-per-100-kilometer",
  "mass-metric-ton": "mass-tonne",
  "pressure-millimeter-of-mercury": "pressure-millimeter-ofhg",
  "pressure-pound-per-square-inch": "pressure-pound-force-per-square-inch",
  "pressure-inch-hg": "pressure-inch-ofhg",
  "torque-pound-foot": "torque-pound-force-foot"
}, rNumberInScientificNotation = /^([+-]?)((\d+)(?:\.(\d+))?)[eE]([+-]?\d+)$/, rTrailingZeroes = /0+$/;
const rFallbackPatternTextParts = /(.*)?\{[0|1]}(.*)?\{[0|1]}(.*)?/;
const aSupportedWidths = ["narrow", "abbreviated", "wide"];
var LocaleData$1 = BaseObject.extend(
  "sap.ui.core.LocaleData",
  /** @lends sap.ui.core.LocaleData.prototype */
  {
    constructor: function(oLocale) {
      BaseObject.apply(this);
      this.oLocale = Locale._getCoreLocale(oLocale);
      var oDataLoaded = getData(this.oLocale);
      this.mData = oDataLoaded.mData;
      this.sCLDRLocaleId = oDataLoaded.sCLDRLocaleId;
    },
    /**
     * @private
     * @ui5-restricted UI5 Web Components
     */
    _get: function() {
      return this._getDeep(this.mData, arguments);
    },
    /**
     * Retrieves merged object if overlay data is available
     * @private
     * @return {object} merged object
     */
    _getMerged: function() {
      return this._get.apply(this, arguments);
    },
    /**
     * Get month names in width "narrow", "abbreviated" or "wide". Result may contain alternative month names.
     *
     * @param {"narrow"|"abbreviated"|"wide"} sWidth
     *   The required width for the month names
     * @param {sap.ui.core.CalendarType} [sCalendarType]
     *   The type of calendar; defaults to the calendar type either set in configuration or calculated from locale
     * @returns {array}
     *   The array of month names; if no alternative exists the entry for the month is its name as a string; if
     *   there are alternative month names the entry for the month is an array of strings with the alternative names
     * @private
     */
    _getMonthsWithAlternatives: function(sWidth, sCalendarType) {
      return this._get(getCLDRCalendarName(sCalendarType), "months", "format", sWidth);
    },
    /**
     * Get standalone month names in width "narrow", "abbreviated" or "wide". Result may contain alternative month
     * names.
     *
     * @param {"narrow"|"abbreviated"|"wide"} sWidth
     *   The required width for the month names
     * @param {sap.ui.core.CalendarType} [sCalendarType]
     *   The type of calendar; defaults to the calendar type either set in configuration or calculated from locale
     * @returns {array}
     *   The array of month names; if no alternative exists the entry for the month is its name as a string; if
     *   there are alternative month names the entry for the month is an array of strings with the alternative names
     * @private
     */
    _getMonthsStandAloneWithAlternatives: function(sWidth, sCalendarType) {
      return this._get(getCLDRCalendarName(sCalendarType), "months", "stand-alone", sWidth);
    },
    _getDeep: function(oObject, aPropertyNames) {
      var oResult = oObject;
      for (var i3 = 0; i3 < aPropertyNames.length; i3++) {
        oResult = oResult[aPropertyNames[i3]];
        if (oResult === void 0) {
          break;
        }
      }
      return oResult;
    },
    /**
     * Get orientation (left-to-right or right-to-left).
     *
     * @returns {string} character orientation for this locale
     * @public
     */
    getOrientation: function() {
      return this._get("orientation");
    },
    /**
     * Get a display name for the language of the Locale of this LocaleData, using
     * the CLDR display names for languages.
     *
     * The lookup logic works as follows:
     * 1. language code and region is checked (e.g. "en-GB")
     * 2. If not found: language code and script is checked (e.g. "zh-Hant")
     * 3. If not found language code is checked (e.g. "en")
     * 4. If it is then still not found <code>undefined</code> is returned.
     *
     * @returns {string} language name, e.g. "English", "British English", "American English"
     *  or <code>undefined</code> if language cannot be found
     * @private
     * @ui5-restricted sap.ushell
     */
    getCurrentLanguageName: function() {
      return this.getLanguageName(this.oLocale.toString());
    },
    /**
     * Gets the locale-specific language name for the given language tag.
     *
     * The languages returned by {@link #getLanguages} from the CLDR raw data do not contain the
     * language names if they can be derived from the language and the script or the territory.
     * If the map of languages contains no entry for the given language tag, derive the language
     * name from the used script or region.
     *
     * @param {string} sLanguageTag
     *   The language tag, for example "en", "en-US", "en_US", "zh-Hant", or "zh_Hant"
     * @returns {string|undefined}
     *   The language name, or <code>undefined</code> if the name cannot be determined
     * @throws {TypeError} When the given language tag isn't valid
     *
     * @public
     */
    getLanguageName: function(sLanguageTag) {
      const oLanguageTag = new LanguageTag(sLanguageTag);
      let sLanguage = Localization.getModernLanguage(oLanguageTag.language);
      let sScript = oLanguageTag.script;
      if (sLanguage === "sr" && sScript === "Latn") {
        sLanguage = "sh";
        sScript = null;
      }
      const sRegion = oLanguageTag.region;
      const oLanguages = this._get("languages");
      const sLanguageText = oLanguages[sLanguage];
      if (!sScript && !sRegion || !sLanguageText) {
        return sLanguageText;
      }
      const sResult = oLanguages[sLanguage + "_" + sRegion] || oLanguages[sLanguage + "_" + sScript];
      if (sResult) {
        return sResult;
      }
      if (sScript) {
        const sScriptText = this._get("scripts")[sScript];
        if (sScriptText) {
          return sLanguageText + " (" + sScriptText + ")";
        }
      }
      if (sRegion) {
        const sRegionText = this._get("territories")[sRegion];
        if (sRegionText) {
          return sLanguageText + " (" + sRegionText + ")";
        }
      }
      return sLanguageText;
    },
    /**
     * Gets locale-specific language names, as available in the CLDR raw data.
     *
     * To avoid redundancies, with CLDR version 43 only language names are contained which cannot be derived from
     * the language and the script or the territory. If a language tag is not contained in the map, use
     * {@link #getLanguageName} to get the derived locale-specific language name for that language tag.
     *
     * @returns {Object<string, string>} Maps a language tag to the locale-specific language name
     *
     * @public
     */
    getLanguages: function() {
      const oLanguages = this._get("languages");
      ["ar_001", "de_AT", "de_CH", "en_AU", "en_CA", "en_GB", "en_US", "es_419", "es_ES", "es_MX", "fa_AF", "fr_CA", "fr_CH", "nds_NL", "nl_BE", "pt_BR", "pt_PT", "ro_MD", "sw_CD", "zh_Hans", "zh_Hant"].forEach((sLanguageTag) => {
        if (!oLanguages[sLanguageTag]) {
          oLanguages[sLanguageTag] = this.getLanguageName(sLanguageTag);
        }
      });
      return oLanguages;
    },
    /**
     * Gets locale-specific script names, as available in the CLDR raw data.
     *
     * To avoid redundancies, with CLDR version 43 only scripts are contained for which the language-specific name
     * is different from the script key. If a script key is not contained in the map, use the script key as script
     * name.
     *
     * @returns {Object<string, string>} Maps a script key to the locale-specific script name
     *
     * @public
     */
    getScripts: function() {
      return this._get("scripts");
    },
    /**
     * Gets locale-specific territory names, as available in the CLDR raw data.
     *
     * To avoid redundancies, with CLDR version 43 only territories are contained for which the language-specific
     * name is different from the territory key.
     *
     * @returns {Object<string, string>} Maps a territory key to the locale-specific territory name
     *
     * @public
     */
    getTerritories: function() {
      return this._get("territories");
    },
    /**
     * Get month names in width "narrow", "abbreviated" or "wide".
     *
     * @param {"narrow"|"abbreviated"|"wide"} sWidth
     *   The required width for the month names
     * @param {sap.ui.core.CalendarType} [sCalendarType]
     *   The type of calendar; defaults to the calendar type either set in configuration or calculated from locale
     * @returns {string[]}
     *   The array of month names
     * @public
     */
    getMonths: function(sWidth, sCalendarType) {
      fnAssert(aSupportedWidths.includes(sWidth), "sWidth must be narrow, abbreviated or wide");
      return this._get(getCLDRCalendarName(sCalendarType), "months", "format", sWidth).map((vMonthName) => {
        return Array.isArray(vMonthName) ? vMonthName[0] : vMonthName;
      });
    },
    /**
     * Get standalone month names in width "narrow", "abbreviated" or "wide".
     *
     * @param {"narrow"|"abbreviated"|"wide"} sWidth
     *   The required width for the month names
     * @param {sap.ui.core.CalendarType} [sCalendarType]
     *   The type of calendar; defaults to the calendar type either set in configuration or calculated from locale
     * @returns {string[]}
     *   The array of standalone month names
     * @public
     */
    getMonthsStandAlone: function(sWidth, sCalendarType) {
      fnAssert(aSupportedWidths.includes(sWidth), "sWidth must be narrow, abbreviated or wide");
      return this._get(getCLDRCalendarName(sCalendarType), "months", "stand-alone", sWidth).map((vMonthName) => {
        return Array.isArray(vMonthName) ? vMonthName[0] : vMonthName;
      });
    },
    /**
     * Get day names in width "narrow", "abbreviated" or "wide".
     *
     * @param {string} sWidth the required width for the day names
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {array} array of day names (starting with Sunday)
     * @public
     */
    getDays: function(sWidth, sCalendarType) {
      fnAssert(sWidth == "narrow" || sWidth == "abbreviated" || sWidth == "wide" || sWidth == "short", "sWidth must be narrow, abbreviate, wide or short");
      return this._get(getCLDRCalendarName(sCalendarType), "days", "format", sWidth);
    },
    /**
     * Get standalone day names in width "narrow", "abbreviated" or "wide".
     *
     * @param {string} sWidth the required width for the day names
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {array} array of day names (starting with Sunday)
     * @public
     */
    getDaysStandAlone: function(sWidth, sCalendarType) {
      fnAssert(sWidth == "narrow" || sWidth == "abbreviated" || sWidth == "wide" || sWidth == "short", "sWidth must be narrow, abbreviated, wide or short");
      return this._get(getCLDRCalendarName(sCalendarType), "days", "stand-alone", sWidth);
    },
    /**
     * Get quarter names in width "narrow", "abbreviated" or "wide".
     *
     * @param {string} sWidth the required width for the quarter names
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {array} array of quarters
     * @public
     */
    getQuarters: function(sWidth, sCalendarType) {
      fnAssert(sWidth == "narrow" || sWidth == "abbreviated" || sWidth == "wide", "sWidth must be narrow, abbreviated or wide");
      return this._get(getCLDRCalendarName(sCalendarType), "quarters", "format", sWidth);
    },
    /**
     * Get standalone quarter names in width "narrow", "abbreviated" or "wide".
     *
     * @param {string} sWidth the required width for the quarter names
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {array} array of quarters
     * @public
     */
    getQuartersStandAlone: function(sWidth, sCalendarType) {
      fnAssert(sWidth == "narrow" || sWidth == "abbreviated" || sWidth == "wide", "sWidth must be narrow, abbreviated or wide");
      return this._get(getCLDRCalendarName(sCalendarType), "quarters", "stand-alone", sWidth);
    },
    /**
     * Get day periods in width "narrow", "abbreviated" or "wide".
     *
     * @param {string} sWidth the required width for the day period names
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {array} array of day periods (AM, PM)
     * @public
     */
    getDayPeriods: function(sWidth, sCalendarType) {
      fnAssert(sWidth == "narrow" || sWidth == "abbreviated" || sWidth == "wide", "sWidth must be narrow, abbreviated or wide");
      return this._get(getCLDRCalendarName(sCalendarType), "dayPeriods", "format", sWidth);
    },
    /**
     * Get standalone day periods in width "narrow", "abbreviated" or "wide".
     *
     * @param {string} sWidth the required width for the day period names
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {array} array of day periods (AM, PM)
     * @public
     */
    getDayPeriodsStandAlone: function(sWidth, sCalendarType) {
      fnAssert(sWidth == "narrow" || sWidth == "abbreviated" || sWidth == "wide", "sWidth must be narrow, abbreviated or wide");
      return this._get(getCLDRCalendarName(sCalendarType), "dayPeriods", "stand-alone", sWidth);
    },
    /**
     * Get date pattern in format "short", "medium", "long" or "full".
     *
     * @param {string} sStyle the required style for the date pattern
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {string} the selected date pattern
     * @public
     */
    getDatePattern: function(sStyle, sCalendarType) {
      fnAssert(sStyle == "short" || sStyle == "medium" || sStyle == "long" || sStyle == "full", "sStyle must be short, medium, long or full");
      return this._get(getCLDRCalendarName(sCalendarType), "dateFormats", sStyle);
    },
    /**
     * Get flexible day periods in style format "abbreviated", "narrow" or "wide".
     *
     * @param {string} sWidth
     *   The required width for the flexible day period names
     * @param {sap.ui.core.CalendarType} [sCalendarType]
     *   The type of calendar. If it's not set, it falls back to the calendar type either set in
     *   configuration or calculated from locale.
     * @returns {object|undefined}
     *   Object of flexible day periods or 'undefined' if none can be found
     *
     * @example <caption>Output</caption>
     * {
     *   "midnight": "midnight",
     *   "noon": "noon",
     *   "morning1": "in the morning",
     *   "afternoon1": "in the afternoon",
     *   "evening1": "in the evening",
     *   "night1": "at night"
     * }
     *
     * @private
     */
    getFlexibleDayPeriods: function(sWidth, sCalendarType) {
      return this._get(getCLDRCalendarName(sCalendarType), "flexibleDayPeriods", "format", sWidth);
    },
    /**
     * Get flexible day periods in style format "abbreviated", "narrow" or "wide" for case
     * "stand-alone".
     *
     * @param {string} sWidth
     *   The required width for the flexible day period names
     * @param {sap.ui.core.CalendarType} [sCalendarType]
     *   The type of calendar. If it's not set, it falls back to the calendar type either set in
     *   configuration or calculated from locale.
     * @returns {object|undefined}
     *   Object of flexible day periods or 'undefined' if none can be found
     *
     * @example <caption>Output</caption>
     * {
     *   "midnight": "midnight",
     *   "noon": "noon",
     *   "morning1": "in the morning",
     *   "afternoon1": "in the afternoon",
     *   "evening1": "in the evening",
     *   "night1": "at night"
     * }
     *
     * @private
     */
    getFlexibleDayPeriodsStandAlone: function(sWidth, sCalendarType) {
      return this._get(getCLDRCalendarName(sCalendarType), "flexibleDayPeriods", "stand-alone", sWidth);
    },
    /**
     * Get flexible day period of time or a point in time
     *
     * @param {int} iHour Hour
     * @param {int} iMinute Minute
     * @returns {string} Key of flexible day period of time e.g. <code>afternoon2</code>
     *
     * @private
     */
    getFlexibleDayPeriodOfTime: function(iHour, iMinute) {
      var iAbsoluteMinutes, oDayPeriodRules, sPeriodMatch;
      iAbsoluteMinutes = (iHour * 60 + iMinute) % 1440;
      oDayPeriodRules = this._get("dayPeriodRules");
      function parseToAbsoluteMinutes(sValue) {
        var aSplit = sValue.split(":"), sHour = aSplit[0], sMinute = aSplit[1];
        return parseInt(sHour) * 60 + parseInt(sMinute);
      }
      sPeriodMatch = Object.keys(oDayPeriodRules).find(function(sDayPeriodRule) {
        var oDayPeriodRule = oDayPeriodRules[sDayPeriodRule];
        return oDayPeriodRule["_at"] && parseToAbsoluteMinutes(oDayPeriodRule["_at"]) === iAbsoluteMinutes;
      });
      if (sPeriodMatch) {
        return sPeriodMatch;
      }
      return Object.keys(oDayPeriodRules).find(function(sDayPeriodRule) {
        var iEndValue, aIntervals, iStartValue, oDayPeriodRule = oDayPeriodRules[sDayPeriodRule];
        if (oDayPeriodRule["_at"]) {
          return false;
        }
        iStartValue = parseToAbsoluteMinutes(oDayPeriodRule["_from"]);
        iEndValue = parseToAbsoluteMinutes(oDayPeriodRule["_before"]);
        if (iStartValue > iEndValue) {
          aIntervals = [
            {
              start: iStartValue,
              end: 1440
            },
            // 24 * 60
            {
              start: 0,
              end: iEndValue
            }
          ];
        } else {
          aIntervals = [{
            start: iStartValue,
            end: iEndValue
          }];
        }
        return aIntervals.some(function(oInterval) {
          return oInterval.start <= iAbsoluteMinutes && oInterval.end > iAbsoluteMinutes;
        });
      });
    },
    /**
     * Get time pattern in style "short", "medium", "long" or "full".
     *
     * @param {string} sStyle the required style for the date pattern
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {string} the selected time pattern
     * @public
     */
    getTimePattern: function(sStyle, sCalendarType) {
      fnAssert(sStyle == "short" || sStyle == "medium" || sStyle == "long" || sStyle == "full", "sStyle must be short, medium, long or full");
      return this._get(getCLDRCalendarName(sCalendarType), "timeFormats", sStyle);
    },
    /**
     * Get datetime pattern in style "short", "medium", "long" or "full".
     *
     * @param {string} sStyle the required style for the datetime pattern
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {string} the selected datetime pattern
     * @public
     */
    getDateTimePattern: function(sStyle, sCalendarType) {
      fnAssert(sStyle == "short" || sStyle == "medium" || sStyle == "long" || sStyle == "full", "sStyle must be short, medium, long or full");
      return this._get(getCLDRCalendarName(sCalendarType), "dateTimeFormats", sStyle);
    },
    /**
     * Get combined datetime pattern with given date and time style.
     *
     * @param {string} sDateStyle the required style for the date part
     * @param {string} sTimeStyle the required style for the time part
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {string} the combined datetime pattern
     * @public
     */
    getCombinedDateTimePattern: function(sDateStyle, sTimeStyle, sCalendarType) {
      fnAssert(sDateStyle == "short" || sDateStyle == "medium" || sDateStyle == "long" || sDateStyle == "full", "sStyle must be short, medium, long or full");
      fnAssert(sTimeStyle == "short" || sTimeStyle == "medium" || sTimeStyle == "long" || sTimeStyle == "full", "sStyle must be short, medium, long or full");
      var sDateTimePattern = this.getDateTimePattern(sDateStyle, sCalendarType), sDatePattern = this.getDatePattern(sDateStyle, sCalendarType), sTimePattern = this.getTimePattern(sTimeStyle, sCalendarType);
      return sDateTimePattern.replace("{0}", sTimePattern).replace("{1}", sDatePattern);
    },
    /**
     * Get combined pattern with datetime and timezone for the given date and time style.
     *
     * @example
     * // locale de
     * oLocaleData.getCombinedDateTimeWithTimezonePattern("long", "long");
     * // "d. MMMM y 'um' HH:mm:ss z VV"
     *
     * // locale en_GB
     * oLocaleData.getCombinedDateTimeWithTimezonePattern("long", "long");
     * // "d MMMM y 'at' HH:mm:ss z VV"
     *
     * @param {string} sDateStyle The required style for the date part
     * @param {string} sTimeStyle The required style for the time part
     * @param {sap.ui.core.CalendarType} [sCalendarType] The type of calendar. If it's not set,
     *   it falls back to the calendar type either set in the configuration or calculated from
     *   the locale.
     * @returns {string} the combined pattern with datetime and timezone
     * @private
     * @ui5-restricted sap.ui.core.format.DateFormat
     * @since 1.101
     */
    getCombinedDateTimeWithTimezonePattern: function(sDateStyle, sTimeStyle, sCalendarType) {
      return this.applyTimezonePattern(this.getCombinedDateTimePattern(sDateStyle, sTimeStyle, sCalendarType));
    },
    /**
     * Applies the timezone to the pattern
     *
     * @param {string} sPattern pattern, e.g. <code>y</code>
     * @returns {string} applied timezone, e.g. <code>y VV</code>
     * @private
     * @ui5-restricted sap.ui.core.format.DateFormat
     * @since 1.101
     */
    applyTimezonePattern: function(sPattern) {
      var aPatterns = [sPattern];
      var aMissingTokens = [{
        group: "Timezone",
        length: 2,
        field: "zone",
        symbol: "V"
      }];
      this._appendItems(aPatterns, aMissingTokens);
      return aPatterns[0];
    },
    /**
     * Retrieves all timezone translations.
     *
     * E.g. for locale "en"
     * <pre>
     * {
     *  "America/New_York": "Americas, New York"
     *  ...
     * }
     * </pre>
     *
     * @return {Object<string, string>} the mapping, with 'key' being the IANA timezone ID, and
     * 'value' being the translation.
     * @ui5-restricted sap.ui.core.format.DateFormat, sap.ui.export, sap.ushell
     * @private
     */
    getTimezoneTranslations: function() {
      var sLocale = this.oLocale.toString();
      var mTranslations = LocaleData$1._mTimezoneTranslations[sLocale];
      if (!mTranslations) {
        LocaleData$1._mTimezoneTranslations[sLocale] = mTranslations = _resolveTimezoneTranslationStructure(this._get("timezoneNames"));
      }
      return Object.assign({}, mTranslations);
    },
    /**
     * Get custom datetime pattern for a given skeleton format.
     *
     * The format string does contain pattern symbols (e.g. "yMMMd" or "Hms") and will be converted into the pattern in the used
     * locale, which matches the wanted symbols best. The symbols must be in canonical order, that is:
     * Era (G), Year (y/Y), Quarter (q/Q), Month (M/L), Week (w/W), Day-Of-Week (E/e/c), Day (d/D),
     * Hour (h/H/k/K/), Minute (m), Second (s), Timezone (z/Z/v/V/O/X/x)
     *
     * See https://unicode.org/reports/tr35/tr35-dates.html#availableFormats_appendItems
     *
     * @param {string} sSkeleton the wanted skeleton format for the datetime pattern
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {string} the best matching datetime pattern
     * @since 1.34
     * @public
     */
    getCustomDateTimePattern: function(sSkeleton, sCalendarType) {
      var oAvailableFormats = this._get(getCLDRCalendarName(sCalendarType), "dateTimeFormats", "availableFormats");
      return this._getFormatPattern(sSkeleton, oAvailableFormats, sCalendarType);
    },
    /**
     * Returns the interval format with the given Id (see CLDR documentation for valid Ids)
     * or the fallback format if no interval format with that Id is known.
     *
     * The empty Id ("") might be used to retrieve the interval format fallback.
     *
     * @param {string} sId Id of the interval format, e.g. "d-d"
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {string} interval format string with placeholders {0} and {1}
     * @public
     * @since 1.17.0
     */
    getIntervalPattern: function(sId, sCalendarType) {
      var oIntervalFormats = this._get(getCLDRCalendarName(sCalendarType), "dateTimeFormats", "intervalFormats"), aIdParts, sIntervalId, sDifference, oInterval, sPattern;
      if (sId) {
        aIdParts = sId.split("-");
        sIntervalId = aIdParts[0];
        sDifference = aIdParts[1];
        oInterval = oIntervalFormats[sIntervalId];
        if (oInterval) {
          sPattern = oInterval[sDifference];
          if (sPattern) {
            return sPattern;
          }
        }
      }
      return oIntervalFormats.intervalFormatFallback;
    },
    /**
     * Get combined interval pattern using a given pattern and the fallback interval pattern.
     *
     * If a skeleton based pattern is not available or not wanted, this method can be used to create an interval
     * pattern based on a given pattern, using the fallback interval pattern.
     *
     * @param {string} sPattern the single date pattern to use within the interval pattern
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {string} the calculated interval pattern
     * @since 1.46
     * @public
     */
    getCombinedIntervalPattern: function(sPattern, sCalendarType) {
      const oIntervalFormats = this._get(getCLDRCalendarName(sCalendarType), "dateTimeFormats", "intervalFormats");
      const [
        /*sAll*/
        ,
        sTextBefore,
        sTextBetween,
        sTextAfter
      ] = rFallbackPatternTextParts.exec(oIntervalFormats.intervalFormatFallback);
      return LocaleData$1._escapeIfNeeded(sTextBefore) + sPattern + LocaleData$1._escapeIfNeeded(sTextBetween) + sPattern + LocaleData$1._escapeIfNeeded(sTextAfter);
    },
    /**
     * Get interval pattern for a given skeleton format.
     *
     * The format string does contain pattern symbols (e.g. "yMMMd" or "Hms") and will be converted into the pattern in the used
     * locale, which matches the wanted symbols best. The symbols must be in canonical order, that is:
     * Era (G), Year (y/Y), Quarter (q/Q), Month (M/L), Week (w/W), Day-Of-Week (E/e/c), Day (d/D),
     * Hour (h/H/k/K/), Minute (m), Second (s), Timezone (z/Z/v/V/O/X/x)
     *
     * See https://unicode.org/reports/tr35/tr35-dates.html#availableFormats_appendItems
     *
     * @param {string} sSkeleton the wanted skeleton format for the datetime pattern
     * @param {object|string} vGreatestDiff is either a string which represents the symbol matching the greatest difference in the two dates to format or an object which contains key-value pairs.
     *  The value is always true. The key is one of the date field symbol groups whose value are different between the two dates. The key can only be set with 'Year', 'Quarter', 'Month', 'Week',
     *  'Day', 'DayPeriod', 'Hour', 'Minute', or 'Second'.
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar. If it's not set, it falls back to the calendar type either set in configuration or calculated from locale.
     * @returns {string|string[]} the best matching interval pattern if interval difference is given otherwise an array with all possible interval patterns which match the given skeleton format
     * @since 1.46
     * @public
     */
    getCustomIntervalPattern: function(sSkeleton, vGreatestDiff, sCalendarType) {
      var oAvailableFormats = this._get(getCLDRCalendarName(sCalendarType), "dateTimeFormats", "intervalFormats");
      return this._getFormatPattern(sSkeleton, oAvailableFormats, sCalendarType, vGreatestDiff);
    },
    /* Helper functions for skeleton pattern processing */
    _getFormatPattern: function(sSkeleton, oAvailableFormats, sCalendarType, vDiff) {
      var vPattern, aPatterns, oIntervalFormats;
      if (!vDiff) {
        vPattern = oAvailableFormats[sSkeleton];
      } else if (typeof vDiff === "string") {
        if (vDiff == "j" || vDiff == "J") {
          vDiff = this.getPreferredHourSymbol();
        }
        oIntervalFormats = oAvailableFormats[sSkeleton];
        vPattern = oIntervalFormats && oIntervalFormats[vDiff];
      }
      if (vPattern) {
        if (typeof vPattern === "object") {
          aPatterns = Object.keys(vPattern).map(function(sKey) {
            return vPattern[sKey];
          });
        } else {
          return vPattern;
        }
      }
      if (!aPatterns) {
        aPatterns = this._createFormatPattern(sSkeleton, oAvailableFormats, sCalendarType, vDiff);
      }
      if (aPatterns && aPatterns.length === 1) {
        return aPatterns[0];
      }
      return aPatterns;
    },
    _createFormatPattern: function(sSkeleton, oAvailableFormats, sCalendarType, vDiff) {
      var aTokens = this._parseSkeletonFormat(sSkeleton), aPatterns, oBestMatch = this._findBestMatch(aTokens, sSkeleton, oAvailableFormats), oToken2, oAvailableDateTimeFormats, oSymbol, oGroup, sPattern, sSinglePattern, sDiffSymbol, sDiffGroup, rMixedSkeleton = /^([GyYqQMLwWEecdD]+)([hHkKjJmszZvVOXx]+)$/, bSingleDate, i3;
      if (vDiff) {
        if (typeof vDiff === "string") {
          sDiffGroup = mCLDRSymbols[vDiff] ? mCLDRSymbols[vDiff].group : "";
          if (sDiffGroup) {
            bSingleDate = mCLDRSymbolGroups[sDiffGroup].index > aTokens[aTokens.length - 1].index;
          }
          sDiffSymbol = vDiff;
        } else {
          bSingleDate = true;
          if (aTokens[0].symbol === "y" && oBestMatch && oBestMatch.pattern.G) {
            oSymbol = mCLDRSymbols["G"];
            oGroup = mCLDRSymbolGroups[oSymbol.group];
            aTokens.splice(0, 0, {
              symbol: "G",
              group: oSymbol.group,
              match: oSymbol.match,
              index: oGroup.index,
              field: oGroup.field,
              length: 1
            });
          }
          for (i3 = aTokens.length - 1; i3 >= 0; i3--) {
            oToken2 = aTokens[i3];
            if (vDiff[oToken2.group]) {
              bSingleDate = false;
              break;
            }
          }
          for (i3 = 0; i3 < aTokens.length; i3++) {
            oToken2 = aTokens[i3];
            if (vDiff[oToken2.group]) {
              sDiffSymbol = oToken2.symbol;
              break;
            }
          }
          if ((sDiffSymbol == "h" || sDiffSymbol == "K") && vDiff.DayPeriod) {
            sDiffSymbol = "a";
          }
        }
        if (bSingleDate) {
          return [this.getCustomDateTimePattern(sSkeleton, sCalendarType)];
        }
        if (oBestMatch && oBestMatch.missingTokens.length === 0) {
          sPattern = oBestMatch.pattern[sDiffSymbol];
          if (sPattern && oBestMatch.distance > 0) {
            sPattern = this._expandFields(sPattern, oBestMatch.patternTokens, aTokens);
          }
        }
        if (!sPattern) {
          oAvailableDateTimeFormats = this._get(getCLDRCalendarName(sCalendarType), "dateTimeFormats", "availableFormats");
          if (rMixedSkeleton.test(sSkeleton) && "ahHkKjJms".indexOf(sDiffSymbol) >= 0) {
            sPattern = this._getMixedFormatPattern(sSkeleton, oAvailableDateTimeFormats, sCalendarType, vDiff);
          } else {
            sSinglePattern = this._getFormatPattern(sSkeleton, oAvailableDateTimeFormats, sCalendarType);
            sPattern = this.getCombinedIntervalPattern(sSinglePattern, sCalendarType);
          }
        }
        aPatterns = [sPattern];
      } else if (!oBestMatch) {
        sPattern = sSkeleton;
        aPatterns = [sPattern];
      } else {
        if (typeof oBestMatch.pattern === "string") {
          aPatterns = [oBestMatch.pattern];
        } else if (typeof oBestMatch.pattern === "object") {
          aPatterns = [];
          for (var sKey in oBestMatch.pattern) {
            sPattern = oBestMatch.pattern[sKey];
            aPatterns.push(sPattern);
          }
        }
        if (oBestMatch.distance > 0) {
          if (oBestMatch.missingTokens.length > 0) {
            if (rMixedSkeleton.test(sSkeleton)) {
              aPatterns = [this._getMixedFormatPattern(sSkeleton, oAvailableFormats, sCalendarType)];
            } else {
              aPatterns = this._expandFields(aPatterns, oBestMatch.patternTokens, aTokens);
              aPatterns = this._appendItems(aPatterns, oBestMatch.missingTokens, sCalendarType);
            }
          } else {
            aPatterns = this._expandFields(aPatterns, oBestMatch.patternTokens, aTokens);
          }
        }
      }
      if (sSkeleton.indexOf("J") >= 0) {
        aPatterns.forEach(function(sPattern2, iIndex) {
          aPatterns[iIndex] = sPattern2.replace(/ ?[abB](?=([^']*'[^']*')*[^']*)$/g, "");
        });
      }
      return aPatterns;
    },
    _parseSkeletonFormat: function(sSkeleton) {
      var aTokens = [], oToken2 = {
        index: -1
      }, sSymbol, oSymbol, oGroup;
      for (var i3 = 0; i3 < sSkeleton.length; i3++) {
        sSymbol = sSkeleton.charAt(i3);
        if (sSymbol == "j" || sSymbol == "J") {
          sSymbol = this.getPreferredHourSymbol();
        }
        if (sSymbol == oToken2.symbol) {
          oToken2.length++;
          continue;
        }
        oSymbol = mCLDRSymbols[sSymbol];
        oGroup = mCLDRSymbolGroups[oSymbol.group];
        if (oSymbol.group == "Other" || oGroup.diffOnly) {
          throw new Error("Symbol '" + sSymbol + "' is not allowed in skeleton format '" + sSkeleton + "'");
        }
        if (oGroup.index <= oToken2.index) {
          throw new Error("Symbol '" + sSymbol + "' at wrong position or duplicate in skeleton format '" + sSkeleton + "'");
        }
        oToken2 = {
          symbol: sSymbol,
          group: oSymbol.group,
          match: oSymbol.match,
          index: oGroup.index,
          field: oGroup.field,
          length: 1
        };
        aTokens.push(oToken2);
      }
      return aTokens;
    },
    _findBestMatch: function(aTokens, sSkeleton, oAvailableFormats) {
      var aTestTokens, aMissingTokens, oToken2, oTestToken, iTest, iDistance, bMatch, iFirstDiffPos, oTokenSymbol, oTestTokenSymbol, oBestMatch = {
        distance: 1e4,
        firstDiffPos: -1
      };
      for (var sTestSkeleton in oAvailableFormats) {
        if (sTestSkeleton === "intervalFormatFallback" || sTestSkeleton.indexOf("B") > -1) {
          continue;
        }
        aTestTokens = this._parseSkeletonFormat(sTestSkeleton);
        iDistance = 0;
        aMissingTokens = [];
        bMatch = true;
        if (aTokens.length < aTestTokens.length) {
          continue;
        }
        iTest = 0;
        iFirstDiffPos = aTokens.length;
        for (var i3 = 0; i3 < aTokens.length; i3++) {
          oToken2 = aTokens[i3];
          oTestToken = aTestTokens[iTest];
          if (iFirstDiffPos === aTokens.length) {
            iFirstDiffPos = i3;
          }
          if (oTestToken) {
            oTokenSymbol = mCLDRSymbols[oToken2.symbol];
            oTestTokenSymbol = mCLDRSymbols[oTestToken.symbol];
            if (oToken2.symbol === oTestToken.symbol) {
              if (oToken2.length === oTestToken.length) {
                if (iFirstDiffPos === i3) {
                  iFirstDiffPos = aTokens.length;
                }
              } else {
                if (oToken2.length < oTokenSymbol.numericCeiling ? oTestToken.length < oTestTokenSymbol.numericCeiling : oTestToken.length >= oTestTokenSymbol.numericCeiling) {
                  iDistance += Math.abs(oToken2.length - oTestToken.length);
                } else {
                  iDistance += 5;
                }
              }
              iTest++;
              continue;
            } else {
              if (oToken2.match == oTestToken.match) {
                iDistance += Math.abs(oToken2.length - oTestToken.length) + 10;
                iTest++;
                continue;
              }
            }
          }
          aMissingTokens.push(oToken2);
          iDistance += 50 - i3;
        }
        if (iTest < aTestTokens.length) {
          bMatch = false;
        }
        if (bMatch && (iDistance < oBestMatch.distance || iDistance === oBestMatch.distance && iFirstDiffPos > oBestMatch.firstDiffPos)) {
          oBestMatch.distance = iDistance;
          oBestMatch.firstDiffPos = iFirstDiffPos;
          oBestMatch.missingTokens = aMissingTokens;
          oBestMatch.pattern = oAvailableFormats[sTestSkeleton];
          oBestMatch.patternTokens = aTestTokens;
        }
      }
      if (oBestMatch.pattern) {
        return oBestMatch;
      }
    },
    _expandFields: function(vPattern, aPatternTokens, aTokens) {
      var bSinglePattern = typeof vPattern === "string";
      var aPatterns;
      if (bSinglePattern) {
        aPatterns = [vPattern];
      } else {
        aPatterns = vPattern;
      }
      var aResult = aPatterns.map(function(sPattern) {
        var mGroups = {}, mPatternGroups = {}, sResultPatterm = "", bQuoted = false, i3 = 0, iSkeletonLength, iPatternLength, iBestLength, iNewLength, oSkeletonToken, oBestToken, oSymbol, sChar;
        aTokens.forEach(function(oToken2) {
          mGroups[oToken2.group] = oToken2;
        });
        aPatternTokens.forEach(function(oToken2) {
          mPatternGroups[oToken2.group] = oToken2;
        });
        while (i3 < sPattern.length) {
          sChar = sPattern.charAt(i3);
          if (bQuoted) {
            sResultPatterm += sChar;
            if (sChar == "'") {
              bQuoted = false;
            }
          } else {
            oSymbol = mCLDRSymbols[sChar];
            if (oSymbol && mGroups[oSymbol.group] && mPatternGroups[oSymbol.group]) {
              oSkeletonToken = mGroups[oSymbol.group];
              oBestToken = mPatternGroups[oSymbol.group];
              iSkeletonLength = oSkeletonToken.length;
              iBestLength = oBestToken.length;
              iPatternLength = 1;
              while (sPattern.charAt(i3 + 1) == sChar) {
                i3++;
                iPatternLength++;
              }
              if (iSkeletonLength === iBestLength || (iSkeletonLength < oSymbol.numericCeiling ? iPatternLength >= oSymbol.numericCeiling : iPatternLength < oSymbol.numericCeiling)) {
                iNewLength = iPatternLength;
              } else {
                iNewLength = Math.max(iPatternLength, iSkeletonLength);
              }
              for (var j2 = 0; j2 < iNewLength; j2++) {
                sResultPatterm += sChar;
              }
            } else {
              sResultPatterm += sChar;
              if (sChar == "'") {
                bQuoted = true;
              }
            }
          }
          i3++;
        }
        return sResultPatterm;
      });
      return bSinglePattern ? aResult[0] : aResult;
    },
    _appendItems: function(aPatterns, aMissingTokens, sCalendarType) {
      var oAppendItems = this._get(getCLDRCalendarName(sCalendarType), "dateTimeFormats", "appendItems");
      aPatterns.forEach(function(sPattern, iIndex) {
        var sDisplayName, sAppendPattern, sAppendField;
        aMissingTokens.forEach(function(oToken2) {
          sAppendPattern = oAppendItems[oToken2.group];
          sDisplayName = "'" + this.getDisplayName(oToken2.field) + "'";
          sAppendField = "";
          for (var i3 = 0; i3 < oToken2.length; i3++) {
            sAppendField += oToken2.symbol;
          }
          aPatterns[iIndex] = sAppendPattern.replace(/\{0\}/, sPattern).replace(/\{1\}/, sAppendField).replace(/\{2\}/, sDisplayName);
        }.bind(this));
      }.bind(this));
      return aPatterns;
    },
    _getMixedFormatPattern: function(sSkeleton, oAvailableFormats, sCalendarType, vDiff) {
      var rMixedSkeleton = /^([GyYqQMLwWEecdD]+)([hHkKjJmszZvVOXx]+)$/, rWideMonth = /MMMM|LLLL/, rAbbrevMonth = /MMM|LLL/, rWeekDay = /E|e|c/, oResult, sDateSkeleton, sTimeSkeleton, sStyle, sDatePattern, sTimePattern, sDateTimePattern, sResultPattern;
      oResult = rMixedSkeleton.exec(sSkeleton);
      sDateSkeleton = oResult[1];
      sTimeSkeleton = oResult[2];
      sDatePattern = this._getFormatPattern(sDateSkeleton, oAvailableFormats, sCalendarType);
      if (vDiff) {
        sTimePattern = this.getCustomIntervalPattern(sTimeSkeleton, vDiff, sCalendarType);
      } else {
        sTimePattern = this._getFormatPattern(sTimeSkeleton, oAvailableFormats, sCalendarType);
      }
      if (rWideMonth.test(sDateSkeleton)) {
        sStyle = rWeekDay.test(sDateSkeleton) ? "full" : "long";
      } else if (rAbbrevMonth.test(sDateSkeleton)) {
        sStyle = "medium";
      } else {
        sStyle = "short";
      }
      sDateTimePattern = this.getDateTimePattern(sStyle, sCalendarType);
      sResultPattern = sDateTimePattern.replace(/\{1\}/, sDatePattern).replace(/\{0\}/, sTimePattern);
      return sResultPattern;
    },
    /**
     * Get number symbol "decimal", "group", "plusSign", "minusSign", "percentSign".
     *
     * @param {string} sType the required type of symbol
     * @returns {string} the selected number symbol
     * @public
     */
    getNumberSymbol: function(sType) {
      fnAssert(sType == "decimal" || sType == "group" || sType == "plusSign" || sType == "minusSign" || sType == "percentSign", "sType must be decimal, group, plusSign, minusSign or percentSign");
      return this._get("symbols-latn-" + sType);
    },
    /**
     * Get lenient number symbols for "plusSign" or "minusSign".
     *
     * @param {string} sType the required type of symbol
     * @returns {string} the selected lenient number symbols, e.g. "-‒⁻₋−➖﹣"
     * @public
     */
    getLenientNumberSymbols: function(sType) {
      fnAssert(sType == "plusSign" || sType == "minusSign", "sType must be plusSign or minusSign");
      return this._get("lenient-scope-number")[sType];
    },
    /**
     * Get decimal format pattern.
     *
     * @returns {string} The pattern
     * @public
     */
    getDecimalPattern: function() {
      return this._get("decimalFormat").standard;
    },
    /**
     * Get currency format pattern.
     *
     * CLDR format pattern:
     *
     * @example standard with currency symbol in front of the number
     * ¤#,##0.00
     * $100,000.00
     * $-100,000.00
     *
     * @example accounting with negative number pattern after the semicolon
     * ¤#,##0.00;(¤#,##0.00)
     * $100,000.00
     * ($100,000.00)
     *
     * @see https://cldr.unicode.org/translation/numbers-currency/number-patterns
     *
     * @param {string} sContext the context of the currency pattern (standard or accounting)
     * @returns {string} The pattern
     * @public
     */
    getCurrencyPattern: function(sContext) {
      return this._get("currencyFormat")[sContext] || this._get("currencyFormat").standard;
    },
    getCurrencySpacing: function(sPosition) {
      return this._get("currencyFormat", "currencySpacing", sPosition === "after" ? "afterCurrency" : "beforeCurrency");
    },
    /**
     * Get percent format pattern.
     *
     * @returns {string} The pattern
     * @public
     */
    getPercentPattern: function() {
      return this._get("percentFormat").standard;
    },
    /**
     * Get miscellaneous pattern.
     *
     * @param {string} sName the name of the misc pattern, can be "approximately", "atLeast", "atMost" or "range"
     * @returns {string} The pattern
     * @public
     */
    getMiscPattern: function(sName) {
      fnAssert(sName == "approximately" || sName == "atLeast" || sName == "atMost" || sName == "range", "sName must be approximately, atLeast, atMost or range");
      return this._get("miscPattern")[sName];
    },
    /**
     * Returns the required minimal number of days for the first week of a year.
     *
     * This is the minimal number of days of the week which must be contained in the new year
     * for the week to become the first week of the year. Depending on the country, this
     * is just a single day (in the US) or at least 4 days (in most of Europe).
     *
     * All week data information in the CLDR is provided for territories (countries).
     * If the locale of this LocaleData doesn't contain country information (e.g. if it
     * contains only a language), then the "likelySubtag" information of the CLDR
     * is taken into account to guess the "most likely" territory for the locale.
     *
     * @returns {int} minimal number of days
     * @public
     */
    getMinimalDaysInFirstWeek: function() {
      return this._get("weekData-minDays");
    },
    /**
     * Returns the day that usually is regarded as the first day
     * of a week in the current locale.
     *
     * Days are encoded as integer where Sunday=0, Monday=1 etc.
     *
     * All week data information in the CLDR is provided for territories (countries).
     * If the locale of this LocaleData doesn't contain country information (e.g. if it
     * contains only a language), then the "likelySubtag" information of the CLDR
     * is taken into account to guess the "most likely" territory for the locale.
     *
     * @returns {int} first day of week
     * @public
     */
    getFirstDayOfWeek: function() {
      return this._get("weekData-firstDay");
    },
    /**
     * Returns the first day of a weekend for the given locale.
     *
     * Days are encoded in the same way as for {@link #getFirstDayOfWeek}.
     *
     * All week data information in the CLDR is provided for territories (countries).
     * If the locale of this LocaleData doesn't contain country information (e.g. if it
     * contains only a language), then the "likelySubtag" information of the CLDR
     * is taken into account to guess the "most likely" territory for the locale.
     *
     * @returns {int} first day of weekend
     * @public
     */
    getWeekendStart: function() {
      return this._get("weekData-weekendStart");
    },
    /**
     * Returns the last day of a weekend for the given locale.
     *
     * Days are encoded in the same way as for {@link #getFirstDayOfWeek}.
     *
     * All week data information in the CLDR is provided for territories (countries).
     * If the locale of this LocaleData doesn't contain country information (e.g. if it
     * contains only a language), then the "likelySubtag" information of the CLDR
     * is taken into account to guess the "most likely" territory for the locale.
     *
     * @returns {int} last day of weekend
     * @public
     */
    getWeekendEnd: function() {
      return this._get("weekData-weekendEnd");
    },
    /**
     * Returns a map of custom currency codes, defined via global configuration.
     * @returns {object} map of custom currency codes, e.g.
     * {
     *     "AUD": "AUD",
     *     "BRL": "BRL",
     *     "EUR": "EUR",
     *     "GBP": "GBP",
     * }
     * @private
     * @ui5-restricted sap.ui.core.format.NumberFormat
     * @since 1.63
     */
    getCustomCurrencyCodes: function() {
      var mCustomCurrencies = this._get("currency") || {}, mCustomCurrencyCodes = {};
      Object.keys(mCustomCurrencies).forEach(function(sCurrencyKey) {
        mCustomCurrencyCodes[sCurrencyKey] = sCurrencyKey;
      });
      return mCustomCurrencyCodes;
    },
    /**
     * Returns the number of digits of the specified currency.
     *
     * @param {string} sCurrency ISO 4217 currency code
     * @returns {int} digits of the currency
     * @public
     * @since 1.21.1
     */
    getCurrencyDigits: function(sCurrency) {
      var mCustomCurrencies = this._get("currency");
      if (mCustomCurrencies) {
        if (mCustomCurrencies[sCurrency] && mCustomCurrencies[sCurrency].hasOwnProperty("digits")) {
          return mCustomCurrencies[sCurrency].digits;
        } else if (mCustomCurrencies["DEFAULT"] && mCustomCurrencies["DEFAULT"].hasOwnProperty("digits")) {
          return mCustomCurrencies["DEFAULT"].digits;
        }
      }
      var iDigits = this._get("currencyDigits", sCurrency);
      if (iDigits == null) {
        iDigits = this._get("currencyDigits", "DEFAULT");
        if (iDigits == null) {
          iDigits = 2;
        }
      }
      return iDigits;
    },
    /**
     * Returns the currency symbol for the specified currency, if no symbol is found the ISO 4217 currency code is returned.
     *
     * @param {string} sCurrency ISO 4217 currency code
     * @returns {string} the currency symbol
     * @public
     * @since 1.21.1
     */
    getCurrencySymbol: function(sCurrency) {
      var oCurrencySymbols = this.getCurrencySymbols();
      return oCurrencySymbols && oCurrencySymbols[sCurrency] || sCurrency;
    },
    /**
     * Returns the currency code which is corresponded with the given currency symbol.
     *
     * @param {string} sCurrencySymbol The currency symbol which needs to be converted to currency code
     * @return {string} The corresponded currency code defined for the given currency symbol. The given currency symbol is returned if no currency code can be found by using the given currency symbol.
     * @public
     * @since 1.27.0
     */
    getCurrencyCodeBySymbol: function(sCurrencySymbol) {
      var oCurrencySymbols = this._get("currencySymbols"), sCurrencyCode;
      for (sCurrencyCode in oCurrencySymbols) {
        if (oCurrencySymbols[sCurrencyCode] === sCurrencySymbol) {
          return sCurrencyCode;
        }
      }
      return sCurrencySymbol;
    },
    /**
     * Returns the currency symbols available for this locale.
     * Currency symbols get accumulated by custom currency symbols.
     *
     * @returns {Object<string, string>} the map of all currency symbols available in this locale, e.g.
     * {
     *     "AUD": "A$",
     *     "BRL": "R$",
     *     "EUR": "€",
     *     "GBP": "£",
     * }
     * @public
     * @since 1.60
     */
    getCurrencySymbols: function() {
      var mCustomCurrencies = this._get("currency"), mCustomCurrencySymbols = {}, sIsoCode;
      for (var sCurrencyKey in mCustomCurrencies) {
        sIsoCode = mCustomCurrencies[sCurrencyKey].isoCode;
        if (mCustomCurrencies[sCurrencyKey].symbol) {
          mCustomCurrencySymbols[sCurrencyKey] = mCustomCurrencies[sCurrencyKey].symbol;
        } else if (sIsoCode) {
          mCustomCurrencySymbols[sCurrencyKey] = this._get("currencySymbols")[sIsoCode];
        }
      }
      return Object.assign({}, this._get("currencySymbols"), mCustomCurrencySymbols);
    },
    /**
     * Retrieves the localized display name of a unit by sUnit, e.g. "duration-hour".
     * @param {string} sUnit the unit key, e.g. "duration-hour"
     * @return {string} The localized display name for the requested unit, e.g. <code>"Hour"</code>. Return empty string <code>""</code> if not found
     * @public
     * @since 1.54
     */
    getUnitDisplayName: function(sUnit) {
      var mUnitFormat = this.getUnitFormat(sUnit);
      return mUnitFormat && mUnitFormat["displayName"] || "";
    },
    /**
     * Returns relative time patterns for the given scales as an array of objects containing scale, value and pattern.
     *
     * The array may contain the following values: "year", "month", "week", "day", "hour", "minute" and "second". If
     * no scales are given, patterns for all available scales will be returned.
     *
     * The return array will contain objects looking like:
     * <pre>
     * {
     *     scale: "minute",
     *     sign: 1,
     *     pattern: "in {0} minutes"
     * }
     * </pre>
     *
     * @param {string[]} aScales The scales for which the available patterns should be returned
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 The style of the scale patterns. The valid values are "wide", "short" and "narrow".
     * @returns {object[]} An array of all relative time patterns
     * @public
     * @since 1.34
     */
    getRelativePatterns: function(aScales, sStyle) {
      if (sStyle === void 0) {
        sStyle = "wide";
      }
      fnAssert(sStyle === "wide" || sStyle === "short" || sStyle === "narrow", "sStyle is only allowed to be set with 'wide', 'short' or 'narrow'");
      var aPatterns = [], aPluralCategories = this.getPluralCategories(), oScale, oTimeEntry, iValue, iSign;
      if (!aScales) {
        aScales = ["year", "month", "week", "day", "hour", "minute", "second"];
      }
      aScales.forEach(function(sScale) {
        oScale = this._get("dateFields", sScale + "-" + sStyle);
        for (var sEntry in oScale) {
          if (sEntry.indexOf("relative-type-") === 0) {
            iValue = parseInt(sEntry.substr(14));
            aPatterns.push({
              scale: sScale,
              value: iValue,
              pattern: oScale[sEntry]
            });
          } else if (sEntry.indexOf("relativeTime-type-") == 0) {
            oTimeEntry = oScale[sEntry];
            iSign = sEntry.substr(18) === "past" ? -1 : 1;
            aPluralCategories.forEach(function(sKey) {
              var sPattern = oTimeEntry["relativeTimePattern-count-" + sKey];
              if (sPattern) {
                aPatterns.push({
                  scale: sScale,
                  sign: iSign,
                  pattern: sPattern
                });
              }
            });
          }
        }
      }.bind(this));
      return aPatterns;
    },
    /**
     * Returns the relative format pattern with given scale (year, month, week, ...) and difference value.
     *
     * @param {string} sScale the scale the relative pattern is needed for
     * @param {int} iDiff the difference in the given scale unit
     * @param {boolean} [bFuture] whether a future or past pattern should be used
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * @returns {string} the relative format pattern
     * @public
     * @since 1.34
     */
    getRelativePattern: function(sScale, iDiff, bFuture, sStyle) {
      var sPattern, oTypes, sKey, sPluralCategory;
      if (typeof bFuture === "string") {
        sStyle = bFuture;
        bFuture = void 0;
      }
      if (bFuture === void 0) {
        bFuture = iDiff > 0;
      }
      if (sStyle === void 0) {
        sStyle = "wide";
      }
      fnAssert(sStyle === "wide" || sStyle === "short" || sStyle === "narrow", "sStyle is only allowed to be set with 'wide', 'short' or 'narrow'");
      sKey = sScale + "-" + sStyle;
      if (iDiff === 0 || iDiff === -2 || iDiff === 2) {
        sPattern = this._get("dateFields", sKey, "relative-type-" + iDiff);
      }
      if (!sPattern) {
        oTypes = this._get("dateFields", sKey, "relativeTime-type-" + (bFuture ? "future" : "past"));
        sPluralCategory = this.getPluralCategory(Math.abs(iDiff).toString());
        sPattern = oTypes["relativeTimePattern-count-" + sPluralCategory];
      }
      return sPattern;
    },
    /**
     * Returns the relative resource pattern with unit 'second' (like now, "in {0} seconds", "{0} seconds ago" under locale 'en') based on the given
     * difference value (0 means now, positive value means in the future and negative value means in the past).
     *
     * @param {int} iDiff the difference in seconds
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * @returns {string} the relative resource pattern in unit 'second'
     * @public
     * @since 1.31.0
     */
    getRelativeSecond: function(iDiff, sStyle) {
      return this.getRelativePattern("second", iDiff, sStyle);
    },
    /**
     * Returns the relative resource pattern with unit 'minute' (like "in {0} minute(s)", "{0} minute(s) ago" under locale 'en') based on the given
     * difference value (positive value means in the future and negative value means in the past).
     *
     * There's no pattern defined for 0 difference and the function returns null if 0 is given. In the 0 difference case, you can use the getRelativeSecond
     * function to format the difference using unit 'second'.
     *
     * @param {int} iDiff the difference in minutes
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * @returns {string|null} the relative resource pattern in unit 'minute'. The method returns null if 0 is given as parameter.
     * @public
     * @since 1.31.0
     */
    getRelativeMinute: function(iDiff, sStyle) {
      if (iDiff == 0) {
        return null;
      }
      return this.getRelativePattern("minute", iDiff, sStyle);
    },
    /**
     * Returns the relative resource pattern with unit 'hour' (like "in {0} hour(s)", "{0} hour(s) ago" under locale 'en') based on the given
     * difference value (positive value means in the future and negative value means in the past).
     *
     * There's no pattern defined for 0 difference and the function returns null if 0 is given. In the 0 difference case, you can use the getRelativeMinute or getRelativeSecond
     * function to format the difference using unit 'minute' or 'second'.
     *
     * @param {int} iDiff the difference in hours
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * @returns {string|null} the relative resource pattern in unit 'hour'. The method returns null if 0 is given as parameter.
     * @public
     * @since 1.31.0
     */
    getRelativeHour: function(iDiff, sStyle) {
      if (iDiff == 0) {
        return null;
      }
      return this.getRelativePattern("hour", iDiff, sStyle);
    },
    /**
     * Returns the relative day resource pattern (like "Today", "Yesterday", "{0} days ago") based on the given
     * difference of days (0 means today, 1 means tomorrow, -1 means yesterday, ...).
     *
     * @param {int} iDiff the difference in days
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * @returns {string} the relative day resource pattern
     * @public
     * @since 1.25.0
     */
    getRelativeDay: function(iDiff, sStyle) {
      return this.getRelativePattern("day", iDiff, sStyle);
    },
    /**
     * Returns the relative week resource pattern (like "This week", "Last week", "{0} weeks ago") based on the given
     * difference of weeks (0 means this week, 1 means next week, -1 means last week, ...).
     *
     * @param {int} iDiff the difference in weeks
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * @returns {string} the relative week resource pattern
     * @public
     * @since 1.31.0
     */
    getRelativeWeek: function(iDiff, sStyle) {
      return this.getRelativePattern("week", iDiff, sStyle);
    },
    /**
     * Returns the relative month resource pattern (like "This month", "Last month", "{0} months ago") based on the given
     * difference of months (0 means this month, 1 means next month, -1 means last month, ...).
     *
     * @param {int} iDiff the difference in months
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * @returns {string} the relative month resource pattern
     * @public
     * @since 1.25.0
     */
    getRelativeMonth: function(iDiff, sStyle) {
      return this.getRelativePattern("month", iDiff, sStyle);
    },
    /**
     * Returns the display name for a time unit (second, minute, hour, day, week, month, year).
     *
     * @param {string} sType Type (second, minute, hour, day, week, month, year)
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * returns {string} display name
     * @public
     * @since 1.34.0
     */
    getDisplayName: function(sType, sStyle) {
      fnAssert(sType == "second" || sType == "minute" || sType == "hour" || sType == "zone" || sType == "day" || sType == "weekday" || sType == "week" || sType == "month" || sType == "quarter" || sType == "year" || sType == "era", "sType must be second, minute, hour, zone, day, weekday, week, month, quarter, year, era");
      if (sStyle === void 0) {
        sStyle = "wide";
      }
      fnAssert(sStyle === "wide" || sStyle === "short" || sStyle === "narrow", "sStyle is only allowed to be set with 'wide', 'short' or 'narrow'");
      var aSingleFormFields = ["era", "weekday", "zone"], sKey = aSingleFormFields.indexOf(sType) === -1 ? sType + "-" + sStyle : sType;
      return this._get("dateFields", sKey, "displayName");
    },
    /**
     * Returns the relative year resource pattern (like "This year", "Last year", "{0} year ago") based on the given
     * difference of years (0 means this year, 1 means next year, -1 means last year, ...).
     *
     * @param {int} iDiff the difference in years
     * @param {string} [sStyle="wide"] @since 1.32.10, 1.34.4 the style of the pattern. The valid values are "wide", "short" and "narrow"
     * @returns {string} the relative year resource pattern
     * @public
     * @since 1.25.0
     */
    getRelativeYear: function(iDiff, sStyle) {
      return this.getRelativePattern("year", iDiff, sStyle);
    },
    /**
     * Returns the short decimal formats (like 1K, 1M....).
     *
     * @param {string} sStyle short or long
     * @param {string} sNumber 1000, 10000 ...
     * @param {string} sPlural one or other (if not exists other is used)
     * @returns {string} decimal format
     * @public
     * @since 1.25.0
     */
    getDecimalFormat: function(sStyle, sNumber, sPlural) {
      var sFormat;
      var oFormats;
      switch (sStyle) {
        case "long":
          oFormats = this._get("decimalFormat-long");
          break;
        default:
          oFormats = this._get("decimalFormat-short");
          break;
      }
      if (oFormats) {
        var sName = sNumber + "-" + sPlural;
        sFormat = oFormats[sName];
        if (!sFormat) {
          sName = sNumber + "-other";
          sFormat = oFormats[sName];
        }
      }
      return sFormat;
    },
    /**
     * Returns the short currency formats (like 1K USD, 1M USD....).
     *
     * @param {string} sStyle short
     * @param {string} sNumber 1000, 10000 ...
     * @param {string} sPlural one or other (if not exists other is used)
     * @returns {string} decimal format
     * @public
     * @since 1.51.0
     */
    getCurrencyFormat: function(sStyle, sNumber, sPlural) {
      var sFormat;
      var oFormats = this._get("currencyFormat-" + sStyle);
      if (!oFormats) {
        if (sStyle === "sap-short") {
          throw new Error('Failed to get CLDR data for property "currencyFormat-sap-short"');
        }
        oFormats = this._get("currencyFormat-short");
      }
      if (oFormats) {
        var sName = sNumber + "-" + sPlural;
        sFormat = oFormats[sName];
        if (!sFormat) {
          sName = sNumber + "-other";
          sFormat = oFormats[sName];
        }
      }
      return sFormat;
    },
    /**
     * Returns a map containing patterns for formatting lists
     *
     *@param {string} [sType='standard'] The type of the list pattern. It can be 'standard' or 'or'.
     *@param {string} [sStyle='wide'] The style of the list pattern. It can be 'wide' or 'short'.
    * @return {object} Map with list patterns
     */
    getListFormat: function(sType, sStyle) {
      var oFormats = this._get("listPattern-" + (sType || "standard") + "-" + (sStyle || "wide"));
      if (oFormats) {
        return oFormats;
      }
      return {};
    },
    /**
     * Retrieves the unit format pattern for a specific unit name considering the unit mappings.
     * @param {string} sUnit unit name, e.g. "duration-hour" or "my"
     * @return {object} The unit format configuration for the given unit name
     * @public
     * @since 1.54
     * @see sap.ui.core.LocaleData#getUnitFromMapping
     */
    getResolvedUnitFormat: function(sUnit) {
      sUnit = this.getUnitFromMapping(sUnit) || sUnit;
      return this.getUnitFormat(sUnit);
    },
    /**
     * Retrieves the unit format pattern for a specific unit name.
     *
     * Note: Does not take unit mapping into consideration.
     * @param {string} sUnit unit name, e.g. "duration-hour"
     * @return {object} The unit format configuration for the given unit name
     * @public
     * @since 1.54
     */
    getUnitFormat: function(sUnit) {
      var oResult = this._get("units", "short", sUnit);
      if (!oResult && mLegacyUnit2CurrentUnit[sUnit]) {
        oResult = this._get("units", "short", mLegacyUnit2CurrentUnit[sUnit]);
      }
      return oResult;
    },
    /**
     * Retrieves all unit format patterns merged.
     *
     * Note: Does not take unit mapping into consideration.
     * @return {object} The unit format patterns
     * @public
     * @since 1.54
     */
    getUnitFormats: function() {
      return this._getMerged("units", "short");
    },
    /**
     * Looks up the unit from defined unit mapping.
     * E.g. for defined unit mapping
     * <code>
     * {
     *  "my": "my-custom-unit",
     *  "cm": "length-centimeter"
     * }
     * </code>
     *
     * Call:
     * <code>getUnitFromMapping("my")</code> would result in <code>"my-custom-unit"</code>
     * @param {string} sMapping mapping identifier
     * @return {string} unit from the mapping
     * @public
     * @since 1.54
     */
    getUnitFromMapping: function(sMapping) {
      return this._get("unitMappings", sMapping);
    },
    /**
     * Returns array of eras.
     *
     * @param {string} sWidth the style of the era name. It can be 'wide', 'abbreviated' or 'narrow'
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar
     * @return {array} the array of eras
     * @public
     * @since 1.32.0
     */
    getEras: function(sWidth, sCalendarType) {
      fnAssert(sWidth == "wide" || sWidth == "abbreviated" || sWidth == "narrow", "sWidth must be wide, abbreviate or narrow");
      var oEras = this._get(getCLDRCalendarName(sCalendarType), "era-" + sWidth), aEras = [];
      for (var i3 in oEras) {
        aEras[parseInt(i3)] = oEras[i3];
      }
      return aEras;
    },
    /**
     * Returns the map of era IDs to era dates.
     *
     * @param {sap.ui.core.CalendarType} [sCalendarType] the type of calendar
     * @return {array} the array of eras containing objects with either an _end or _start property with a date
     * @public
     * @since 1.32.0
     */
    getEraDates: function(sCalendarType) {
      var oEraDates = this._get("eras-" + sCalendarType.toLowerCase()), aEraDates = [];
      for (var i3 in oEraDates) {
        aEraDates[parseInt(i3)] = oEraDates[i3];
      }
      return aEraDates;
    },
    /**
     * Returns the defined pattern for representing the calendar week number.
     *
     * @param {string} sStyle the style of the pattern. It can only be either "wide" or "narrow".
     * @param {int} iWeekNumber the week number
     * @return {string} the week number string
     *
     * @public
     * @since 1.32.0
     */
    getCalendarWeek: function(sStyle, iWeekNumber) {
      fnAssert(sStyle == "wide" || sStyle == "narrow", "sStyle must be wide or narrow");
      var oMessageBundle = Core.getLibraryResourceBundle("sap.ui.core", this.oLocale.toString()), sKey = "date.week.calendarweek." + sStyle;
      return oMessageBundle.getText(sKey, iWeekNumber ? [iWeekNumber] : void 0);
    },
    /**
     * Whether 1 January is the first day of the first calendar week.
     * This is the definition of the calendar week in the US.
     *
     * @return {boolean} true if the first week of the year starts with 1 January.
     * @public
     * @since 1.92.0
     */
    firstDayStartsFirstWeek: function() {
      return this.oLocale.getLanguage() === "en" && this.oLocale.getRegion() === "US";
    },
    /**
     * Returns the preferred calendar type for the current locale which exists in {@link sap.ui.core.CalendarType}
     *
     * @returns {sap.ui.core.CalendarType} the preferred calendar type
     * @public
     * @since 1.28.6
     */
    getPreferredCalendarType: function() {
      var sCalendarName, sType, i3, aCalendars = this._get("calendarPreference") || [];
      for (i3 = 0; i3 < aCalendars.length; i3++) {
        sCalendarName = aCalendars[i3].split("-")[0];
        for (sType in CalendarType) {
          if (sCalendarName === sType.toLowerCase()) {
            return sType;
          }
        }
      }
      return CalendarType.Gregorian;
    },
    /**
     * Returns the preferred hour pattern symbol (h for 12, H for 24 hours) for the current locale.
     *
     * @returns {string} the preferred hour symbol
     * @public
     * @since 1.34
     */
    getPreferredHourSymbol: function() {
      return this._get("timeData", "_preferred");
    },
    /**
     * Returns an array of all plural categories available in this language.
     *
     * @returns {array} The array of plural categories
     * @public
     * @since 1.50
     */
    getPluralCategories: function() {
      var oPlurals = this._get("plurals"), aCategories = Object.keys(oPlurals);
      aCategories.push("other");
      return aCategories;
    },
    /**
     * Returns the plural category (zero, one, two, few, many or other) for the given number value.
     * The number must be passed as an unformatted number string with dot as decimal
     * separator (for example "12345.67"). To determine the correct plural category, it
     * is also necessary to keep the same number of decimal digits as given in the formatted
     * output string. For example "1" and "1.0" could be in different plural categories as
     * the number of decimal digits is different.
     *
     * Compact numbers (for example in "short" format) must be provided in the
     * locale-independent CLDR compact notation. This notation uses the plural rule operand "c"
     * for the compact decimal exponent, for example "1.2c3" for "1.2K" (1200) or "4c6" for
     * "4M" (4000000).
     *
     * Note that the operand "e" is deprecated, but is a synonym corresponding to the CLDR
     * specification for "c" and may be redefined in the future.
     *
     * @param {string|number} vNumber The number to find the plural category for
     * @returns {string} The plural category
     * @public
     * @since 1.50
     */
    getPluralCategory: function(vNumber) {
      var sNumber = typeof vNumber === "number" ? vNumber.toString() : vNumber, oPlurals = this._get("plurals");
      if (!this._pluralTest) {
        this._pluralTest = {};
      }
      for (var sCategory in oPlurals) {
        var fnTest = this._pluralTest[sCategory];
        if (!fnTest) {
          fnTest = this._parsePluralRule(oPlurals[sCategory]);
          this._pluralTest[sCategory] = fnTest;
        }
        if (fnTest(sNumber).bMatch) {
          return sCategory;
        }
      }
      return "other";
    },
    /**
     * Parses a language plural rule as specified in
     * https://unicode.org/reports/tr35/tr35-numbers.html#table-plural-operand-meanings
     *
     * @param {string} sRule The plural rule as a string
     * @returns {function(string)} A function to determine for a number given as string parameter if it matches the
     *   plural rule.
     *
     * @private
     */
    _parsePluralRule: function(sRule) {
      var OP_OR = "or", OP_AND = "and", OP_MOD = "%", OP_EQ = "=", OP_NEQ = "!=", OPD_N = "n", OPD_I = "i", OPD_F = "f", OPD_T = "t", OPD_V = "v", OPD_W = "w", OPD_C = "c", OPD_E = "e", RANGE = "..", SEP = ",";
      var i3 = 0, aTokens;
      aTokens = sRule.split(" ");
      function accept(sToken) {
        if (aTokens[i3] === sToken) {
          i3++;
          return true;
        }
        return false;
      }
      function consume() {
        var sToken = aTokens[i3];
        i3++;
        return sToken;
      }
      function or_condition() {
        var fnAnd, fnOr2;
        fnAnd = and_condition();
        if (accept(OP_OR)) {
          fnOr2 = or_condition();
          return function(o2) {
            return fnAnd(o2) || fnOr2(o2);
          };
        }
        return fnAnd;
      }
      function and_condition() {
        var fnRelation, fnAnd;
        fnRelation = relation();
        if (accept(OP_AND)) {
          fnAnd = and_condition();
          return function(o2) {
            return fnRelation(o2) && fnAnd(o2);
          };
        }
        return fnRelation;
      }
      function relation() {
        var fnExpr, fnRangeList, bEq;
        fnExpr = expr();
        if (accept(OP_EQ)) {
          bEq = true;
        } else if (accept(OP_NEQ)) {
          bEq = false;
        } else {
          throw new Error("Expected '=' or '!='");
        }
        fnRangeList = range_list();
        if (bEq) {
          return function(o2) {
            return fnRangeList(o2).indexOf(fnExpr(o2)) >= 0;
          };
        } else {
          return function(o2) {
            return fnRangeList(o2).indexOf(fnExpr(o2)) === -1;
          };
        }
      }
      function expr() {
        var fnOperand;
        fnOperand = operand();
        if (accept(OP_MOD)) {
          var iDivisor = parseInt(consume());
          return function(o2) {
            return fnOperand(o2) % iDivisor;
          };
        }
        return fnOperand;
      }
      function operand() {
        if (accept(OPD_N)) {
          return function(o2) {
            return o2.n;
          };
        } else if (accept(OPD_I)) {
          return function(o2) {
            return o2.i;
          };
        } else if (accept(OPD_F)) {
          return function(o2) {
            return o2.f;
          };
        } else if (accept(OPD_T)) {
          return function(o2) {
            return o2.t;
          };
        } else if (accept(OPD_V)) {
          return function(o2) {
            return o2.v;
          };
        } else if (accept(OPD_W)) {
          return function(o2) {
            return o2.w;
          };
        } else if (accept(OPD_C)) {
          return function(o2) {
            return o2.c;
          };
        } else if (accept(OPD_E)) {
          return function(o2) {
            return o2.c;
          };
        } else {
          throw new Error("Unknown operand: " + consume());
        }
      }
      function range_list() {
        var aValues = [], sRangeList = consume(), aParts = sRangeList.split(SEP), aRange, iFrom, iTo;
        aParts.forEach(function(sPart) {
          aRange = sPart.split(RANGE);
          if (aRange.length === 1) {
            aValues.push(parseInt(sPart));
          } else {
            iFrom = parseInt(aRange[0]);
            iTo = parseInt(aRange[1]);
            for (var i4 = iFrom; i4 <= iTo; i4++) {
              aValues.push(i4);
            }
          }
        });
        return function(o2) {
          return aValues;
        };
      }
      var fnOr = or_condition();
      if (i3 != aTokens.length) {
        throw new Error("Not completely parsed");
      }
      return function(sValue) {
        var iDotPos, iExponent, iExponentPos, sFraction, sFractionNoZeros, sInteger, o2;
        sValue = sValue.replace(rCIgnoreCase, "e");
        iExponentPos = sValue.search(rEIgnoreCase);
        iExponent = iExponentPos < 0 ? 0 : parseInt(sValue.slice(iExponentPos + 1));
        sValue = LocaleData$1.convertToDecimal(sValue);
        iDotPos = sValue.indexOf(".");
        if (iDotPos === -1) {
          sInteger = sValue;
          sFraction = "";
          sFractionNoZeros = "";
        } else {
          sInteger = sValue.slice(0, iDotPos);
          sFraction = sValue.slice(iDotPos + 1);
          sFractionNoZeros = sFraction.replace(rTrailingZeroes, "");
        }
        o2 = {
          n: parseFloat(sValue),
          i: parseInt(sInteger),
          v: sFraction.length,
          w: sFractionNoZeros.length,
          f: sFraction === "" ? 0 : parseInt(sFraction),
          t: sFractionNoZeros === "" ? 0 : parseInt(sFractionNoZeros),
          c: iExponent
        };
        return {
          bMatch: fnOr(o2),
          oOperands: o2
        };
      };
    }
  }
);
LocaleData$1.convertToDecimal = function(vValue) {
  var iIntegerLength, iExponent, iFractionLength, bNegative, iNewIntegerLength, aResult, sValue = String(vValue);
  if (!sValue.includes("e") && !sValue.includes("E")) {
    return sValue;
  }
  aResult = sValue.match(rNumberInScientificNotation);
  bNegative = aResult[1] === "-";
  sValue = aResult[2].replace(".", "");
  iIntegerLength = aResult[3] ? aResult[3].length : 0;
  iFractionLength = aResult[4] ? aResult[4].length : 0;
  iExponent = parseInt(aResult[5]);
  iNewIntegerLength = iIntegerLength + iExponent;
  if (iExponent > 0) {
    sValue = iExponent < iFractionLength ? sValue.slice(0, iNewIntegerLength) + "." + sValue.slice(iNewIntegerLength) : sValue = sValue.padEnd(iNewIntegerLength, "0");
  } else {
    sValue = -iExponent < iIntegerLength ? sValue = sValue.slice(0, iNewIntegerLength) + "." + sValue.slice(iNewIntegerLength) : sValue = "0." + sValue.padStart(iFractionLength - iExponent, "0");
  }
  if (bNegative) {
    sValue = "-" + sValue;
  }
  return sValue;
};
var mCLDRSymbolGroups = {
  "Era": {
    field: "era",
    index: 0
  },
  "Year": {
    field: "year",
    index: 1
  },
  "Quarter": {
    field: "quarter",
    index: 2
  },
  "Month": {
    field: "month",
    index: 3
  },
  "Week": {
    field: "week",
    index: 4
  },
  "Day-Of-Week": {
    field: "weekday",
    index: 5
  },
  "Day": {
    field: "day",
    index: 6
  },
  "DayPeriod": {
    field: "hour",
    index: 7,
    diffOnly: true
  },
  "Hour": {
    field: "hour",
    index: 8
  },
  "Minute": {
    field: "minute",
    index: 9
  },
  "Second": {
    field: "second",
    index: 10
  },
  "Timezone": {
    field: "zone",
    index: 11
  }
};
var mCLDRSymbols = {
  "G": {
    group: "Era",
    match: "Era",
    numericCeiling: 1
  },
  "y": {
    group: "Year",
    match: "Year",
    numericCeiling: 100
  },
  "Y": {
    group: "Year",
    match: "Year",
    numericCeiling: 100
  },
  "Q": {
    group: "Quarter",
    match: "Quarter",
    numericCeiling: 3
  },
  "q": {
    group: "Quarter",
    match: "Quarter",
    numericCeiling: 3
  },
  "M": {
    group: "Month",
    match: "Month",
    numericCeiling: 3
  },
  "L": {
    group: "Month",
    match: "Month",
    numericCeiling: 3
  },
  "w": {
    group: "Week",
    match: "Week",
    numericCeiling: 100
  },
  "W": {
    group: "Week",
    match: "Week",
    numericCeiling: 100
  },
  "d": {
    group: "Day",
    match: "Day",
    numericCeiling: 100
  },
  "D": {
    group: "Day",
    match: "Day",
    numericCeiling: 100
  },
  "E": {
    group: "Day-Of-Week",
    match: "Day-Of-Week",
    numericCeiling: 1
  },
  "e": {
    group: "Day-Of-Week",
    match: "Day-Of-Week",
    numericCeiling: 3
  },
  "c": {
    group: "Day-Of-Week",
    match: "Day-Of-Week",
    numericCeiling: 2
  },
  "h": {
    group: "Hour",
    match: "Hour12",
    numericCeiling: 100
  },
  "H": {
    group: "Hour",
    match: "Hour24",
    numericCeiling: 100
  },
  "k": {
    group: "Hour",
    match: "Hour24",
    numericCeiling: 100
  },
  "K": {
    group: "Hour",
    match: "Hour12",
    numericCeiling: 100
  },
  "m": {
    group: "Minute",
    match: "Minute",
    numericCeiling: 100
  },
  "s": {
    group: "Second",
    match: "Second",
    numericCeiling: 100
  },
  "z": {
    group: "Timezone",
    match: "Timezone",
    numericCeiling: 1
  },
  "Z": {
    group: "Timezone",
    match: "Timezone",
    numericCeiling: 1
  },
  "O": {
    group: "Timezone",
    match: "Timezone",
    numericCeiling: 1
  },
  "v": {
    group: "Timezone",
    match: "Timezone",
    numericCeiling: 1
  },
  "V": {
    group: "Timezone",
    match: "Timezone",
    numericCeiling: 1
  },
  "X": {
    group: "Timezone",
    match: "Timezone",
    numericCeiling: 1
  },
  "x": {
    group: "Timezone",
    match: "Timezone",
    numericCeiling: 1
  },
  "S": {
    group: "Other",
    numericCeiling: 100
  },
  "u": {
    group: "Other",
    numericCeiling: 100
  },
  "U": {
    group: "Other",
    numericCeiling: 1
  },
  "r": {
    group: "Other",
    numericCeiling: 100
  },
  "F": {
    group: "Other",
    numericCeiling: 100
  },
  "g": {
    group: "Other",
    numericCeiling: 100
  },
  "a": {
    group: "DayPeriod",
    numericCeiling: 1
  },
  "b": {
    group: "Other",
    numericCeiling: 1
  },
  "B": {
    group: "Other",
    numericCeiling: 1
  },
  "A": {
    group: "Other",
    numericCeiling: 100
  }
};
function getDesigntimePropertyAsArray(sValue) {
  var m2 = /\$([-a-z0-9A-Z._]+)(?::([^$]*))?\$/.exec(sValue);
  return m2 && m2[2] ? m2[2].split(/,/) : null;
}
var _cldrLocales = getDesigntimePropertyAsArray("$cldr-locales:ar,ar_EG,ar_SA,bg,ca,cnr,cy,cs,da,de,de_AT,de_CH,el,el_CY,en,en_AU,en_GB,en_HK,en_IE,en_IN,en_NZ,en_PG,en_SG,en_ZA,es,es_AR,es_BO,es_CL,es_CO,es_MX,es_PE,es_UY,es_VE,et,fa,fi,fr,fr_BE,fr_CA,fr_CH,fr_LU,he,hi,hr,hu,id,it,it_CH,ja,kk,ko,lt,lv,mk,ms,nb,nl,nl_BE,pl,pt,pt_PT,ro,ru,ru_UA,sk,sl,sr,sr_Latn,sv,th,tr,uk,vi,zh_CN,zh_HK,zh_SG,zh_TW$");
var M_SUPPORTED_LOCALES = (function() {
  var LOCALES = _cldrLocales, result = {}, i3;
  if (LOCALES) {
    for (i3 = 0; i3 < LOCALES.length; i3++) {
      result[LOCALES[i3]] = true;
    }
  }
  return result;
})();
var mLocaleDatas = {};
function _resolveTimezoneTranslationStructure(oNode, sKey, oResult, aParentTranslations) {
  aParentTranslations = aParentTranslations ? aParentTranslations.slice() : [];
  oResult = oResult || {};
  sKey = sKey || "";
  Object.keys(oNode).forEach(function(sChildKey) {
    var vChildNode = oNode[sChildKey];
    if (typeof vChildNode === "object") {
      var aParentTranslationForChild = aParentTranslations.slice();
      var sParent = vChildNode["_parent"];
      if (sParent) {
        aParentTranslationForChild.push(sParent);
      }
      _resolveTimezoneTranslationStructure(vChildNode, sKey + sChildKey + "/", oResult, aParentTranslationForChild);
    } else if (typeof vChildNode === "string" && sChildKey !== "_parent") {
      var sParents = aParentTranslations.length ? aParentTranslations.join(", ") + ", " : "";
      oResult[sKey + sChildKey] = sParents + vChildNode;
    }
  });
  return oResult;
}
function getCLDRCalendarName(sCalendarType) {
  if (!sCalendarType) {
    sCalendarType = Configuration.getCalendarType();
  }
  return "ca-" + sCalendarType.toLowerCase();
}
function getData(oLocale) {
  var sLanguage = oLocale.getLanguage() || "", sScript = oLocale.getScript() || "", sRegion = oLocale.getRegion() || "", mData;
  function merge2(obj, fallbackObj) {
    var name2, value, fallbackValue;
    if (!fallbackObj) {
      return;
    }
    for (name2 in fallbackObj) {
      if (fallbackObj.hasOwnProperty(name2)) {
        value = obj[name2];
        fallbackValue = fallbackObj[name2];
        if (value === void 0) {
          obj[name2] = fallbackValue;
        } else if (value === null) {
          delete obj[name2];
        } else if (typeof value === "object" && typeof fallbackValue === "object" && !Array.isArray(value)) {
          merge2(value, fallbackValue);
        }
      }
    }
  }
  function getOrLoad(sId2) {
    if (!mLocaleDatas[sId2] && (!M_SUPPORTED_LOCALES || M_SUPPORTED_LOCALES[sId2] === true)) {
      var data = mLocaleDatas[sId2] = LoaderExtensions.loadResource("sap/ui/core/cldr/" + sId2 + ".json", {
        dataType: "json",
        failOnError: false
      });
      if (data && data.__fallbackLocale) {
        merge2(data, getOrLoad(data.__fallbackLocale));
        delete data.__fallbackLocale;
      }
    }
    return mLocaleDatas[sId2];
  }
  sLanguage = sLanguage && Localization.getModernLanguage(sLanguage) || sLanguage;
  if (sLanguage === "no") {
    sLanguage = "nb";
  }
  if (sLanguage === "zh" && !sRegion) {
    if (sScript === "Hans") {
      sRegion = "CN";
    } else if (sScript === "Hant") {
      sRegion = "TW";
    }
  }
  if (sLanguage === "sh" || sLanguage === "sr" && sScript === "Latn") {
    sLanguage = "sr_Latn";
  }
  var sId = sLanguage + "_" + sRegion;
  var sCLDRLocaleId = sId;
  if (sLanguage && sRegion) {
    mData = getOrLoad(sId);
  }
  if (!mData && sLanguage) {
    mData = getOrLoad(sLanguage);
    sCLDRLocaleId = sLanguage;
  }
  if (!mData) {
    mData = getOrLoad("en");
    sCLDRLocaleId = "en";
  }
  mLocaleDatas[sId] = mData;
  sCLDRLocaleId = sCLDRLocaleId.replace(/_/g, "-");
  return {
    mData,
    sCLDRLocaleId
  };
}
var CustomLocaleData = LocaleData$1.extend("sap.ui.core.CustomLocaleData", {
  constructor: function(oLocale) {
    LocaleData$1.apply(this, arguments);
    this.mCustomData = Configuration.getFormatSettings().getCustomLocaleData();
  },
  /**
   * Retrieves the value for the given arguments by checking first <code>mCustomData</code> and if not
   * found <code>mData</code>
   * @returns {*} value
   * @private
   */
  _get: function() {
    var aArguments = Array.prototype.slice.call(arguments), sCalendar, sKey;
    if (aArguments[0].indexOf("ca-") == 0) {
      sCalendar = aArguments[0];
      if (sCalendar == getCLDRCalendarName()) {
        aArguments = aArguments.slice(1);
      }
    }
    sKey = aArguments.join("-");
    var vValue = this.mCustomData[sKey];
    if (vValue == null) {
      vValue = this._getDeep(this.mCustomData, arguments);
      if (vValue == null) {
        vValue = this._getDeep(this.mData, arguments);
      }
    }
    return vValue;
  },
  /**
   * Retrieves merged object from <code>mData</code> extended with <code>mCustomData</code>.
   * This function merges the content of <code>mData</code> and <code>mCustomData</code> instead of returning one or the other like <code>_get()</code> does.
   *
   * Note: Properties defined in <code>mCustomData</code> overwrite the ones from <code>mData</code>.
   * @private
   * @return {object} merged object
   */
  _getMerged: function() {
    var mData = this._getDeep(this.mData, arguments);
    var mCustomData = this._getDeep(this.mCustomData, arguments);
    return fnExtend({}, mData, mCustomData);
  },
  /**
   * Returns the first day of the week defined by the calendar week numbering algorithm
   * set in the configuration, see {@link sap.ui.core.Configuration#setCalendarWeekNumbering}.
   * If no specific calendar week numbering algorithm is configured the value set by
   * {@link sap.ui.core.Configuration#setFirstDayOfWeek} is returned. Otherwise the first day
   * of the week is determined by the current locale, see {@link sap.ui.core.LocaleData#getFirstDayOfWeek}.
   *
   * Days are encoded as integer where Sunday=0, Monday=1 etc.
   *
   * @returns {int} The first day of week
   * @override sap.ui.core.LocalData#getFirstDayOfWeek
   * @since 1.113.0
   */
  getFirstDayOfWeek: function() {
    var sCalendarWeekNumbering = Configuration.getCalendarWeekNumbering();
    if (sCalendarWeekNumbering === CalendarWeekNumbering.Default) {
      return LocaleData$1.prototype.getFirstDayOfWeek.call(this);
    }
    return CalendarWeekNumbering.getWeekConfigurationValues(sCalendarWeekNumbering).firstDayOfWeek;
  },
  /**
   * Returns the required minimal number of days for the first week of a year defined by the
   * calendar week numbering algorithm set in the configuration,
   * see {@link sap.ui.core.Configuration#setCalendarWeekNumbering}.
   * If no specific calendar week numbering algorithm is configured the required minimal number
   * of days for the first week of a year is determined by the current locale,
   * see {@link sap.ui.core.LocaleData#getMinimalDaysInFirstWeek}.
   *
   * @returns {int} The required minimal number of days for the first week of a year
   * @override sap.ui.core.LocalData#getMinimalDaysInFirstWeek
   * @since 1.113.0
   */
  getMinimalDaysInFirstWeek: function() {
    var sCalendarWeekNumbering = Configuration.getCalendarWeekNumbering();
    if (sCalendarWeekNumbering === CalendarWeekNumbering.Default) {
      return LocaleData$1.prototype.getMinimalDaysInFirstWeek.call(this);
    }
    return CalendarWeekNumbering.getWeekConfigurationValues(sCalendarWeekNumbering).minimalDaysInFirstWeek;
  }
});
LocaleData$1.getInstance = function(oLocale) {
  oLocale = Locale._getCoreLocale(oLocale);
  return oLocale.hasPrivateUseSubtag("sapufmt") ? new CustomLocaleData(oLocale) : new LocaleData$1(oLocale);
};
LocaleData$1._cldrLocales = _cldrLocales;
LocaleData$1._mTimezoneTranslations = {};
const rContainsSymbol = new RegExp("[" + Object.keys(mCLDRSymbols).join("") + "]");
const rTextWithOptionalSpacesAtStartAndEnd = /^(\s)?(.*?)(\s)?$/;
LocaleData$1._escapeIfNeeded = function(sValue) {
  if (sValue === void 0) {
    return "";
  }
  if (rContainsSymbol.test(sValue)) {
    return sValue.replace(rTextWithOptionalSpacesAtStartAndEnd, "$1'$2'$3");
  }
  return sValue;
};
var mRegistry = /* @__PURE__ */ new Map();
var _Calendars = {
  get: function(sCalendarType) {
    if (!mRegistry.has(sCalendarType)) {
      throw new Error("Required calendar type: " + sCalendarType + " not loaded.");
    }
    return mRegistry.get(sCalendarType);
  },
  set: function(sCalendarType, CalendarClass) {
    mRegistry.set(sCalendarType, CalendarClass);
  }
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var CalendarUtils$1 = {
  /**
   * Resolves calendar week configuration.
   *
   * Returns an object with the following fields:
   * <ul>
   *   <li><code>firstDayOfWeek</code>: specifies the first day of the week starting with
   *   <code>0</code> (which is Sunday)</li>
   *   <li><code>minimalDaysInFirstWeek</code>: minimal days at the beginning of the year
   *   which define the first calendar week</li>
   * </ul>
   *
   * @param {sap.ui.core.date.CalendarWeekNumbering} [sCalendarWeekNumbering]
   *   The calendar week numbering; if omitted, the calendar week numbering of the Configuration
   *   is used; see {@link sap.ui.core.Configuration#getCalendarWeekNumbering}. If this value is
   *   <code>Default</code> the returned calendar week configuration is derived from the given
   *   <code>oLocale</code>.
   * @param {sap.ui.core.Locale} [oLocale]
   *   The locale to use; if not provided, this falls back to the format locale from the
   *   Configuration; see {@link sap.ui.core.Configuration.FormatSettings#getFormatLocale}.
   *   Is only used when <code>sCalendarWeekNumbering</code> is set to <code>Default</code>.
   * @returns {{firstDayOfWeek: int, minimalDaysInFirstWeek: int}|undefined}
   *   The calendar week configuration, or <code>undefined<code> for an invalid value of
   *   <code>sap.ui.core.date.CalendarWeekNumbering</code>.
   * @public
   * @since 1.108.0
   */
  getWeekConfigurationValues: function(sCalendarWeekNumbering, oLocale) {
    var oLocaleData, oWeekConfigurationValues;
    if (!sCalendarWeekNumbering) {
      return CalendarUtils$1.getWeekConfigurationValues(Configuration.getCalendarWeekNumbering(), oLocale);
    }
    oWeekConfigurationValues = CalendarWeekNumbering.getWeekConfigurationValues(sCalendarWeekNumbering);
    if (oWeekConfigurationValues) {
      return oWeekConfigurationValues;
    }
    if (sCalendarWeekNumbering === CalendarWeekNumbering.Default) {
      oLocale = oLocale || Configuration.getFormatSettings().getFormatLocale();
      oLocaleData = LocaleData$1.getInstance(oLocale);
      return {
        firstDayOfWeek: oLocaleData.getFirstDayOfWeek(),
        minimalDaysInFirstWeek: oLocaleData.getMinimalDaysInFirstWeek()
      };
    }
    return void 0;
  }
};
var UniversalDate$1 = BaseObject.extend(
  "sap.ui.core.date.UniversalDate",
  /** @lends sap.ui.core.date.UniversalDate.prototype */
  {
    constructor: function() {
      var clDate = UniversalDate$1.getClass();
      return this.createDate(clDate, arguments);
    }
  }
);
UniversalDate$1.UTC = function() {
  var clDate = UniversalDate$1.getClass();
  return clDate.UTC.apply(clDate, arguments);
};
UniversalDate$1.now = function() {
  return Date.now();
};
UniversalDate$1.prototype.createDate = function(clDate, aArgs) {
  if (clDate === Date) {
    return UI5Date$1.getInstance.apply(null, aArgs);
  }
  switch (aArgs.length) {
    case 0:
      return new clDate();
    // new Date(new Date()) is officially not supported
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date
    case 1:
      return new clDate(aArgs[0] instanceof Date ? aArgs[0].getTime() : aArgs[0]);
    case 2:
      return new clDate(aArgs[0], aArgs[1]);
    case 3:
      return new clDate(aArgs[0], aArgs[1], aArgs[2]);
    case 4:
      return new clDate(aArgs[0], aArgs[1], aArgs[2], aArgs[3]);
    case 5:
      return new clDate(aArgs[0], aArgs[1], aArgs[2], aArgs[3], aArgs[4]);
    case 6:
      return new clDate(aArgs[0], aArgs[1], aArgs[2], aArgs[3], aArgs[4], aArgs[5]);
    case 7:
      return new clDate(aArgs[0], aArgs[1], aArgs[2], aArgs[3], aArgs[4], aArgs[5], aArgs[6]);
  }
};
UniversalDate$1.getInstance = function(oDate, sCalendarType) {
  var clDate, oInstance;
  if (oDate instanceof UniversalDate$1) {
    oDate = oDate.getJSDate();
  }
  if (oDate && isNaN(oDate.getTime())) {
    throw new Error("The given date object is invalid");
  }
  if (!sCalendarType) {
    sCalendarType = Configuration.getCalendarType();
  }
  clDate = UniversalDate$1.getClass(sCalendarType);
  oInstance = Object.create(clDate.prototype);
  oInstance.oDate = oDate ? UI5Date$1.getInstance(oDate) : UI5Date$1.getInstance();
  oInstance.sCalendarType = sCalendarType;
  return oInstance;
};
UniversalDate$1.getClass = function(sCalendarType) {
  if (!sCalendarType) {
    sCalendarType = Configuration.getCalendarType();
  }
  return _Calendars.get(sCalendarType);
};
["getDate", "getMonth", "getFullYear", "getYear", "getDay", "getHours", "getMinutes", "getSeconds", "getMilliseconds", "getUTCDate", "getUTCMonth", "getUTCFullYear", "getUTCDay", "getUTCHours", "getUTCMinutes", "getUTCSeconds", "getUTCMilliseconds", "getTime", "valueOf", "getTimezoneOffset", "toString", "toDateString", "setDate", "setFullYear", "setYear", "setMonth", "setHours", "setMinutes", "setSeconds", "setMilliseconds", "setUTCDate", "setUTCFullYear", "setUTCMonth", "setUTCHours", "setUTCMinutes", "setUTCSeconds", "setUTCMilliseconds"].forEach(function(sName) {
  UniversalDate$1.prototype[sName] = function() {
    return this.oDate[sName].apply(this.oDate, arguments);
  };
});
UniversalDate$1.prototype.getJSDate = function() {
  return this.oDate;
};
UniversalDate$1.prototype.getCalendarType = function() {
  return this.sCalendarType;
};
UniversalDate$1.prototype.getEra = function() {
  return UniversalDate$1.getEraByDate(this.sCalendarType, this.oDate.getFullYear(), this.oDate.getMonth(), this.oDate.getDate());
};
UniversalDate$1.prototype.setEra = function(iEra) {
};
UniversalDate$1.prototype.getUTCEra = function() {
  return UniversalDate$1.getEraByDate(this.sCalendarType, this.oDate.getUTCFullYear(), this.oDate.getUTCMonth(), this.oDate.getUTCDate());
};
UniversalDate$1.prototype.setUTCEra = function(iEra) {
};
UniversalDate$1.prototype.getWeek = function(oLocale, vCalendarWeekNumbering) {
  return UniversalDate$1.getWeekByDate(this.sCalendarType, this.getFullYear(), this.getMonth(), this.getDate(), oLocale, vCalendarWeekNumbering);
};
UniversalDate$1.prototype.setWeek = function(oWeek, oLocale, vCalendarWeekNumbering) {
  var oDate = UniversalDate$1.getFirstDateOfWeek(this.sCalendarType, oWeek.year || this.getFullYear(), oWeek.week, oLocale, vCalendarWeekNumbering);
  this.setFullYear(oDate.year, oDate.month, oDate.day);
};
UniversalDate$1.prototype.getUTCWeek = function(oLocale, vCalendarWeekNumbering) {
  return UniversalDate$1.getWeekByDate(this.sCalendarType, this.getUTCFullYear(), this.getUTCMonth(), this.getUTCDate(), oLocale, vCalendarWeekNumbering);
};
UniversalDate$1.prototype.setUTCWeek = function(oWeek, oLocale, vCalendarWeekNumbering) {
  var oDate = UniversalDate$1.getFirstDateOfWeek(this.sCalendarType, oWeek.year || this.getFullYear(), oWeek.week, oLocale, vCalendarWeekNumbering);
  this.setUTCFullYear(oDate.year, oDate.month, oDate.day);
};
UniversalDate$1.prototype.getQuarter = function() {
  return Math.floor(this.getMonth() / 3);
};
UniversalDate$1.prototype.getUTCQuarter = function() {
  return Math.floor(this.getUTCMonth() / 3);
};
UniversalDate$1.prototype.getDayPeriod = function() {
  if (this.getHours() < 12) {
    return 0;
  } else {
    return 1;
  }
};
UniversalDate$1.prototype.getUTCDayPeriod = function() {
  if (this.getUTCHours() < 12) {
    return 0;
  } else {
    return 1;
  }
};
UniversalDate$1.prototype.getTimezoneShort = function() {
  if (this.oDate.getTimezoneShort) {
    return this.oDate.getTimezoneShort();
  }
};
UniversalDate$1.prototype.getTimezoneLong = function() {
  if (this.oDate.getTimezoneLong) {
    return this.oDate.getTimezoneLong();
  }
};
var iMillisecondsInWeek = 7 * 24 * 60 * 60 * 1e3;
UniversalDate$1.getWeekByDate = function(sCalendarType, iYear, iMonth, iDay, oLocale, vCalendarWeekNumbering) {
  vCalendarWeekNumbering = vCalendarWeekNumbering || Configuration.getCalendarWeekNumbering();
  checkWeekConfig(vCalendarWeekNumbering);
  oLocale = oLocale || Configuration.getFormatSettings().getFormatLocale();
  var clDate = this.getClass(sCalendarType);
  var oFirstDay = getFirstDayOfFirstWeek(clDate, iYear, oLocale, vCalendarWeekNumbering);
  var oDate = new clDate(clDate.UTC(iYear, iMonth, iDay));
  var iWeek, iLastYear, iNextYear, oLastFirstDay, oNextFirstDay;
  var bSplitWeek = isSplitWeek(vCalendarWeekNumbering, oLocale);
  if (bSplitWeek) {
    iWeek = calculateWeeks(oFirstDay, oDate);
  } else {
    iLastYear = iYear - 1;
    iNextYear = iYear + 1;
    oLastFirstDay = getFirstDayOfFirstWeek(clDate, iLastYear, oLocale, vCalendarWeekNumbering);
    oNextFirstDay = getFirstDayOfFirstWeek(clDate, iNextYear, oLocale, vCalendarWeekNumbering);
    if (oDate >= oNextFirstDay) {
      iYear = iNextYear;
      iWeek = 0;
    } else if (oDate < oFirstDay) {
      iYear = iLastYear;
      iWeek = calculateWeeks(oLastFirstDay, oDate);
    } else {
      iWeek = calculateWeeks(oFirstDay, oDate);
    }
  }
  return {
    year: iYear,
    week: iWeek
  };
};
UniversalDate$1.getFirstDateOfWeek = function(sCalendarType, iYear, iWeek, oLocale, vCalendarWeekNumbering) {
  vCalendarWeekNumbering = vCalendarWeekNumbering || Configuration.getCalendarWeekNumbering();
  checkWeekConfig(vCalendarWeekNumbering);
  oLocale = oLocale || Configuration.getFormatSettings().getFormatLocale();
  var clDate = this.getClass(sCalendarType);
  var oFirstDay = getFirstDayOfFirstWeek(clDate, iYear, oLocale, vCalendarWeekNumbering);
  var oDate = new clDate(oFirstDay.valueOf() + iWeek * iMillisecondsInWeek);
  var bSplitWeek = isSplitWeek(vCalendarWeekNumbering, oLocale);
  if (bSplitWeek && iWeek === 0 && oFirstDay.getUTCFullYear() < iYear) {
    return {
      year: iYear,
      month: 0,
      day: 1
    };
  }
  return {
    year: oDate.getUTCFullYear(),
    month: oDate.getUTCMonth(),
    day: oDate.getUTCDate()
  };
};
function isSplitWeek(vCalendarWeekNumbering, oLocale) {
  var oLocaleData = LocaleData$1.getInstance(oLocale);
  return (vCalendarWeekNumbering === CalendarWeekNumbering.Default || vCalendarWeekNumbering === CalendarWeekNumbering.WesternTraditional) && oLocaleData.firstDayStartsFirstWeek();
}
function checkWeekConfig(vCalendarWeekNumbering) {
  if (typeof vCalendarWeekNumbering === "object") {
    if (typeof vCalendarWeekNumbering.firstDayOfWeek !== "number" || typeof vCalendarWeekNumbering.minimalDaysInFirstWeek !== "number") {
      throw new TypeError("Week config requires firstDayOfWeek and minimalDaysInFirstWeek to be set");
    }
  } else if (!Object.values(CalendarWeekNumbering).includes(vCalendarWeekNumbering)) {
    throw new TypeError("Illegal format option calendarWeekNumbering: '" + vCalendarWeekNumbering + "'");
  }
}
function resolveCalendarWeekConfiguration(vCalendarWeekNumbering, oLocale) {
  if (typeof vCalendarWeekNumbering === "object" && typeof vCalendarWeekNumbering.firstDayOfWeek === "number" && typeof vCalendarWeekNumbering.minimalDaysInFirstWeek === "number") {
    return vCalendarWeekNumbering;
  }
  return CalendarUtils$1.getWeekConfigurationValues(vCalendarWeekNumbering, oLocale);
}
function getFirstDayOfFirstWeek(clDate, iYear, oLocale, vCalendarWeekNumbering) {
  oLocale = oLocale || Configuration.getFormatSettings().getFormatLocale();
  var oWeekConfig = resolveCalendarWeekConfiguration(vCalendarWeekNumbering, oLocale);
  var iMinDays = oWeekConfig.minimalDaysInFirstWeek;
  var iFirstDayOfWeek = oWeekConfig.firstDayOfWeek;
  var oFirstDay = new clDate(clDate.UTC(iYear, 0, 1));
  var iDayCount = 7;
  if (isNaN(oFirstDay.getTime())) {
    throw new Error("Could not determine the first day of the week, because the date object is invalid");
  }
  while (oFirstDay.getUTCDay() !== iFirstDayOfWeek) {
    oFirstDay.setUTCDate(oFirstDay.getUTCDate() - 1);
    iDayCount--;
  }
  if (iDayCount < iMinDays) {
    oFirstDay.setUTCDate(oFirstDay.getUTCDate() + 7);
  }
  return oFirstDay;
}
function calculateWeeks(oFromDate, oToDate) {
  return Math.floor((oToDate.valueOf() - oFromDate.valueOf()) / iMillisecondsInWeek);
}
var mEras = {};
UniversalDate$1.getEraByDate = function(sCalendarType, iYear, iMonth, iDay) {
  var aEras = getEras(sCalendarType), iTimestamp = (/* @__PURE__ */ new Date(0)).setUTCFullYear(iYear, iMonth, iDay), oEra;
  for (var i3 = aEras.length - 1; i3 >= 0; i3--) {
    oEra = aEras[i3];
    if (!oEra) {
      continue;
    }
    if (oEra._start && iTimestamp >= oEra._startInfo.timestamp) {
      return i3;
    }
    if (oEra._end && iTimestamp < oEra._endInfo.timestamp) {
      return i3;
    }
  }
};
UniversalDate$1.getCurrentEra = function(sCalendarType) {
  var oNow = UI5Date$1.getInstance();
  return this.getEraByDate(sCalendarType, oNow.getFullYear(), oNow.getMonth(), oNow.getDate());
};
UniversalDate$1.getEraStartDate = function(sCalendarType, iEra) {
  var aEras = getEras(sCalendarType), oEra = aEras[iEra] || aEras[0];
  if (oEra._start) {
    return oEra._startInfo;
  }
};
function getEras(sCalendarType) {
  var oLocale = Configuration.getFormatSettings().getFormatLocale(), oLocaleData = LocaleData$1.getInstance(oLocale), aEras = mEras[sCalendarType];
  if (!aEras) {
    var aEras = oLocaleData.getEraDates(sCalendarType);
    if (!aEras[0]) {
      aEras[0] = {
        _start: "1-1-1"
      };
    }
    for (var i3 = 0; i3 < aEras.length; i3++) {
      var oEra = aEras[i3];
      if (!oEra) {
        continue;
      }
      if (oEra._start) {
        oEra._startInfo = parseDateString(oEra._start);
      }
      if (oEra._end) {
        oEra._endInfo = parseDateString(oEra._end);
      }
    }
    mEras[sCalendarType] = aEras;
  }
  return aEras;
}
function parseDateString(sDateString) {
  var aParts = sDateString.split("-"), iYear, iMonth, iDay;
  if (aParts[0] == "") {
    iYear = -parseInt(aParts[1]);
    iMonth = parseInt(aParts[2]) - 1;
    iDay = parseInt(aParts[3]);
  } else {
    iYear = parseInt(aParts[0]);
    iMonth = parseInt(aParts[1]) - 1;
    iDay = parseInt(aParts[2]);
  }
  return {
    // no need to use UI5Date.getInstance as only the UTC timestamp is used
    timestamp: (/* @__PURE__ */ new Date(0)).setUTCFullYear(iYear, iMonth, iDay),
    year: iYear,
    month: iMonth,
    day: iDay
  };
}
const UniversalDate = UniversalDate$1;
let CalendarDate$2 = class CalendarDate {
  constructor(year, month, date, calendarType) {
    let aArgs = arguments, oJSDate, oNow, sCalendarType;
    switch (aArgs.length) {
      case 0:
        oNow = UI5Date.getInstance();
        return this.constructor(oNow.getFullYear(), oNow.getMonth(), oNow.getDate());
      case 1:
      // CalendarDate
      case 2:
        if (!(aArgs[0] instanceof CalendarDate)) {
          throw new Error("Invalid arguments: the first argument must be of type CalendarDate.");
        }
        sCalendarType = aArgs[1] ? aArgs[1] : aArgs[0]._oUDate.sCalendarType;
        oJSDate = UI5Date.getInstance(aArgs[0].valueOf());
        oJSDate.setFullYear(oJSDate.getUTCFullYear(), oJSDate.getUTCMonth(), oJSDate.getUTCDate());
        oJSDate.setHours(oJSDate.getUTCHours(), oJSDate.getUTCMinutes(), oJSDate.getUTCSeconds(), oJSDate.getUTCMilliseconds());
        this._oUDate = createUniversalUTCDate(oJSDate, sCalendarType);
        break;
      case 3:
      // year, month, date
      case 4:
        checkNumericLike(aArgs[0], `Invalid year: ${aArgs[0]}`);
        checkNumericLike(aArgs[1], `Invalid month: ${aArgs[1]}`);
        checkNumericLike(aArgs[2], `Invalid date: ${aArgs[2]}`);
        oJSDate = UI5Date.getInstance(0, 0, 1);
        oJSDate.setFullYear(aArgs[0], aArgs[1], aArgs[2]);
        if (aArgs[3]) {
          sCalendarType = aArgs[3];
        }
        this._oUDate = createUniversalUTCDate(oJSDate, sCalendarType);
        break;
      default:
        throw new Error(`${"Invalid arguments. Accepted arguments are: 1) oCalendarDate, (optional)calendarTypeor 2) year, month, date, (optional) calendarType"}${aArgs}`);
    }
  }
  getYear() {
    return this._oUDate.getUTCFullYear();
  }
  setYear(year) {
    checkNumericLike(year, `Invalid year: ${year}`);
    this._oUDate.setUTCFullYear(year);
    return this;
  }
  getMonth() {
    return this._oUDate.getUTCMonth();
  }
  /**
   * Sets the given month as ordinal month of the year.
   * @param {int} month An integer between 0 and 11, representing the months January through December( or their
   * equivalent month names for the given calendar).
   * If the specified value is is outside of the expected range, this method attempts to update the date information
   * accordingly. For example, if 12 is given as a month, the year will be incremented by 1, and 1 will be used for month.
   * @param {int} [date] An integer between 1 and 31, representing the day of the month, but other values are allowed.
   * 0 will result in the previous month's last day.
   * -1 will result in the day before the previous month's last day.
   * 32 will result in:
   * - first day of the next month if the current month has 31 days.
   * - second day of the next month if the current month has 30 days.
   * Other value will result in adding or subtracting days according to the given value.
   * @returns {sap.ui.unified.calendar.CalendarDate} <code>this</code> for method chaining.
   */
  setMonth(month, date) {
    checkNumericLike(month, `Invalid month: ${month}`);
    if (date || date === 0) {
      checkNumericLike(date, `Invalid date: ${date}`);
      this._oUDate.setUTCMonth(month, date);
    } else {
      this._oUDate.setUTCMonth(month);
    }
    return this;
  }
  getDate() {
    return this._oUDate.getUTCDate();
  }
  setDate(date) {
    checkNumericLike(date, `Invalid date: ${date}`);
    this._oUDate.setUTCDate(date);
    return this;
  }
  getDay() {
    return this._oUDate.getUTCDay();
  }
  getCalendarType() {
    return this._oUDate.sCalendarType;
  }
  isBefore(oCalendarDate) {
    checkCalendarDate(oCalendarDate);
    return this.valueOf() < oCalendarDate.valueOf();
  }
  isAfter(oCalendarDate) {
    checkCalendarDate(oCalendarDate);
    return this.valueOf() > oCalendarDate.valueOf();
  }
  isSameOrBefore(oCalendarDate) {
    checkCalendarDate(oCalendarDate);
    return this.valueOf() <= oCalendarDate.valueOf();
  }
  isSameOrAfter(oCalendarDate) {
    checkCalendarDate(oCalendarDate);
    return this.valueOf() >= oCalendarDate.valueOf();
  }
  isSame(oCalendarDate) {
    checkCalendarDate(oCalendarDate);
    return this.valueOf() === oCalendarDate.valueOf();
  }
  toLocalJSDate() {
    const oLocalDate = UI5Date.getInstance(this._oUDate.getTime());
    oLocalDate.setFullYear(oLocalDate.getUTCFullYear(), oLocalDate.getUTCMonth(), oLocalDate.getUTCDate());
    oLocalDate.setHours(0, 0, 0, 0);
    return oLocalDate;
  }
  toUTCJSDate() {
    const oUTCDate = UI5Date.getInstance(this._oUDate.getTime());
    oUTCDate.setUTCHours(0, 0, 0, 0);
    return oUTCDate;
  }
  toString() {
    return `${this._oUDate.sCalendarType}: ${this.getYear()}/${this.getMonth() + 1}/${this.getDate()}`;
  }
  valueOf() {
    return this._oUDate.getTime();
  }
  static fromLocalJSDate(oJSDate, sCalendarType) {
    function isValidDate(date) {
      return date && Object.prototype.toString.call(date) === "[object Date]" && !isNaN(date);
    }
    if (!isValidDate(oJSDate)) {
      throw new Error(`Date parameter must be a JavaScript Date object: [${oJSDate}].`);
    }
    return new CalendarDate(oJSDate.getFullYear(), oJSDate.getMonth(), oJSDate.getDate(), sCalendarType);
  }
  static fromTimestamp(iTimestamp, sCalendarType) {
    const oCalDate = new CalendarDate(0, 0, 1);
    let oUDate;
    try {
      oUDate = UniversalDate.getInstance(UI5Date.getInstance(iTimestamp), sCalendarType);
    } catch (e2) {
      oUDate = /* @__PURE__ */ new Date(NaN);
    }
    oCalDate._oUDate = oUDate;
    return oCalDate;
  }
};
function createUniversalUTCDate(oDate, sCalendarType) {
  if (sCalendarType) {
    return UniversalDate.getInstance(createUTCDate(oDate), sCalendarType);
  }
  return new UniversalDate(createUTCDate(oDate).getTime());
}
function createUTCDate(oDate) {
  const oUTCDate = new Date(Date.UTC(0, 0, 1));
  oUTCDate.setUTCFullYear(oDate.getFullYear(), oDate.getMonth(), oDate.getDate());
  return oUTCDate;
}
function checkCalendarDate(oCalendarDate) {
  if (!(oCalendarDate instanceof CalendarDate$2)) {
    throw new Error(`Invalid calendar date: [${oCalendarDate}]. Expected: CalendarDate`);
  }
}
function checkNumericLike(value, message) {
  if (value === void 0 || value === Infinity || isNaN(value)) {
    throw message;
  }
}
const getDaysInMonth = (date) => {
  const tempCalendarDate = new CalendarDate$2(date);
  tempCalendarDate.setDate(1);
  tempCalendarDate.setMonth(tempCalendarDate.getMonth() + 1);
  tempCalendarDate.setDate(0);
  return tempCalendarDate.getDate();
};
const transformDateToSecondaryType = (primaryCalendarType, secondaryCalendarType, timeStamp, hasYearPicker) => {
  let firstDate = CalendarDate$2.fromLocalJSDate(UI5Date.getInstance(timeStamp * 1e3), primaryCalendarType);
  let lastDate = CalendarDate$2.fromLocalJSDate(UI5Date.getInstance(timeStamp * 1e3), primaryCalendarType);
  firstDate.setDate(1);
  if (hasYearPicker) {
    firstDate.setMonth(0);
    lastDate.setMonth(11);
  }
  lastDate.setDate(getDaysInMonth(lastDate));
  firstDate = new CalendarDate$2(firstDate, secondaryCalendarType);
  lastDate = new CalendarDate$2(lastDate, secondaryCalendarType);
  return { firstDate, lastDate };
};
const LocaleDataWrapped = LocaleData$1;
class LocaleData extends LocaleDataWrapped {
}
const cache$1 = /* @__PURE__ */ new Map();
const getCachedLocaleDataInstance = (locale) => {
  if (!cache$1.has(locale)) {
    cache$1.set(locale, new LocaleData(locale));
  }
  return cache$1.get(locale);
};
const convertMonthNumbersToMonthNames = (firstMonth, lastMonth, calendarType) => {
  const localeData = getCachedLocaleDataInstance(s$i());
  const pattern = localeData.getIntervalPattern("");
  const secondaryMonthsNames = localeData.getMonthsStandAlone("abbreviated", calendarType);
  const secondaryMonthsNamesWide = localeData.getMonthsStandAlone("wide", calendarType);
  if (firstMonth === lastMonth) {
    return {
      text: localeData.getMonths("abbreviated", calendarType)[firstMonth],
      textInfo: localeData.getMonths("wide", calendarType)[firstMonth]
    };
  }
  return {
    text: pattern.replace(/\{0\}/, secondaryMonthsNames[firstMonth]).replace(/\{1\}/, secondaryMonthsNames[lastMonth]),
    textInfo: pattern.replace(/\{0\}/, secondaryMonthsNamesWide[firstMonth]).replace(/\{1\}/, secondaryMonthsNamesWide[lastMonth])
  };
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var rMessageFormat = /('')|'([^']+(?:''[^']*)*)(?:'|$)|\{([0-9]+(?:\s*,[^{}]*)?)\}|[{}]/g;
var fnFormatMessage = function(sPattern, aValues) {
  fnAssert(typeof sPattern === "string" || sPattern instanceof String, "pattern must be string");
  if (arguments.length > 2 || aValues != null && !Array.isArray(aValues)) {
    aValues = Array.prototype.slice.call(arguments, 1);
  }
  aValues = aValues || [];
  return sPattern.replace(rMessageFormat, function($0, $1, $2, $3, offset) {
    if ($1) {
      return "'";
    } else if ($2) {
      return $2.replace(/''/g, "'");
    } else if ($3) {
      return String(aValues[parseInt($3)]);
    }
    throw new Error("formatMessage: pattern syntax error at pos. " + offset);
  });
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var fnEqual = function(a3, b3, maxDepth, contains, depth) {
  if (typeof maxDepth == "boolean") {
    contains = maxDepth;
    maxDepth = void 0;
  }
  if (!depth) {
    depth = 0;
  }
  if (!maxDepth) {
    maxDepth = 10;
  }
  if (depth > maxDepth) {
    Log.warning("deepEqual comparison exceeded maximum recursion depth of " + maxDepth + ". Treating values as unequal");
    return false;
  }
  if (a3 === b3 || Number.isNaN(a3) && Number.isNaN(b3)) {
    return true;
  }
  if (Array.isArray(a3) && Array.isArray(b3)) {
    if (!contains && a3.length !== b3.length) {
      return false;
    }
    if (a3.length > b3.length) {
      return false;
    }
    for (var i3 = 0; i3 < a3.length; i3++) {
      if (!fnEqual(a3[i3], b3[i3], maxDepth, contains, depth + 1)) {
        return false;
      }
    }
    return true;
  }
  if (typeof a3 == "object" && typeof b3 == "object") {
    if (!a3 || !b3) {
      return false;
    }
    if (a3.constructor !== b3.constructor) {
      return false;
    }
    if (!contains && Object.keys(a3).length !== Object.keys(b3).length) {
      return false;
    }
    if (a3 instanceof Node) {
      return a3.isEqualNode(b3);
    }
    if (a3 instanceof Date) {
      return a3.valueOf() === b3.valueOf();
    }
    for (var i3 in a3) {
      if (!fnEqual(a3[i3], b3[i3], maxDepth, contains, depth + 1)) {
        return false;
      }
    }
    return true;
  }
  return false;
};
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var DateFormat$1 = function() {
  throw new Error();
};
var mDateFormatTypes = {
  DATE: "date",
  TIME: "time",
  DATETIME: "datetime",
  DATETIME_WITH_TIMEZONE: "datetimeWithTimezone"
};
var mCldrDatePattern = {};
var checkTimezoneParameterType = function(sTimezone) {
  if (typeof sTimezone !== "string" && !(sTimezone instanceof String) && sTimezone != null) {
    throw new TypeError("The given timezone must be a string.");
  }
};
DateFormat$1.oDateInfo = {
  type: mDateFormatTypes.DATE,
  oDefaultFormatOptions: {
    style: "medium",
    relativeScale: "day",
    relativeStyle: "wide"
  },
  aFallbackFormatOptions: [{
    style: "short"
  }, {
    style: "medium"
  }, {
    pattern: "yyyy-MM-dd"
  }, {
    pattern: "yyyyMMdd",
    strictParsing: true
  }],
  bShortFallbackFormatOptions: true,
  bPatternFallbackWithoutDelimiter: true,
  getPattern: function(oLocaleData, sStyle, sCalendarType) {
    return oLocaleData.getDatePattern(sStyle, sCalendarType);
  },
  oRequiredParts: {
    "text": true,
    "year": true,
    "weekYear": true,
    "month": true,
    "day": true
  },
  aRelativeScales: ["year", "month", "week", "day"],
  aRelativeParseScales: ["year", "quarter", "month", "week", "day", "hour", "minute", "second"],
  aIntervalCompareFields: ["Era", "FullYear", "Quarter", "Month", "Week", "Date"]
};
DateFormat$1.oDateTimeInfo = {
  type: mDateFormatTypes.DATETIME,
  oDefaultFormatOptions: {
    style: "medium",
    relativeScale: "auto",
    relativeStyle: "wide"
  },
  aFallbackFormatOptions: [{
    style: "short"
  }, {
    style: "medium"
  }, {
    pattern: "yyyy-MM-dd'T'HH:mm:ss"
  }, {
    pattern: "yyyyMMdd HHmmss"
  }],
  getPattern: function(oLocaleData, sStyle, sCalendarType) {
    var iSlashIndex = sStyle.indexOf("/");
    if (iSlashIndex > 0) {
      return oLocaleData.getCombinedDateTimePattern(sStyle.substr(0, iSlashIndex), sStyle.substr(iSlashIndex + 1), sCalendarType);
    } else {
      return oLocaleData.getCombinedDateTimePattern(sStyle, sStyle, sCalendarType);
    }
  },
  oRequiredParts: {
    "text": true,
    "year": true,
    "weekYear": true,
    "month": true,
    "day": true,
    "hour0_23": true,
    "hour1_24": true,
    "hour0_11": true,
    "hour1_12": true
  },
  aRelativeScales: ["year", "month", "week", "day", "hour", "minute", "second"],
  aRelativeParseScales: ["year", "quarter", "month", "week", "day", "hour", "minute", "second"],
  aIntervalCompareFields: ["Era", "FullYear", "Quarter", "Month", "Week", "Date", "DayPeriod", "Hours", "Minutes", "Seconds"]
};
DateFormat$1._getDateTimeWithTimezoneInfo = function(oFormatOptions) {
  var bShowDate = oFormatOptions.showDate === void 0 || oFormatOptions.showDate;
  var bShowTime = oFormatOptions.showTime === void 0 || oFormatOptions.showTime;
  var bShowTimezone = oFormatOptions.showTimezone === void 0 || oFormatOptions.showTimezone;
  var oBaselineType = DateFormat$1.oDateTimeInfo;
  if (bShowDate && !bShowTime) {
    oBaselineType = DateFormat$1.oDateInfo;
  } else if (!bShowDate && bShowTime) {
    oBaselineType = DateFormat$1.oTimeInfo;
  }
  return Object.assign({}, oBaselineType, {
    type: mDateFormatTypes.DATETIME_WITH_TIMEZONE,
    // This function is used to transform the pattern of the fallbackFormatOptions to a timezone pattern.
    getTimezonePattern: function(sPattern) {
      if (!bShowDate && !bShowTime && bShowTimezone) {
        return "VV";
      } else if (!bShowTimezone) {
        return sPattern;
      } else {
        return sPattern + " VV";
      }
    },
    getPattern: function(oLocaleData, sStyle, sCalendarType) {
      if (!bShowDate && !bShowTime && bShowTimezone) {
        return "VV";
      }
      if (!bShowTimezone) {
        return oBaselineType.getPattern(oLocaleData, sStyle, sCalendarType);
      }
      var sPattern = oBaselineType.getPattern(oLocaleData, sStyle, sCalendarType);
      return oLocaleData.applyTimezonePattern(sPattern);
    }
  });
};
DateFormat$1.oTimeInfo = {
  type: mDateFormatTypes.TIME,
  oDefaultFormatOptions: {
    style: "medium",
    relativeScale: "auto",
    relativeStyle: "wide"
  },
  aFallbackFormatOptions: [{
    style: "short"
  }, {
    style: "medium"
  }, {
    pattern: "HH:mm:ss"
  }, {
    pattern: "HHmmss"
  }],
  getPattern: function(oLocaleData, sStyle, sCalendarType) {
    return oLocaleData.getTimePattern(sStyle, sCalendarType);
  },
  oRequiredParts: {
    "text": true,
    "hour0_23": true,
    "hour1_24": true,
    "hour0_11": true,
    "hour1_12": true
  },
  aRelativeScales: ["hour", "minute", "second"],
  aRelativeParseScales: ["year", "quarter", "month", "week", "day", "hour", "minute", "second"],
  aIntervalCompareFields: ["DayPeriod", "Hours", "Minutes", "Seconds"]
};
DateFormat$1.getInstance = function(oFormatOptions, oLocale) {
  return this.getDateInstance(oFormatOptions, oLocale);
};
DateFormat$1.getDateInstance = function(oFormatOptions, oLocale) {
  return this.createInstance(oFormatOptions, oLocale, this.oDateInfo);
};
DateFormat$1.getDateTimeInstance = function(oFormatOptions, oLocale) {
  return this.createInstance(oFormatOptions, oLocale, this.oDateTimeInfo);
};
DateFormat$1.getDateTimeWithTimezoneInstance = function(oFormatOptions, oLocale) {
  if (oFormatOptions && !(oFormatOptions instanceof Locale)) {
    (function() {
      oFormatOptions = Object.assign({}, oFormatOptions);
      if (typeof oFormatOptions.showTimezone === "string") {
        var sShowTimezone = oFormatOptions.showTimezone;
        if (oFormatOptions.showDate === void 0 && oFormatOptions.showTime === void 0) {
          if (sShowTimezone === "Hide") {
            oFormatOptions.showTimezone = false;
          } else if (sShowTimezone === "Only") {
            oFormatOptions.showDate = false;
            oFormatOptions.showTime = false;
          }
        }
        oFormatOptions.showTimezone = sShowTimezone !== "Hide";
      }
    })();
    if (oFormatOptions.showDate === false && oFormatOptions.showTime === false && oFormatOptions.showTimezone === false) {
      throw new TypeError("Invalid Configuration. One of the following format options must be true: showDate, showTime or showTimezone.");
    }
  }
  return this.createInstance(oFormatOptions, oLocale, DateFormat$1._getDateTimeWithTimezoneInfo(oFormatOptions || {}));
};
DateFormat$1.getTimeInstance = function(oFormatOptions, oLocale) {
  return this.createInstance(oFormatOptions, oLocale, this.oTimeInfo);
};
DateFormat$1.createInstance = function(oFormatOptions, oLocale, oInfo, bIsFallback) {
  var aFallbackFormatOptions, oFormat, sPattern;
  oFormat = Object.create(this.prototype);
  if (oFormatOptions instanceof Locale) {
    oLocale = oFormatOptions;
    oFormatOptions = void 0;
  }
  if (!oLocale) {
    oLocale = Configuration.getFormatSettings().getFormatLocale();
  }
  oFormat.oLocale = oLocale;
  oFormat.oLocaleData = LocaleData$1.getInstance(oLocale);
  oFormat.oFormatOptions = fnExtend({}, oInfo.oDefaultFormatOptions, oFormatOptions);
  if (oInfo.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
    oFormat.oFormatOptions.interval = false;
    oFormat.oFormatOptions.singleIntervalValue = false;
    oFormat.oFormatOptions.UTC = false;
  } else {
    oFormat.oFormatOptions.showTimezone = void 0;
    oFormat.oFormatOptions.showDate = void 0;
    oFormat.oFormatOptions.showTime = void 0;
  }
  oFormat.type = oInfo.type;
  if (!oFormat.oFormatOptions.calendarType) {
    oFormat.oFormatOptions.calendarType = Configuration.getCalendarType();
  }
  if (oFormat.oFormatOptions.firstDayOfWeek === void 0 && oFormat.oFormatOptions.minimalDaysInFirstWeek !== void 0 || oFormat.oFormatOptions.firstDayOfWeek !== void 0 && oFormat.oFormatOptions.minimalDaysInFirstWeek === void 0) {
    throw new TypeError("Format options firstDayOfWeek and minimalDaysInFirstWeek need both to be set, but only one was provided.");
  }
  if (oFormat.oFormatOptions.calendarWeekNumbering && !Object.values(CalendarWeekNumbering).includes(oFormat.oFormatOptions.calendarWeekNumbering)) {
    throw new TypeError("Illegal format option calendarWeekNumbering: '" + oFormat.oFormatOptions.calendarWeekNumbering + "'");
  }
  if (!oFormat.oFormatOptions.pattern) {
    if (oFormat.oFormatOptions.format) {
      oFormat.oFormatOptions.pattern = oFormat.oLocaleData.getCustomDateTimePattern(oFormat.oFormatOptions.format, oFormat.oFormatOptions.calendarType);
    } else {
      oFormat.oFormatOptions.pattern = oInfo.getPattern(oFormat.oLocaleData, oFormat.oFormatOptions.style, oFormat.oFormatOptions.calendarType);
    }
  }
  if (oFormat.oFormatOptions.interval) {
    var sSinglePattern, sDelimiter = oFormat.oFormatOptions.intervalDelimiter;
    if (oFormat.oFormatOptions.format) {
      oFormat.intervalPatterns = oFormat.oLocaleData.getCustomIntervalPattern(oFormat.oFormatOptions.format, null, oFormat.oFormatOptions.calendarType);
      if (typeof oFormat.intervalPatterns === "string") {
        oFormat.intervalPatterns = [oFormat.intervalPatterns];
      }
      sSinglePattern = oFormat.oLocaleData.getCustomDateTimePattern(oFormat.oFormatOptions.format, oFormat.oFormatOptions.calendarType);
      oFormat.intervalPatterns.push(sSinglePattern);
    } else {
      sSinglePattern = oFormat.oFormatOptions.pattern;
      oFormat.intervalPatterns = [
        // when 'format' option is not set, generate the combined interval pattern
        oFormat.oLocaleData.getCombinedIntervalPattern(oFormat.oFormatOptions.pattern, oFormat.oFormatOptions.calendarType),
        // Put the single date pattern into the array in case the date interval is formatted as a single date
        oFormat.oFormatOptions.pattern
      ];
    }
    oFormat.intervalPatterns.push(oFormat.oFormatOptions.pattern + " - " + oFormat.oFormatOptions.pattern);
    if (sDelimiter) {
      sDelimiter = sDelimiter.replace(/'/g, "''");
      sDelimiter = "'" + sDelimiter + "'";
      oFormat.intervalPatterns.unshift(sSinglePattern + sDelimiter + sSinglePattern);
    }
    oFormat.intervalPatterns = Array.from(new Set(oFormat.intervalPatterns));
  }
  if (!bIsFallback) {
    aFallbackFormatOptions = oInfo.aFallbackFormatOptions;
    if (oInfo.bShortFallbackFormatOptions) {
      sPattern = oInfo.getPattern(oFormat.oLocaleData, "short");
      aFallbackFormatOptions = aFallbackFormatOptions.concat(DateFormat$1._createFallbackOptionsWithoutDelimiter(sPattern));
    }
    if (oFormat.oFormatOptions.pattern && oInfo.bPatternFallbackWithoutDelimiter) {
      aFallbackFormatOptions = DateFormat$1._createFallbackOptionsWithoutDelimiter(oFormat.oFormatOptions.pattern).concat(aFallbackFormatOptions);
    }
    aFallbackFormatOptions = aFallbackFormatOptions.reduce(function(aFallbacks, oOptions) {
      var aKeys = Object.keys(oOptions), bDuplicate = aFallbacks.some(function(oOptions0) {
        return Object.keys(oOptions0).length === aKeys.length && aKeys.every(function(sKey) {
          return oOptions0[sKey] === oOptions[sKey];
        });
      });
      if (!bDuplicate) {
        aFallbacks.push(oOptions);
      }
      return aFallbacks;
    }, []);
    oFormat.aFallbackFormats = DateFormat$1._createFallbackFormat(aFallbackFormatOptions, oFormat.oFormatOptions.calendarType, oLocale, oInfo, oFormat.oFormatOptions);
  }
  oFormat.oRequiredParts = oInfo.oRequiredParts;
  oFormat.aRelativeScales = oInfo.aRelativeScales;
  oFormat.aRelativeParseScales = oInfo.aRelativeParseScales;
  oFormat.aIntervalCompareFields = oInfo.aIntervalCompareFields;
  oFormat.init();
  return oFormat;
};
DateFormat$1.prototype.init = function() {
  var sCalendarType = this.oFormatOptions.calendarType;
  this.aMonthsAbbrev = this.oLocaleData._getMonthsWithAlternatives("abbreviated", sCalendarType);
  this.aMonthsWide = this.oLocaleData.getMonths("wide", sCalendarType);
  this.aMonthsNarrow = this.oLocaleData.getMonths("narrow", sCalendarType);
  this.aMonthsAbbrevSt = this.oLocaleData._getMonthsStandAloneWithAlternatives("abbreviated", sCalendarType);
  this.aMonthsWideSt = this.oLocaleData.getMonthsStandAlone("wide", sCalendarType);
  this.aMonthsNarrowSt = this.oLocaleData.getMonthsStandAlone("narrow", sCalendarType);
  this.aDaysAbbrev = this.oLocaleData.getDays("abbreviated", sCalendarType);
  this.aDaysWide = this.oLocaleData.getDays("wide", sCalendarType);
  this.aDaysNarrow = this.oLocaleData.getDays("narrow", sCalendarType);
  this.aDaysShort = this.oLocaleData.getDays("short", sCalendarType);
  this.aDaysAbbrevSt = this.oLocaleData.getDaysStandAlone("abbreviated", sCalendarType);
  this.aDaysWideSt = this.oLocaleData.getDaysStandAlone("wide", sCalendarType);
  this.aDaysNarrowSt = this.oLocaleData.getDaysStandAlone("narrow", sCalendarType);
  this.aDaysShortSt = this.oLocaleData.getDaysStandAlone("short", sCalendarType);
  this.aQuartersAbbrev = this.oLocaleData.getQuarters("abbreviated", sCalendarType);
  this.aQuartersWide = this.oLocaleData.getQuarters("wide", sCalendarType);
  this.aQuartersNarrow = this.oLocaleData.getQuarters("narrow", sCalendarType);
  this.aQuartersAbbrevSt = this.oLocaleData.getQuartersStandAlone("abbreviated", sCalendarType);
  this.aQuartersWideSt = this.oLocaleData.getQuartersStandAlone("wide", sCalendarType);
  this.aQuartersNarrowSt = this.oLocaleData.getQuartersStandAlone("narrow", sCalendarType);
  this.aErasNarrow = this.oLocaleData.getEras("narrow", sCalendarType);
  this.aErasAbbrev = this.oLocaleData.getEras("abbreviated", sCalendarType);
  this.aErasWide = this.oLocaleData.getEras("wide", sCalendarType);
  this.aDayPeriodsAbbrev = this.oLocaleData.getDayPeriods("abbreviated", sCalendarType);
  this.aDayPeriodsNarrow = this.oLocaleData.getDayPeriods("narrow", sCalendarType);
  this.aDayPeriodsWide = this.oLocaleData.getDayPeriods("wide", sCalendarType);
  this.oFlexibleDayPeriodsAbbrev = this.oLocaleData.getFlexibleDayPeriods("abbreviated", sCalendarType);
  this.oFlexibleDayPeriodsNarrow = this.oLocaleData.getFlexibleDayPeriods("narrow", sCalendarType);
  this.oFlexibleDayPeriodsWide = this.oLocaleData.getFlexibleDayPeriods("wide", sCalendarType);
  this.oFlexibleDayPeriodsAbbrevSt = this.oLocaleData.getFlexibleDayPeriodsStandAlone("abbreviated", sCalendarType);
  this.oFlexibleDayPeriodsNarrowSt = this.oLocaleData.getFlexibleDayPeriodsStandAlone("narrow", sCalendarType);
  this.oFlexibleDayPeriodsWideSt = this.oLocaleData.getFlexibleDayPeriodsStandAlone("wide", sCalendarType);
  this.aFormatArray = this.parseCldrDatePattern(this.oFormatOptions.pattern);
  this.sAllowedCharacters = this.getAllowedCharacters(this.aFormatArray);
};
DateFormat$1._createFallbackFormat = function(aFallbackFormatOptions, sCalendarType, oLocale, oInfo, oParentFormatOptions) {
  return aFallbackFormatOptions.map(function(oOptions) {
    var oFormatOptions = Object.assign({}, oOptions);
    oFormatOptions.showDate = oParentFormatOptions.showDate;
    oFormatOptions.showTime = oParentFormatOptions.showTime;
    oFormatOptions.showTimezone = oParentFormatOptions.showTimezone;
    if (typeof oInfo.getTimezonePattern === "function" && oFormatOptions.pattern) {
      oFormatOptions.pattern = oInfo.getTimezonePattern(oFormatOptions.pattern);
    }
    if (oParentFormatOptions.interval) {
      oFormatOptions.interval = true;
    }
    oFormatOptions.calendarType = sCalendarType;
    return DateFormat$1.createInstance(oFormatOptions, oLocale, oInfo, true);
  });
};
DateFormat$1._createFallbackOptionsWithoutDelimiter = function(sBasePattern) {
  var rNonDateFields = /[^dMyGU]/g, oDayReplace = {
    regex: /d+/g,
    replace: "dd"
  }, oMonthReplace = {
    regex: /M+/g,
    replace: "MM"
  }, oYearReplace = {
    regex: /[yU]+/g,
    replace: ["yyyy", "yy"]
  };
  sBasePattern = sBasePattern.replace(rNonDateFields, "");
  sBasePattern = sBasePattern.replace(oDayReplace.regex, oDayReplace.replace);
  sBasePattern = sBasePattern.replace(oMonthReplace.regex, oMonthReplace.replace);
  return oYearReplace.replace.map(function(sReplace) {
    return {
      pattern: sBasePattern.replace(oYearReplace.regex, sReplace),
      strictParsing: true
    };
  });
};
var oParseHelper = {
  isNumber: function(iCharCode) {
    return iCharCode >= 48 && iCharCode <= 57;
  },
  findNumbers: function(sValue, iMaxLength) {
    var iLength = 0;
    while (iLength < iMaxLength && this.isNumber(sValue.charCodeAt(iLength))) {
      iLength++;
    }
    return sValue.substr(0, iLength);
  },
  /**
   * Returns if the given string starts with another given string ignoring the case.
   *
   * Takes the locale into account to ensure the characters are interpreted the right way.
   *
   * First, an exact case check is performed to remain backward compatible, then a case-insensitive check
   * based on the locale is done.
   *
   * When during the case conversion the length of the string changes we cannot safely match
   * it and return <code>false</code>.
   *
   * @param {string} sValue the value to check, e.g. "März 2013"
   * @param {string} sSubstring the string to compare it with, e.g. "MÄRZ"
   * @param {string} sLocale the locale, e.g. "de-DE"
   * @returns {boolean} true if the given string <code>sValue</code> starts with <code>sSubstring</code>
   * @private
   */
  startsWithIgnoreCase: function(sValue, sSubstring, sLocale) {
    if (sValue.startsWith(sSubstring)) {
      return true;
    }
    try {
      var sSubToLocaleUpperCase = sSubstring.toLocaleUpperCase(sLocale);
      var sValueUpperCase = sValue.toLocaleUpperCase(sLocale);
      if (sSubToLocaleUpperCase.length !== sSubstring.length || sValueUpperCase.length !== sValue.length) {
        return false;
      }
      return sValueUpperCase.startsWith(sSubToLocaleUpperCase);
    } catch (e2) {
      return false;
    }
  },
  /**
   * Finds the longest matching entry for which the following applies:
   * * <code>sValue</code> starts with the found entry
   *
   * The index of the finding in <code>aList</code> and the length of the match is returned.
   * The case is ignored and the given locale is used for the string comparison.
   *
   * @example
   * findEntry("MÄRZ 2013", ["Januar", "Februar", "März", "April", ...], "de-DE");
   * // {length: 4, index: 2}
   * @example
   * findEntry("Sep 2013", [..., "Aug", ["Sept", "Sep"], "Oct", ...], "en-GB");
   * // {length: 3, index: 8}
   *
   * @param {string} sValue the input value, e.g. "MÄRZ 2013"
   * @param {string[]|Array<string[]>} aList
   *   The list of values to check, e.g. ["Januar", "Februar", "März", "April", ...]; the list may contain also
   *   arrays of strings containing alternatives, e.g. [..., "Aug", ["Sept", "Sep"], "Oct", ...]
   * @param {string} sLocale the locale which is used for the string comparison, e.g. "de-DE"
   * @returns {{length: number, index: number}} the length of the match in sValue, the index in the list of values
   *   e.g. length: 4, index: 2 ("MÄRZ")
   * @private
   */
  findEntry: function(sValue, aList, sLocale) {
    let iFoundIndex = -1;
    let iMatchedLength = 0;
    aList.forEach((vEntry, j2) => {
      (Array.isArray(vEntry) ? vEntry : [vEntry]).forEach((sEntry) => {
        if (sEntry.length > iMatchedLength && this.startsWithIgnoreCase(sValue, sEntry, sLocale)) {
          iFoundIndex = j2;
          iMatchedLength = sEntry.length;
        }
      });
    });
    return {
      index: iFoundIndex,
      length: iMatchedLength
    };
  },
  /**
   * Parses a given timezone
   *
   * @param {string} sValue String to parse, e.g. "-0800", "-08:00", "-08"
   * @param {boolean} bColonSeparated Whether or not the values are colon separated, e.g. "-08:00"
   * @returns {{tzDiff: number, length: number}} Object containing the timezone difference in seconds and the length of the parsed segment
   */
  parseTZ: function(sValue, bColonSeparated) {
    var iLength = 0;
    var iTZFactor = sValue.charAt(0) === "+" ? -1 : 1;
    var sPart;
    if (sValue[0] === "Z") {
      return {
        length: 1,
        tzDiff: 0
      };
    }
    iLength++;
    sPart = this.findNumbers(sValue.substr(iLength), 2);
    var iTZDiffHour = parseInt(sPart);
    iLength += 2;
    if (bColonSeparated) {
      iLength++;
    }
    sPart = this.findNumbers(sValue.substr(iLength), 2);
    var iTZDiff = 0;
    if (sPart) {
      iLength += 2;
      iTZDiff = parseInt(sPart);
    }
    return {
      length: iLength,
      tzDiff: (iTZDiff + 60 * iTZDiffHour) * 60 * iTZFactor
    };
  },
  /**
   * Returns <code>false</code> if the given pattern symbol name is required and the value for that part is
   * invalid, otherwise <code>true</code> is returned.
   *
   * @param {string} sSymbolName
   *   A unique pattern symbol name
   * @param {boolean} bPartInvalid
   *   Whether the value for the given pattern symbol name is invalid
   * @param {sap.ui.core.format.DateFormat} oFormat
   *   The <code>DateFormat</code> instance
   * @returns {boolean}
   *   <code>false</code> if the given pattern symbol name is required and the value for that part is invalid,
   *   otherwise <code>true</code>
   */
  checkValid: function(sSymbolName, bPartInvalid, oFormat) {
    if (sSymbolName in oFormat.oRequiredParts && bPartInvalid) {
      return false;
    }
    return true;
  }
};
DateFormat$1._oParseHelper = oParseHelper;
DateFormat$1._createPatternSymbol = function(mParameters) {
  var fnIsNumeric = typeof mParameters.isNumeric === "function" && mParameters.isNumeric || function() {
    return mParameters.isNumeric || false;
  };
  return {
    name: mParameters.name,
    /**
     * Formatter for a pattern symbol.
     *
     * @param {Object<string, any>} oField
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {sap.ui.core.date.UniversalDate} oDate
     *   The date object to format
     * @param {boolean} bUTC
     *   Whether the UTC option is set
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @returns {string}
     *   The formatted date information for this date pattern part
     */
    format: mParameters.format || function() {
      return "";
    },
    /**
     * Parser for a pattern symbol.
     *
     * @param {string} sValue
     *   The given input
     * @param {Object<string, any>} oPart
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @param {object} oConfig
     *   The configuration object for parsing the value
     * @param {object} oConfig.dateValue
     *   The already parsed date fields
     * @param {boolean} oConfig.exactLength
     *   Whether parsing with the exact length specified by {@link DateFormat#parseCldrDatePattern} is needed
     * @param {object[]} oConfig.formatArray
     *   The complete format array as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {int} oConfig.index
     *   The current index in the format array
     * @param {boolean} oConfig.strict
     *   Whether to disallow overflows for component values of a date (see
     *   https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date).
     *   Note that the corresponding checks are just for number ranges which are possible <em>at max</em>
     *   without overflow; the check for day does not consider the month and year to compute the maximum
     *   number of days allowed.
     * @param {string} sTimezone
     *   The IANA timezone ID
     * @returns {object}
     *   The parsed date information for this date pattern part; could contain the property <code>valid</code>
     *   set to <code>false</code> if parsing was not successful
     */
    parse: mParameters.parse || function() {
      return {};
    },
    /**
     * Evaluates whether this symbol has a numeric representation.
     *
     * @param {int} [iDigits] The number of repetitions of the pattern symbol, e.g. <code>3</code> for "aaa"
     * @returns {boolean} Whether this symbol has a numeric representation
     */
    isNumeric: fnIsNumeric
  };
};
DateFormat$1.prototype.oSymbols = {
  "": DateFormat$1._createPatternSymbol({
    name: "text",
    format: function(oField, oDate) {
      return oField.value;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sChar;
      var bValid = true;
      var iValueIndex = 0;
      var iPatternIndex = 0;
      var sDelimiter = "-~‐‑‒–—﹘﹣－～";
      const sPartValue = DateFormat$1._normalize(oPart.value);
      for (; iPatternIndex < sPartValue.length; iPatternIndex++) {
        sChar = sPartValue.charAt(iPatternIndex);
        if (sChar === " ") {
          while (sValue.charAt(iValueIndex) === " ") {
            iValueIndex++;
          }
        } else if (sDelimiter.includes(sChar)) {
          if (!sDelimiter.includes(sValue.charAt(iValueIndex))) {
            bValid = false;
          }
          iValueIndex++;
        } else {
          if (sValue.charAt(iValueIndex) !== sChar) {
            bValid = false;
          }
          iValueIndex++;
        }
        if (!bValid) {
          break;
        }
      }
      if (bValid) {
        return {
          length: iValueIndex
        };
      } else {
        var bPartInvalid = false;
        if (oConfig.index < oConfig.formatArray.length - 1) {
          bPartInvalid = oConfig.formatArray[oConfig.index + 1].type in oFormat.oRequiredParts;
        }
        return {
          valid: oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat)
        };
      }
    }
  }),
  "G": DateFormat$1._createPatternSymbol({
    name: "era",
    format: function(oField, oDate, bUTC, oFormat) {
      var iEra = oDate.getUTCEra();
      if (oField.digits <= 3) {
        return oFormat.aErasAbbrev[iEra];
      } else if (oField.digits === 4) {
        return oFormat.aErasWide[iEra];
      } else {
        return oFormat.aErasNarrow[iEra];
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var aErasVariants = [oFormat.aErasWide, oFormat.aErasAbbrev, oFormat.aErasNarrow];
      for (var i3 = 0; i3 < aErasVariants.length; i3++) {
        var aVariants = aErasVariants[i3];
        var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
        if (oFound.index !== -1) {
          return {
            era: oFound.index,
            length: oFound.length
          };
        }
      }
      return {
        era: oFormat.aErasWide.length - 1,
        valid: oParseHelper.checkValid(oPart.type, true, oFormat)
      };
    }
  }),
  "y": DateFormat$1._createPatternSymbol({
    name: "year",
    format: function(oField, oDate, bUTC, oFormat) {
      var iYear = oDate.getUTCFullYear();
      var sYear = String(iYear);
      var sCalendarType = oFormat.oFormatOptions.calendarType;
      if (oField.digits === 2 && sYear.length > 2) {
        sYear = sYear.substr(sYear.length - 2);
      }
      if (sCalendarType !== CalendarType.Japanese && oField.digits === 1 && iYear < 100) {
        sYear = sYear.padStart(4, "0");
      }
      return sYear.padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iExpectedDigits, sPart, bPartInvalid, sCalendarType = oFormat.oFormatOptions.calendarType;
      if (oPart.digits === 1) {
        iExpectedDigits = 4;
      } else if (oPart.digits === 2) {
        iExpectedDigits = 2;
      } else {
        iExpectedDigits = oPart.digits;
      }
      sPart = oParseHelper.findNumbers(sValue, iExpectedDigits);
      bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length !== iExpectedDigits;
      var iYear = parseInt(sPart);
      if (sCalendarType !== CalendarType.Japanese && sPart.length <= 2) {
        var oCurrentDate = UniversalDate$1.getInstance(UI5Date$1.getInstance(), sCalendarType), iCurrentYear = oCurrentDate.getUTCFullYear(), iCurrentCentury = Math.floor(iCurrentYear / 100), iYearDiff = iCurrentCentury * 100 + iYear - iCurrentYear;
        if (iYearDiff < -70) {
          iYear += (iCurrentCentury + 1) * 100;
        } else if (iYearDiff < 30) {
          iYear += iCurrentCentury * 100;
        } else {
          iYear += (iCurrentCentury - 1) * 100;
        }
      }
      return {
        length: sPart.length,
        valid: oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat),
        year: iYear
      };
    },
    isNumeric: true
  }),
  "Y": DateFormat$1._createPatternSymbol({
    name: "weekYear",
    format: function(oField, oDate, bUTC, oFormat) {
      var oWeek = oDate.getUTCWeek(oFormat.oLocale, getCalendarWeekParameter(oFormat.oFormatOptions));
      var iWeekYear = oWeek.year;
      var sWeekYear = String(iWeekYear);
      var sCalendarType = oFormat.oFormatOptions.calendarType;
      if (oField.digits === 2 && sWeekYear.length > 2) {
        sWeekYear = sWeekYear.substr(sWeekYear.length - 2);
      }
      if (sCalendarType !== CalendarType.Japanese && oField.digits === 1 && iWeekYear < 100) {
        sWeekYear = sWeekYear.padStart(4, "0");
      }
      return sWeekYear.padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iExpectedDigits, sPart, bPartInvalid, sCalendarType = oFormat.oFormatOptions.calendarType;
      if (oPart.digits === 1) {
        iExpectedDigits = 4;
      } else if (oPart.digits === 2) {
        iExpectedDigits = 2;
      } else {
        iExpectedDigits = oPart.digits;
      }
      sPart = oParseHelper.findNumbers(sValue, iExpectedDigits);
      bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length !== iExpectedDigits;
      var iYear = parseInt(sPart);
      var iWeekYear = iYear;
      if (sCalendarType !== CalendarType.Japanese && sPart.length <= 2) {
        var oCurrentDate = UniversalDate$1.getInstance(UI5Date$1.getInstance(), sCalendarType), iCurrentYear = oCurrentDate.getUTCFullYear(), iCurrentCentury = Math.floor(iCurrentYear / 100), iYearDiff = iCurrentCentury * 100 + iWeekYear - iCurrentYear;
        if (iYearDiff < -70) {
          iWeekYear += (iCurrentCentury + 1) * 100;
        } else if (iYearDiff < 30) {
          iWeekYear += iCurrentCentury * 100;
        } else {
          iWeekYear += (iCurrentCentury - 1) * 100;
        }
      }
      return {
        length: sPart.length,
        valid: oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat),
        year: iYear,
        weekYear: iWeekYear
      };
    },
    isNumeric: true
  }),
  "M": DateFormat$1._createPatternSymbol({
    name: "month",
    format: function(oField, oDate, bUTC, oFormat) {
      var iMonth = oDate.getUTCMonth();
      if (oField.digits === 3) {
        const vName = oFormat.aMonthsAbbrev[iMonth];
        return Array.isArray(vName) ? vName[0] : vName;
      } else if (oField.digits === 4) {
        return oFormat.aMonthsWide[iMonth];
      } else if (oField.digits > 4) {
        return oFormat.aMonthsNarrow[iMonth];
      } else {
        return String(iMonth + 1).padStart(oField.digits, "0");
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iMonth, sPart, bPartInvalid, bValid, aMonthsVariants = [oFormat.aMonthsWide, oFormat.aMonthsWideSt, oFormat.aMonthsAbbrev, oFormat.aMonthsAbbrevSt, oFormat.aMonthsNarrow, oFormat.aMonthsNarrowSt];
      if (oPart.digits < 3) {
        sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
        bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2;
        bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
        iMonth = parseInt(sPart) - 1;
        if (oConfig.strict && (iMonth > 11 || iMonth < 0)) {
          bValid = false;
        }
      } else {
        for (var i3 = 0; i3 < aMonthsVariants.length; i3++) {
          var aVariants = aMonthsVariants[i3];
          var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
          if (oFound.index !== -1) {
            return {
              month: oFound.index,
              length: oFound.length
            };
          }
        }
        bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
      }
      return {
        month: iMonth,
        length: sPart ? sPart.length : 0,
        valid: bValid
      };
    },
    isNumeric: function(iDigits) {
      return iDigits < 3;
    }
  }),
  "L": DateFormat$1._createPatternSymbol({
    name: "monthStandalone",
    format: function(oField, oDate, bUTC, oFormat) {
      var iMonth = oDate.getUTCMonth();
      if (oField.digits === 3) {
        const vName = oFormat.aMonthsAbbrevSt[iMonth];
        return Array.isArray(vName) ? vName[0] : vName;
      } else if (oField.digits === 4) {
        return oFormat.aMonthsWideSt[iMonth];
      } else if (oField.digits > 4) {
        return oFormat.aMonthsNarrowSt[iMonth];
      } else {
        return String(iMonth + 1).padStart(oField.digits, "0");
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iMonth, sPart, bPartInvalid, bValid, aMonthsVariants = [oFormat.aMonthsWide, oFormat.aMonthsWideSt, oFormat.aMonthsAbbrev, oFormat.aMonthsAbbrevSt, oFormat.aMonthsNarrow, oFormat.aMonthsNarrowSt];
      if (oPart.digits < 3) {
        sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
        bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2;
        bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
        iMonth = parseInt(sPart) - 1;
        if (oConfig.strict && (iMonth > 11 || iMonth < 0)) {
          bValid = false;
        }
      } else {
        for (var i3 = 0; i3 < aMonthsVariants.length; i3++) {
          var aVariants = aMonthsVariants[i3];
          var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
          if (oFound.index !== -1) {
            return {
              month: oFound.index,
              length: oFound.length
            };
          }
        }
        bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
      }
      return {
        month: iMonth,
        length: sPart ? sPart.length : 0,
        valid: bValid
      };
    },
    isNumeric: function(iDigits) {
      return iDigits < 3;
    }
  }),
  "w": DateFormat$1._createPatternSymbol({
    name: "weekInYear",
    format: function(oField, oDate, bUTC, oFormat) {
      var oWeek = oDate.getUTCWeek(oFormat.oLocale, getCalendarWeekParameter(oFormat.oFormatOptions));
      var iWeek = oWeek.week;
      var sWeek = String(iWeek + 1);
      if (oField.digits < 3) {
        sWeek = sWeek.padStart(oField.digits, "0");
      } else {
        sWeek = oFormat.oLocaleData.getCalendarWeek(oField.digits === 3 ? "narrow" : "wide", sWeek.padStart(2, "0"));
      }
      return sWeek;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart, bPartInvalid, bValid, iWeek, iLength = 0;
      if (oPart.digits < 3) {
        sPart = oParseHelper.findNumbers(sValue, 2);
        iLength = sPart.length;
        iWeek = parseInt(sPart) - 1;
        bPartInvalid = !sPart || oConfig.exactLength && iLength < 2;
        bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      } else {
        sPart = oFormat.oLocaleData.getCalendarWeek(oPart.digits === 3 ? "narrow" : "wide");
        sPart = sPart.replace("{0}", "([0-9]+)");
        var rWeekNumber = new RegExp(sPart), oResult = rWeekNumber.exec(sValue);
        if (oResult) {
          iLength = oResult[0].length;
          iWeek = parseInt(oResult[oResult.length - 1]) - 1;
        } else {
          bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
        }
      }
      return {
        length: iLength,
        valid: bValid,
        week: iWeek
      };
    },
    isNumeric: function(iDigits) {
      return iDigits < 3;
    }
  }),
  "W": DateFormat$1._createPatternSymbol({
    name: "weekInMonth"
  }),
  "D": DateFormat$1._createPatternSymbol({
    name: "dayInYear"
  }),
  "d": DateFormat$1._createPatternSymbol({
    name: "day",
    format: function(oField, oDate) {
      var iDate = oDate.getUTCDate();
      return String(iDate).padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat), iDay = parseInt(sPart);
      if (oConfig.strict && (iDay > 31 || iDay < 1)) {
        bValid = false;
      }
      return {
        day: iDay,
        length: sPart.length,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "Q": DateFormat$1._createPatternSymbol({
    name: "quarter",
    format: function(oField, oDate, bUTC, oFormat) {
      var iQuarter = oDate.getUTCQuarter();
      if (oField.digits === 3) {
        return oFormat.aQuartersAbbrev[iQuarter];
      } else if (oField.digits === 4) {
        return oFormat.aQuartersWide[iQuarter];
      } else if (oField.digits > 4) {
        return oFormat.aQuartersNarrow[iQuarter];
      } else {
        return String(iQuarter + 1).padStart(oField.digits, "0");
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart, bPartInvalid, iQuarter, bValid;
      var aQuartersVariants = [oFormat.aQuartersWide, oFormat.aQuartersWideSt, oFormat.aQuartersAbbrev, oFormat.aQuartersAbbrevSt, oFormat.aQuartersNarrow, oFormat.aQuartersNarrowSt];
      if (oPart.digits < 3) {
        sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
        bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2;
        bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
        iQuarter = parseInt(sPart) - 1;
        if (oConfig.strict && iQuarter > 3) {
          bValid = false;
        }
      } else {
        for (var i3 = 0; i3 < aQuartersVariants.length; i3++) {
          var aVariants = aQuartersVariants[i3];
          var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
          if (oFound.index !== -1) {
            return {
              quarter: oFound.index,
              length: oFound.length
            };
          }
        }
        bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
      }
      return {
        length: sPart ? sPart.length : 0,
        quarter: iQuarter,
        valid: bValid
      };
    },
    isNumeric: function(iDigits) {
      return iDigits < 3;
    }
  }),
  "q": DateFormat$1._createPatternSymbol({
    name: "quarterStandalone",
    format: function(oField, oDate, bUTC, oFormat) {
      var iQuarter = oDate.getUTCQuarter();
      if (oField.digits === 3) {
        return oFormat.aQuartersAbbrevSt[iQuarter];
      } else if (oField.digits === 4) {
        return oFormat.aQuartersWideSt[iQuarter];
      } else if (oField.digits > 4) {
        return oFormat.aQuartersNarrowSt[iQuarter];
      } else {
        return String(iQuarter + 1).padStart(oField.digits, "0");
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart, bPartInvalid, iQuarter, bValid;
      var aQuartersVariants = [oFormat.aQuartersWide, oFormat.aQuartersWideSt, oFormat.aQuartersAbbrev, oFormat.aQuartersAbbrevSt, oFormat.aQuartersNarrow, oFormat.aQuartersNarrowSt];
      if (oPart.digits < 3) {
        sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
        bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2;
        bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
        iQuarter = parseInt(sPart) - 1;
        if (oConfig.strict && iQuarter > 3) {
          bValid = false;
        }
      } else {
        for (var i3 = 0; i3 < aQuartersVariants.length; i3++) {
          var aVariants = aQuartersVariants[i3];
          var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
          if (oFound.index !== -1) {
            return {
              quarter: oFound.index,
              length: oFound.length
            };
          }
        }
        bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
      }
      return {
        length: sPart ? sPart.length : 0,
        quarter: iQuarter,
        valid: bValid
      };
    },
    isNumeric: function(iDigits) {
      return iDigits < 3;
    }
  }),
  "F": DateFormat$1._createPatternSymbol({
    name: "dayOfWeekInMonth"
  }),
  "E": DateFormat$1._createPatternSymbol({
    name: "dayNameInWeek",
    //Day of week name, format style.
    format: function(oField, oDate, bUTC, oFormat) {
      var iDay = oDate.getUTCDay();
      if (oField.digits < 4) {
        return oFormat.aDaysAbbrev[iDay];
      } else if (oField.digits === 4) {
        return oFormat.aDaysWide[iDay];
      } else if (oField.digits === 5) {
        return oFormat.aDaysNarrow[iDay];
      } else {
        return oFormat.aDaysShort[iDay];
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var aDaysVariants = [oFormat.aDaysWide, oFormat.aDaysWideSt, oFormat.aDaysAbbrev, oFormat.aDaysAbbrevSt, oFormat.aDaysShort, oFormat.aDaysShortSt, oFormat.aDaysNarrow, oFormat.aDaysNarrowSt];
      for (var i3 = 0; i3 < aDaysVariants.length; i3++) {
        var aVariants = aDaysVariants[i3];
        var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
        if (oFound.index !== -1) {
          return {
            // gets translated to dayOfWeek where the day of week is relative to the week
            dayOfWeek: oFound.index,
            length: oFound.length
          };
        }
      }
    }
  }),
  "c": DateFormat$1._createPatternSymbol({
    name: "dayNameInWeekStandalone",
    format: function(oField, oDate, bUTC, oFormat) {
      var iDay = oDate.getUTCDay();
      if (oField.digits < 4) {
        return oFormat.aDaysAbbrevSt[iDay];
      } else if (oField.digits === 4) {
        return oFormat.aDaysWideSt[iDay];
      } else if (oField.digits === 5) {
        return oFormat.aDaysNarrowSt[iDay];
      } else {
        return oFormat.aDaysShortSt[iDay];
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var aDaysVariants = [oFormat.aDaysWide, oFormat.aDaysWideSt, oFormat.aDaysAbbrev, oFormat.aDaysAbbrevSt, oFormat.aDaysShort, oFormat.aDaysShortSt, oFormat.aDaysNarrow, oFormat.aDaysNarrowSt];
      for (var i3 = 0; i3 < aDaysVariants.length; i3++) {
        var aVariants = aDaysVariants[i3];
        var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
        if (oFound.index !== -1) {
          return {
            day: oFound.index,
            length: oFound.length
          };
        }
      }
    }
  }),
  // day number of week (depends on locale's first day of week)
  // e.g. Thursday
  // "de": 4 (firstDay: 1)
  // "en": 5 (firstDay: 0)
  // "ar": 6 (firstDay: 6)
  "u": DateFormat$1._createPatternSymbol({
    name: "dayNumberOfWeek",
    format: function(oField, oDate, bUTC, oFormat) {
      var iDay = oDate.getUTCDay();
      return oFormat._adaptDayOfWeek(iDay);
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, oPart.digits), bPartInvalid = oConfig.exactLength && sPart.length !== oPart.digits;
      return {
        dayNumberOfWeek: parseInt(sPart),
        length: sPart.length,
        valid: oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat)
      };
    },
    isNumeric: true
  }),
  "a": DateFormat$1._createPatternSymbol({
    name: "amPmMarker",
    /**
     * Formats the day period.
     *
     * @param {Object<string, any>} oField
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {number} oField.digits
     *   The number of repetitions of the pattern symbol, e.g. <code>3</code> for "aaa"
     * @param {string} oField.symbol
     *   The pattern symbol "a"
     * @param {string} oField.type
     *   The symbol name "amPmMarker"
     * @param {sap.ui.core.date.UniversalDate} oDate
     *   The date to format
     * @param {boolean} [bUTC]
     *   Whether the UTC option is set; not used
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @returns {string}
     *   The formatted day period, e.g. "AM" for symbol "a"
     */
    format: function(oField, oDate, bUTC, oFormat) {
      var iDayPeriod = oDate.getUTCDayPeriod();
      if (oField.digits <= 3) {
        return oFormat.aDayPeriodsAbbrev[iDayPeriod];
      } else if (oField.digits === 4) {
        return oFormat.aDayPeriodsWide[iDayPeriod];
      } else {
        return oFormat.aDayPeriodsNarrow[iDayPeriod];
      }
    },
    /**
     * Parses the day period from a given input string.
     *
     * @param {string} sValue
     *   The given input, e.g. "am 13:37"
     * @param {Object<string, any>} oPart
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {number} oPart.digits
     *   The number of repetitions of the pattern symbol, e.g. <code>3</code> for "aaa"
     * @param {string} oPart.symbol
     *   The pattern symbol "a"
     * @param {string} oPart.type
     *   The symbol name "amPmMarker"
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @param {Object<string, any>} [oConfig]
     *   The configuration object for parsing the value
     * @param {object[]} [oConfig.formatArray]
     *   The complete format array as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {object} [oConfig.dateValue]
     *   The already parsed date fields
     * @param {number} [oConfig.index]
     *   The index in the format array
     * @param {boolean} [oConfig.strict]
     *   Whether to use the strict option
     * @param {string} [sTimezone]
     *   The IANA timezone ID
     * @returns {{length : number, pm : boolean}|{}}
     *   An object with the <code>length</code> of the match and the parsed <code>pm</code>
     *   value; or an object with property valid <code>false</code> if it could not be
     *   parsed correctly
     */
    parse: function(sValue, oPart, oFormat, oConfig, sTimezone) {
      var rAMPM, bAMPMAlternativeCase, oEntry, i3, aMatch, aVariants, aDayPeriodsVariants = [oFormat.aDayPeriodsWide, oFormat.aDayPeriodsAbbrev, oFormat.aDayPeriodsNarrow];
      rAMPM = /[aApP](?:\.)?[\x20\xA0]?[mM](?:\.)?/;
      aMatch = sValue.match(rAMPM);
      bAMPMAlternativeCase = aMatch && aMatch.index === 0;
      function removeSpacesAndDots(sValue2) {
        return sValue2.replace(/[\x20\xA0]/g, "").replace(/\./g, "");
      }
      if (bAMPMAlternativeCase) {
        sValue = removeSpacesAndDots(sValue);
      }
      for (i3 = 0; i3 < aDayPeriodsVariants.length; i3 += 1) {
        aVariants = aDayPeriodsVariants[i3].map((sDayPeriod) => {
          return DateFormat$1._normalize(sDayPeriod);
        });
        if (bAMPMAlternativeCase) {
          aVariants = aVariants.map(removeSpacesAndDots);
        }
        oEntry = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
        if (oEntry.index !== -1) {
          return {
            pm: oEntry.index === 1,
            // am/pm alternative may include an additional dot, e.g. "am."
            // therefore the length for the am/pm alternative is the length of the
            // match
            length: bAMPMAlternativeCase ? aMatch[0].length : oEntry.length
          };
        }
      }
      return {
        valid: false
      };
    }
  }),
  "B": DateFormat$1._createPatternSymbol({
    name: "flexibleDayPeriod",
    /**
     * Formats the flexible day period.
     *
     * @param {Object<string, any>} oField
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {int} oField.digits
     *   The number of repetitions of the pattern symbol, e.g. <code>3</code> for "BBB"
     * @param {sap.ui.core.date.UniversalDate} oDate
     *   The date object to format
     * @param {boolean} bUTC
     *   Whether the UTC option is set; not used
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @returns {string}
     *   The selected day period e.g. "in the afternoon" for the according style width
     *   "abbreviated", "narrow" or "wide"
     */
    format: function(oField, oDate, bUTC, oFormat) {
      var bContainsHour = oFormat.aFormatArray.some(function(oFormatElement) {
        return "hHKk".includes(oFormatElement.symbol);
      }), sFlexibleDayPeriod = oFormat.oLocaleData.getFlexibleDayPeriodOfTime(oDate.getUTCHours(), oDate.getUTCMinutes());
      if (bContainsHour) {
        if (oField.digits <= 3) {
          return oFormat.oFlexibleDayPeriodsAbbrev[sFlexibleDayPeriod];
        }
        if (oField.digits === 4) {
          return oFormat.oFlexibleDayPeriodsWide[sFlexibleDayPeriod];
        }
        return oFormat.oFlexibleDayPeriodsNarrow[sFlexibleDayPeriod];
      }
      if (oField.digits <= 3) {
        return oFormat.oFlexibleDayPeriodsAbbrevSt[sFlexibleDayPeriod];
      }
      if (oField.digits === 4) {
        return oFormat.oFlexibleDayPeriodsWideSt[sFlexibleDayPeriod];
      }
      return oFormat.oFlexibleDayPeriodsNarrowSt[sFlexibleDayPeriod];
    },
    /**
     * Parses the flexible day period from a given input string.
     *
     * @param {string} sValue
     *   The given input, e.g. "in the afternoon 01:37"
     * @param {Object<string, any>} oPart
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @param {object} oConfig
     *   The configuration object for parsing the value
     * @returns {{flexDayPeriod: string, length: number}|{valid: boolean}}
     *   An object with the parsed <code>flexDayPeriod</code> and the <code>length</code>
     *   value of the match; otherwise, an object with property <code>valid</code>
     *   <code>false</code> if it could not be parsed correctly or in case it is attempted
     *   to parse a string with a stand-alone format
     */
    parse: function(sValue, oPart, oFormat, oConfig) {
      var i3, oFound, oVariant, bContainsHour = oFormat.aFormatArray.some(function(oFormatElement) {
        return "hHKk".includes(oFormatElement.symbol);
      }), aFlexibleDayPeriodVariants = [oFormat.oFlexibleDayPeriodsWide, oFormat.oFlexibleDayPeriodsAbbrev, oFormat.oFlexibleDayPeriodsNarrow];
      if (bContainsHour) {
        for (i3 = 0; i3 < aFlexibleDayPeriodVariants.length; i3++) {
          oVariant = aFlexibleDayPeriodVariants[i3];
          oFound = oParseHelper.findEntry(sValue, Object.values(oVariant), oFormat.oLocaleData.sCLDRLocaleId);
          if (oFound.index !== -1) {
            return {
              flexDayPeriod: Object.keys(oVariant)[oFound.index],
              length: oFound.length
            };
          }
        }
      }
      return {
        valid: false
      };
    }
  }),
  "H": DateFormat$1._createPatternSymbol({
    name: "hour0_23",
    format: function(oField, oDate) {
      var iHours = oDate.getUTCHours();
      return String(iHours).padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), iHours = parseInt(sPart), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (oConfig.strict && iHours > 23) {
        bValid = false;
      }
      return {
        hour: iHours,
        length: sPart.length,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "k": DateFormat$1._createPatternSymbol({
    name: "hour1_24",
    format: function(oField, oDate) {
      var iHours = oDate.getUTCHours();
      var sHours = iHours === 0 ? "24" : String(iHours);
      return sHours.padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), iHours = parseInt(sPart), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (iHours === 24) {
        iHours = 0;
      }
      if (oConfig.strict && iHours > 23) {
        bValid = false;
      }
      return {
        hour: iHours,
        length: sPart.length,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "K": DateFormat$1._createPatternSymbol({
    name: "hour0_11",
    format: function(oField, oDate) {
      var iHours = oDate.getUTCHours();
      var sHours = String(iHours > 11 ? iHours - 12 : iHours);
      return sHours.padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), iHours = parseInt(sPart), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (oConfig.strict && iHours > 11) {
        bValid = false;
      }
      return {
        hour: iHours,
        length: sPart.length,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "h": DateFormat$1._createPatternSymbol({
    name: "hour1_12",
    format: function(oField, oDate) {
      var iHours = oDate.getUTCHours();
      var sHours;
      if (iHours > 12) {
        sHours = String(iHours - 12);
      } else if (iHours === 0) {
        sHours = "12";
      } else {
        sHours = String(iHours);
      }
      return sHours.padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var bPM = oConfig.dateValue.pm, sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), iHours = parseInt(sPart), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (iHours === 12) {
        iHours = 0;
        bPM = bPM === void 0 ? true : bPM;
      }
      if (oConfig.strict && iHours > 11) {
        bValid = false;
      }
      return {
        hour: iHours,
        length: sPart.length,
        pm: bPM,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "m": DateFormat$1._createPatternSymbol({
    name: "minute",
    format: function(oField, oDate) {
      var iMinutes = oDate.getUTCMinutes();
      return String(iMinutes).padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), iMinutes = parseInt(sPart), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (oConfig.strict && iMinutes > 59) {
        bValid = false;
      }
      return {
        length: sPart.length,
        minute: iMinutes,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "s": DateFormat$1._createPatternSymbol({
    name: "second",
    format: function(oField, oDate) {
      var iSeconds = oDate.getUTCSeconds();
      return String(iSeconds).padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iExpectedDigits = Math.max(oPart.digits, 2), sPart = oParseHelper.findNumbers(sValue, iExpectedDigits), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < iExpectedDigits, iSeconds = parseInt(sPart), bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (oConfig.strict && iSeconds > 59) {
        bValid = false;
      }
      return {
        length: sPart.length,
        second: iSeconds,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "S": DateFormat$1._createPatternSymbol({
    name: "fractionalsecond",
    format: function(oField, oDate) {
      var iMilliseconds = oDate.getUTCMilliseconds();
      var sMilliseconds = String(iMilliseconds);
      var sFractionalseconds = sMilliseconds.padStart(3, "0");
      sFractionalseconds = sFractionalseconds.substr(0, oField.digits);
      sFractionalseconds = sFractionalseconds.padEnd(oField.digits, "0");
      return sFractionalseconds;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, oPart.digits), iLength = sPart.length, bPartInvalid = oConfig.exactLength && iLength < oPart.digits;
      sPart = sPart.substr(0, 3);
      sPart = sPart.padEnd(3, "0");
      var iMilliseconds = parseInt(sPart);
      return {
        length: iLength,
        millisecond: iMilliseconds,
        valid: oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat)
      };
    },
    isNumeric: true
  }),
  "z": DateFormat$1._createPatternSymbol({
    name: "timezoneGeneral",
    format: function(oField, oDate, bUTC, oFormat, sTimezone) {
      if (oField.digits > 3 && oDate.getTimezoneLong && oDate.getTimezoneLong()) {
        return oDate.getTimezoneLong();
      } else if (oDate.getTimezoneShort && oDate.getTimezoneShort()) {
        return oDate.getTimezoneShort();
      }
      var iTimezoneOffset = TimezoneUtils.calculateOffset(oDate, sTimezone);
      var sTimeZone = "GMT";
      var iTZOffset = Math.abs(iTimezoneOffset / 60);
      var bPositiveOffset = iTimezoneOffset > 0;
      var iHourOffset = Math.floor(iTZOffset / 60);
      var iMinuteOffset = Math.floor(iTZOffset % 60);
      if (!bUTC && iTZOffset !== 0) {
        sTimeZone += bPositiveOffset ? "-" : "+";
        sTimeZone += String(iHourOffset).padStart(2, "0");
        sTimeZone += ":";
        sTimeZone += String(iMinuteOffset).padStart(2, "0");
      } else {
        sTimeZone += "Z";
      }
      return sTimeZone;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iLength = 0;
      var iTZDiff;
      var oTZ = sValue.substring(0, 3);
      if (oTZ === "GMT" || oTZ === "UTC") {
        iLength = 3;
      } else if (sValue.substring(0, 2) === "UT") {
        iLength = 2;
      } else if (sValue.charAt(0) === "Z") {
        iLength = 1;
        iTZDiff = 0;
      } else {
        return {
          error: "cannot be parsed correctly by sap.ui.core.format.DateFormat: The given timezone is not supported!"
        };
      }
      if (sValue.charAt(0) !== "Z") {
        var oParsedTZ = oParseHelper.parseTZ(sValue.substr(iLength), true);
        iLength += oParsedTZ.length;
        iTZDiff = oParsedTZ.tzDiff;
      }
      return {
        length: iLength,
        tzDiff: iTZDiff
      };
    }
  }),
  "Z": DateFormat$1._createPatternSymbol({
    name: "timezoneRFC822",
    format: function(oField, oDate, bUTC, oFormat, sTimezone) {
      var iTimezoneOffset = TimezoneUtils.calculateOffset(oDate, sTimezone);
      var iTZOffset = Math.abs(iTimezoneOffset / 60);
      var bPositiveOffset = iTimezoneOffset > 0;
      var iHourOffset = Math.floor(iTZOffset / 60);
      var iMinuteOffset = Math.floor(iTZOffset % 60);
      var sTimeZone = "";
      if (!bUTC) {
        sTimeZone += bPositiveOffset ? "-" : "+";
        sTimeZone += String(iHourOffset).padStart(2, "0");
        sTimeZone += String(iMinuteOffset).padStart(2, "0");
      }
      return sTimeZone;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      return oParseHelper.parseTZ(sValue, false);
    }
  }),
  "X": DateFormat$1._createPatternSymbol({
    name: "timezoneISO8601",
    format: function(oField, oDate, bUTC, oFormat, sTimezone) {
      var iTimezoneOffset = TimezoneUtils.calculateOffset(oDate, sTimezone);
      var iTZOffset = Math.abs(iTimezoneOffset / 60);
      var bPositiveOffset = iTimezoneOffset > 0;
      var iHourOffset = Math.floor(iTZOffset / 60);
      var iMinuteOffset = Math.floor(iTZOffset % 60);
      var sTimeZone = "";
      if (!bUTC && iTZOffset !== 0) {
        sTimeZone += bPositiveOffset ? "-" : "+";
        sTimeZone += String(iHourOffset).padStart(2, "0");
        if (oField.digits > 1 || iMinuteOffset > 0) {
          if (oField.digits === 3 || oField.digits === 5) {
            sTimeZone += ":";
          }
          sTimeZone += String(iMinuteOffset).padStart(2, "0");
        }
      } else {
        sTimeZone += "Z";
      }
      return sTimeZone;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      if (sValue.charAt(0) === "Z") {
        return {
          length: 1,
          tzDiff: 0
        };
      } else {
        return oParseHelper.parseTZ(sValue, oPart.digits === 3 || oPart.digits === 5);
      }
    }
  }),
  "V": DateFormat$1._createPatternSymbol({
    name: "timezoneID",
    format: function(oField, oDate, bUTC, oFormat, sTimezone) {
      if (!bUTC && oField.digits === 2) {
        return oFormat.oLocaleData.getTimezoneTranslations()[sTimezone] || sTimezone;
      }
      return "";
    },
    parse: function(sValue, oPart, oFormat, oConfig, sTimezone) {
      var oTimezoneParsed = {
        timezone: "",
        length: 0
      };
      if (oPart.digits === 2) {
        var mTimezoneTranslations = oFormat.oLocaleData.getTimezoneTranslations();
        if (sValue === mTimezoneTranslations[sTimezone]) {
          return {
            timezone: sTimezone,
            length: sValue.length
          };
        }
        var aTimezoneTranslations = Object.values(mTimezoneTranslations);
        var oTimezoneResult = oParseHelper.findEntry(sValue, aTimezoneTranslations, oFormat.oLocaleData.sCLDRLocaleId);
        if (oTimezoneResult.index !== -1) {
          return {
            timezone: Object.keys(mTimezoneTranslations)[oTimezoneResult.index],
            length: oTimezoneResult.length
          };
        }
        var sCurrentValue = "";
        for (var i3 = sValue.length; i3 > 0; i3 -= 1) {
          sCurrentValue = sValue.slice(0, i3);
          if (TimezoneUtils.isValidTimezone(sCurrentValue)) {
            oTimezoneParsed.timezone = sCurrentValue;
            oTimezoneParsed.length = sCurrentValue.length;
            break;
          }
        }
      }
      return oTimezoneParsed;
    }
  })
};
DateFormat$1.prototype._format = function(oJSDate, bUTC, sTimezone) {
  if (this.oFormatOptions.relative) {
    var sRes = this.formatRelative(oJSDate, bUTC, this.oFormatOptions.relativeRange, sTimezone);
    if (sRes) {
      return sRes;
    }
  }
  var sCalendarType = this.oFormatOptions.calendarType;
  var oDate = UniversalDate$1.getInstance(oJSDate, sCalendarType);
  var aBuffer = [], oPart, sResult, sSymbol;
  for (var i3 = 0; i3 < this.aFormatArray.length; i3++) {
    oPart = this.aFormatArray[i3];
    sSymbol = oPart.symbol || "";
    aBuffer.push(this.oSymbols[sSymbol].format(oPart, oDate, bUTC, this, sTimezone));
  }
  sResult = aBuffer.join("");
  return sResult;
};
DateFormat$1.prototype.format = function(vJSDate, bUTC) {
  var sTimezone;
  if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
    sTimezone = bUTC;
    bUTC = false;
    checkTimezoneParameterType(sTimezone);
    if (sTimezone && !TimezoneUtils.isValidTimezone(sTimezone)) {
      Log.error("The given timezone isn't valid.");
      return "";
    }
  }
  var sCalendarType = this.oFormatOptions.calendarType, sResult;
  if (bUTC === void 0) {
    bUTC = this.oFormatOptions.UTC;
  }
  sTimezone = sTimezone || Configuration.getTimezone();
  if (Array.isArray(vJSDate)) {
    if (!this.oFormatOptions.interval) {
      Log.error("Non-interval DateFormat can't format more than one date instance.");
      return "";
    }
    if (vJSDate.length !== 2) {
      Log.error("Interval DateFormat can only format with 2 date instances but " + vJSDate.length + " is given.");
      return "";
    }
    vJSDate = vJSDate.map(function(oJSDate) {
      return convertToTimezone(oJSDate, sTimezone, bUTC);
    });
    if (this.oFormatOptions.singleIntervalValue) {
      if (vJSDate[0] === null) {
        Log.error("First date instance which is passed to the interval DateFormat shouldn't be null.");
        return "";
      }
      if (vJSDate[1] === null) {
        sResult = this._format(vJSDate[0], bUTC, sTimezone);
      }
    }
    if (sResult === void 0) {
      if (!vJSDate.every(isValidDateObject)) {
        Log.error("At least one date instance which is passed to the interval DateFormat isn't valid.");
        return "";
      }
      sResult = this._formatInterval(vJSDate, bUTC);
    }
  } else {
    if (!isValidDateObject(vJSDate)) {
      if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE && this.oFormatOptions.pattern.includes("VV")) {
        return this.oLocaleData.getTimezoneTranslations()[sTimezone] || sTimezone;
      }
      Log.error("The given date instance isn't valid.");
      return "";
    }
    if (this.oFormatOptions.interval) {
      Log.error("Interval DateFormat expects an array with two dates for the first argument but only one date is given.");
      return "";
    }
    vJSDate = convertToTimezone(vJSDate, sTimezone, bUTC);
    sResult = this._format(vJSDate, bUTC, sTimezone);
  }
  if (sCalendarType === CalendarType.Japanese && this.oLocale.getLanguage() === "ja") {
    sResult = sResult.replace(/(^|[^\d])1年/g, "$1元年");
  }
  return sResult;
};
DateFormat$1.prototype._useCustomIntervalDelimiter = function(oDiffFields) {
  var aTokens;
  if (!this.oFormatOptions.intervalDelimiter) {
    return false;
  }
  if (this.oFormatOptions.format) {
    aTokens = this.oLocaleData._parseSkeletonFormat(this.oFormatOptions.format);
    return aTokens.some(function(oToken2) {
      return oDiffFields[oToken2.group];
    });
  }
  return true;
};
DateFormat$1.prototype._formatInterval = function(aJSDates, bUTC) {
  var oDate, oPart, sPattern, sSymbol, aBuffer = [], sCalendarType = this.oFormatOptions.calendarType, aFormatArray = [], oFromDate = UniversalDate$1.getInstance(aJSDates[0], sCalendarType), oToDate = UniversalDate$1.getInstance(aJSDates[1], sCalendarType), oDiffFields = this._getDiffFields([oFromDate, oToDate]);
  if (!oDiffFields) {
    return this._format(aJSDates[0], bUTC);
  }
  if (this._useCustomIntervalDelimiter(oDiffFields)) {
    sPattern = this.intervalPatterns[0];
  } else if (this.oFormatOptions.format) {
    sPattern = this.oLocaleData.getCustomIntervalPattern(this.oFormatOptions.format, oDiffFields, sCalendarType);
  } else {
    sPattern = this.oLocaleData.getCombinedIntervalPattern(this.oFormatOptions.pattern, sCalendarType);
  }
  aFormatArray = this.parseCldrDatePattern(sPattern);
  oDate = oFromDate;
  for (var i3 = 0; i3 < aFormatArray.length; i3++) {
    oPart = aFormatArray[i3];
    sSymbol = oPart.symbol || "";
    if (oPart.repeat) {
      oDate = oToDate;
    }
    aBuffer.push(this.oSymbols[sSymbol].format(oPart, oDate, bUTC, this));
  }
  return aBuffer.join("");
};
var mFieldToGroup = {
  Era: "Era",
  FullYear: "Year",
  Quarter: "Quarter",
  Month: "Month",
  Week: "Week",
  Date: "Day",
  DayPeriod: "DayPeriod",
  Hours: "Hour",
  Minutes: "Minute",
  Seconds: "Second"
};
DateFormat$1.prototype._getDiffFields = function(aDates) {
  var bDiffFound = false, mDiff = {};
  this.aIntervalCompareFields.forEach(function(sField) {
    var sGetterPrefix = "getUTC", sMethodName = sGetterPrefix + sField, sFieldGroup = mFieldToGroup[sField], vFromValue = aDates[0][sMethodName].apply(aDates[0]), vToValue = aDates[1][sMethodName].apply(aDates[1]);
    if (!fnEqual(vFromValue, vToValue)) {
      bDiffFound = true;
      mDiff[sFieldGroup] = true;
    }
  });
  if (bDiffFound) {
    return mDiff;
  }
  return null;
};
DateFormat$1.prototype._parse = function(sValue, aFormatArray, bUTC, bStrict, sTimezone) {
  var sFlexibleDayPeriod, oNextPart, oPart, bPM, oPrevPart, oResult, sSubValue, oDateValue = {
    valid: true,
    lastTimezonePatternSymbol: ""
  }, iIndex = 0, oParseConf = {
    formatArray: aFormatArray,
    dateValue: oDateValue,
    strict: bStrict
  }, that = this;
  function getSymbol(oPart0) {
    return that.oSymbols[oPart0.symbol || ""];
  }
  function isNumeric(oPart0) {
    return !!oPart0 && getSymbol(oPart0).isNumeric(oPart0.digits);
  }
  for (var i3 = 0; i3 < aFormatArray.length; i3++) {
    sSubValue = sValue.substr(iIndex);
    oPart = aFormatArray[i3];
    oPrevPart = aFormatArray[i3 - 1];
    oNextPart = aFormatArray[i3 + 1];
    oParseConf.index = i3;
    oParseConf.exactLength = isNumeric(oPart) && (isNumeric(oPrevPart) || isNumeric(oNextPart));
    oResult = getSymbol(oPart).parse(sSubValue, oPart, this, oParseConf, sTimezone) || {};
    if (oResult.tzDiff !== void 0 || oResult.timezone) {
      oResult.lastTimezonePatternSymbol = oPart.symbol;
    }
    oDateValue = fnExtend(oDateValue, oResult);
    if (oResult.valid === false) {
      break;
    }
    iIndex += oResult.length || 0;
  }
  oDateValue.index = iIndex;
  bPM = oDateValue.pm;
  if (oDateValue.flexDayPeriod && oDateValue.hour * 60 + (oDateValue.minute || 0) < 720) {
    sFlexibleDayPeriod = this.oLocaleData.getFlexibleDayPeriodOfTime(oDateValue.hour + 12, oDateValue.minute || 0);
    bPM = oDateValue.flexDayPeriod === sFlexibleDayPeriod;
  }
  if (bPM) {
    oDateValue.hour += 12;
  }
  if (oDateValue.dayNumberOfWeek === void 0 && oDateValue.dayOfWeek !== void 0) {
    oDateValue.dayNumberOfWeek = this._adaptDayOfWeek(oDateValue.dayOfWeek);
  }
  if (oDateValue.quarter !== void 0 && oDateValue.month === void 0 && oDateValue.day === void 0) {
    oDateValue.month = 3 * oDateValue.quarter;
    oDateValue.day = 1;
  }
  return oDateValue;
};
DateFormat$1.prototype._parseInterval = function(sValue, sCalendarType, bUTC, bStrict, sTimezone) {
  var aDateValues, iRepeat, oDateValue;
  this.intervalPatterns.some(function(sPattern) {
    var aFormatArray = this.parseCldrDatePattern(sPattern);
    iRepeat = void 0;
    for (var i3 = 0; i3 < aFormatArray.length; i3++) {
      if (aFormatArray[i3].repeat) {
        iRepeat = i3;
        break;
      }
    }
    if (iRepeat === void 0) {
      oDateValue = this._parse(sValue, aFormatArray, bUTC, bStrict, sTimezone);
      if (oDateValue.index === 0 || oDateValue.index < sValue.length) {
        oDateValue.valid = false;
      }
      if (oDateValue.valid === false) {
        return;
      }
      aDateValues = [oDateValue, oDateValue];
      return true;
    } else {
      aDateValues = [];
      oDateValue = this._parse(sValue, aFormatArray.slice(0, iRepeat), bUTC, bStrict, sTimezone);
      if (oDateValue.valid === false) {
        return;
      }
      aDateValues.push(oDateValue);
      var iLength = oDateValue.index;
      oDateValue = this._parse(sValue.substring(iLength), aFormatArray.slice(iRepeat), bUTC, bStrict, sTimezone);
      if (oDateValue.index === 0 || oDateValue.index + iLength < sValue.length) {
        oDateValue.valid = false;
      }
      if (oDateValue.valid === false) {
        return;
      }
      aDateValues.push(oDateValue);
      return true;
    }
  }.bind(this));
  return aDateValues;
};
function getCalendarWeekParameter(oFormatOptions) {
  if (oFormatOptions.calendarWeekNumbering) {
    return oFormatOptions.calendarWeekNumbering;
  } else if (oFormatOptions.firstDayOfWeek !== void 0 && oFormatOptions.minimalDaysInFirstWeek !== void 0) {
    return {
      firstDayOfWeek: oFormatOptions.firstDayOfWeek,
      minimalDaysInFirstWeek: oFormatOptions.minimalDaysInFirstWeek
    };
  }
  return void 0;
}
var convertToTimezone = function(oJSDate, sTimezone, bUTC) {
  if (!bUTC && isValidDateObject(oJSDate)) {
    return TimezoneUtils.convertToTimezone(oJSDate, sTimezone);
  }
  return oJSDate;
};
var fnCreateDate = function(oDateValue, sCalendarType, bUTC, bStrict, sTimezone, oFormatOptions, oLocale) {
  if (!oDateValue.valid) {
    return null;
  }
  var oDate, iYear = typeof oDateValue.year === "number" ? oDateValue.year : 1970;
  oDate = UniversalDate$1.getInstance(/* @__PURE__ */ new Date(0), sCalendarType);
  oDate.setUTCEra(oDateValue.era || UniversalDate$1.getCurrentEra(sCalendarType));
  oDate.setUTCFullYear(iYear, oDateValue.month || 0, oDateValue.day || 1);
  oDate.setUTCHours(oDateValue.hour || 0);
  oDate.setUTCMinutes(oDateValue.minute || 0);
  oDate.setUTCSeconds(oDateValue.second || 0);
  oDate.setUTCMilliseconds(oDateValue.millisecond || 0);
  if (bStrict && (oDateValue.day || 1) !== oDate.getUTCDate()) {
    return null;
  }
  if (oDateValue.week !== void 0 && (oDateValue.month === void 0 || oDateValue.day === void 0)) {
    oDate.setUTCWeek({
      year: oDateValue.weekYear || oDateValue.year,
      week: oDateValue.week
    }, oLocale, getCalendarWeekParameter(oFormatOptions));
    if (oDateValue.dayNumberOfWeek !== void 0) {
      oDate.setUTCDate(oDate.getUTCDate() + oDateValue.dayNumberOfWeek - 1);
    }
  }
  oDate = oDate.getJSDate();
  if (!bUTC && (oDateValue.lastTimezonePatternSymbol === "V" && oDateValue.timezone || oDateValue.tzDiff === void 0)) {
    if (oDateValue.timezone) {
      sTimezone = oDateValue.timezone;
    }
    if (sTimezone) {
      oDateValue.tzDiff = TimezoneUtils.calculateOffset(oDate, sTimezone);
    }
  }
  if (oDateValue.tzDiff) {
    oDate.setUTCSeconds(oDate.getUTCSeconds() + oDateValue.tzDiff);
  }
  return oDate;
};
function mergeWithoutOverwrite(object1, object2) {
  if (object1 === object2) {
    return object1;
  }
  var oMergedObject = {};
  Object.keys(object1).forEach(function(sKey) {
    oMergedObject[sKey] = object1[sKey];
  });
  Object.keys(object2).forEach(function(sKey) {
    if (!oMergedObject.hasOwnProperty(sKey)) {
      oMergedObject[sKey] = object2[sKey];
    }
  });
  return oMergedObject;
}
function isValidDateRange(oStartDate, oEndDate) {
  if (oStartDate.getTime() > oEndDate.getTime()) {
    return false;
  }
  return true;
}
function isValidDateObject(oDate) {
  return oDate && typeof oDate.getTime === "function" && !isNaN(oDate.getTime());
}
DateFormat$1.prototype.parse = function(sValue, bUTC, bStrict) {
  var bShowDate = this.oFormatOptions.showDate === void 0 || this.oFormatOptions.showDate;
  var bShowTime = this.oFormatOptions.showTime === void 0 || this.oFormatOptions.showTime;
  if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE && (bShowDate && !bShowTime || !bShowDate && bShowTime)) {
    throw new TypeError("The input can only be parsed back to date if both date and time are supplied.");
  }
  var sTimezone;
  if (bUTC === void 0 && this.type !== mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
    bUTC = this.oFormatOptions.UTC;
  }
  var bUTCInputParameter = bUTC;
  if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
    sTimezone = bUTC;
    bUTC = false;
    checkTimezoneParameterType(sTimezone);
    if (sTimezone && !TimezoneUtils.isValidTimezone(sTimezone)) {
      Log.error("The given timezone isn't valid.");
      return null;
    }
  }
  sValue = sValue == null ? "" : String(sValue).trim();
  sValue = DateFormat$1._normalize(sValue);
  var oDateValue;
  var sCalendarType = this.oFormatOptions.calendarType;
  sTimezone = sTimezone || Configuration.getTimezone();
  if (bStrict === void 0) {
    bStrict = this.oFormatOptions.strictParsing;
  }
  if (sCalendarType === CalendarType.Japanese && this.oLocale.getLanguage() === "ja") {
    sValue = sValue.replace(/元年/g, "1年");
  }
  if (!this.oFormatOptions.interval) {
    var oJSDate = this.parseRelative(sValue, bUTC);
    if (oJSDate) {
      return oJSDate;
    }
    oDateValue = this._parse(sValue, this.aFormatArray, bUTC, bStrict, sTimezone);
    if (oDateValue.index === 0 || oDateValue.index < sValue.length) {
      oDateValue.valid = false;
    }
    oJSDate = fnCreateDate(oDateValue, sCalendarType, bUTC, bStrict, sTimezone, this.oFormatOptions, this.oLocale);
    if (oJSDate) {
      if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
        var bShowTimezone = this.oFormatOptions.showTimezone === void 0 || this.oFormatOptions.showTimezone;
        if (!bShowTimezone && bShowDate && bShowTime) {
          return [oJSDate, void 0];
        } else if (bShowTimezone && !bShowDate && !bShowTime) {
          return [void 0, oDateValue.timezone];
        }
        return [oJSDate, oDateValue.timezone || void 0];
      }
      return oJSDate;
    }
  } else {
    var aDateValues = this._parseInterval(sValue, sCalendarType, bUTC, bStrict, sTimezone);
    var oJSDate1, oJSDate2;
    if (aDateValues && aDateValues.length === 2) {
      var oDateValue1 = mergeWithoutOverwrite(aDateValues[0], aDateValues[1]);
      var oDateValue2 = mergeWithoutOverwrite(aDateValues[1], aDateValues[0]);
      oJSDate1 = fnCreateDate(oDateValue1, sCalendarType, bUTC, bStrict, sTimezone, this.oFormatOptions, this.oLocale);
      oJSDate2 = fnCreateDate(oDateValue2, sCalendarType, bUTC, bStrict, sTimezone, this.oFormatOptions, this.oLocale);
      if (oJSDate1 && oJSDate2) {
        if (this.oFormatOptions.singleIntervalValue && oJSDate1.getTime() === oJSDate2.getTime()) {
          return [oJSDate1, null];
        }
        var bValid = isValidDateRange(oJSDate1, oJSDate2);
        if (bStrict && !bValid) {
          Log.error("StrictParsing: Invalid date range. The given end date is before the start date.");
          return [null, null];
        }
        return [oJSDate1, oJSDate2];
      }
    }
  }
  if (this.aFallbackFormats) {
    var vDate;
    this.aFallbackFormats.every(function(oFallbackFormat) {
      vDate = oFallbackFormat.parse(sValue, bUTCInputParameter, bStrict);
      if (Array.isArray(vDate)) {
        if (oFallbackFormat.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
          return false;
        }
        return !(vDate[0] && vDate[1]);
      } else {
        return !vDate;
      }
    });
    return vDate;
  }
  if (!this.oFormatOptions.interval) {
    return null;
  } else {
    return [null, null];
  }
};
DateFormat$1.prototype.parseCldrDatePattern = function(sPattern) {
  if (mCldrDatePattern[sPattern]) {
    return mCldrDatePattern[sPattern];
  }
  var aFormatArray = [], i3, bQuoted = false, oCurrentObject = null, sState = "", sNewState = "", mAppeared = {}, bIntervalStartFound = false;
  for (i3 = 0; i3 < sPattern.length; i3++) {
    var sCurChar = sPattern.charAt(i3), sNextChar, sPrevChar, sPrevPrevChar;
    if (bQuoted) {
      if (sCurChar === "'") {
        sPrevChar = sPattern.charAt(i3 - 1);
        sPrevPrevChar = sPattern.charAt(i3 - 2);
        sNextChar = sPattern.charAt(i3 + 1);
        if (sPrevChar === "'" && sPrevPrevChar !== "'") {
          bQuoted = false;
        } else if (sNextChar === "'") {
          i3 += 1;
        } else {
          bQuoted = false;
          continue;
        }
      }
      if (sState === "text") {
        oCurrentObject.value += sCurChar;
      } else {
        oCurrentObject = {
          type: "text",
          value: sCurChar
        };
        aFormatArray.push(oCurrentObject);
        sState = "text";
      }
    } else {
      if (sCurChar === "'") {
        bQuoted = true;
      } else if (this.oSymbols[sCurChar]) {
        sNewState = this.oSymbols[sCurChar].name;
        if (sState === sNewState) {
          oCurrentObject.digits++;
        } else {
          oCurrentObject = {
            type: sNewState,
            symbol: sCurChar,
            digits: 1
          };
          aFormatArray.push(oCurrentObject);
          sState = sNewState;
          if (!bIntervalStartFound) {
            if (mAppeared[sNewState]) {
              oCurrentObject.repeat = true;
              bIntervalStartFound = true;
            } else {
              mAppeared[sNewState] = true;
            }
          }
        }
      } else {
        if (sState === "text") {
          oCurrentObject.value += sCurChar;
        } else {
          oCurrentObject = {
            type: "text",
            value: sCurChar
          };
          aFormatArray.push(oCurrentObject);
          sState = "text";
        }
      }
    }
  }
  mCldrDatePattern[sPattern] = aFormatArray;
  return aFormatArray;
};
DateFormat$1.prototype.parseRelative = function(sValue, bUTC) {
  var aPatterns, oEntry, rPattern, oResult, iValue;
  if (!sValue) {
    return null;
  }
  aPatterns = this.oLocaleData.getRelativePatterns(this.aRelativeParseScales, this.oFormatOptions.relativeStyle);
  for (var i3 = 0; i3 < aPatterns.length; i3++) {
    oEntry = aPatterns[i3];
    rPattern = new RegExp("^\\s*" + oEntry.pattern.replace(/\{0\}/, "(\\d+)") + "\\s*$", "i");
    oResult = rPattern.exec(sValue);
    if (oResult) {
      if (oEntry.value !== void 0) {
        return computeRelativeDate(oEntry.value, oEntry.scale);
      } else {
        iValue = parseInt(oResult[1]);
        return computeRelativeDate(iValue * oEntry.sign, oEntry.scale);
      }
    }
  }
  function computeRelativeDate(iDiff, sScale) {
    var oResult2 = UI5Date$1.getInstance();
    if (bUTC) {
      oResult2.setUTCFullYear(oResult2.getFullYear(), oResult2.getMonth(), oResult2.getDate());
      oResult2.setUTCHours(oResult2.getHours(), oResult2.getMinutes(), oResult2.getSeconds(), oResult2.getMilliseconds());
      switch (sScale) {
        case "second":
          oResult2.setUTCSeconds(oResult2.getUTCSeconds() + iDiff);
          break;
        case "minute":
          oResult2.setUTCMinutes(oResult2.getUTCMinutes() + iDiff);
          break;
        case "hour":
          oResult2.setUTCHours(oResult2.getUTCHours() + iDiff);
          break;
        case "day":
          oResult2.setUTCDate(oResult2.getUTCDate() + iDiff);
          break;
        case "week":
          oResult2.setUTCDate(oResult2.getUTCDate() + iDiff * 7);
          break;
        case "month":
          oResult2.setUTCMonth(oResult2.getUTCMonth() + iDiff);
          break;
        case "quarter":
          oResult2.setUTCMonth(oResult2.getUTCMonth() + iDiff * 3);
          break;
        case "year":
          oResult2.setUTCFullYear(oResult2.getUTCFullYear() + iDiff);
          break;
      }
    } else {
      switch (sScale) {
        case "second":
          oResult2.setSeconds(oResult2.getSeconds() + iDiff);
          break;
        case "minute":
          oResult2.setMinutes(oResult2.getMinutes() + iDiff);
          break;
        case "hour":
          oResult2.setHours(oResult2.getHours() + iDiff);
          break;
        case "day":
          oResult2.setDate(oResult2.getDate() + iDiff);
          break;
        case "week":
          oResult2.setDate(oResult2.getDate() + iDiff * 7);
          break;
        case "month":
          oResult2.setMonth(oResult2.getMonth() + iDiff);
          break;
        case "quarter":
          oResult2.setMonth(oResult2.getMonth() + iDiff * 3);
          break;
        case "year":
          oResult2.setFullYear(oResult2.getFullYear() + iDiff);
          break;
      }
    }
    return oResult2;
  }
};
DateFormat$1.prototype.formatRelative = function(oJSDate, bUTC, aRange, sTimezone) {
  var oDateUTC, iDiff, iDiffSeconds, sPattern, oToday = convertToTimezone(/* @__PURE__ */ new Date(), sTimezone), sScale = this.oFormatOptions.relativeScale || "day";
  iDiffSeconds = (oJSDate.getTime() - oToday.getTime()) / 1e3;
  if (this.oFormatOptions.relativeScale === "auto") {
    sScale = this._getScale(iDiffSeconds, this.aRelativeScales);
    sScale = fixScaleForMonths(oJSDate, oToday, sScale, iDiffSeconds);
  }
  if (!aRange) {
    aRange = this._mRanges[sScale];
  }
  if (sScale === "year" || sScale === "month" || sScale === "day") {
    oToday = new Date(Date.UTC(oToday.getUTCFullYear(), oToday.getUTCMonth(), oToday.getUTCDate()));
    oDateUTC = /* @__PURE__ */ new Date(0);
    oDateUTC.setUTCFullYear(oJSDate.getUTCFullYear(), oJSDate.getUTCMonth(), oJSDate.getUTCDate());
    oJSDate = oDateUTC;
  }
  iDiff = this._getDifference(sScale, [oToday, oJSDate]);
  if (this.oFormatOptions.relativeScale !== "auto" && (iDiff < aRange[0] || iDiff > aRange[1])) {
    return null;
  }
  sPattern = this.oLocaleData.getRelativePattern(sScale, iDiff, iDiffSeconds > 0, this.oFormatOptions.relativeStyle);
  return fnFormatMessage(sPattern, [Math.abs(iDiff)]);
};
DateFormat$1.prototype._mRanges = {
  second: [-60, 60],
  minute: [-60, 60],
  hour: [-24, 24],
  day: [-6, 6],
  week: [-4, 4],
  month: [-12, 12],
  year: [-10, 10]
};
DateFormat$1.prototype._mScales = {
  second: 1,
  // 1
  minute: 60,
  // 60
  hour: 3600,
  // 60*60
  day: 86400,
  // 60*60*24         1 day
  week: 604800,
  // 60*60*24*7       7 days
  month: 2592e3,
  // 60*60*24*30      30 days
  quarter: 7776e3,
  // 60*60*24*30*3    90 days
  year: 31536e3
  // 60*60*24*365     365 days
};
DateFormat$1.prototype._getScale = function(iDiffSeconds, aScales) {
  var sScale, sTestScale;
  iDiffSeconds = Math.abs(iDiffSeconds);
  for (var i3 = 0; i3 < aScales.length; i3++) {
    sTestScale = aScales[i3];
    if (iDiffSeconds >= this._mScales[sTestScale]) {
      sScale = sTestScale;
      break;
    }
  }
  if (!sScale) {
    sScale = aScales[aScales.length - 1];
  }
  return sScale;
};
function fixScaleForMonths(oJSDate, oToday, sScale, iDiffSeconds) {
  var iMonthDiff = Math.abs(oJSDate.getUTCMonth() - oToday.getUTCMonth());
  if (sScale === "week" && iMonthDiff === 2) {
    return "month";
  } else if (sScale === "week" && iMonthDiff === 1) {
    if (oJSDate.getUTCDate() === oToday.getUTCDate() || iDiffSeconds < 0 && oJSDate.getUTCDate() < oToday.getUTCDate() || iDiffSeconds > 0 && oJSDate.getUTCDate() > oToday.getUTCDate()) {
      return "month";
    }
  } else if (sScale === "month" && iMonthDiff === 1) {
    if (iDiffSeconds > 0 && oJSDate.getUTCDate() < oToday.getUTCDate() || iDiffSeconds < 0 && oJSDate.getUTCDate() > oToday.getUTCDate()) {
      return "week";
    }
  }
  return sScale;
}
function cutDateFields(oDate, iStartIndex) {
  var sMethodName, aFields = ["FullYear", "Month", "Date", "Hours", "Minutes", "Seconds", "Milliseconds"], oDateCopy = new Date(oDate.getTime());
  for (var i3 = iStartIndex; i3 < aFields.length; i3++) {
    sMethodName = "setUTC" + aFields[iStartIndex];
    oDateCopy[sMethodName].apply(oDateCopy, [0]);
  }
  return oDateCopy;
}
var mRelativeDiffs = {
  year: function(oFromDate, oToDate) {
    return oToDate.getUTCFullYear() - oFromDate.getUTCFullYear();
  },
  month: function(oFromDate, oToDate) {
    return oToDate.getUTCMonth() - oFromDate.getUTCMonth() + this.year(oFromDate, oToDate) * 12;
  },
  week: function(oFromDate, oToDate, oFormat) {
    var iFromDay = oFormat._adaptDayOfWeek(oFromDate.getUTCDay());
    var iToDay = oFormat._adaptDayOfWeek(oToDate.getUTCDay());
    oFromDate = cutDateFields(oFromDate, 3);
    oToDate = cutDateFields(oToDate, 3);
    return (oToDate.getTime() - oFromDate.getTime() - (iToDay - iFromDay) * oFormat._mScales.day * 1e3) / (oFormat._mScales.week * 1e3);
  },
  day: function(oFromDate, oToDate, oFormat) {
    oFromDate = cutDateFields(oFromDate, 3);
    oToDate = cutDateFields(oToDate, 3);
    return (oToDate.getTime() - oFromDate.getTime()) / (oFormat._mScales.day * 1e3);
  },
  hour: function(oFromDate, oToDate, oFormat) {
    oFromDate = cutDateFields(oFromDate, 4);
    oToDate = cutDateFields(oToDate, 4);
    return (oToDate.getTime() - oFromDate.getTime()) / (oFormat._mScales.hour * 1e3);
  },
  minute: function(oFromDate, oToDate, oFormat) {
    oFromDate = cutDateFields(oFromDate, 5);
    oToDate = cutDateFields(oToDate, 5);
    return (oToDate.getTime() - oFromDate.getTime()) / (oFormat._mScales.minute * 1e3);
  },
  second: function(oFromDate, oToDate, oFormat) {
    oFromDate = cutDateFields(oFromDate, 6);
    oToDate = cutDateFields(oToDate, 6);
    return (oToDate.getTime() - oFromDate.getTime()) / (oFormat._mScales.second * 1e3);
  }
};
DateFormat$1.prototype._adaptDayOfWeek = function(iDayOfWeek) {
  var vCalendarWeekParameter = getCalendarWeekParameter(this.oFormatOptions), iFirstDayOfWeek;
  if (typeof vCalendarWeekParameter === "object") {
    iFirstDayOfWeek = vCalendarWeekParameter.firstDayOfWeek;
  } else {
    iFirstDayOfWeek = CalendarUtils$1.getWeekConfigurationValues(vCalendarWeekParameter, this.oLocale).firstDayOfWeek;
  }
  var iDayNumberOfWeek = iDayOfWeek - (iFirstDayOfWeek - 1);
  if (iDayNumberOfWeek <= 0) {
    iDayNumberOfWeek += 7;
  }
  return iDayNumberOfWeek;
};
DateFormat$1.prototype._getDifference = function(sScale, aDates) {
  var oFromDate = aDates[0];
  var oToDate = aDates[1];
  return Math.round(mRelativeDiffs[sScale](oFromDate, oToDate, this));
};
DateFormat$1.prototype.getAllowedCharacters = function(aFormatArray) {
  if (this.oFormatOptions.relative) {
    return "";
  }
  var sAllowedCharacters = "";
  var bNumbers = false;
  var bAll = false;
  var oPart;
  for (var i3 = 0; i3 < aFormatArray.length; i3++) {
    oPart = aFormatArray[i3];
    switch (oPart.type) {
      case "text":
        if (sAllowedCharacters.indexOf(oPart.value) < 0) {
          sAllowedCharacters += oPart.value;
        }
        break;
      case "day":
      case "year":
      case "weekYear":
      case "dayNumberOfWeek":
      case "weekInYear":
      case "hour0_23":
      case "hour1_24":
      case "hour0_11":
      case "hour1_12":
      case "minute":
      case "second":
      case "fractionalsecond":
        if (!bNumbers) {
          sAllowedCharacters += "0123456789";
          bNumbers = true;
        }
        break;
      case "month":
      case "monthStandalone":
        if (oPart.digits < 3) {
          if (!bNumbers) {
            sAllowedCharacters += "0123456789";
            bNumbers = true;
          }
        } else {
          bAll = true;
        }
        break;
      default:
        bAll = true;
        break;
    }
  }
  if (bAll) {
    sAllowedCharacters = "";
  }
  return sAllowedCharacters;
};
DateFormat$1.prototype.getPlaceholderText = function() {
  var oResourceBundle = Core.getLibraryResourceBundle();
  return oResourceBundle.getText("date.placeholder", [this.format.apply(this, this.getSampleValue())]);
};
DateFormat$1.prototype.getSampleValue = function() {
  var oDate, iFullYear = UI5Date$1.getInstance().getFullYear(), bUTC = this.oFormatOptions.UTC;
  function getDate(iYear, iMonth, iDay, iHours, iMinutes, iSeconds, iMilliseconds) {
    return bUTC ? UI5Date$1.getInstance(Date.UTC(iYear, iMonth, iDay, iHours, iMinutes, iSeconds, iMilliseconds)) : UI5Date$1.getInstance(iYear, iMonth, iDay, iHours, iMinutes, iSeconds, iMilliseconds);
  }
  oDate = getDate(iFullYear, 11, 31, 23, 59, 58, 123);
  if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
    return [oDate, Configuration.getTimezone()];
  }
  if (this.oFormatOptions.interval) {
    return [[getDate(iFullYear, 11, 22, 9, 12, 34, 567), oDate]];
  }
  return [oDate];
};
const rAllRTLCharacters = /[\u200e\u200f\u202a\u202b\u202c]/g;
const rAllSpaces = /\s/g;
DateFormat$1._normalize = function(sValue) {
  return sValue.replace(rAllRTLCharacters, "").replace(rAllSpaces, " ");
};
const DateFormatWrapped = DateFormat$1;
class DateFormat extends DateFormatWrapped {
}
const name$j = "slim-arrow-left";
const pathData$j = "M351.5 421q12 12 0 23-5 5-11 5t-11-5l-166-165q-9-10-9-23t9-23l165-164q5-5 11.5-5t11.5 5 5 11-5 11l-159 159q-6 6 0 12z";
const ltr$j = false;
const collection$j = "SAP-icons-v4";
const packageName$j = "@ui5/webcomponents-icons";
y$1(name$j, { pathData: pathData$j, ltr: ltr$j, collection: collection$j, packageName: packageName$j });
const name$i = "slim-arrow-left";
const pathData$i = "M326 96q11 0 18.5 7.5T352 122q0 10-8 18L223 256l121 116q8 8 8 18 0 11-7.5 18.5T326 416q-10 0-17-7L168 274q-8-6-8-18 0-11 8-19l141-134q7-7 17-7z";
const ltr$i = false;
const collection$i = "SAP-icons-v5";
const packageName$i = "@ui5/webcomponents-icons";
y$1(name$i, { pathData: pathData$i, ltr: ltr$i, collection: collection$i, packageName: packageName$i });
const iconSlimArrowLeft = "slim-arrow-left";
const cache = /* @__PURE__ */ new Map();
const getMinCalendarDate = (primaryCalendarType) => {
  const key = `min ${primaryCalendarType}`;
  if (!cache.has(key)) {
    const minDate = new CalendarDate$2(1, 0, 1, primaryCalendarType);
    minDate.setYear(1);
    minDate.setMonth(0);
    minDate.setDate(1);
    cache.set(key, minDate);
  }
  return cache.get(key);
};
const getMaxCalendarDate = (primaryCalendarType) => {
  const key = `max ${primaryCalendarType}`;
  if (!cache.has(key)) {
    const maxDate = new CalendarDate$2(1, 0, 1, primaryCalendarType);
    maxDate.setYear(9999);
    maxDate.setMonth(11);
    const tempDate = new CalendarDate$2(maxDate, primaryCalendarType);
    tempDate.setDate(1);
    tempDate.setMonth(tempDate.getMonth() + 1, 0);
    maxDate.setDate(tempDate.getDate());
    cache.set(key, maxDate);
  }
  return cache.get(key);
};
var __decorate$h = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
let CalendarDate2 = class CalendarDate3 extends b$6 {
  constructor() {
    super(...arguments);
    this.value = "";
  }
};
__decorate$h([
  s$7()
], CalendarDate2.prototype, "value", void 0);
CalendarDate2 = __decorate$h([
  m$7("ui5-date")
], CalendarDate2);
CalendarDate2.define();
const CalendarDate$1 = CalendarDate2;
var __decorate$g = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
let CalendarDateRange = class CalendarDateRange2 extends b$6 {
  constructor() {
    super(...arguments);
    this.startValue = "";
    this.endValue = "";
  }
};
__decorate$g([
  s$7()
], CalendarDateRange.prototype, "startValue", void 0);
__decorate$g([
  s$7()
], CalendarDateRange.prototype, "endValue", void 0);
CalendarDateRange = __decorate$g([
  m$7("ui5-date-range")
], CalendarDateRange);
CalendarDateRange.define();
const CalendarDateRange$1 = CalendarDateRange;
var __decorate$f = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
let SpecialCalendarDate = class SpecialCalendarDate2 extends b$6 {
  constructor() {
    super(...arguments);
    this.value = "";
    this.type = "None";
    this._tooltip = "";
  }
};
__decorate$f([
  s$7()
], SpecialCalendarDate.prototype, "value", void 0);
__decorate$f([
  s$7()
], SpecialCalendarDate.prototype, "type", void 0);
__decorate$f([
  s$7()
], SpecialCalendarDate.prototype, "_tooltip", void 0);
SpecialCalendarDate = __decorate$f([
  m$7("ui5-special-date")
], SpecialCalendarDate);
SpecialCalendarDate.define();
const modifyDateBy = (date, amount, unit, preserveDate = true, minDate, maxDate) => {
  const newDate = new CalendarDate$2(date);
  switch (unit) {
    case "day":
      newDate.setDate(date.getDate() + amount);
      break;
    case "month":
      if (preserveDate) {
        newDate.setMonth(date.getMonth() + amount);
        const stillSameMonth = amount === -1 && newDate.getMonth() === date.getMonth();
        const monthSkipped = amount === 1 && newDate.getMonth() - date.getMonth() > 1;
        if (stillSameMonth || monthSkipped) {
          newDate.setDate(0);
        }
      } else {
        if (amount === 1) {
          newDate.setMonth(newDate.getMonth() + 1, 1);
        }
        if (amount === -1) {
          newDate.setDate(0);
        }
      }
      break;
    case "year":
      newDate.setYear(date.getYear() + amount);
      if (newDate.getMonth() !== date.getMonth()) {
        newDate.setDate(0);
      }
      break;
  }
  if (minDate && newDate.isBefore(minDate)) {
    return new CalendarDate$2(minDate);
  }
  if (maxDate && newDate.isAfter(maxDate)) {
    return new CalendarDate$2(maxDate);
  }
  return newDate;
};
const getTodayUTCTimestamp = (primaryCalendarType) => CalendarDate$2.fromLocalJSDate(UI5Date.getInstance(), primaryCalendarType).valueOf() / 1e3;
var __decorate$e = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
let DateComponentBase = class DateComponentBase2 extends b$6 {
  constructor() {
    super();
    this.minDate = "";
    this.maxDate = "";
    this.calendarWeekNumbering = "Default";
  }
  get _primaryCalendarType() {
    const localeData = getCachedLocaleDataInstance(s$i());
    return this.primaryCalendarType || i$1() || localeData.getPreferredCalendarType();
  }
  get _secondaryCalendarType() {
    return this.secondaryCalendarType || o();
  }
  get _minDate() {
    let minDate;
    if (this.minDate) {
      minDate = this._getMinMaxCalendarDateFromString(this.minDate);
    }
    return minDate || getMinCalendarDate(this._primaryCalendarType);
  }
  get _maxDate() {
    let maxDate;
    if (this.maxDate) {
      maxDate = this._getMinMaxCalendarDateFromString(this.maxDate);
    }
    return maxDate || getMaxCalendarDate(this._primaryCalendarType);
  }
  get _formatPattern() {
    return this.formatPattern || "medium";
  }
  get _isPattern() {
    return this._formatPattern !== "medium" && this._formatPattern !== "short" && this._formatPattern !== "long";
  }
  get _isValueFormatPattern() {
    return this._valueFormat !== "medium" && this._valueFormat !== "short" && this._valueFormat !== "long";
  }
  get _isDisplayFormatPattern() {
    return this._displayFormat !== "medium" && this._displayFormat !== "short" && this._displayFormat !== "long";
  }
  get hasSecondaryCalendarType() {
    return !!this.secondaryCalendarType && this.secondaryCalendarType !== this.primaryCalendarType;
  }
  _getMinMaxCalendarDateFromString(date) {
    if (this.getFormat().parse(date)) {
      return this._getCalendarDateFromString(date);
    }
    const jsDate = this.getISOFormat().parse(date);
    if (jsDate) {
      return CalendarDate$2.fromLocalJSDate(jsDate, this._primaryCalendarType);
    }
  }
  _getCalendarDateFromString(value) {
    const jsDate = this.getValueFormat().parse(value);
    if (jsDate) {
      return CalendarDate$2.fromLocalJSDate(jsDate, this._primaryCalendarType);
    }
  }
  _getCalendarDateFromStringDisplayValue(value) {
    const jsDate = this.getDisplayFormat().parse(value);
    if (jsDate) {
      return CalendarDate$2.fromLocalJSDate(jsDate, this._primaryCalendarType);
    }
  }
  _getTimeStampFromString(value) {
    const calDate = this._getCalendarDateFromString(value);
    if (calDate) {
      return calDate.toUTCJSDate().valueOf();
    }
  }
  _getStringFromTimestamp(timestamp) {
    if (!timestamp) {
      return "";
    }
    const localDate = UI5Date.getInstance(timestamp);
    return this.getFormat().format(localDate, true);
  }
  _getDisplayStringFromTimestamp(timestamp) {
    if (!timestamp) {
      return "";
    }
    const localDate = UI5Date.getInstance(timestamp);
    return this.getDisplayFormat().format(localDate, true);
  }
  _getValueStringFromTimestamp(timestamp) {
    if (!timestamp) {
      return "";
    }
    const localDate = UI5Date.getInstance(timestamp);
    return this.getValueFormat().format(localDate, true);
  }
  getFormat() {
    return this._isPattern ? DateFormat.getDateInstance({
      strictParsing: true,
      pattern: this._formatPattern,
      calendarType: this._primaryCalendarType
    }) : DateFormat.getDateInstance({
      strictParsing: true,
      style: this._formatPattern,
      calendarType: this._primaryCalendarType
    });
  }
  get _displayFormat() {
    if (this.displayFormat) {
      return this.displayFormat;
    }
    return this._formatPattern;
  }
  get _valueFormat() {
    if (this.valueFormat) {
      return this.valueFormat;
    }
    if (this._formatPattern) {
      return this._formatPattern;
    }
    return "";
  }
  getDisplayFormat() {
    return this._isDisplayFormatPattern ? DateFormat.getDateInstance({
      strictParsing: true,
      pattern: this._displayFormat,
      calendarType: this._primaryCalendarType
    }) : DateFormat.getDateInstance({
      strictParsing: true,
      style: this._displayFormat,
      calendarType: this._primaryCalendarType
    });
  }
  getValueFormat() {
    if (!this._valueFormat) {
      return this.getISOFormat();
    }
    return this._isValueFormatPattern ? DateFormat.getDateInstance({
      strictParsing: true,
      pattern: this._valueFormat,
      calendarType: this._primaryCalendarType
    }) : DateFormat.getDateInstance({
      strictParsing: true,
      style: this._valueFormat,
      calendarType: this._primaryCalendarType
    });
  }
  getISOFormat() {
    if (!this._isoFormatInstance) {
      this._isoFormatInstance = DateFormat.getDateInstance({
        strictParsing: true,
        pattern: "yyyy-MM-dd",
        calendarType: this._primaryCalendarType
      });
    }
    return this._isoFormatInstance;
  }
};
__decorate$e([
  s$7()
], DateComponentBase.prototype, "primaryCalendarType", void 0);
__decorate$e([
  s$7()
], DateComponentBase.prototype, "secondaryCalendarType", void 0);
__decorate$e([
  s$7()
], DateComponentBase.prototype, "formatPattern", void 0);
__decorate$e([
  s$7()
], DateComponentBase.prototype, "displayFormat", void 0);
__decorate$e([
  s$7()
], DateComponentBase.prototype, "valueFormat", void 0);
__decorate$e([
  s$7()
], DateComponentBase.prototype, "minDate", void 0);
__decorate$e([
  s$7()
], DateComponentBase.prototype, "maxDate", void 0);
__decorate$e([
  s$7()
], DateComponentBase.prototype, "calendarWeekNumbering", void 0);
__decorate$e([
  i$8("@ui5/webcomponents")
], DateComponentBase, "i18nBundle", void 0);
DateComponentBase = __decorate$e([
  m$7({
    languageAware: true,
    cldr: true,
    renderer: y$4
  })
], DateComponentBase);
const DateComponentBase$1 = DateComponentBase;
var __decorate$d = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
let CalendarPart = class CalendarPart2 extends DateComponentBase$1 {
  get _minTimestamp() {
    return this._minDate.valueOf() / 1e3;
  }
  get _maxTimestamp() {
    return this._maxDate.valueOf() / 1e3;
  }
  /**
   * Returns the effective timestamp to be used by the respective calendar part
   * @protected
   */
  get _timestamp() {
    let timestamp = this.timestamp !== void 0 ? this.timestamp : getTodayUTCTimestamp(this._primaryCalendarType);
    if (this._maxTimestamp && this._maxTimestamp < timestamp) {
      timestamp = this._maxTimestamp;
    } else if (this._minTimestamp && this._minTimestamp > timestamp) {
      timestamp = this._minTimestamp;
    }
    return timestamp;
  }
  get _localDate() {
    return UI5Date.getInstance(this._timestamp * 1e3);
  }
  /**
   * Returns a CalendarDate instance, representing the _timestamp getter - this date is central to all components' rendering logic
   * @protected
   */
  get _calendarDate() {
    return CalendarDate$2.fromTimestamp(this._localDate.getTime(), this._primaryCalendarType);
  }
  /**
   * Change a timestamp and enforce limits
   * @param timestamp
   * @protected
   */
  _safelySetTimestamp(timestamp) {
    const min = this._minDate.valueOf() / 1e3;
    const max = this._maxDate.valueOf() / 1e3;
    if (timestamp < min) {
      timestamp = min;
    }
    if (timestamp > max) {
      timestamp = max;
    }
    this.timestamp = timestamp;
  }
  /**
   * Modify a timestamp by a certain amount of days/months/years and enforce limits
   * @param amount
   * @param unit
   * @param preserveDate whether to preserve the day of the month (f.e. 15th of March + 1 month = 15th of April)
   * @protected
   */
  _safelyModifyTimestampBy(amount, unit, preserveDate) {
    const newDate = modifyDateBy(this._calendarDate, amount, unit, preserveDate);
    this._safelySetTimestamp(newDate.valueOf() / 1e3);
  }
  _getTimestampFromDom(domNode) {
    const oMonthDomRef = domNode.getAttribute("data-sap-timestamp");
    return parseInt(oMonthDomRef);
  }
};
__decorate$d([
  s$7({ type: Number })
], CalendarPart.prototype, "timestamp", void 0);
CalendarPart = __decorate$d([
  m$7()
], CalendarPart);
const CalendarPart$1 = CalendarPart;
var CalendarSelectionMode;
(function(CalendarSelectionMode2) {
  CalendarSelectionMode2["Single"] = "Single";
  CalendarSelectionMode2["Multiple"] = "Multiple";
  CalendarSelectionMode2["Range"] = "Range";
})(CalendarSelectionMode || (CalendarSelectionMode = {}));
const CalendarSelectionMode$1 = CalendarSelectionMode;
var CalendarPickersMode;
(function(CalendarPickersMode2) {
  CalendarPickersMode2["DAY_MONTH_YEAR"] = "DAY_MONTH_YEAR";
  CalendarPickersMode2["MONTH_YEAR"] = "MONTH_YEAR";
  CalendarPickersMode2["YEAR"] = "YEAR";
})(CalendarPickersMode || (CalendarPickersMode = {}));
const CalendarPickersMode$1 = CalendarPickersMode;
/*!
 * OpenUI5
 * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
 * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
 */
var Gregorian = UniversalDate$1.extend(
  "sap.ui.core.date.Gregorian",
  /** @lends sap.ui.core.date.Gregorian.prototype */
  {
    constructor: function() {
      this.oDate = this.createDate(Date, arguments);
      this.sCalendarType = CalendarType.Gregorian;
    }
  }
);
Gregorian.UTC = function() {
  return Date.UTC.apply(Date, arguments);
};
Gregorian.now = function() {
  return Date.now();
};
_Calendars.set(CalendarType.Gregorian, Gregorian);
const CalendarUtilsWrapped = CalendarUtils$1;
const CalendarUtils = CalendarUtilsWrapped;
function DayPickerTemplate() {
  return jsx("div", { class: {
    "ui5-dp-root": true,
    "ui5-dp-twocalendartypes": this.hasSecondaryCalendarType
  }, style: {
    "justify-content": "center",
    display: this._hidden ? "none" : "flex"
  }, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._onclick, onMouseOver: this._onmouseover, onFocusIn: this._onfocusin, onFocusOut: this._onfocusout, children: jsxs("div", { id: `${this._id}-content`, class: "ui5-dp-content", role: "grid", "aria-roledescription": this.ariaRoledescription, children: [jsx("div", { role: "row", class: "ui5-dp-days-names-container", children: this._dayNames.map((day) => jsx("div", { role: "columnheader", "aria-label": day.name, class: day.classes, children: day.ultraShortName })) }), this._weeks.map((week) => {
    return week.length > 0 ? jsx("div", { class: "ui5-dp-weeks-row", role: "row", children: week.map((day) => {
      return "timestamp" in day ? jsxs("div", { "data-ui5-special-day": day.type ? day.type : void 0, tabindex: day._tabIndex, "data-sap-focus-ref": day.focusRef ? "true" : void 0, "data-sap-timestamp": day.timestamp, role: "gridcell", title: day.tooltip, "aria-selected": day.ariaSelected, "aria-label": day.ariaLabel, "aria-disabled": day.ariaDisabled, class: day.classes, part: day.parts, children: [jsx("span", { class: "ui5-dp-daytext", "data-sap-timestamp": day.timestamp, children: day.day }), day._isSecondaryCalendarType && jsx("span", { class: "ui5-dp-daytext ui5-dp-daysectext", children: day.secondDay }), day.type && jsx("div", { class: `ui5-dp-specialday ${day.type}` })] }) : !day.isHidden && jsx("div", { className: "ui5-dp-weekname-container", role: "rowheader", "aria-label": `Calendar Week ${day.weekNum}`, children: jsx("span", { className: "ui5-dp-weekname", children: day.weekNum }) });
    }) }) : jsx("div", { class: "ui5-dp-empty-week" });
  })] }) });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const dayPickerCSS = `:host(:not([hidden])){display:block}:host{height:100%;width:100%}:host([hide-week-numbers]) .ui5-dp-content{flex-basis:100%}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item{flex-direction:column;justify-content:var(--_ui5-v2-14-0_day_picker_item_justify_content)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-daytext{height:1.5625rem;padding-inline-end:var(--_ui5-v2-14-0_dp_two_calendar_item_text_padding_top)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-daysectext{font-size:.75rem;height:var(--_ui5-v2-14-0_dp_two_calendar_item_secondary_text_height);padding-block:var(--_ui5-v2-14-0_dp_two_calendar_item_secondary_text_padding_block);padding-inline:50% .4375rem}.ui5-dp-weekname,.ui5-dp-dayname,.ui5-dp-item{width:var(--_ui5-v2-14-0_day_picker_item_width);height:var(--_ui5-v2-14-0_day_picker_item_height);margin-block-start:var(--_ui5-v2-14-0_daypicker_item_margin);margin-inline-end:var(--_ui5-v2-14-0_daypicker_item_margin);font-family:var(--sapFontFamily);border-radius:var(--_ui5-v2-14-0_daypicker_item_border_radius)}.ui5-dp-weekname,.ui5-dp-dayname{cursor:default}.ui5-dp-weekname{color:var(--_ui5-v2-14-0_daypicker_weekname_color)}.ui5-dp-weeks-row{display:flex}.ui5-dp-content{display:flex;flex-basis:87.5%;flex-direction:column;font-family:var(--sapFontFamily)}.ui5-dp-days-names-container{display:flex;height:var(--_ui5-v2-14-0_daypicker_daynames_container_height)}.ui5-dp-weeknumber-container{padding-block-start:var(--_ui5-v2-14-0_daypicker_weeknumbers_container_padding_top);flex-basis:12.5%}.ui5-dp-weekname,.ui5-dp-dayname,.ui5-dp-weekname-container,.ui5-dp-item{display:flex;flex-grow:1;justify-content:center;align-items:center;font-size:var(--sapFontSmallSize);outline:none;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none}.ui5-dp-item{position:relative;color:var(--sapTextColor);background:var(--sapLegend_WorkingBackground);font-size:var(--sapFontSize);border:var(--_ui5-v2-14-0_daypicker_item_border);border-radius:var(--_ui5-v2-14-0_daypicker_item_border_radius);cursor:pointer}.ui5-dp-item:hover{background:var(--sapList_Hover_Background)}.ui5-dp-daytext{display:flex;width:100%;height:100%;justify-content:center;align-items:center;box-sizing:border-box}.ui5-dp-dayname{color:var(--_ui5-v2-14-0_daypicker_dayname_color);height:100%}.ui5-dp-item.ui5-dp-item--weekend{background:var(--sapLegend_NonWorkingBackground)}.ui5-dp-item.ui5-dp-item--disabled{pointer-events:none;opacity:.5}.ui5-dp-item.ui5-dp-item--weekend:hover{background:var(--sapList_Hover_Background);filter:var(--_ui5-v2-14-0_daypicker_item_weeekend_filter)}.ui5-dp-item.ui5-dp-item--othermonth{color:var(--_ui5-v2-14-0_daypicker_item_othermonth_color);background:var(--_ui5-v2-14-0_daypicker_item_othermonth_background_color);border-color:transparent}.ui5-dp-item.ui5-dp-item--othermonth:hover,.ui5-dp-item.ui5-dp-item--weekend.ui5-dp-item--othermonth:hover{color:var(--_ui5-v2-14-0_daypicker_item_othermonth_hover_color);background:var(--sapList_Hover_Background)}.ui5-dp-item:focus:after{content:"";border:var(--_ui5-v2-14-0_daypicker_item_not_selected_focus_border);position:absolute;inset:var(--_ui5-v2-14-0_daypicker_item_no_selected_inset);outline:none;border-radius:var(--_ui5-v2-14-0_daypicker_item_border_radius_focus_after)}.ui5-dp-item.ui5-dp-item--now:before{position:absolute;inset:var(--_ui5-v2-14-0_daypicker_item_now_not_selected_inset);border:.125rem solid var(--_ui5-v2-14-0_daypicker_item_now_border_color);content:"";border-radius:var(--_ui5-v2-14-0_daypicker_item_border_radius);z-index:1}.ui5-dp-item.ui5-dp-item--now.ui5-dp-item--selected{box-shadow:var(--_ui5-v2-14-0_daypicker_item_now_box_shadow)}.ui5-dp-item.ui5-dp-item--selected{background:var(--sapContent_Selected_Background)}.ui5-dp-item.ui5-dp-item--selected:not(.ui5-dp-item.ui5-dp-item--now) .ui5-dp-daytext:after{position:absolute;inset:0;border:var(--_ui5-v2-14-0_daypicker_item_selected_border);content:"";border-radius:var(--_ui5-v2-14-0_daypicker_item_border_radius_item);z-index:1}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item.ui5-dp-item--now .ui5-dp-daytext{border:var(--_ui5-v2-14-0_day_picker_item_selected_now_border);outline:var(--_ui5-v2-14-0_daypicker_item_selected_text_outline);outline-offset:var(--_ui5-v2-14-0_daypicker_item_now_selected_outline_offset);border-radius:var(--_ui5-v2-14-0_daypicker_item_border_radius_item);font-family:var(--_ui5-v2-14-0_daypicker_item_selected_text_font)}.ui5-dp-item.ui5-dp-item--selected .ui5-dp-daytext{background:var(--_ui5-v2-14-0_daypicker_item_selected_background);color:var(--sapContent_Selected_TextColor);border-radius:var(--_ui5-v2-14-0_daypicker_item_border_radius);border:var(--_ui5-v2-14-0_daypicker_item_selected_text_border);font-family:var(--_ui5-v2-14-0_daypicker_item_selected_text_font)}.ui5-dp-item.ui5-dp-item--selected .ui5-dp-daytext{background:var(--_ui5-v2-14-0_daypicker_item_selected_daytext_hover_background);color:var(--sapContent_Selected_TextColor)}.ui5-dp-item.ui5-dp-item--now:focus:after{inset:var(--_ui5-v2-14-0_daypicker_item_now_inset);border-radius:var(--_ui5-v2-14-0_daypicker_item_now_border_radius_focus_after);border:var(--_ui5-v2-14-0_daypicker_item_now_border_focus_after);position:absolute;content:"";width:auto;height:auto}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now:focus:after{inset:var(--_ui5-v2-14-0_daypicker_item_now_inset);border-radius:var(--_ui5-v2-14-0_day_picker_item_selected_now_border_radius_focus);border:var(--_ui5-v2-14-0_day_picker_item_selected_now_border_focus);position:absolute;content:"";width:auto;height:auto}.ui5-dp-item.ui5-dp-item--selected:hover{background:var(--_ui5-v2-14-0_daypicker_item_selected_hover);color:var(--sapContent_ContrastTextColor)}.ui5-dp-item.ui5-dp-item--selected:focus:after{border-color:var(--_ui5-v2-14-0_daypicker_item_selected_focus_color);border-width:var(--_ui5-v2-14-0_daypicker_item_selected_focus_width)}.ui5-dp-items-container{outline:none}.ui5-dp-item.ui5-dp-item--selected-between .ui5-dp-daytext{border-radius:var(--_ui5-v2-14-0_daypicker_item_border_radius);font-weight:var(--_ui5-v2-14-0_daypicker_item_selected_between_text_font)}.ui5-dp-item.ui5-dp-item--selected-between.ui5-dp-item--now:not(.ui5-dp-item--selected) .ui5-dp-daytext:after{content:"";position:absolute;inset:var(--_ui5-v2-14-0_daypicker_item_now_selected_between_inset);border:var(--_ui5-v2-14-0_daypicker_item_now_selected_between_border);border-radius:var(--_ui5-v2-14-0_daypicker_item_now_selected_between_border_radius)}.ui5-dp-item.ui5-dp-item--selected-between{border:var(--_ui5-v2-14-0_daypicker_item_select_between_border);border-radius:var(--_ui5-v2-14-0_daypicker_item_selected_between_border);background:var(--_ui5-v2-14-0_daypicker_item_selected_between_background)}.ui5-dp-item.ui5-dp-item--selected-between:hover{background:var(--_ui5-v2-14-0_daypicker_item_selected_between_hover_background)}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--selected-between:focus:after{border-color:var(--sapContent_FocusColor)}.ui5-dp-items-container>:first-child{justify-content:flex-end}.ui5-dp-emptyweek{height:var(--_ui5-v2-14-0_day_picker_empty_height)}.ui5-dp-item.ui5-dp-item--now.ui5-dp-item--selected.ui5-dp-item--withsecondtype:focus:after{outline-offset:-.1875rem;border-radius:var(--_ui5-v2-14-0-dp-item_withsecondtype_border)}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now.ui5-dp-item--withsecondtype .ui5-dp-daysectext,.ui5-dp-item.ui5-dp-item--now.ui5-dp-item--selected.ui5-dp-item--withsecondtype .ui5-dp-daytext{border:none;outline:none}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--selected:not(.ui5-dp-item.ui5-dp-item--now) .ui5-dp-daytext:after{border-width:.0625rem}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--now .ui5-dp-daysectext{height:var(--_ui5-v2-14-0_dp_two_calendar_item_secondary_text_height);padding-block-start:0;border-radius:var(--_ui5-v2-14-0_dp_two_calendar_item_secondary_text_border_radios)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--selected.ui5-dp-item.ui5-dp-item--now .ui5-dp-daytext{border-radius:var(--_ui5-v2-14-0_daypicker_two_calendar_item_border_radius);margin-block-end:var(--_ui5-v2-14-0_daypicker_two_calendar_item_margin_bottom)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item:focus:after{inset:var(--_ui5-v2-14-0_daypicker_two_calendar_item_no_selected_inset);border-radius:var(--_ui5-v2-14-0_daypicker_two_calendar_item_border_focus_border_radius)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--now:after{inset:var(--_ui5-v2-14-0_daypicker_two_calendar_item_no_selected_focus_inset);border-radius:var(--_ui5-v2-14-0_daypicker_two_calendar_item_no_select_focus_border_radius)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--selected:focus:after{border-width:var(--_ui5-v2-14-0_daypicker_two_calendar_item_now_selected_border_width);inset:var(--_ui5-v2-14-0_daypicker_two_calendar_item_now_selected_border_inset);border-radius:var(--_ui5-v2-14-0_daypicker_two_calendar_item_border_focus_border_radius)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now:after{inset:var(--_ui5-v2-14-0_daypicker_two_calendar_item_now_inset);border-radius:var(--_ui5-v2-14-0_daypicker_two_calendar_item_selected_now_border_radius_focus)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--now.ui5-dp-item--selected.ui5-dp-item--withsecondtype .ui5-dp-daytext:not(.ui5-dp-daysectext):before{content:var(--_ui5-v2-14-0_daypicker_two_calendar_item_now_day_text_content);position:absolute;inset:.25rem;border-radius:var(--_ui5-v2-14-0_daypicker_two_calendar_item_selected_now_border_radius_focus);outline:var(--_ui5-v2-14-0_daypicker_item_selected__secondary_type_text_outline);z-index:1}.ui5-dp-specialday{width:100%;height:.375rem;position:absolute;box-sizing:border-box;inset-block-start:var(--_ui5-v2-14-0_daypicker_special_day_top);border-end-end-radius:var(--_ui5-v2-14-0_daypicker_special_day_border_bottom_radius);border-end-start-radius:var(--_ui5-v2-14-0_daypicker_special_day_border_bottom_radius);border-block-start:var(--_ui5-v2-14-0_daypicker_special_day_border_top)}.ui5-dp-specialday.NonWorking,.ui5-dp-specialday.Working{border-block-start:none}.ui5-dp-item--selected .ui5-dp-specialday{width:var(--_ui5-v2-14-0_daypicker_selected_item_special_day_width)}.ui5-dp-item--selected.ui5-dp-item--now .ui5-dp-specialday{inset-block-start:var(--_ui5-v2-14-0_daypicker_selected_item_now_special_day_top);width:var(--_ui5-v2-14-0_daypicker_selected_item_now_special_day_width);border-end-end-radius:var(--_ui5-v2-14-0_daypicker_selected_item_now_special_day_border_bottom_radius);border-end-start-radius:var(--_ui5-v2-14-0_daypicker_selected_item_now_special_day_border_bottom_radius)}.ui5-dp-item--now .ui5-dp-specialday,.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now .ui5-dp-specialday{height:.3125rem;border-end-end-radius:var(--_ui5-v2-14-0_daypicker_selected_item_now_special_day_border_bottom_radius_alternate);border-end-start-radius:var(--_ui5-v2-14-0_daypicker_selected_item_now_special_day_border_bottom_radius_alternate);inset-block-start:var(--_ui5-v2-14-0_daypicker_item_now_specialday_top);width:var(--_ui5-v2-14-0_daypicker_item_now_specialday_width)}.ui5-dp-item:not(:focus).ui5-dp-item--selected.ui5-dp-item--now .ui5-dp-specialday{border-end-end-radius:var(--_ui5-v2-14-0_daypicker_special_day_selected_border_radius_bottom);border-end-start-radius:var(--_ui5-v2-14-0_daypicker_special_day_selected_border_radius_bottom)}.ui5-dp-item--now .ui5-dp-specialday{width:var(--_ui5-v2-14-0_daypicker_selected_item_now_special_day_width);inset-block-start:var(--_ui5-v2-14-0_daypicker_selected_item_now_special_day_top)}.ui5-dp-item[data-ui5-special-day].ui5-dp-item--selected.ui5-dp-item--now .ui5-dp-daytext{border-radius:var(--_ui5-v2-14-0-daypicker_item_selected_now_border_radius)}.ui5-dp-item[data-ui5-special-day].ui5-dp-item--selected.ui5-dp-item--now:focus:after,.ui5-dp-item[data-ui5-special-day].ui5-dp-item--now:focus:after{margin:var(--_ui5-v2-14-0_daypicker_item_now_focus_margin)}.ui5-dp-item.ui5-dp-item--now:focus .ui5-dp-specialday{inset-block-start:var(--_ui5-v2-14-0_daypicker_specialday_focused_top);width:var(--_ui5-v2-14-0_daypicker_specialday_focused_width);border-end-end-radius:var(--_ui5-v2-14-0_daypicker_specialday_focused_border_bottom);border-end-start-radius:var(--_ui5-v2-14-0_daypicker_specialday_focused_border_bottom);height:.3125rem}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item[data-ui5-special-day].ui5-dp-item--selected.ui5-dp-item--now:after,.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item[data-ui5-special-day].ui5-dp-item--now:after{inset:var(--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_now_inset);border-radius:var(--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_now_border_radius);border-width:var(--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_after_border_width);border-color:var(--_ui5-v2-14-0_daypicker_item_selected_focus_color)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item[data-ui5-special-day].ui5-dp-item--now:not(.ui5-dp-item--selected):after{inset:.1875rem}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item .ui5-dp-specialday{inset-block-start:var(--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_top);inset-inline-end:var(--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_right)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item:not(.ui5-dp-item--now) .ui5-dp-daysectext{padding-block:var(--_ui5-v2-14-0_dp_two_calendar_item_secondary_text_padding)}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now.ui5-dp-item--withsecondtype:focus .ui5-dp-specialday{inset-block-start:var(--_ui5-v2-14-0_daypicker_item_now_selected_two_calendar_focus_special_day_top);inset-inline-end:var(--_ui5-v2-14-0_daypicker_item_now_selected_two_calendar_focus_special_day_right)}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now.ui5-dp-item--withsecondtype:focus .ui5-dp-daysectext{padding-block:var(--_ui5-v2-14-0_daypicker_item_now_selected_two_calendar_focus_secondary_text_padding_block)}.ui5-dp-item--withsecondtype .ui5-dp-daytext{font-size:.75rem}.ui5-dp-item.ui5-dp-item--withsecondtype .ui5-dp-specialday,.ui5-dp-item.ui5-dp-item--withsecondtype.ui5-dp-item--now:focus .ui5-dp-specialday,.ui5-dp-item.ui5-dp-item--withsecondtype:not(:focus).ui5-dp-item--selected.ui5-dp-item--now .ui5-dp-specialday{border-radius:100%;width:var(--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_dot);inset-block-start:var(--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_top);inset-inline-end:var(--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_right);height:var(--_ui5-v2-14-0_daypicker_twocalendar_item_special_day_dot);border-block-start:none}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--selected.ui5-dp-item.ui5-dp-item--now:focus .ui5-dp-daytext{margin-block-end:var(--_ui5-v2-14-0_daypicker_two_calendar_item_selected_focus_margin_bottom);padding-inline-end:var(--_ui5-v2-14-0_daypicker_two_calendar_item_selected_focus_padding_right)}.Type01{background:var(--sapLegendColor1)}.Type02{background:var(--sapLegendColor2)}.Type03{background:var(--sapLegendColor3)}.Type04{background:var(--sapLegendColor4)}.Type05{background:var(--sapLegendColor5)}.Type06{background:var(--sapLegendColor6)}.Type07{background:var(--sapLegendColor7)}.Type08{background:var(--sapLegendColor8)}.Type09{background:var(--sapLegendColor9)}.Type10{background:var(--sapLegendColor10)}.Type11{background:var(--sapLegendColor11)}.Type12{background:var(--sapLegendColor12)}.Type13{background:var(--sapLegendColor13)}.Type14{background:var(--sapLegendColor14)}.Type15{background:var(--sapLegendColor15)}.Type16{background:var(--sapLegendColor16)}.Type17{background:var(--sapLegendColor17)}.Type18{background:var(--sapLegendColor18)}.Type19{background:var(--sapLegendColor19)}.Type20{background:var(--sapLegendColor20)}
`;
var __decorate$c = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var DayPicker_1;
const isBetween$2 = (x2, num1, num2) => x2 > Math.min(num1, num2) && x2 < Math.max(num1, num2);
const DAYS_IN_WEEK = 7;
let DayPicker = DayPicker_1 = class DayPicker2 extends CalendarPart$1 {
  constructor() {
    super(...arguments);
    this.selectedDates = [];
    this.selectionMode = "Single";
    this.hideWeekNumbers = false;
    this._weeks = [];
    this._dayNames = [];
    this._hidden = false;
    this.specialCalendarDates = [];
  }
  onBeforeRendering() {
    const localeData = getCachedLocaleDataInstance(s$i());
    this._buildWeeks(localeData);
    this._buildDayNames(localeData);
  }
  /**
   * Builds the "_weeks" object that represents the month.
   * @param localeData
   * @private
   */
  _buildWeeks(localeData) {
    if (this._hidden) {
      return;
    }
    this._weeks = [];
    const firstDayOfWeek = this._getFirstDayOfWeek();
    const specialCalendarDates = this._specialCalendarDates;
    const monthsNames = localeData.getMonths("wide", this._primaryCalendarType);
    const secondaryMonthsNames = this.hasSecondaryCalendarType ? localeData.getMonths("wide", this.secondaryCalendarType) : [];
    const nonWorkingDayLabel = DayPicker_1.i18nBundle.getText(DAY_PICKER_NON_WORKING_DAY);
    const todayLabel = DayPicker_1.i18nBundle.getText(DAY_PICKER_TODAY);
    const tempDate = this._getFirstDay();
    const todayDate = CalendarDate$2.fromLocalJSDate(UI5Date.getInstance(), this._primaryCalendarType);
    const calendarDate = this._calendarDate;
    const minDate = this._minDate;
    const maxDate = this._maxDate;
    const tempSecondDate = this.hasSecondaryCalendarType ? this._getSecondaryDay(tempDate) : void 0;
    let week = [];
    for (let i3 = 0; i3 < DAYS_IN_WEEK * 6; i3++) {
      const timestamp = tempDate.valueOf() / 1e3;
      let dayOfTheWeek = tempDate.getDay() - firstDayOfWeek;
      if (dayOfTheWeek < 0) {
        dayOfTheWeek += DAYS_IN_WEEK;
      }
      const specialCalendarDate = specialCalendarDates.find((specialDate) => specialDate.specialDateTimestamp === timestamp);
      const specialDayType = specialCalendarDate ? specialCalendarDate.type : "";
      const specialDayTooltip = specialCalendarDate ? specialCalendarDate.tooltip : "";
      const unnamedCalendarTypeLabel = specialDayTooltip && !this._isDefaultCalendarLegendType(specialDayType) ? specialDayTooltip : "";
      const isFocused = tempDate.getMonth() === calendarDate.getMonth() && tempDate.getDate() === calendarDate.getDate();
      const isSelected = this._isDaySelected(timestamp);
      const isSelectedBetween = this._isDayInsideSelectionRange(timestamp);
      const isOtherMonth = tempDate.getMonth() !== calendarDate.getMonth();
      const isWeekend = this._isWeekend(tempDate);
      const isDisabled = tempDate.valueOf() < minDate.valueOf() || tempDate.valueOf() > maxDate.valueOf();
      const isToday = tempDate.isSame(todayDate);
      const isFirstDayOfWeek = tempDate.getDay() === firstDayOfWeek;
      const nonWorkingAriaLabel = (isWeekend || specialDayType === "NonWorking") && specialDayType !== "Working" ? `${nonWorkingDayLabel} ` : "";
      const todayAriaLabel = isToday ? `${todayLabel} ` : "";
      const tempSecondDateNumber = tempSecondDate ? tempSecondDate.getDate() : "";
      const tempSecondYearNumber = tempSecondDate ? tempSecondDate.getYear() : "";
      const secondaryMonthsNamesString = secondaryMonthsNames.length > 0 ? secondaryMonthsNames[tempSecondDate.getMonth()] : "";
      const tooltip = `${todayAriaLabel}${nonWorkingAriaLabel}${unnamedCalendarTypeLabel}`.trim();
      const ariaLabel = this.hasSecondaryCalendarType ? `${monthsNames[tempDate.getMonth()]} ${tempDate.getDate()}, ${tempDate.getYear()}; ${secondaryMonthsNamesString} ${tempSecondDateNumber}, ${tempSecondYearNumber} ${tooltip}`.trim() : `${monthsNames[tempDate.getMonth()]} ${tempDate.getDate()}, ${tempDate.getYear()} ${tooltip}`.trim();
      const day = {
        timestamp: timestamp.toString(),
        focusRef: isFocused,
        _tabIndex: isFocused ? 0 : -1,
        selected: isSelected || isSelectedBetween,
        day: tempDate.getDate(),
        secondDay: this.hasSecondaryCalendarType ? tempSecondDate.getDate() : void 0,
        _isSecondaryCalendarType: this.hasSecondaryCalendarType,
        classes: `ui5-dp-item ui5-dp-wday${dayOfTheWeek}`,
        tooltip,
        ariaLabel,
        ariaSelected: isSelected || isSelectedBetween,
        ariaDisabled: isDisabled || isOtherMonth,
        disabled: isDisabled,
        type: specialDayType,
        parts: "day-cell"
      };
      if (isFirstDayOfWeek) {
        day.classes += " ui5-dp-firstday";
      }
      if (isSelected) {
        day.classes += " ui5-dp-item--selected";
        day.parts += " day-cell-selected";
      }
      if (isSelectedBetween) {
        day.classes += " ui5-dp-item--selected-between";
        day.parts += " day-cell-selected-between";
      }
      if (isToday) {
        day.classes += " ui5-dp-item--now";
      }
      if (isOtherMonth) {
        day.classes += " ui5-dp-item--othermonth";
      }
      if ((isWeekend || specialDayType === "NonWorking") && specialDayType !== "Working") {
        day.classes += " ui5-dp-item--weekend";
      }
      if (isDisabled) {
        day.classes += " ui5-dp-item--disabled";
      }
      if (this.hasSecondaryCalendarType) {
        day.classes += " ui5-dp-item--withsecondtype";
      }
      week.push(day);
      if (dayOfTheWeek === DAYS_IN_WEEK - 1) {
        const weekNumber = this._calculateWeekNumber(tempDate.toLocalJSDate());
        week.unshift({
          weekNum: weekNumber,
          isHidden: this.shouldHideWeekNumbers
        });
      }
      if (week.length === DAYS_IN_WEEK + 1) {
        this._weeks.push(week);
        week = [];
      }
      tempDate.setDate(tempDate.getDate() + 1);
      if (this.hasSecondaryCalendarType && tempSecondDate) {
        tempSecondDate.setDate(tempSecondDate.getDate() + 1);
      }
    }
  }
  _calculateWeekNumber(date) {
    const oDateFormat = DateFormat.getDateInstance({ pattern: "w", calendarType: this.primaryCalendarType, calendarWeekNumbering: this.calendarWeekNumbering });
    const weekNumber = oDateFormat.format(date);
    return Number(weekNumber);
  }
  /**
   * Builds the dayNames object (header of the month).
   * @param localeData
   * @private
   */
  _buildDayNames(localeData) {
    if (this._hidden) {
      return;
    }
    let dayOfTheWeek;
    const aDayNamesWide = localeData.getDays("wide", this._primaryCalendarType);
    let aDayNamesAbbreviated = localeData.getDays("abbreviated", this._primaryCalendarType);
    let dayName;
    if (this.namesTooLong(aDayNamesAbbreviated)) {
      aDayNamesAbbreviated = localeData.getDays("narrow", this._primaryCalendarType);
    }
    this._dayNames = [];
    this._dayNames.push({
      classes: "ui5-dp-dayname",
      name: DayPicker_1.i18nBundle.getText(DAY_PICKER_WEEK_NUMBER_TEXT)
    });
    for (let i3 = 0; i3 < DAYS_IN_WEEK; i3++) {
      dayOfTheWeek = i3 + this._getFirstDayOfWeek();
      if (dayOfTheWeek > DAYS_IN_WEEK - 1) {
        dayOfTheWeek -= DAYS_IN_WEEK;
      }
      dayName = {
        name: aDayNamesWide[dayOfTheWeek],
        ultraShortName: aDayNamesAbbreviated[dayOfTheWeek],
        classes: "ui5-dp-dayname"
      };
      this._dayNames.push(dayName);
    }
    this._dayNames[1].classes += " ui5-dp-firstday";
    if (this.shouldHideWeekNumbers) {
      this._dayNames.shift();
    }
  }
  /**
   * Tells if any of the days is more than 4 characters(too long to render).
   * @param dayNames
   * @private
   */
  namesTooLong(dayNames) {
    return dayNames.some((dayName) => dayName.length > 4);
  }
  onAfterRendering() {
    if (this._autoFocus && !this._hidden) {
      this.focus();
    }
  }
  _focusCorrectDay() {
    if (this._shouldFocusDay) {
      this._focusableDay.focus();
    }
  }
  get _shouldFocusDay() {
    return document.activeElement !== this._focusableDay && this._specialCalendarDates.length === 0;
  }
  _onfocusin() {
    this._autoFocus = true;
    this._focusCorrectDay();
  }
  _onfocusout() {
    this._autoFocus = false;
  }
  /**
   * Tells if the day is selected (dark blue).
   * @param timestamp
   * @private
   */
  _isDaySelected(timestamp) {
    if (this.selectionMode === CalendarSelectionMode$1.Single) {
      return timestamp === this.selectedDates[0];
    }
    if (this.selectionMode === CalendarSelectionMode$1.Multiple) {
      return this.selectedDates.includes(timestamp);
    }
    return timestamp === this.selectedDates[0] || timestamp === this.selectedDates[this.selectedDates.length - 1];
  }
  /**
   * Tells if the day is inside a selection range (light blue).
   * @param timestamp
   * @private
   */
  _isDayInsideSelectionRange(timestamp) {
    if (this.selectionMode !== CalendarSelectionMode$1.Range || !this.selectedDates.length) {
      return false;
    }
    if (this.selectedDates.length === 1 && this._secondTimestamp) {
      return isBetween$2(timestamp, this.selectedDates[0], this._secondTimestamp);
    }
    return isBetween$2(timestamp, this.selectedDates[0], this.selectedDates[this.selectedDates.length - 1]);
  }
  /**
   * Selects/deselects a day.
   * @param e
   * @param isShift true if the user did Click+Shift or Enter+Shift (but not Space+Shift)
   * @private
   */
  _selectDate(e2, isShift) {
    let target = e2.target;
    if (!target.hasAttribute("data-sap-timestamp")) {
      target = target.parentNode;
    }
    if (!this._isDayPressed(target)) {
      return;
    }
    const timestamp = this._getTimestampFromDom(target);
    this._safelySetTimestamp(timestamp);
    this._updateSecondTimestamp();
    this._updateSelectedDates(timestamp, isShift);
    this.fireDecoratorEvent("change", {
      timestamp: this.timestamp,
      dates: this.selectedDates
    });
  }
  _updateSelectedDates(timestamp, isShift) {
    if (this.selectionMode === CalendarSelectionMode$1.Multiple) {
      if (this.selectedDates.length > 0 && isShift) {
        this._multipleSelection(timestamp);
      } else {
        this._toggleTimestampInSelection(timestamp);
      }
      return;
    }
    p2(DayPicker_1.i18nBundle.getText(LIST_ITEM_SELECTED));
    if (this.selectionMode === CalendarSelectionMode$1.Range && this.selectedDates.length === 1) {
      this.selectedDates = [this.selectedDates[0], timestamp];
      return;
    }
    this.selectedDates = [timestamp];
  }
  /**
   * Selects/deselects the whole row (week).
   * @private
   */
  _selectWeek() {
    this._weeks.forEach((week) => {
      const _week = week;
      const dayInThisWeek = _week.findIndex((item) => {
        const date = CalendarDate$2.fromTimestamp(parseInt(item.timestamp) * 1e3);
        return date.getMonth() === this._calendarDate.getMonth() && date.getDate() === this._calendarDate.getDate();
      }) !== -1;
      if (dayInThisWeek) {
        const notAllDaysOfThisWeekSelected = _week.some((item) => item.timestamp && !this.selectedDates.includes(parseInt(item.timestamp)));
        if (notAllDaysOfThisWeekSelected) {
          _week.filter((item) => item.timestamp).forEach((item) => {
            this._addTimestampToSelection(parseInt(item.timestamp));
          });
        } else {
          _week.filter((item) => item.timestamp).forEach((item) => {
            this._removeTimestampFromSelection(parseInt(item.timestamp));
          });
        }
      }
    });
    this.fireDecoratorEvent("change", {
      timestamp: this.timestamp,
      dates: this.selectedDates
    });
  }
  _toggleTimestampInSelection(timestamp) {
    if (this.selectedDates.includes(timestamp)) {
      this._removeTimestampFromSelection(timestamp);
    } else {
      this._addTimestampToSelection(timestamp);
      p2(DayPicker_1.i18nBundle.getText(LIST_ITEM_SELECTED));
    }
  }
  _addTimestampToSelection(timestamp) {
    if (!this.selectedDates.includes(timestamp)) {
      this.selectedDates = [...this.selectedDates, timestamp];
    }
  }
  _removeTimestampFromSelection(timestamp) {
    this.selectedDates = this.selectedDates.filter((value) => value !== timestamp);
  }
  /**
   * Called when at least one day is selected and the user presses "Shift".
   * @param timestamp
   * @private
   */
  _multipleSelection(timestamp) {
    const min = Math.min(...this.selectedDates);
    const max = Math.max(...this.selectedDates);
    let start;
    let end;
    let toggle = false;
    if (timestamp < min) {
      start = timestamp;
      end = min;
    } else if (timestamp >= min && timestamp <= max) {
      const distanceToMin = Math.abs(timestamp - min);
      const distanceToMax = Math.abs(timestamp - max);
      if (distanceToMin < distanceToMax) {
        start = timestamp;
        end = max;
      } else {
        start = min;
        end = timestamp;
      }
      toggle = true;
    } else {
      start = max;
      end = timestamp;
    }
    const startDate = CalendarDate$2.fromTimestamp(start * 1e3);
    const endDate = CalendarDate$2.fromTimestamp(end * 1e3);
    while (startDate.valueOf() <= endDate.valueOf()) {
      this[toggle ? "_toggleTimestampInSelection" : "_addTimestampToSelection"](startDate.valueOf() / 1e3);
      startDate.setDate(startDate.getDate() + 1);
    }
  }
  /**
   * Set the hovered day as the "_secondTimestamp".
   * @param e
   * @private
   */
  _onmouseover(e2) {
    const target = e2.target;
    const hoveredItem = target.closest(".ui5-dp-item");
    if (hoveredItem && this.selectionMode === CalendarSelectionMode$1.Range && this.selectedDates.length === 1) {
      this._secondTimestamp = this._getTimestampFromDom(hoveredItem);
    }
  }
  _onkeydown(e2) {
    let preventDefault = true;
    if (b$4(e2) || i$7(e2)) {
      this._selectDate(e2, i$7(e2));
    } else if (A$2(e2) || K(e2)) {
      e2.preventDefault();
    } else if (D$3(e2)) {
      this._modifyTimestampBy(-1, "day", false);
    } else if (R2(e2)) {
      this._modifyTimestampBy(1, "day", false);
    } else if (P$1(e2)) {
      this._modifyTimestampBy(-7, "day", false);
    } else if (_(e2)) {
      this._modifyTimestampBy(7, "day", false);
    } else if (j(e2)) {
      this._modifyTimestampBy(-1, "month");
    } else if (q(e2)) {
      this._modifyTimestampBy(1, "month");
    } else if (z2(e2) || $(e2)) {
      this._modifyTimestampBy(-1, "year");
    } else if (v$1(e2) || oo(e2)) {
      this._modifyTimestampBy(1, "year");
    } else if (yo(e2)) {
      this._modifyTimestampBy(-10, "year");
    } else if (eo(e2)) {
      this._modifyTimestampBy(10, "year");
    } else if (M2(e2) || n$a(e2)) {
      this._onHomeOrEnd(M2(e2));
    } else if (G(e2)) {
      const tempDate = new CalendarDate$2(this._calendarDate, this._primaryCalendarType);
      tempDate.setDate(1);
      this._setTimestamp(tempDate.valueOf() / 1e3);
    } else if (H$1(e2)) {
      const tempDate = new CalendarDate$2(this._calendarDate, this._primaryCalendarType);
      tempDate.setMonth(tempDate.getMonth() + 1);
      tempDate.setDate(0);
      this._setTimestamp(tempDate.valueOf() / 1e3);
    } else {
      preventDefault = false;
    }
    if (preventDefault) {
      e2.preventDefault();
    }
  }
  _onkeyup(e2) {
    if (A$2(e2) || K(e2) && this.selectionMode !== CalendarSelectionMode$1.Multiple) {
      this._selectDate(e2, false);
    } else if (K(e2)) {
      this._selectWeek();
    }
  }
  /**
   * Click is the same as "Enter".
   * **Note:** "Click+Shift" has the same effect as "Enter+Shift".
   * @param e
   * @private
   */
  _onclick(e2) {
    this._selectDate(e2, e2.shiftKey);
  }
  /**
   * Called upon "Home" or "End" - moves the focus to the first or last item in the row.
   * @param homePressed
   * @private
   */
  _onHomeOrEnd(homePressed) {
    this._weeks.forEach((week) => {
      const _week = week;
      const dayInThisWeek = _week.findIndex((item) => {
        const date = CalendarDate$2.fromTimestamp(parseInt(item.timestamp) * 1e3);
        return date.getMonth() === this._calendarDate.getMonth() && date.getDate() === this._calendarDate.getDate();
      }) !== -1;
      if (dayInThisWeek) {
        const index = homePressed ? 1 : 7;
        this._setTimestamp(parseInt(_week[index].timestamp));
      }
    });
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasPreviousPage() {
    return !(this._calendarDate.getMonth() === this._minDate.getMonth() && this._calendarDate.getYear() === this._minDate.getYear());
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasNextPage() {
    return !(this._calendarDate.getMonth() === this._maxDate.getMonth() && this._calendarDate.getYear() === this._maxDate.getYear());
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _showPreviousPage() {
    this._modifyTimestampBy(-1, "month", false);
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _showNextPage() {
    this._modifyTimestampBy(1, "month", false);
  }
  /**
   * Modifies the timestamp by a certain amount of days/months/years.
   * @param amount
   * @param unit
   * @param preserveDate whether to preserve the day of the month (f.e. 15th of March + 1 month = 15th of April)
   * @private
   */
  _modifyTimestampBy(amount, unit, preserveDate) {
    this._safelyModifyTimestampBy(amount, unit, preserveDate);
    this._updateSecondTimestamp();
    this.fireDecoratorEvent("navigate", { timestamp: this.timestamp });
  }
  /**
   * Sets the timestamp to an absolute value.
   * @param value
   * @private
   */
  _setTimestamp(value) {
    this._safelySetTimestamp(value);
    this._updateSecondTimestamp();
    this.fireDecoratorEvent("navigate", { timestamp: this.timestamp });
  }
  /**
   * During range selection, when the user is navigating with the keyboard,
   * the currently focused day is considered the "second day".
   * @private
   */
  _updateSecondTimestamp() {
    if (this.selectionMode === CalendarSelectionMode$1.Range && (this.selectedDates.length === 1 || this.selectedDates.length === 2)) {
      this._secondTimestamp = this.timestamp;
    }
  }
  get _specialCalendarDates() {
    return this.specialCalendarDates;
  }
  get shouldHideWeekNumbers() {
    if (this._primaryCalendarType !== s$1.Gregorian) {
      return true;
    }
    return this.hideWeekNumbers;
  }
  _isWeekend(oDate) {
    const localeData = getCachedLocaleDataInstance(s$i());
    const iWeekDay = oDate.getDay(), iWeekendStart = localeData.getWeekendStart(), iWeekendEnd = localeData.getWeekendEnd();
    return iWeekDay >= iWeekendStart && iWeekDay <= iWeekendEnd || iWeekendEnd < iWeekendStart && (iWeekDay >= iWeekendStart || iWeekDay <= iWeekendEnd);
  }
  _isDayPressed(target) {
    const targetParent = target.parentNode;
    return target.className.indexOf("ui5-dp-item") > -1 || targetParent && targetParent.classList && targetParent.classList.contains("ui5-dp-item");
  }
  _isDefaultCalendarLegendType(type) {
    return ["NonWorking", "Working", "Today", "Selected", "None"].includes(type);
  }
  _getSecondaryDay(tempDate) {
    return new CalendarDate$2(tempDate, this.secondaryCalendarType);
  }
  _getFirstDay() {
    let daysFromPreviousMonth;
    const firstDayOfWeek = this._getFirstDayOfWeek();
    const firstDay = new CalendarDate$2(this._calendarDate, this._primaryCalendarType);
    firstDay.setDate(1);
    daysFromPreviousMonth = firstDay.getDay() - firstDayOfWeek;
    if (daysFromPreviousMonth < 0) {
      daysFromPreviousMonth = 7 + daysFromPreviousMonth;
    }
    if (daysFromPreviousMonth > 0) {
      firstDay.setDate(1 - daysFromPreviousMonth);
    }
    return firstDay;
  }
  _getFirstDayOfWeek() {
    const result = CalendarUtils.getWeekConfigurationValues(this.calendarWeekNumbering);
    const localeData = getCachedLocaleDataInstance(s$i());
    return result?.firstDayOfWeek ? result.firstDayOfWeek : localeData.getFirstDayOfWeek();
  }
  get styles() {
    return {
      wrapper: {
        display: this._hidden ? "none" : "flex",
        "justify-content": "center"
      },
      main: {
        width: "100%"
      }
    };
  }
  get ariaRoledescription() {
    return this.hasSecondaryCalendarType ? `${this._primaryCalendarType} calendar with secondary ${this.secondaryCalendarType} calendar` : `${this._primaryCalendarType} calendar`;
  }
};
__decorate$c([
  s$7({ type: Array })
], DayPicker.prototype, "selectedDates", void 0);
__decorate$c([
  s$7()
], DayPicker.prototype, "selectionMode", void 0);
__decorate$c([
  s$7({ type: Boolean })
], DayPicker.prototype, "hideWeekNumbers", void 0);
__decorate$c([
  s$7({ type: Array })
], DayPicker.prototype, "_weeks", void 0);
__decorate$c([
  s$7({ type: Array })
], DayPicker.prototype, "_dayNames", void 0);
__decorate$c([
  s$7({ type: Boolean, noAttribute: true })
], DayPicker.prototype, "_hidden", void 0);
__decorate$c([
  s$7({ type: Number })
], DayPicker.prototype, "_secondTimestamp", void 0);
__decorate$c([
  s$7({ type: Array })
], DayPicker.prototype, "specialCalendarDates", void 0);
__decorate$c([
  o$1("[data-sap-focus-ref]")
], DayPicker.prototype, "_focusableDay", void 0);
__decorate$c([
  i$8("@ui5/webcomponents")
], DayPicker, "i18nBundle", void 0);
DayPicker = DayPicker_1 = __decorate$c([
  m$7({
    tag: "ui5-daypicker",
    styles: dayPickerCSS,
    template: DayPickerTemplate
  }),
  l$b("change", {
    bubbles: true
  }),
  l$b("navigate", {
    bubbles: true
  })
], DayPicker);
DayPicker.define();
const DayPicker$1 = DayPicker;
function MonthPickerTemplate() {
  return jsx("div", { class: "ui5-mp-root", part: "month-picker-root", role: "grid", "aria-roledescription": this.roleDescription, "aria-readonly": "false", "aria-multiselectable": "false", onMouseOver: this._onmouseover, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._selectMonth, children: this._monthsInterval.map((months) => jsx("div", { role: "row", class: "ui5-mp-quarter", children: months.map((month) => jsxs("div", { "data-sap-timestamp": month.timestamp, tabindex: month._tabIndex, "data-sap-focus-ref": month.focusRef ? "true" : void 0, class: month.classes, part: month.parts, role: "gridcell", "aria-selected": month.ariaSelected, "aria-disabled": month.ariaDisabled, children: [jsx("span", { class: "ui5-dp-monthtext", children: month.name }), month.nameInSecType && jsx("span", { class: "ui5-dp-monthtext ui5-dp-monthsectext", children: month.nameInSecType })] })) })) });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const monthPickerStyles = `:host(:not([hidden])){display:block}:host{width:100%;height:100%}.ui5-mp-root{box-sizing:border-box;padding:2rem 0 1rem;display:flex;flex-direction:column;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);justify-content:center;align-items:center}.ui5-mp-quarter{display:flex;justify-content:center;align-items:center;width:100%}.ui5-mp-item{display:flex;flex-direction:column;width:calc(33.333% - .125rem);height:var(--_ui5-v2-14-0_month_picker_item_height);color:var(--sapButton_Lite_TextColor);background-color:var(--sapButton_Lite_Background);align-items:center;justify-content:center;margin:var(--_ui5-v2-14-0_monthpicker_item_margin);box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;position:relative;border:var(--_ui5-v2-14-0_monthpicker_item_border);border-radius:var(--_ui5-v2-14-0_monthpicker_item_border_radius)}.ui5-dp-monthsectext{font-size:.75rem;color:var(--sapNeutralElementColor)}.ui5-mp-item.ui5-mp-item--selected,.ui5-mp-item.ui5-mp-item--selected-between{background:var(--sapButton_Selected_Background);border:var(--_ui5-v2-14-0_monthpicker_item_selected_border);color:var(--sapButton_Selected_TextColor)}.ui5-mp-item.ui5-mp-item--selected .ui5-dp-monthsectext,.ui5-mp-item.ui5-mp-item--selected-between .ui5-dp-monthsectext{color:var(--sapButton_Selected_TextColor)}.ui5-mp-item:hover{background:var(--sapButton_Lite_Hover_Background);border:var(--_ui5-v2-14-0_monthpicker_item_hover_border);color:var(--sapButton_Lite_Hover_TextColor)}.ui5-mp-item.ui5-mp-item--selected:hover,.ui5-mp-item.ui5-mp-item--selected-between:hover{background:var(--sapButton_Selected_Hover_Background);border:var(--_ui5-v2-14-0_monthpicker_item_selected_hover_border);color:var(--sapButton_Selected_TextColor)}.ui5-mp-item.ui5-mp-item--selected:hover .ui5-dp-monthsectext,.ui5-mp-item.ui5-mp-item--selected-between:hover .ui5-dp-monthsectext{color:var(--sapButton_Selected_TextColor)}.ui5-mp-item:active,.ui5-mp-item.ui5-mp-item--selected:active,.ui5-mp-item.ui5-mp-item--selected-between:active{background:var(--sapButton_Active_Background);border:var(--_ui5-v2-14-0_monthpicker_item_active_border);color:var(--sapButton_Active_TextColor)}.ui5-mp-item:active .ui5-dp-monthsectext,.ui5-mp-item.ui5-mp-item--selected:active .ui5-dp-monthsectext,.ui5-mp-item.ui5-mp-item--selected-between:active .ui5-dp-monthsectext{color:var(--sapButton_Active_TextColor)}.ui5-mp-item.ui5-mp-item--disabled{pointer-events:none;opacity:.5}.ui5-mp-item:focus:after{content:"";position:absolute;inset:.0625rem;border:var(--_ui5-v2-14-0_button_focused_border);border-radius:var(--_ui5-v2-14-0_button_focused_border_radius)}:host([secondary-calendar-type="Persian"]:not([primary-calendar-type="Persian"])) .ui5-mp-root,:host([secondary-calendar-type="Islamic"]:not([primary-calendar-type="Islamic"])) .ui5-mp-root{display:grid;padding:.5625rem 0;grid-template-columns:repeat(2,1fr);gap:var(--_ui5-v2-14-0_monthpicker_item_margin)}:host([secondary-calendar-type="Persian"]:not([primary-calendar-type="Persian"])) .ui5-mp-item,:host([secondary-calendar-type="Islamic"]:not([primary-calendar-type="Islamic"])) .ui5-mp-item{margin:0;width:auto}:host([secondary-calendar-type="Persian"]:not([primary-calendar-type="Persian"])) .ui5-mp-quarter,:host([secondary-calendar-type="Islamic"]:not([primary-calendar-type="Islamic"])) .ui5-mp-quarter{width:100%;display:contents}
`;
var __decorate$b = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var MonthPicker_1;
const isBetween$1 = (x2, num1, num2) => x2 > Math.min(num1, num2) && x2 < Math.max(num1, num2);
const PAGE_SIZE = 12;
let MonthPicker = MonthPicker_1 = class MonthPicker2 extends CalendarPart$1 {
  constructor() {
    super(...arguments);
    this.selectedDates = [];
    this.selectionMode = "Single";
    this._monthsInterval = [];
    this._hidden = false;
  }
  get roleDescription() {
    return MonthPicker_1.i18nBundle.getText(MONTH_PICKER_DESCRIPTION);
  }
  onBeforeRendering() {
    this._buildMonths();
  }
  onAfterRendering() {
    if (!this._hidden) {
      this.focus();
    }
  }
  get rowSize() {
    return this.secondaryCalendarType === s$1.Islamic && this.primaryCalendarType !== s$1.Islamic || this.secondaryCalendarType === s$1.Persian && this.primaryCalendarType !== s$1.Persian ? 2 : 3;
  }
  _buildMonths() {
    if (this._hidden) {
      return;
    }
    const localeData = getCachedLocaleDataInstance(s$i());
    const monthsNames = localeData.getMonthsStandAlone("wide", this._primaryCalendarType);
    const months = [];
    const calendarDate = this._calendarDate;
    const minDate = this._minDate;
    const maxDate = this._maxDate;
    let timestamp;
    for (let i3 = 0; i3 < 12; i3++) {
      const tempDate = new CalendarDate$2(calendarDate, this._primaryCalendarType);
      tempDate.setMonth(i3);
      if (tempDate.getMonth() !== i3) {
        tempDate.setMonth(tempDate.getMonth() - 1);
        tempDate.setDate(this._calendarDate.getDate() - tempDate.getDate());
      }
      timestamp = tempDate.valueOf() / 1e3;
      const isSelected = this.selectedDates.some((itemTimestamp) => {
        const date = CalendarDate$2.fromTimestamp(itemTimestamp * 1e3, this._primaryCalendarType);
        return date.getYear() === tempDate.getYear() && date.getMonth() === tempDate.getMonth();
      });
      const isFocused = tempDate.getMonth() === calendarDate.getMonth();
      const isDisabled = this._isOutOfSelectableRange(tempDate, minDate, maxDate);
      const isSelectedBetween = this._isMonthInsideSelectionRange(timestamp);
      const month = {
        timestamp: timestamp.toString(),
        focusRef: isFocused,
        _tabIndex: isFocused ? 0 : -1,
        selected: isSelected || isSelectedBetween,
        ariaSelected: isSelected || isSelectedBetween,
        name: monthsNames[i3],
        nameInSecType: this.hasSecondaryCalendarType && this._getDisplayedSecondaryMonthText(timestamp).text,
        disabled: isDisabled,
        ariaDisabled: isDisabled,
        classes: "ui5-mp-item",
        parts: "month-cell"
      };
      if (isSelected) {
        month.classes += " ui5-mp-item--selected";
        month.parts += " month-cell-selected";
      }
      if (isSelectedBetween) {
        month.classes += " ui5-mp-item--selected-between";
        month.parts += " month-cell-selected-between";
      }
      if (isDisabled) {
        month.classes += " ui5-mp-item--disabled";
      }
      const quarterIndex = Math.floor(i3 / this.rowSize);
      if (months[quarterIndex]) {
        months[quarterIndex].push(month);
      } else {
        months[quarterIndex] = [month];
      }
    }
    this._monthsInterval = months;
  }
  _getDisplayedSecondaryMonthText(timestamp) {
    const monthsName = transformDateToSecondaryType(this._primaryCalendarType, this.secondaryCalendarType, timestamp);
    return convertMonthNumbersToMonthNames(monthsName.firstDate.getMonth(), monthsName.lastDate.getMonth(), this.secondaryCalendarType);
  }
  /**
    * Returns true if month timestamp is inside the selection range.
    * @private
    */
  _isMonthInsideSelectionRange(timestamp) {
    if (this.selectionMode !== CalendarSelectionMode$1.Range || !this.selectedDates.length) {
      return false;
    }
    if (this.selectedDates.length === 1 && this._secondTimestamp) {
      return isBetween$1(timestamp, this.selectedDates[0], this._secondTimestamp);
    }
    return isBetween$1(timestamp, this.selectedDates[0], this.selectedDates[1]);
  }
  _onkeydown(e2) {
    let preventDefault = true;
    if (b$4(e2)) {
      this._selectMonth(e2);
    } else if (A$2(e2)) {
      e2.preventDefault();
    } else if (D$3(e2)) {
      this._modifyTimestampBy(-1);
    } else if (R2(e2)) {
      this._modifyTimestampBy(1);
    } else if (P$1(e2)) {
      this._modifyTimestampBy(-this.rowSize);
    } else if (_(e2)) {
      this._modifyTimestampBy(this.rowSize);
    } else if (j(e2)) {
      this._modifyTimestampBy(-PAGE_SIZE);
    } else if (q(e2)) {
      this._modifyTimestampBy(PAGE_SIZE);
    } else if (M2(e2) || n$a(e2)) {
      this._onHomeOrEnd(M2(e2));
    } else if (G(e2)) {
      this._setTimestamp(parseInt(this._monthsInterval[0][0].timestamp));
    } else if (H$1(e2)) {
      this._setTimestamp(parseInt(this._monthsInterval[PAGE_SIZE / this.rowSize - 1][this.rowSize - 1].timestamp));
    } else {
      preventDefault = false;
    }
    if (preventDefault) {
      e2.preventDefault();
    }
  }
  _onHomeOrEnd(homePressed) {
    this._monthsInterval.forEach((row) => {
      const indexInRow = row.findIndex((item) => CalendarDate$2.fromTimestamp(parseInt(item.timestamp) * 1e3).getMonth() === this._calendarDate.getMonth());
      if (indexInRow !== -1) {
        const index = homePressed ? 0 : this.rowSize - 1;
        this._setTimestamp(parseInt(row[index].timestamp));
      }
    });
  }
  /**
   * Sets the timestamp to an absolute value.
   * @param value
   * @private
   */
  _setTimestamp(value) {
    this._safelySetTimestamp(value);
    this.fireDecoratorEvent("navigate", { timestamp: this.timestamp });
  }
  /**
   * In range selection, the currently focused or hovered month is considered the "second day".
   * @private
   */
  _updateSecondTimestamp() {
    if (this.selectionMode === CalendarSelectionMode$1.Range && (this.selectedDates.length === 1 || this.selectedDates.length === 2)) {
      this._secondTimestamp = this.timestamp;
    }
  }
  /**
   * Set the hovered day as the "_secondTimestamp".
   *
   * @param e
   * @private
   */
  _onmouseover(e2) {
    const target = e2.target;
    const hoveredItem = target.closest(".ui5-mp-item");
    if (hoveredItem && this.selectionMode === CalendarSelectionMode$1.Range && this.selectedDates.length === 1) {
      this._secondTimestamp = this._getTimestampFromDom(hoveredItem);
    }
  }
  /**
   * Modifies timestamp by a given amount of months and,
   * if necessary, loads the prev/next page.
   * @param amount
   * @param preserveDate whether to preserve the day of the month (f.e. 15th of March + 1 month = 15th of April)
   * @private
   */
  _modifyTimestampBy(amount, preserveDate) {
    this._safelyModifyTimestampBy(amount, "month", preserveDate);
    this._updateSecondTimestamp();
    this.fireDecoratorEvent("navigate", { timestamp: this.timestamp });
  }
  _onkeyup(e2) {
    if (A$2(e2)) {
      this._selectMonth(e2);
    }
  }
  /**
   * Selects a month, when user made selection with mouse or using Space/Enter.
   * @param e
   * @private
   */
  _selectMonth(e2) {
    e2.preventDefault();
    const target = e2.target;
    if (!target.classList.contains("ui5-mp-item")) {
      return;
    }
    const timestamp = this._getTimestampFromDom(target);
    this._safelySetTimestamp(timestamp);
    this._updateSecondTimestamp();
    this._updateSelectedDates(timestamp);
    this.fireDecoratorEvent("change", {
      timestamp: this.timestamp,
      dates: this.selectedDates
    });
  }
  _updateSelectedDates(timestamp) {
    if (this.selectionMode === CalendarSelectionMode$1.Range && this.selectedDates.length === 1) {
      this.selectedDates = [this.selectedDates[0], timestamp];
      return;
    }
    this.selectedDates = [timestamp];
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasPreviousPage() {
    return this._calendarDate.getYear() !== this._minDate.getYear();
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasNextPage() {
    return this._calendarDate.getYear() !== this._maxDate.getYear();
  }
  /**
   * Called by Calendar.js.
   *
   * **Note:** when the user presses the "<" button in the calendar header (same as "PageUp")
   * @protected
   */
  _showPreviousPage() {
    this._modifyTimestampBy(-PAGE_SIZE, true);
  }
  /**
   * Called by Calendar.js
   * **Note:** when the user presses the ">" button in the calendar header (same as "PageDown")
   * @protected
   */
  _showNextPage() {
    this._modifyTimestampBy(PAGE_SIZE, true);
  }
  _isOutOfSelectableRange(date, minDate, maxDate) {
    const month = date.getMonth();
    const year = date.getYear();
    const minYear = minDate.getYear();
    const minMonth = minDate.getMonth();
    const maxYear = maxDate.getYear();
    const maxMonth = maxDate.getMonth();
    return year < minYear || year === minYear && month < minMonth || year > maxYear || year === maxYear && month > maxMonth;
  }
};
__decorate$b([
  s$7({ type: Array })
], MonthPicker.prototype, "selectedDates", void 0);
__decorate$b([
  s$7()
], MonthPicker.prototype, "selectionMode", void 0);
__decorate$b([
  s$7({ type: Array })
], MonthPicker.prototype, "_monthsInterval", void 0);
__decorate$b([
  s$7({ type: Boolean, noAttribute: true })
], MonthPicker.prototype, "_hidden", void 0);
__decorate$b([
  s$7({ type: Number })
], MonthPicker.prototype, "_secondTimestamp", void 0);
__decorate$b([
  i$8("@ui5/webcomponents")
], MonthPicker, "i18nBundle", void 0);
MonthPicker = MonthPicker_1 = __decorate$b([
  m$7({
    tag: "ui5-monthpicker",
    template: MonthPickerTemplate,
    styles: monthPickerStyles
  }),
  l$b("change", {
    bubbles: true
  }),
  l$b("navigate", {
    bubbles: true
  })
], MonthPicker);
MonthPicker.define();
const MonthPicker$1 = MonthPicker;
function YearPickerTemplate() {
  return jsx("div", { class: "ui5-yp-root", part: "year-picker-root", role: "grid", "aria-roledescription": this.roleDescription, "aria-readonly": "false", "aria-multiselectable": "false", onMouseOver: this._onmouseover, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, onClick: this._selectYear, children: this._yearsInterval.map((years) => jsx("div", { role: "row", class: "ui5-yp-interval-container", children: years.map((year) => jsxs("div", { "data-sap-timestamp": year.timestamp, tabindex: year._tabIndex, "data-sap-focus-ref": year.focusRef ? "true" : void 0, class: year.classes, part: year.parts, role: "gridcell", "aria-selected": year.ariaSelected, "aria-disabled": year.ariaDisabled, children: [jsx("span", { class: "ui5-dp-yeartext", children: year.year }), year.yearInSecType && jsx("span", { class: "ui5-yp-item-sec-type", children: year.yearInSecType })] })) })) });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const yearPickerStyles = `:host(:not([hidden])){display:block}:host{width:100%;height:100%}.ui5-yp-root{padding:2rem 0 1rem;display:flex;flex-direction:column;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);justify-content:center;align-items:center}.ui5-yp-interval-container{display:flex;justify-content:center;align-items:center;width:100%}.ui5-yp-item{display:flex;margin:var(--_ui5-v2-14-0_yearpicker_item_margin);width:calc(25% - .125rem);height:var(--_ui5-v2-14-0_year_picker_item_height);color:var(--sapButton_Lite_TextColor);background-color:var(--sapButton_Lite_Background);align-items:center;justify-content:center;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;position:relative;border:var(--_ui5-v2-14-0_yearpicker_item_border);border-radius:var(--_ui5-v2-14-0_yearpicker_item_border_radius)}.ui5-yp-item-secondary-type{flex-direction:column;width:calc(50% - .125rem)}.ui5-yp-item-sec-type{font-size:.75rem;color:var(--sapNeutralElementColor)}.ui5-yp-item.ui5-yp-item--selected,.ui5-yp-item.ui5-yp-item--selected-between{background:var(--sapButton_Selected_Background);border:var(--_ui5-v2-14-0_yearpicker_item_selected_border);color:var(--sapButton_Selected_TextColor)}.ui5-yp-item.ui5-yp-item--selected .ui5-yp-item-sec-type,.ui5-yp-item.ui5-yp-item--selected-between .ui5-yp-item-sec-type{color:var(--sapButton_Selected_TextColor)}.ui5-yp-item:hover{background:var(--sapButton_Lite_Hover_Background);border:var(--_ui5-v2-14-0_yearpicker_item_hover_border);color:var(--sapButton_Lite_Hover_TextColor)}.ui5-yp-item.ui5-yp-item--selected:hover,.ui5-yp-item.ui5-yp-item--selected-between:hover{background:var(--sapButton_Selected_Hover_Background);border:var(--_ui5-v2-14-0_yearpicker_item_selected_hover_border);color:var(--sapButton_Selected_TextColor)}.ui5-yp-item.ui5-yp-item--selected:hover .ui5-yp-item-sec-type,.ui5-yp-item.ui5-yp-item--selected-between:hover .ui5-yp-item-sec-type{color:var(--sapButton_Selected_TextColor)}.ui5-yp-item:active,.ui5-yp-item.ui5-yp-item--selected:active,.ui5-yp-item.ui5-yp-item--selected-between:active{background:var(--sapButton_Active_Background);border:var(--_ui5-v2-14-0_monthpicker_item_active_border);color:var(--sapButton_Active_TextColor)}.ui5-yp-item:active .ui5-yp-item-sec-type,.ui5-yp-item.ui5-yp-item--selected:active .ui5-yp-item-sec-type,.ui5-yp-item.ui5-yp-item--selected-between:active .ui5-yp-item-sec-type{color:var(--sapButton_Active_TextColor)}.ui5-yp-item.ui5-yp-item--disabled{pointer-events:none;opacity:.5}.ui5-yp-item:focus:after{content:"";position:absolute;inset:.0625rem;border:var(--_ui5-v2-14-0_button_focused_border);border-radius:var(--_ui5-v2-14-0_button_focused_border_radius)}
`;
var __decorate$a = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var YearPicker_1;
const isBetween = (x2, num1, num2) => x2 > Math.min(num1, num2) && x2 < Math.max(num1, num2);
let YearPicker = YearPicker_1 = class YearPicker2 extends CalendarPart$1 {
  constructor() {
    super(...arguments);
    this.selectedDates = [];
    this.selectionMode = "Single";
    this._yearsInterval = [];
    this._hidden = false;
  }
  get roleDescription() {
    return YearPicker_1.i18nBundle.getText(YEAR_PICKER_DESCRIPTION);
  }
  onBeforeRendering() {
    if (this._hidden) {
      return;
    }
    this._firstYear = this._currentYearRange?.startYear ? this._currentYearRange?.startYear : this._calendarDate.getYear();
    this._buildYears();
  }
  _getPageSize() {
    return this.hasSecondaryCalendarType ? 8 : 20;
  }
  _getRowSize() {
    return this.hasSecondaryCalendarType ? 2 : 4;
  }
  _buildYears() {
    const pageSize = this._getPageSize();
    const locale = s$i();
    const oYearFormat = DateFormat.getDateInstance({ format: "y", calendarType: this._primaryCalendarType }, locale);
    const oYearFormatInSecType = DateFormat.getDateInstance({ format: "y", calendarType: this.secondaryCalendarType }, locale);
    const calendarDate = this._calendarDate;
    const minDate = this._minDate;
    const maxDate = this._maxDate;
    const tempDate = new CalendarDate$2(calendarDate, this._primaryCalendarType);
    let tempDateInSecType;
    let textInSecType;
    tempDate.setYear(this._firstYear);
    const intervals = [];
    let timestamp;
    for (let i3 = 0; i3 < pageSize; i3++) {
      timestamp = tempDate.valueOf() / 1e3;
      const isSelected = this.selectedDates.some((itemTimestamp) => {
        const date = CalendarDate$2.fromTimestamp(itemTimestamp * 1e3, this._primaryCalendarType);
        return date.getYear() === tempDate.getYear();
      });
      const isFocused = tempDate.getYear() === calendarDate.getYear();
      const isDisabled = tempDate.getYear() < minDate.getYear() || tempDate.getYear() > maxDate.getYear();
      const isSelectedBetween = this._isYearInsideSelectionRange(timestamp);
      if (this.hasSecondaryCalendarType) {
        tempDateInSecType = transformDateToSecondaryType(this._primaryCalendarType, this.secondaryCalendarType, timestamp, true);
        textInSecType = tempDateInSecType.firstDate.getYear() === tempDateInSecType.lastDate.getYear() ? `${oYearFormatInSecType.format(tempDateInSecType.firstDate.toLocalJSDate())}` : `${oYearFormatInSecType.format(tempDateInSecType.firstDate.toLocalJSDate())} - ${oYearFormatInSecType.format(tempDateInSecType.lastDate.toLocalJSDate())}`;
      }
      const year = {
        timestamp: timestamp.toString(),
        _tabIndex: isFocused ? 0 : -1,
        focusRef: isFocused,
        selected: isSelected || isSelectedBetween,
        ariaSelected: isSelected || isSelectedBetween,
        year: oYearFormat.format(tempDate.toLocalJSDate()),
        yearInSecType: textInSecType,
        disabled: isDisabled,
        ariaDisabled: isDisabled,
        classes: "ui5-yp-item",
        parts: "year-cell"
      };
      if (isSelected) {
        year.classes += " ui5-yp-item--selected";
        year.parts += " year-cell-selected";
      }
      if (isSelectedBetween) {
        year.classes += " ui5-yp-item--selected-between";
        year.parts += " year-cell-selected-between";
      }
      if (isDisabled) {
        year.classes += " ui5-yp-item--disabled";
      }
      if (this.hasSecondaryCalendarType) {
        year.classes += " ui5-yp-item-secondary-type";
      }
      const intervalIndex = Math.floor(i3 / this._getRowSize());
      if (intervals[intervalIndex]) {
        intervals[intervalIndex].push(year);
      } else {
        intervals[intervalIndex] = [year];
      }
      tempDate.setYear(tempDate.getYear() + 1);
    }
    this._yearsInterval = intervals;
  }
  onAfterRendering() {
    if (!this._hidden) {
      this.focus();
    }
  }
  /**
    * Returns true if year timestamp is inside the selection range.
    * @private
    */
  _isYearInsideSelectionRange(timestamp) {
    if (this.selectionMode !== CalendarSelectionMode$1.Range || !this.selectedDates.length) {
      return false;
    }
    if (this.selectedDates.length === 1 && this._secondTimestamp) {
      return isBetween(timestamp, this.selectedDates[0], this._secondTimestamp);
    }
    return isBetween(timestamp, this.selectedDates[0], this.selectedDates[1]);
  }
  _onkeydown(e2) {
    let preventDefault = true;
    const pageSize = this._getPageSize();
    const rowSize = this._getRowSize();
    if (b$4(e2)) {
      this._selectYear(e2);
    } else if (A$2(e2)) {
      e2.preventDefault();
    } else if (D$3(e2)) {
      this._modifyTimestampBy(-1);
    } else if (R2(e2)) {
      this._modifyTimestampBy(1);
    } else if (P$1(e2)) {
      this._modifyTimestampBy(-rowSize);
    } else if (_(e2)) {
      this._modifyTimestampBy(rowSize);
    } else if (j(e2)) {
      this._modifyTimestampBy(-pageSize);
    } else if (q(e2)) {
      this._modifyTimestampBy(pageSize);
    } else if (M2(e2) || n$a(e2)) {
      this._onHomeOrEnd(M2(e2));
    } else if (G(e2)) {
      this._setTimestamp(parseInt(this._yearsInterval[0][0].timestamp));
    } else if (H$1(e2)) {
      this._setTimestamp(parseInt(this._yearsInterval[pageSize / rowSize - 1][rowSize - 1].timestamp));
    } else {
      preventDefault = false;
    }
    if (preventDefault) {
      e2.preventDefault();
    }
  }
  _onHomeOrEnd(homePressed) {
    this._yearsInterval.forEach((row) => {
      const indexInRow = row.findIndex((item) => CalendarDate$2.fromTimestamp(parseInt(item.timestamp) * 1e3).getYear() === this._calendarDate.getYear());
      if (indexInRow !== -1) {
        const index = homePressed ? 0 : this._getRowSize() - 1;
        this._setTimestamp(parseInt(row[index].timestamp));
      }
    });
  }
  /**
   * In range selection, the currently focused or hovered year is considered the "second day".
   * @private
   */
  _updateSecondTimestamp() {
    if (this.selectionMode === CalendarSelectionMode$1.Range && (this.selectedDates.length === 1 || this.selectedDates.length === 2)) {
      this._secondTimestamp = this.timestamp;
    }
  }
  /**
   * Set the hovered day as the "_secondTimestamp".
   *
   * @param e
   * @private
   */
  _onmouseover(e2) {
    const target = e2.target;
    const hoveredItem = target.closest(".ui5-yp-item");
    if (hoveredItem && this.selectionMode === CalendarSelectionMode$1.Range && this.selectedDates.length === 1) {
      this._secondTimestamp = this._getTimestampFromDom(hoveredItem);
    }
  }
  /**
   * Sets the timestamp to an absolute value.
   * @param value
   * @private
   */
  _setTimestamp(value) {
    this._safelySetTimestamp(value);
    this.fireDecoratorEvent("navigate", { timestamp: this.timestamp });
  }
  /**
   * Modifies timestamp by a given amount of years and, if necessary, loads the prev/next page.
   * @param amount
   * @private
   */
  _modifyTimestampBy(amount) {
    this._safelyModifyTimestampBy(amount, "year");
    this._updateSecondTimestamp();
    this.fireDecoratorEvent("navigate", { timestamp: this.timestamp });
  }
  _onkeyup(e2) {
    if (A$2(e2)) {
      this._selectYear(e2);
    }
  }
  /**
   * User clicked with the mouser or pressed Enter/Space
   * @param e
   * @private
   */
  _selectYear(e2) {
    e2.preventDefault();
    const target = e2.target;
    if (target.className.indexOf("ui5-yp-item") === -1) {
      return;
    }
    const timestamp = this._getTimestampFromDom(target);
    this._safelySetTimestamp(timestamp);
    this._updateSecondTimestamp();
    this._updateSelectedDates(timestamp);
    this.fireDecoratorEvent("change", {
      timestamp: this.timestamp,
      dates: this.selectedDates
    });
  }
  _updateSelectedDates(timestamp) {
    if (this.selectionMode === CalendarSelectionMode$1.Range && this.selectedDates.length === 1) {
      this.selectedDates = [this.selectedDates[0], timestamp];
      return;
    }
    this.selectedDates = [timestamp];
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasPreviousPage() {
    return this._firstYear > this._minDate.getYear();
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasNextPage() {
    return this._firstYear + this._getPageSize() - 1 < this._maxDate.getYear();
  }
  /**
   * Called by the Calendar component.
   * **Note:** when the user presses the "<" button in the calendar header (same as "PageUp")
   * @protected
   */
  _showPreviousPage() {
    const pageSize = this._getPageSize();
    this._modifyTimestampBy(-pageSize);
  }
  /**
   * Called by the Calendar component.
   * **Note:** when the user presses the ">" button in the calendar header (same as "PageDown")
   * @protected
   */
  _showNextPage() {
    this._modifyTimestampBy(this._getPageSize());
  }
};
__decorate$a([
  s$7({ type: Array })
], YearPicker.prototype, "selectedDates", void 0);
__decorate$a([
  s$7()
], YearPicker.prototype, "selectionMode", void 0);
__decorate$a([
  s$7({ type: Array })
], YearPicker.prototype, "_yearsInterval", void 0);
__decorate$a([
  s$7({ type: Boolean, noAttribute: true })
], YearPicker.prototype, "_hidden", void 0);
__decorate$a([
  s$7({ type: Number })
], YearPicker.prototype, "_secondTimestamp", void 0);
__decorate$a([
  s$7({ noAttribute: true })
], YearPicker.prototype, "_currentYearRange", void 0);
__decorate$a([
  i$8("@ui5/webcomponents")
], YearPicker, "i18nBundle", void 0);
YearPicker = YearPicker_1 = __decorate$a([
  m$7({
    tag: "ui5-yearpicker",
    styles: yearPickerStyles,
    template: YearPickerTemplate
  }),
  l$b("change", {
    bubbles: true
  }),
  l$b("navigate", {
    bubbles: true
  })
], YearPicker);
YearPicker.define();
const YearPicker$1 = YearPicker;
function YearRangePickerTemplate() {
  return jsx("div", { class: "ui5-yrp-root", part: "year-range-picker-root", role: "grid", "aria-roledescription": this.roleDescription, "aria-readonly": "false", "aria-multiselectable": "false", onClick: this._selectYearRange, onMouseOver: this._onmouseover, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, children: this._yearRanges.map((rangeRow) => jsx("div", { role: "row", class: "ui5-yrp-interval-container", children: rangeRow.map((yearRange) => jsxs("div", { "data-sap-timestamp": yearRange.timestamp, tabindex: yearRange._tabIndex, "data-sap-focus-ref": yearRange.focusRef ? "true" : void 0, class: yearRange.classes, part: yearRange.parts, role: "gridcell", "aria-selected": yearRange.ariaSelected, "aria-disabled": yearRange.ariaDisabled, children: [jsx("span", { class: "ui5-dp-yeartext", children: yearRange.range }), yearRange.rangeInSecType && jsx("span", { class: "ui5-yrp-item-sec-type", children: yearRange.rangeInSecType })] })) })) });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const yearRangePickerStyles = `:host(:not([hidden])){display:block}:host{width:100%;height:100%}.ui5-yrp-root{padding:2rem 0 1rem;display:flex;flex-direction:column;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);justify-content:center;align-items:center}.ui5-yrp-interval-container{display:flex;justify-content:space-evenly;align-items:center;width:100%}.ui5-yrp-item{display:flex;margin:var(--_ui5-v2-14-0_yearpicker_item_margin);width:calc(50% - .125rem);height:var(--_ui5-v2-14-0_year_picker_item_height);color:var(--sapButton_Lite_TextColor);background-color:var(--sapButton_Lite_Background);align-items:center;justify-content:center;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;outline:none;position:relative;border:var(--_ui5-v2-14-0_yearpicker_item_border);border-radius:var(--_ui5-v2-14-0_yearpicker_item_border_radius)}.ui5-yrp-item-secondary-type{flex-direction:column;width:calc(50% - .125rem)}.ui5-yrp-item-sec-type{font-size:.75rem;color:var(--sapNeutralElementColor)}.ui5-yrp-item-one-column-view{width:initial;padding-left:.5rem;padding-right:.5rem}.ui5-yrp-item.ui5-yrp-item--selected,.ui5-yrp-item.ui5-yrp-item--selected-between{background:var(--sapButton_Selected_Background);border:var(--_ui5-v2-14-0_yearpicker_item_selected_border);color:var(--sapButton_Selected_TextColor)}.ui5-yrp-item.ui5-yrp-item--selected .ui5-yrp-item-sec-type,.ui5-yrp-item.ui5-yrp-item--selected-between .ui5-yrp-item-sec-type{color:var(--sapButton_Selected_TextColor)}.ui5-yrp-item:hover{background:var(--sapButton_Lite_Hover_Background);border:var(--_ui5-v2-14-0_yearpicker_item_hover_border);color:var(--sapButton_Lite_Hover_TextColor)}.ui5-yrp-item.ui5-yrp-item--selected:hover,.ui5-yrp-item.ui5-yrp-item--selected-between:hover{background:var(--sapButton_Selected_Hover_Background);border:var(--_ui5-v2-14-0_yearpicker_item_selected_hover_border);color:var(--sapButton_Selected_TextColor)}.ui5-yrp-item.ui5-yrp-item--selected:hover .ui5-yrp-item-sec-type,.ui5-yrp-item.ui5-yrp-item--selected-between:hover .ui5-yrp-item-sec-type{color:var(--sapButton_Selected_TextColor)}.ui5-yrp-item:active,.ui5-yrp-item.ui5-yrp-item--selected:active,.ui5-yrp-item.ui5-yrp-item--selected-between:active{background:var(--sapButton_Active_Background);border:var(--_ui5-v2-14-0_monthpicker_item_active_border);color:var(--sapButton_Active_TextColor)}.ui5-yrp-item:active .ui5-yrp-item-sec-type,.ui5-yrp-item.ui5-yrp-item--selected:active .ui5-yrp-item-sec-type,.ui5-yrp-item.ui5-yrp-item--selected-between:active .ui5-yrp-item-sec-type{color:var(--sapButton_Active_TextColor)}.ui5-yrp-item.ui5-yrp-item--disabled{pointer-events:none;opacity:.5}.ui5-yrp-item:focus:after{content:"";position:absolute;inset:.0625rem;border:var(--_ui5-v2-14-0_button_focused_border);border-radius:var(--_ui5-v2-14-0_button_focused_border_radius)}
`;
var __decorate$9 = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var YearRangePicker_1;
const isBetweenInclusive = (x2, num1, num2) => x2 >= Math.min(num1, num2) && x2 <= Math.max(num1, num2);
let YearRangePicker = YearRangePicker_1 = class YearRangePicker2 extends CalendarPart$1 {
  constructor() {
    super(...arguments);
    this.selectedDates = [];
    this._showRangeSelection = false;
    this._yearRanges = [];
    this._hidden = false;
  }
  get roleDescription() {
    return YearRangePicker_1.i18nBundle.getText(YEAR_RANGE_PICKER_DESCRIPTION);
  }
  onBeforeRendering() {
    if (this._hidden) {
      return;
    }
    this._gridStartYear = this._getGridStartYear();
    this._yearRanges = this._getYearRanges();
  }
  _shouldShowOneColumn() {
    const locale = s$i();
    const language = locale.getLanguage();
    const longLanguages = ["zh", "ja", "ko", "bg", "mk", "ru"];
    return longLanguages.includes(language) && this.hasSecondaryCalendarType;
  }
  _getPageSize() {
    return this._shouldShowOneColumn() ? 6 : 8;
  }
  _getRowSize() {
    return this._shouldShowOneColumn() ? 1 : 2;
  }
  _getInitialFocusedIndex() {
    return 2;
  }
  _getRangeSize() {
    return this.hasSecondaryCalendarType ? 8 : 20;
  }
  _getYearRangeFormattedText(startDate, endDate, yearFormat) {
    return `${yearFormat.format(startDate.toLocalJSDate())} - ${yearFormat.format(endDate.toLocalJSDate())}`;
  }
  _getGridStartYear() {
    const rangeSize = this._getRangeSize();
    const pageSize = this._getPageSize();
    const pageSizeInYears = rangeSize * pageSize;
    const yearsOffset = rangeSize * this._getInitialFocusedIndex();
    const currentStartYear = this._currentYearRange?.startYear ? this._currentYearRange?.startYear : this._calendarDate.getYear();
    let gridStartYear = this._gridStartYear ? this._gridStartYear : currentStartYear - yearsOffset;
    gridStartYear += Math.floor((currentStartYear - gridStartYear) / pageSizeInYears) * pageSizeInYears;
    const minYear = this._minDate.getYear();
    if (currentStartYear - rangeSize < minYear) {
      gridStartYear = minYear;
    }
    const absoluteMaxYear = getMaxCalendarDate(this._primaryCalendarType).getYear();
    if (currentStartYear + pageSizeInYears > absoluteMaxYear) {
      gridStartYear = absoluteMaxYear - pageSizeInYears + 1;
    }
    return gridStartYear;
  }
  _getYearRanges() {
    const locale = s$i();
    const yearFormat = DateFormat.getDateInstance({ format: "y", calendarType: this._primaryCalendarType }, locale);
    const yearFormatInSecType = DateFormat.getDateInstance({ format: "y", calendarType: this._secondaryCalendarType }, locale);
    const pageSize = this._getPageSize();
    const rowSize = this._getRowSize();
    const rangeSize = this._getRangeSize();
    const calendarDate = this._calendarDate;
    const minYear = this._minDate.getYear();
    const maxYear = this._maxDate.getYear();
    const tempDate = new CalendarDate$2(calendarDate, this._primaryCalendarType);
    tempDate.setYear(this._gridStartYear);
    const yearRanges = [];
    for (let i3 = 0; i3 < pageSize; i3++) {
      const endDate = new CalendarDate$2(tempDate, this._primaryCalendarType);
      endDate.setYear(endDate.getYear() + rangeSize - 1);
      const timestamp = tempDate.valueOf() / 1e3;
      const endTimestamp = endDate.valueOf() / 1e3;
      const isFocused = isBetweenInclusive(calendarDate.getYear(), tempDate.getYear(), endDate.getYear());
      const isSelected = this._isYearRangeSelected(timestamp, endTimestamp);
      const isSelectedBetween = this._isInsideSelectionRange(timestamp);
      const yearRangeText = this._getYearRangeFormattedText(tempDate, endDate, yearFormat);
      const secYearRangeText = this.hasSecondaryCalendarType ? this._getYearRangeFormattedText(tempDate, endDate, yearFormatInSecType) : void 0;
      const isDisabled = !(isBetweenInclusive(tempDate.getYear(), minYear, maxYear) || isBetweenInclusive(endDate.getYear(), minYear, maxYear));
      const yearRange = this._getYearRange(timestamp, isFocused, isSelected, isSelectedBetween, yearRangeText, secYearRangeText, isDisabled);
      const intervalIndex = Math.floor(i3 / rowSize);
      if (yearRanges[intervalIndex]) {
        yearRanges[intervalIndex].push(yearRange);
      } else {
        yearRanges[intervalIndex] = [yearRange];
      }
      tempDate.setYear(tempDate.getYear() + rangeSize);
    }
    return yearRanges;
  }
  _getYearRange(timestamp, isFocused, isSelected, isSelectedBetween, yearRangeText, secYearRangeText, isDisabled) {
    const yearRange = {
      timestamp: timestamp.toString(),
      _tabIndex: isFocused ? 0 : -1,
      focusRef: isFocused,
      selected: isSelected || isSelectedBetween,
      ariaSelected: isSelected || isSelectedBetween,
      range: yearRangeText,
      rangeInSecType: secYearRangeText,
      disabled: isDisabled,
      ariaDisabled: isDisabled,
      classes: "ui5-yrp-item",
      parts: "year-range-cell"
    };
    if (isSelected) {
      yearRange.classes += " ui5-yrp-item--selected";
      yearRange.parts += " year-range-cell-selected";
    }
    if (isSelectedBetween && !isSelected) {
      yearRange.classes += " ui5-yrp-item--selected-between";
      yearRange.parts += " year-range-cell-selected-between";
    }
    if (isDisabled) {
      yearRange.classes += " ui5-yrp-item--disabled";
    }
    if (this.hasSecondaryCalendarType) {
      yearRange.classes += " ui5-yrp-item-secondary-type";
    }
    if (this._shouldShowOneColumn()) {
      yearRange.classes += " ui5-yrp-item-one-column-view";
    }
    return yearRange;
  }
  _isYearRangeSelected(startYear, endYear) {
    return this.selectedDates.some((itemTimestamp) => {
      return isBetweenInclusive(itemTimestamp, startYear, endYear);
    });
  }
  /**
    * Returns true if the timestamp is inside the selection range.
    * @private
    */
  _isInsideSelectionRange(timestamp) {
    if (!this._showRangeSelection || !this.selectedDates.length) {
      return false;
    }
    if (this.selectedDates.length === 1 && this._secondTimestamp) {
      return isBetweenInclusive(timestamp, this.selectedDates[0], this._secondTimestamp);
    }
    return isBetweenInclusive(timestamp, this.selectedDates[0], this.selectedDates[1]);
  }
  onAfterRendering() {
    if (!this._hidden) {
      this.focus();
    }
  }
  _onkeydown(e2) {
    let preventDefault = true;
    const pageSize = this._getPageSize();
    const rowSize = this._getRowSize();
    if (b$4(e2)) {
      this._selectYearRange(e2);
    } else if (A$2(e2)) {
      e2.preventDefault();
    } else if (D$3(e2)) {
      this._modifyTimestampBy(-1);
    } else if (R2(e2)) {
      this._modifyTimestampBy(1);
    } else if (P$1(e2)) {
      this._modifyTimestampBy(-rowSize);
    } else if (_(e2)) {
      this._modifyTimestampBy(rowSize);
    } else if (j(e2)) {
      this._modifyTimestampBy(-pageSize);
    } else if (q(e2)) {
      this._modifyTimestampBy(pageSize);
    } else if (M2(e2) || n$a(e2)) {
      this._onHomeOrEnd(M2(e2));
    } else if (G(e2)) {
      this._setTimestamp(parseInt(this._yearRanges[0][0].timestamp));
    } else if (H$1(e2)) {
      this._setTimestamp(parseInt(this._yearRanges[pageSize / rowSize - 1][rowSize - 1].timestamp));
    } else {
      preventDefault = false;
    }
    if (preventDefault) {
      e2.preventDefault();
    }
  }
  _onkeyup(e2) {
    if (A$2(e2)) {
      this._selectYearRange(e2);
    }
  }
  _onHomeOrEnd(homePressed) {
    this._yearRanges.forEach((row) => {
      const indexInRow = row.findIndex((item) => {
        const startYear = CalendarDate$2.fromTimestamp(parseInt(item.timestamp) * 1e3).getYear();
        const currentYear = this._calendarDate.getYear();
        return isBetweenInclusive(startYear, currentYear, currentYear + this._getRangeSize() - 1);
      });
      if (indexInRow !== -1) {
        const index = homePressed ? 0 : this._getRowSize() - 1;
        this._setTimestamp(parseInt(row[index].timestamp));
      }
    });
  }
  /**
   * Set the hovered day as the "_secondTimestamp".
   *
   * @param e
   * @private
   */
  _onmouseover(e2) {
    const target = e2.target;
    const hoveredItem = target.closest(".ui5-yrp-item");
    if (hoveredItem && this._showRangeSelection && this.selectedDates.length === 1) {
      this._secondTimestamp = this._getTimestampFromDom(hoveredItem);
    }
  }
  /**
   * Sets the timestamp to an absolute value.
   * @param value
   * @private
   */
  _setTimestamp(value) {
    this._safelySetTimestamp(value);
    this.fireDecoratorEvent("navigate", { timestamp: this.timestamp });
  }
  /**
   * In range selection, the currently focused or hovered year range is considered the "second timestamp".
   * @private
   */
  _updateSecondTimestamp() {
    if (this._showRangeSelection && (this.selectedDates.length === 1 || this.selectedDates.length === 2)) {
      this._secondTimestamp = this.timestamp;
    }
  }
  /**
   * User selected range with the mouse or pressed Enter/Space.
   * @param e
   * @private
   */
  _selectYearRange(e2) {
    e2.preventDefault();
    const target = e2.target;
    if (target.className.indexOf("ui5-yrp-item") === -1) {
      return;
    }
    let timestamp = this._getTimestampFromDom(target);
    timestamp = this._getYearPickerCenteredTimestamp(timestamp);
    this._safelySetTimestamp(timestamp);
    this.fireDecoratorEvent("change", {
      timestamp: this.timestamp
    });
  }
  /**
   * Returns the centered timestamp for the year picker.
   * @private
   */
  _getYearPickerCenteredTimestamp(oldTimestamp) {
    const yearsOffset = this.hasSecondaryCalendarType ? 2 : 9;
    const selectedDate = CalendarDate$2.fromTimestamp(oldTimestamp * 1e3, this._primaryCalendarType);
    const startYear = selectedDate.getYear();
    const centeredYear = startYear + yearsOffset;
    selectedDate.setYear(centeredYear);
    return selectedDate.valueOf() / 1e3;
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasPreviousPage() {
    return this._gridStartYear > this._minDate.getYear();
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasNextPage() {
    const amountInYears = this._getPageSize() * this._getRangeSize();
    return this._gridStartYear + amountInYears - 1 < this._maxDate.getYear();
  }
  /**
   * Called by the Calendar component.
   * **Note:** when the user presses the "<" button in the calendar header (same as "PageUp")
   * @protected
   */
  _showPreviousPage() {
    const pageSize = this._getPageSize();
    this._modifyTimestampBy(-pageSize);
    const amountInYears = pageSize * this._getRangeSize();
    this._modifyGridStartBy(-amountInYears);
  }
  /**
   * Called by the Calendar component.
   * **Note:** when the user presses the ">" button in the calendar header (same as "PageDown")
   * @protected
   */
  _showNextPage() {
    const pageSize = this._getPageSize();
    this._modifyTimestampBy(pageSize);
    const amountInYears = pageSize * this._getRangeSize();
    this._modifyGridStartBy(amountInYears);
  }
  /**
   * Modifies timestamp by a given amount of year ranges and, if necessary, loads the prev/next page.
   * @param amount
   * @private
   */
  _modifyTimestampBy(amount) {
    const amountInYears = amount * this._getRangeSize();
    this._safelyModifyTimestampBy(amountInYears, "year");
    this.fireDecoratorEvent("navigate", { timestamp: this.timestamp });
  }
  _modifyGridStartBy(years) {
    this._gridStartYear += years;
  }
};
__decorate$9([
  s$7({ type: Array })
], YearRangePicker.prototype, "selectedDates", void 0);
__decorate$9([
  s$7({ type: Boolean, noAttribute: true })
], YearRangePicker.prototype, "_showRangeSelection", void 0);
__decorate$9([
  s$7({ type: Number })
], YearRangePicker.prototype, "_secondTimestamp", void 0);
__decorate$9([
  s$7({ type: Array })
], YearRangePicker.prototype, "_yearRanges", void 0);
__decorate$9([
  s$7({ type: Boolean, noAttribute: true })
], YearRangePicker.prototype, "_hidden", void 0);
__decorate$9([
  s$7({ noAttribute: true })
], YearRangePicker.prototype, "_currentYearRange", void 0);
__decorate$9([
  i$8("@ui5/webcomponents")
], YearRangePicker, "i18nBundle", void 0);
YearRangePicker = YearRangePicker_1 = __decorate$9([
  m$7({
    tag: "ui5-yearrangepicker",
    styles: [
      yearRangePickerStyles
    ],
    template: YearRangePickerTemplate
  }),
  l$b("change", {
    bubbles: true
  }),
  l$b("navigate", {
    bubbles: true
  })
], YearRangePicker);
YearRangePicker.define();
const YearRangePicker$1 = YearRangePicker;
function CalendarTemplate$1() {
  return jsxs("div", { class: "ui5-calheader-root", children: [jsx("div", { "data-ui5-cal-header-btn-prev": true, class: {
    "ui5-calheader-arrowbtn": true,
    "ui5-calheader-arrowbtn-disabled": this._previousButtonDisabled
  }, part: "calendar-header-arrow-button", role: "button", onMouseDown: this.onPrevButtonClick, title: this.headerPreviousButtonText, children: jsx(Icon$2, { class: "ui5-calheader-arrowicon", name: iconSlimArrowLeft }) }), jsxs("div", { class: "ui5-calheader-midcontainer", children: [jsxs("div", { "data-ui5-cal-header-btn-month": true, class: "ui5-calheader-arrowbtn ui5-calheader-middlebtn", part: "calendar-header-middle-button", hidden: this._isHeaderMonthButtonHidden, tabindex: 0, role: "button", "aria-label": this.accInfo.ariaLabelMonthButton, onClick: this.onHeaderShowMonthPress, onKeyDown: this.onMonthButtonKeyDown, onKeyUp: this.onMonthButtonKeyUp, children: [jsx("span", { children: this._headerMonthButtonText }), this.hasSecondaryCalendarType && jsx("span", { class: "ui5-calheader-btn-sectext", children: this.secondMonthButtonText })] }), jsxs("div", { "data-ui5-cal-header-btn-year": true, class: "ui5-calheader-arrowbtn ui5-calheader-middlebtn", part: "calendar-header-middle-button", hidden: this._isHeaderYearButtonHidden, tabindex: 0, role: "button", onClick: this.onHeaderShowYearPress, onKeyDown: this.onYearButtonKeyDown, onKeyUp: this.onYearButtonKeyUp, children: [jsx("span", { children: this._headerYearButtonText }), this.hasSecondaryCalendarType && jsx("span", { class: "ui5-calheader-btn-sectext", children: this._headerYearButtonTextSecType })] }), jsxs("div", { "data-ui5-cal-header-btn-year-range": true, class: "ui5-calheader-arrowbtn ui5-calheader-middlebtn", part: "calendar-header-middle-button", hidden: this._isHeaderYearRangeButtonHidden, tabindex: 0, role: "button", onClick: this.onHeaderShowYearRangePress, onKeyDown: this.onYearRangeButtonKeyDown, onKeyUp: this.onYearRangeButtonKeyUp, children: [jsx("span", { children: this._headerYearRangeButtonText }), this.hasSecondaryCalendarType && jsx("span", { class: "ui5-calheader-btn-sectext", children: this._headerYearRangeButtonTextSecType })] })] }), jsx("div", { "data-ui5-cal-header-btn-next": true, class: {
    "ui5-calheader-arrowbtn": true,
    "ui5-calheader-arrowbtn-disabled": this._nextButtonDisabled
  }, part: "calendar-header-arrow-button", role: "button", onMouseDown: this.onNextButtonClick, title: this.headerNextButtonText, children: jsx(Icon$2, { class: "ui5-calheader-arrowicon", name: iconArrowRight }) })] });
}
function CalendarTemplate() {
  return jsxs(Fragment, { children: [jsxs("div", { class: "ui5-cal-root", onKeyDown: this._onkeydown, children: [jsxs("div", { id: `${this._id}-content`, class: "ui5-cal-content", children: [jsx(DayPicker$1, { id: `${this._id}-daypicker`, hidden: this._isDayPickerHidden, formatPattern: this._formatPattern, selectedDates: this._selectedDatesTimestamps, specialCalendarDates: this._specialCalendarDates, _hidden: this._isDayPickerHidden, primaryCalendarType: this._primaryCalendarType, secondaryCalendarType: this._secondaryCalendarType, selectionMode: this.selectionMode, minDate: this.minDate, maxDate: this.maxDate, calendarWeekNumbering: this.calendarWeekNumbering, timestamp: this._timestamp, hideWeekNumbers: this.hideWeekNumbers, onChange: this.onSelectedDatesChange, onNavigate: this.onNavigate, exportparts: "day-cell, day-cell-selected, day-cell-selected-between" }), jsx(MonthPicker$1, { id: `${this._id}-MP`, hidden: this._isMonthPickerHidden, formatPattern: this._formatPattern, selectedDates: this._selectedDatesTimestamps, _hidden: this._isMonthPickerHidden, primaryCalendarType: this._primaryCalendarType, secondaryCalendarType: this._secondaryCalendarType, selectionMode: this.selectionMode, minDate: this.minDate, maxDate: this.maxDate, timestamp: this._timestamp, onChange: this.onSelectedMonthChange, onNavigate: this.onNavigate, exportparts: "month-cell, month-cell-selected, month-cell-selected-between, month-picker-root" }), jsx(YearPicker$1, { id: `${this._id}-YP`, hidden: this._isYearPickerHidden, formatPattern: this._formatPattern, selectedDates: this._selectedDatesTimestamps, _hidden: this._isYearPickerHidden, primaryCalendarType: this._primaryCalendarType, secondaryCalendarType: this._secondaryCalendarType, selectionMode: this.selectionMode, minDate: this.minDate, maxDate: this.maxDate, timestamp: this._timestamp, _currentYearRange: this._currentYearRange, onChange: this.onSelectedYearChange, onNavigate: this.onNavigate, exportparts: "year-cell, year-cell-selected, year-cell-selected-between, year-picker-root" }), jsx(YearRangePicker$1, { id: `${this._id}-YRP`, hidden: this._isYearRangePickerHidden, formatPattern: this._formatPattern, selectedDates: this._selectedDatesTimestamps, _showRangeSelection: this.selectionMode === CalendarSelectionMode$1.Range, _hidden: this._isYearRangePickerHidden, primaryCalendarType: this._primaryCalendarType, secondaryCalendarType: this._secondaryCalendarType, minDate: this.minDate, maxDate: this.maxDate, timestamp: this._timestamp, _currentYearRange: this._currentYearRange, onChange: this.onSelectedYearRangeChange, onNavigate: this.onNavigate, exportparts: "year-range-cell, year-range-cell-selected, year-range-cell-selected-between, year-range-picker-root" })] }), jsx("div", { class: "ui5-calheader", exportparts: "calendar-header-arrow-button, calendar-header-middle-button", children: CalendarTemplate$1.call(this) })] }), jsx("div", { "onui5-calendar-legend-selection-change": this._onCalendarLegendSelectionChange, "onui5-calendar-legend-focus-out": this._onLegendFocusOut, children: jsx("slot", { name: "calendarLegend" }) })] });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const calendarCSS = `:host(:not([hidden])){display:inline-block}.ui5-cal-root .ui5-calheader{display:block;height:var(--_ui5-v2-14-0_calendar_header_height);font-family:var(--_ui5-v2-14-0_button_fontFamily)}.ui5-cal-root{background:var(--sapList_Background);box-sizing:border-box;height:var(--_ui5-v2-14-0_calendar_height);width:var(--_ui5-v2-14-0_calendar_width);padding:var(--_ui5-v2-14-0_calendar_top_bottom_padding) var(--_ui5-v2-14-0_calendar_left_right_padding) 0;display:flex;flex-direction:column-reverse;justify-content:flex-end;overflow:hidden}.ui5-cal-root .ui5-cal-content{padding:0 var(--_ui5-v2-14-0_calendar_left_right_padding) var(--_ui5-v2-14-0_calendar_top_bottom_padding)}
`;
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const CalendarHeaderCss = `:host{display:block;width:100%;height:100%}.ui5-calheader-root{display:flex;height:100%;padding:var(--_ui5-v2-14-0_calendar_header_padding);box-sizing:border-box}.ui5-calheader-arrowbtn{display:flex;justify-content:center;align-items:center;width:var(--_ui5-v2-14-0_calendar_header_arrow_button_width);background-color:var(--sapButton_Lite_Background);color:var(--sapButton_Lite_TextColor);cursor:pointer;overflow:hidden;white-space:nowrap;padding:0;font-size:var(--sapFontSize);user-select:none}.ui5-calheader-arrowbtn.ui5-calheader-arrowbtn-disabled:hover,.ui5-calheader-arrowbtn.ui5-calheader-arrowbtn-disabled:active,.ui5-calheader-arrowbtn.ui5-calheader-arrowbtn-disabled:focus,.ui5-calheader-arrowbtn.ui5-calheader-arrowbtn-disabled{opacity:.4;cursor:default;outline:none;background-color:var(--sapButton_Lite_Background);color:var(--sapButton_Lite_TextColor)}[hidden].ui5-calheader-arrowbtn.ui5-calheader-middlebtn{display:none}.ui5-calheader-arrowbtn:focus{outline:none}.ui5-calheader-arrowbtn:hover{background-color:var(--sapButton_Hover_Background);color:var(--sapButton_Lite_TextColor);box-shadow:var(--_ui5-v2-14-0_calendar_header_arrow_button_box_shadow)}.ui5-calheader-arrowbtn:active{background-color:var(--sapButton_Active_Background);color:var(--sapButton_Active_TextColor)}.ui5-calheader-arrowbtn,.ui5-calheader-middlebtn{border:var(--_ui5-v2-14-0_calendar_header_arrow_button_border);border-radius:var(--_ui5-v2-14-0_calendar_header_arrow_button_border_radius);display:flex;background-color:var(--sapButton_Lite_Background);border-color:var(--sapButton_Lite_BorderColor)}.ui5-calheader-middlebtn{flex-direction:column;align-items:center;justify-content:center}.ui5-calheader-arrowbtn:not(:active) .ui5-calheader-btn-sectext{color:var(--sapNeutralElementColor);font-size:var(--sapFontSmallSize)}.ui5-calheader-arrowicon{color:currentColor;pointer-events:none}.ui5-calheader-midcontainer{display:flex;justify-content:space-around;flex:1 1 auto;padding:0 .5rem}.ui5-calheader-midcontainer .ui5-calheader-middlebtn:first-child{margin-inline-end:.5rem}.ui5-calheader-middlebtn{font-family:var(--_ui5-v2-14-0_button_fontFamily);width:var(--_ui5-v2-14-0_calendar_header_middle_button_width);flex:var(--_ui5-v2-14-0_calendar_header_middle_button_flex);position:relative;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none}.ui5-calheader-middlebtn:focus{border:var(--_ui5-v2-14-0_calendar_header_middle_button_focus_border);border-radius:var(--_ui5-v2-14-0_calendar_header_middle_button_focus_border_radius);outline:var(--_ui5-v2-14-0_calendar_header_middle_button_focus_outline);outline-offset:-.125rem;background:var(--_ui5-v2-14-0_calendar_header_middle_button_focus_background)}.ui5-calheader-middlebtn:focus:active{outline:var(--_ui5-v2-14-0_calendar_header_middle_button_focus_active_outline);outline-offset:-.0625rem;background:var(--_ui5-v2-14-0_calendar_header_middle_button_focus_active_background)}.ui5-calheader-middlebtn:focus:after{content:"";display:var(--_ui5-v2-14-0_calendar_header_middle_button_focus_after_display);width:var(--_ui5-v2-14-0_calendar_header_middle_button_focus_after_width);height:var(--_ui5-v2-14-0_calendar_header_middle_button_focus_after_height);border:var(--_ui5-v2-14-0_calendar_header_middle_button_focus_after_border);position:absolute;top:var(--_ui5-v2-14-0_calendar_header_middle_button_focus_after_top_offset);left:var(--_ui5-v2-14-0_calendar_header_middle_button_focus_after_left_offset)}.ui5-calheader-middlebtn:focus:active:after{border-color:var(--sapContent_ContrastFocusColor)}
`;
var __decorate$8 = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var Calendar_1;
let Calendar = Calendar_1 = class Calendar2 extends CalendarPart$1 {
  constructor() {
    super();
    this.selectionMode = "Single";
    this.hideWeekNumbers = false;
    this._currentPicker = "day";
    this._previousButtonDisabled = false;
    this._nextButtonDisabled = false;
    this._pickersMode = "DAY_MONTH_YEAR";
    this._valueIsProcessed = false;
    this._selectedItemType = "None";
    this._valueIsProcessed = false;
  }
  /**
   * @private
   */
  get _selectedDatesTimestamps() {
    let selectedDates = [];
    if (this.selectionMode === CalendarSelectionMode$1.Range) {
      const range = this.dates.find((date) => date.hasAttribute("ui5-date-range"));
      const startDate = range && range.startValue && this.getFormat().parse(range.startValue, true);
      const endDate = range && range.endValue && this.getFormat().parse(range.endValue, true);
      if (startDate) {
        selectedDates.push(startDate.getTime() / 1e3);
      }
      if (endDate) {
        selectedDates.push(endDate.getTime() / 1e3);
      }
    } else {
      selectedDates = this.dates.filter((dateElement) => {
        return dateElement.hasAttribute("ui5-date") && dateElement.value && this._isValidCalendarDate(dateElement.value) && this._getTimeStampFromString(dateElement.value);
      }).map((dateElement) => Number(this._getTimeStampFromString(dateElement.value)) / 1e3);
    }
    return selectedDates;
  }
  /**
   * @private
   */
  _setSelectedDates(selectedDates) {
    const selectedUTCDates = selectedDates.map((timestamp) => this.getFormat().format(UI5Date.getInstance(timestamp * 1e3), true));
    if (this.selectionMode === CalendarSelectionMode$1.Range) {
      if (selectedUTCDates.length) {
        let dateRange = this.dates.find((dateElement) => dateElement.hasAttribute("ui5-date-range") && dateElement.startValue === selectedUTCDates[0]);
        if (!dateRange) {
          dateRange = document.createElement(CalendarDateRange$1.getMetadata().getTag());
          dateRange.startValue = selectedUTCDates[0];
          this.appendChild(dateRange);
        } else {
          dateRange.endValue = selectedUTCDates[1];
        }
        this.dates.filter((dateElement) => {
          return dateElement.hasAttribute("ui5-date") || dateRange && dateElement.startValue !== dateRange.startValue;
        }).forEach((dateElement) => {
          this.removeChild(dateElement);
        });
      }
    } else {
      const valuesInDOM = this._selectedDatesTimestamps.map((timestamp) => this.getFormat().format(UI5Date.getInstance(timestamp * 1e3)));
      this.dates.filter((dateElement) => {
        return dateElement.hasAttribute("ui5-date-range") || dateElement.hasAttribute("ui5-date") && !selectedUTCDates.includes(dateElement.value);
      }).forEach((dateElement) => {
        this.removeChild(dateElement);
      });
      selectedUTCDates.filter((value) => !valuesInDOM.includes(value)).forEach((value) => {
        const dateElement = document.createElement(CalendarDate$1.getMetadata().getTag());
        dateElement.value = value;
        this.appendChild(dateElement);
      });
    }
  }
  _isValidCalendarDate(dateString) {
    const date = this.getFormat().parse(dateString);
    return !!date;
  }
  get _specialCalendarDates() {
    const hasSelectedType = this._specialDates.some((date) => date.type === this._selectedItemType);
    const validSpecialDates = this._specialDates.filter((date) => {
      const dateType = date.type;
      const dateValue = date.value;
      const isTypeMatch = hasSelectedType ? dateType === this._selectedItemType || dateType === "Working" || dateType === "NonWorking" : true;
      return isTypeMatch && dateValue && this._isValidCalendarDate(dateValue);
    });
    validSpecialDates.forEach((date) => {
      const refLegendItem = this.calendarLegend.length ? this.calendarLegend[0].items.find((item) => item.type === date.type) : void 0;
      date._tooltip = refLegendItem?.text || "";
    });
    const uniqueDates = /* @__PURE__ */ new Set();
    const uniqueSpecialDates = [];
    validSpecialDates.forEach((date) => {
      const dateFromValue = this.getFormat().parse(date.value);
      const timestamp = dateFromValue.getTime();
      if (!uniqueDates.has(timestamp)) {
        uniqueDates.add(timestamp);
        const specialDateTimestamp = CalendarDate$2.fromLocalJSDate(dateFromValue).valueOf() / 1e3;
        const type = date.type;
        const tooltip = date._tooltip;
        uniqueSpecialDates.push({ specialDateTimestamp, type, tooltip });
      }
    });
    return uniqueSpecialDates;
  }
  _onCalendarLegendSelectionChange(e2) {
    const defaultTypes = ["Working", "NonWorking", "Selected", "Today"];
    this._selectedItemType = e2.detail.item.type;
    if (defaultTypes.includes(this._selectedItemType)) {
      this._selectedItemType = "None";
    }
    this._currentPickerDOM._autoFocus = false;
  }
  /**
   * Makes sure that _currentPicker is always set to a value, allowed by _pickersMode
   */
  _normalizeCurrentPicker() {
    if (this._currentPicker === "day" && this._pickersMode !== CalendarPickersMode$1.DAY_MONTH_YEAR) {
      this._currentPicker = "month";
    }
    if (this._currentPicker === "month" && this._pickersMode === CalendarPickersMode$1.YEAR) {
      this._currentPicker = "year";
    }
  }
  onBeforeRendering() {
    this._normalizeCurrentPicker();
    if (!this._valueIsProcessed) {
      if (this._selectedDatesTimestamps) {
        this.timestamp = this._selectedDatesTimestamps[0];
      }
      this._valueIsProcessed = true;
    }
  }
  async onAfterRendering() {
    await f$h();
    this._previousButtonDisabled = !this._currentPickerDOM._hasPreviousPage();
    this._nextButtonDisabled = !this._currentPickerDOM._hasNextPage();
    const yearFormat = DateFormat.getDateInstance({ format: "y", calendarType: this.primaryCalendarType });
    const localeData = getCachedLocaleDataInstance(s$i());
    this._headerMonthButtonText = localeData.getMonthsStandAlone("wide", this.primaryCalendarType)[this._calendarDate.getMonth()];
    this._headerYearButtonText = String(yearFormat.format(this._localDate, true));
    const currentYearRange = this._currentYearRange;
    const rangeStart = new CalendarDate$2(this._calendarDate, this._primaryCalendarType);
    const rangeEnd = new CalendarDate$2(this._calendarDate, this._primaryCalendarType);
    rangeStart.setYear(currentYearRange.startYear);
    rangeEnd.setYear(currentYearRange.endYear);
    this._headerYearRangeButtonText = `${yearFormat.format(rangeStart.toLocalJSDate())} - ${yearFormat.format(rangeEnd.toLocalJSDate())}`;
    this._secondaryCalendarType && this._setSecondaryCalendarTypeButtonText();
  }
  onInvalidation(changeInfo) {
    if (changeInfo.reason === "childchange") {
      this._valueIsProcessed = false;
    }
  }
  /**
   * The user clicked the "month" button in the header
   */
  onHeaderShowMonthPress() {
    this.showMonth();
    this.fireDecoratorEvent("show-month-view");
  }
  showMonth() {
    this._currentPickerDOM._autoFocus = false;
    this._currentPicker = "month";
  }
  /**
   * The user clicked the "year" button in the header
   */
  onHeaderShowYearPress() {
    this.showYear();
    this.fireDecoratorEvent("show-year-view");
  }
  showYear() {
    this._currentPickerDOM._autoFocus = false;
    this._currentPicker = "year";
  }
  /**
   * The user clicked the "year range" button in the YearPicker header
   */
  onHeaderShowYearRangePress() {
    this.showYearRange();
    this.fireDecoratorEvent("show-year-range-view");
  }
  showYearRange() {
    this._currentPickerDOM._autoFocus = false;
    this._currentPicker = "yearrange";
  }
  get _currentPickerDOM() {
    return this.shadowRoot.querySelector(`[ui5-${this._currentPicker}picker]`);
  }
  /**
   * The year clicked the "Previous" button in the header
   */
  onHeaderPreviousPress() {
    this._currentPickerDOM._showPreviousPage();
    if (this.calendarLegend) {
      this._currentPickerDOM._autoFocus = true;
    }
  }
  /**
   * The year clicked the "Next" button in the header
   */
  onHeaderNextPress() {
    this._currentPickerDOM._showNextPage();
    if (this.calendarLegend) {
      this._currentPickerDOM._autoFocus = true;
    }
  }
  _setSecondaryCalendarTypeButtonText() {
    const yearFormatSecType = DateFormat.getDateInstance({ format: "y", calendarType: this._secondaryCalendarType });
    this._headerYearButtonTextSecType = String(yearFormatSecType.format(this._localDate, true));
    const currentYearRange = this._currentYearRange;
    const rangeStart = new CalendarDate$2(this._calendarDate, this._primaryCalendarType);
    const rangeEnd = new CalendarDate$2(this._calendarDate, this._primaryCalendarType);
    rangeStart.setYear(currentYearRange.startYear);
    rangeEnd.setYear(currentYearRange.endYear);
    const rangeStartSecType = transformDateToSecondaryType(this.primaryCalendarType, this._secondaryCalendarType, rangeStart.valueOf() / 1e3, true).firstDate;
    const rangeEndSecType = transformDateToSecondaryType(this.primaryCalendarType, this._secondaryCalendarType, rangeEnd.valueOf() / 1e3, true).lastDate;
    this._headerYearRangeButtonTextSecType = `${yearFormatSecType.format(rangeStartSecType.toLocalJSDate())} - ${yearFormatSecType.format(rangeEndSecType.toLocalJSDate())}`;
  }
  get secondaryCalendarTypeButtonText() {
    if (!this.hasSecondaryCalendarType) {
      return;
    }
    const localDate = UI5Date.getInstance(this._timestamp * 1e3);
    const secondYearFormat = DateFormat.getDateInstance({ format: "y", calendarType: this._secondaryCalendarType });
    const dateInSecType = transformDateToSecondaryType(this._primaryCalendarType, this._secondaryCalendarType, this._timestamp);
    const secondMonthInfo = convertMonthNumbersToMonthNames(dateInSecType.firstDate.getMonth(), dateInSecType.lastDate.getMonth(), this._secondaryCalendarType);
    const secondYearText = secondYearFormat.format(localDate);
    return {
      yearButtonText: secondYearText,
      monthButtonText: secondMonthInfo.text,
      monthButtonInfo: secondMonthInfo.textInfo
    };
  }
  /**
   * The month button is hidden when the month picker or year picker is shown
   * @private
   */
  get _isHeaderMonthButtonHidden() {
    return this._currentPicker !== "day";
  }
  /**
   * The year range picker button is shown only in the year picker
   * @private
   */
  get _isHeaderYearRangeButtonHidden() {
    return this._currentPicker !== "year";
  }
  /**
   * The year button is shown only in the day & month pickers
   * @private
   */
  get _isHeaderYearButtonHidden() {
    return !(this._currentPicker === "day" || this._currentPicker === "month");
  }
  get _isDayPickerHidden() {
    return this._currentPicker !== "day";
  }
  get _isMonthPickerHidden() {
    return this._currentPicker !== "month";
  }
  get _isYearPickerHidden() {
    return this._currentPicker !== "year";
  }
  get _isYearRangePickerHidden() {
    return this._currentPicker !== "yearrange";
  }
  get _currentYearRange() {
    const rangeSize = this.hasSecondaryCalendarType ? 8 : 20;
    const yearsOffset = this.hasSecondaryCalendarType ? 2 : 9;
    const currentYear = this._calendarDate.getYear();
    if (!this._rangeStartYear) {
      this._rangeStartYear = currentYear - yearsOffset;
    }
    this._rangeStartYear += Math.floor((currentYear - this._rangeStartYear) / rangeSize) * rangeSize;
    const minYear = this._minDate.getYear();
    if (currentYear - rangeSize < minYear) {
      this._rangeStartYear = minYear;
    }
    const absoluteMaxYear = getMaxCalendarDate(this._primaryCalendarType).getYear();
    if (currentYear + rangeSize > absoluteMaxYear) {
      this._rangeStartYear = absoluteMaxYear - rangeSize + 1;
    }
    return {
      startYear: this._rangeStartYear,
      endYear: this._rangeStartYear + rangeSize - 1
    };
  }
  _fireEventAndUpdateSelectedDates(selectedDates) {
    const datesValues = selectedDates.map((timestamp) => {
      const calendarDate = CalendarDate$2.fromTimestamp(timestamp * 1e3, this._primaryCalendarType);
      return this.getFormat().format(calendarDate.toUTCJSDate(), true);
    });
    const defaultPrevented = !this.fireDecoratorEvent("selection-change", { timestamp: this.timestamp, selectedDates: [...selectedDates], selectedValues: datesValues });
    if (!defaultPrevented) {
      this._setSelectedDates(selectedDates);
    }
  }
  onSelectedDatesChange(e2) {
    this.timestamp = e2.detail.timestamp;
    this._fireEventAndUpdateSelectedDates(e2.detail.dates);
  }
  onSelectedMonthChange(e2) {
    this.timestamp = e2.detail.timestamp;
    if (this._pickersMode === CalendarPickersMode$1.DAY_MONTH_YEAR) {
      this._currentPicker = "day";
    } else {
      this._fireEventAndUpdateSelectedDates(e2.detail.dates);
    }
    this._currentPickerDOM._autoFocus = true;
  }
  onSelectedYearChange(e2) {
    this.timestamp = e2.detail.timestamp;
    if (this._pickersMode === CalendarPickersMode$1.DAY_MONTH_YEAR) {
      this._currentPicker = "day";
    } else if (this._pickersMode === CalendarPickersMode$1.MONTH_YEAR) {
      this._currentPicker = "month";
    } else {
      this._fireEventAndUpdateSelectedDates(e2.detail.dates);
    }
    this._currentPickerDOM._autoFocus = true;
  }
  onSelectedYearRangeChange(e2) {
    this.timestamp = e2.detail.timestamp;
    this._currentPicker = "year";
    this._currentPickerDOM._autoFocus = true;
  }
  onNavigate(e2) {
    this.timestamp = e2.detail.timestamp;
  }
  _onkeydown(e2) {
    if (s$5(e2) && this._currentPicker !== "month") {
      this._currentPicker = "month";
      this.fireDecoratorEvent("show-month-view");
    }
    if (!lo(e2)) {
      return;
    }
    if (this._currentPicker !== "year") {
      this._currentPicker = "year";
      this.fireDecoratorEvent("show-year-view");
    } else {
      this._currentPicker = "yearrange";
      this.fireDecoratorEvent("show-year-range-view");
    }
  }
  _onLegendFocusOut() {
    this._selectedItemType = "None";
  }
  get _specialDates() {
    return this.getSlottedNodes("specialDates");
  }
  get classes() {
    return {
      prevButton: {
        "ui5-calheader-arrowbtn": true,
        "ui5-calheader-arrowbtn-disabled": this._previousButtonDisabled
      },
      nextButton: {
        "ui5-calheader-arrowbtn": true,
        "ui5-calheader-arrowbtn-disabled": this._nextButtonDisabled
      }
    };
  }
  get accInfo() {
    return {
      ariaLabelMonthButton: this.hasSecondaryCalendarType ? `${this._headerMonthButtonText}, ${this.secondMonthButtonText}` : `${this._headerMonthButtonText}`
    };
  }
  get headerPreviousButtonText() {
    return Calendar_1.i18nBundle?.getText(CALENDAR_HEADER_PREVIOUS_BUTTON);
  }
  get headerNextButtonText() {
    return Calendar_1.i18nBundle?.getText(CALENDAR_HEADER_NEXT_BUTTON);
  }
  get secondMonthButtonText() {
    const secondMonthButtonText = this.secondaryCalendarTypeButtonText?.monthButtonText;
    return secondMonthButtonText;
  }
  onMonthButtonKeyDown(e2) {
    if (A$2(e2)) {
      e2.preventDefault();
    }
    if (b$4(e2)) {
      this.showMonth();
      this.fireDecoratorEvent("show-month-view");
    }
  }
  onMonthButtonKeyUp(e2) {
    if (A$2(e2)) {
      e2.preventDefault();
      this.showMonth();
      this.fireDecoratorEvent("show-month-view");
    }
  }
  onYearButtonKeyDown(e2) {
    if (A$2(e2)) {
      e2.preventDefault();
    }
    if (b$4(e2)) {
      this.showYear();
      this.fireDecoratorEvent("show-year-view");
    }
  }
  onYearButtonKeyUp(e2) {
    if (A$2(e2)) {
      this.showYear();
      this.fireDecoratorEvent("show-year-view");
    }
  }
  onYearRangeButtonKeyDown(e2) {
    if (A$2(e2)) {
      e2.preventDefault();
    }
    if (b$4(e2)) {
      this.showYearRange();
      this.fireDecoratorEvent("show-year-range-view");
    }
  }
  onYearRangeButtonKeyUp(e2) {
    if (A$2(e2)) {
      this.showYearRange();
      this.fireDecoratorEvent("show-year-range-view");
    }
  }
  onPrevButtonClick(e2) {
    if (this._previousButtonDisabled) {
      e2.preventDefault();
      return;
    }
    this.onHeaderPreviousPress();
    e2.preventDefault();
  }
  onNextButtonClick(e2) {
    if (this._nextButtonDisabled) {
      e2.preventDefault();
      return;
    }
    this.onHeaderNextPress();
    e2.preventDefault();
  }
  /**
   * Returns an array of UTC timestamps, representing the selected dates.
   * @protected
   * @deprecated
   */
  get selectedDates() {
    return this._selectedDatesTimestamps;
  }
  /**
   * Creates instances of `ui5-date` or `ui5-date-range` inside this `ui5-calendar` with values, equal to the provided UTC timestamps
   * @protected
   * @deprecated
   * @param selectedDates Array of UTC timestamps
   */
  set selectedDates(selectedDates) {
    this._setSelectedDates(selectedDates);
  }
};
__decorate$8([
  s$7()
], Calendar.prototype, "selectionMode", void 0);
__decorate$8([
  s$7({ type: Boolean })
], Calendar.prototype, "hideWeekNumbers", void 0);
__decorate$8([
  s$7()
], Calendar.prototype, "_currentPicker", void 0);
__decorate$8([
  s$7({ type: Boolean })
], Calendar.prototype, "_previousButtonDisabled", void 0);
__decorate$8([
  s$7({ type: Boolean })
], Calendar.prototype, "_nextButtonDisabled", void 0);
__decorate$8([
  s$7()
], Calendar.prototype, "_headerMonthButtonText", void 0);
__decorate$8([
  s$7()
], Calendar.prototype, "_headerYearButtonText", void 0);
__decorate$8([
  s$7()
], Calendar.prototype, "_headerYearButtonTextSecType", void 0);
__decorate$8([
  s$7()
], Calendar.prototype, "_headerYearRangeButtonText", void 0);
__decorate$8([
  s$7()
], Calendar.prototype, "_headerYearRangeButtonTextSecType", void 0);
__decorate$8([
  s$7({ noAttribute: true })
], Calendar.prototype, "_pickersMode", void 0);
__decorate$8([
  d$4({ type: HTMLElement, invalidateOnChildChange: true })
], Calendar.prototype, "calendarLegend", void 0);
__decorate$8([
  d$4({ type: HTMLElement, invalidateOnChildChange: true, "default": true })
], Calendar.prototype, "dates", void 0);
__decorate$8([
  d$4({ type: HTMLElement, invalidateOnChildChange: true })
], Calendar.prototype, "specialDates", void 0);
__decorate$8([
  s$7()
], Calendar.prototype, "_selectedItemType", void 0);
__decorate$8([
  i$8("@ui5/webcomponents")
], Calendar, "i18nBundle", void 0);
Calendar = Calendar_1 = __decorate$8([
  m$7({
    tag: "ui5-calendar",
    fastNavigation: true,
    template: CalendarTemplate,
    styles: [calendarCSS, CalendarHeaderCss]
  }),
  l$b("selection-change", {
    bubbles: true,
    cancelable: true
  }),
  l$b("show-month-view", {
    bubbles: true
  }),
  l$b("show-year-view", {
    bubbles: true
  }),
  l$b("show-year-range-view", {
    bubbles: true
  })
], Calendar);
Calendar.define();
const Calendar$1 = Calendar;
function CardTemplate() {
  return jsx("div", { part: "root", role: "region", class: {
    "ui5-card-root": true,
    "ui5-card--interactive": this._hasHeader && this.header[0].interactive,
    "ui5-card--nocontent": !this.content.length
  }, "aria-label": this._getAriaLabel, children: jsx(BusyIndicator$1, { id: `${this._id}-busyIndicator`, delay: this.loadingDelay, active: this.loading, class: "ui5-card-busy-indicator", children: jsxs("div", { class: "ui5-card-inner", children: [this._hasHeader && jsx("div", { class: "ui5-card-header-root", children: jsx("slot", { name: "header" }) }), jsx("div", { role: "group", "aria-label": this._ariaCardContentLabel, part: "content", children: jsx("slot", {}) })] }) }) });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const cardCss = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:inline-block;width:100%}.ui5-card-root{width:100%;height:100%;color:var(--sapGroup_TitleTextColor);background:var(--sapTile_Background);box-shadow:var(--_ui5-v2-14-0_card_box_shadow);border-radius:var(--_ui5-v2-14-0_card_border-radius);border:var(--_ui5-v2-14-0_card_border);overflow:hidden;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);box-sizing:border-box}.ui5-card-busy-indicator{width:100%;height:100%;border-radius:var(--_ui5-v2-14-0_card_border-radius)}.ui5-card-inner{width:100%;height:100%}.ui5-card-root.ui5-card--interactive:hover{box-shadow:var(--_ui5-v2-14-0_card_hover_box_shadow)}.ui5-card-root.ui5-card--interactive:active{box-shadow:var(--_ui5-v2-14-0_card_box_shadow)}.ui5-card-root.ui5-card--nocontent{height:auto}.ui5-card-root.ui5-card--nocontent .ui5-card-header-root{border-bottom:none}.ui5-card--nocontent ::slotted([ui5-card-header]){--_ui5-v2-14-0_card_header_focus_bottom_radius: var(--_ui5-v2-14-0_card_header_focus_radius)}.ui5-card-root .ui5-card-header-root{border-bottom:var(--_ui5-v2-14-0_card_header_border)}
`;
var __decorate$7 = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var Card_1;
let Card$1 = Card_1 = class Card extends b$6 {
  constructor() {
    super(...arguments);
    this.loading = false;
    this.loadingDelay = 1e3;
  }
  get _hasHeader() {
    return !!this.header.length;
  }
  get _getAriaLabel() {
    const effectiveAriaLabelText = A$3(this), effectiveAriaLabel = effectiveAriaLabelText ? ` ${effectiveAriaLabelText}` : "";
    return Card_1.i18nBundle.getText(ARIA_ROLEDESCRIPTION_CARD) + effectiveAriaLabel;
  }
  get _ariaCardContentLabel() {
    return Card_1.i18nBundle.getText(ARIA_LABEL_CARD_CONTENT);
  }
};
__decorate$7([
  s$7()
], Card$1.prototype, "accessibleName", void 0);
__decorate$7([
  s$7()
], Card$1.prototype, "accessibleNameRef", void 0);
__decorate$7([
  d$4({ type: HTMLElement, "default": true })
], Card$1.prototype, "content", void 0);
__decorate$7([
  d$4({ type: HTMLElement, invalidateOnChildChange: true })
], Card$1.prototype, "header", void 0);
__decorate$7([
  s$7({ type: Boolean })
], Card$1.prototype, "loading", void 0);
__decorate$7([
  s$7({ type: Number })
], Card$1.prototype, "loadingDelay", void 0);
__decorate$7([
  i$8("@ui5/webcomponents")
], Card$1, "i18nBundle", void 0);
Card$1 = Card_1 = __decorate$7([
  m$7({
    tag: "ui5-card",
    languageAware: true,
    renderer: y$4,
    template: CardTemplate,
    styles: cardCss
  })
], Card$1);
Card$1.define();
const Card2 = withWebComponent("ui5-card", ["accessibleName", "accessibleNameRef", "loadingDelay"], ["loading"], ["header"], []);
Card2.displayName = "Card";
const getRoundedTimestamp = (millisecondsUTC) => {
  if (!millisecondsUTC) {
    millisecondsUTC = (/* @__PURE__ */ new Date()).getTime();
  }
  const rounded = millisecondsUTC - millisecondsUTC % (24 * 60 * 60 * 1e3);
  return rounded / 1e3;
};
const name$h = "appointment-2";
const pathData$h = "M32 481V65q0-14 9.5-23T64 33h64V1h32v32h192V1h32v32h64q14 0 23 9t9 23v416q0 14-9 23t-23 9H64q-13 0-22.5-9T32 481zm416 0V129H64v352h384zM256 193q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zM128 321q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm256-128q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm0 128q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm-128 0q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zM96 225q0-14 9-23t23-9 23 9 9 23-9 23-23 9-23-9-9-23zM384 97V65h-32v32h32zM128 65v32h32V65h-32z";
const ltr$h = false;
const collection$h = "SAP-icons-v4";
const packageName$h = "@ui5/webcomponents-icons";
y$1(name$h, { pathData: pathData$h, ltr: ltr$h, collection: collection$h, packageName: packageName$h });
const name$g = "appointment-2";
const pathData$g = "M403 64q32 0 54.5 22.5T480 141v294q0 32-22.5 54.5T403 512H109q-32 0-54.5-22.5T32 435V141q0-32 22.5-54.5T109 64h25V26q0-11 7.5-18.5T160 0t18.5 7.5T186 26v38h140V26q0-11 7.5-18.5T352 0t18.5 7.5T378 26v38h25zm-294 51q-11 0-18.5 7.5T83 141v64h346v-64q0-11-7.5-18.5T403 115h-25v19q0 11-7.5 18.5T352 160t-18.5-7.5T326 134v-19H186v19q0 11-7.5 18.5T160 160t-18.5-7.5T134 134v-19h-25zm294 346q11 0 18.5-7.5T429 435V256H83v179q0 11 7.5 18.5T109 461h294zM160 320q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm96 0q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm96 0q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9z";
const ltr$g = false;
const collection$g = "SAP-icons-v5";
const packageName$g = "@ui5/webcomponents-icons";
y$1(name$g, { pathData: pathData$g, ltr: ltr$g, collection: collection$g, packageName: packageName$g });
var __decorate$6 = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
let DateTimeInput = class DateTimeInput2 extends Input$2 {
  constructor() {
    super(...arguments);
    this._shouldOpenValueStatePopover = false;
  }
  /**
   * Prevents the value state message popover from appearing when a responsive popover (like time selection) is open
   * since the responsive popover already includes the necessary information in its header.
   *
   * @protected
   * @override
   */
  get hasValueStateMessage() {
    return this._shouldOpenValueStatePopover && super.hasValueStateMessage && !this._isMobileDevice;
  }
  get _isMobileDevice() {
    return !f$i() && (d$h() || a$q());
  }
};
__decorate$6([
  s$7({ noAttribute: true })
], DateTimeInput.prototype, "_shouldOpenValueStatePopover", void 0);
DateTimeInput = __decorate$6([
  m$7({
    tag: "ui5-datetime-input"
  })
], DateTimeInput);
DateTimeInput.define();
const DateTimeInput$1 = DateTimeInput;
function DatePickerInputTemplate() {
  return jsx("div", { class: "ui5-date-picker-root", style: {
    width: "100%"
  }, children: jsxs(DateTimeInput$1, { "data-sap-focus-ref": true, id: `${this._id}-inner`, class: "ui5-date-picker-input", placeholder: this._placeholder, type: this.type, value: this.displayValue, disabled: this.disabled, required: this.required, readonly: this.readonly, valueState: this.valueState, _inputAccInfo: this.accInfo, _shouldOpenValueStatePopover: !this.open, onChange: this._onInputChange, onInput: this._onInputInput, onSubmit: this._onInputSubmit, onKeyDown: this._onkeydown, children: [!this.open && this.valueStateMessage.length > 0 && jsx("slot", { name: "valueStateMessage", slot: "valueStateMessage" }), !this.readonly && jsx(Icon$2, { id: `${this._id}-value-help`, slot: "icon", name: this.openIconName, tabindex: -1, accessibleName: this.openIconTitle, mode: this._iconMode, showTooltip: true, class: {
    "inputIcon": true,
    "inputIcon--pressed": this.open
  }, onClick: this._togglePicker })] }) });
}
function DatePickerPopoverTemplate(hooks) {
  const header = hooks?.header || defaultHeader;
  const content2 = hooks?.content || defaultContent;
  const footer = hooks?.footer || defaultFooter;
  return jsxs(ResponsivePopover$1, { id: `${this._id}-responsive-popover`, class: "ui5-date-picker-popover", opener: this, open: this.open, allowTargetOverlap: true, placement: "Bottom", horizontalAlign: "Start", accessibleName: this.pickerAccessibleName, hideArrow: true, _hideHeader: this._shouldHideHeader, onKeyDown: this._onkeydown, onClose: this.onResponsivePopoverAfterClose, onOpen: this.onResponsivePopoverAfterOpen, onBeforeOpen: this.onResponsivePopoverBeforeOpen, children: [this.showHeader && header.call(this), valueStateTextHeader.call(this), content2.call(this), this.showFooter && footer.call(this)] });
}
function defaultHeader() {
  return jsx("div", { slot: "header", class: "ui5-responsive-popover-header", children: jsxs("div", { class: "row", children: [jsx("span", { children: this._headerTitleText }), jsx(Button$2, { class: "ui5-responsive-popover-close-btn", icon: decline, design: "Transparent", onClick: this._togglePicker })] }) });
}
function defaultContent() {
  return jsx(Calendar$1, { id: `${this._id}-calendar`, primaryCalendarType: this._primaryCalendarType, secondaryCalendarType: this.secondaryCalendarType, formatPattern: this._formatPattern, selectionMode: this._calendarSelectionMode, minDate: this.minDate, maxDate: this.maxDate, calendarWeekNumbering: this.calendarWeekNumbering, onSelectionChange: this.onSelectedDatesChange, onShowMonthView: this.onHeaderShowMonthPress, onShowYearView: this.onHeaderShowYearPress, hideWeekNumbers: this.hideWeekNumbers, _currentPicker: this._calendarCurrentPicker, _pickersMode: this._calendarPickersMode, children: this._calendarSelectedDates.map((date) => jsx(CalendarDate$1, { value: date })) });
}
function valueStateMessage() {
  return this.shouldDisplayDefaultValueStateMessage ? this.valueStateDefaultText : jsx("slot", { name: "valueStateMessage" });
}
function valueStateTextHeader() {
  if (!this.hasValueStateText) {
    return;
  }
  return jsxs("div", { slot: !d$h() ? "header" : void 0, class: {
    "ui5-popover-header": true,
    "ui5-valuestatemessage-header": true,
    "ui5-valuestatemessage-root": true,
    "ui5-valuestatemessage--success": this.valueState === o$4.Positive,
    "ui5-valuestatemessage--error": this.valueState === o$4.Negative,
    "ui5-valuestatemessage--warning": this.valueState === o$4.Critical,
    "ui5-valuestatemessage--information": this.valueState === o$4.Information
  }, children: [jsx(Icon$2, { class: "ui5-input-value-state-message-icon", name: valueStateMessageInputIcon.call(this) }), valueStateMessage.call(this)] });
}
function valueStateMessageInputIcon() {
  const iconPerValueState = {
    Negative: errorIcon,
    Critical: alertIcon,
    Positive: successIcon,
    Information: informationIcon
  };
  return this.valueState !== o$4.None ? iconPerValueState[this.valueState] : "";
}
function defaultFooter() {
}
function DatePickerTemplate() {
  return [
    DatePickerInputTemplate.call(this),
    DatePickerPopoverTemplate.call(this)
  ];
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const datePickerCss = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}.inputIcon{color:var(--_ui5-v2-14-0_input_icon_color);cursor:pointer;outline:none;padding:var(--_ui5-v2-14-0_input_icon_padding);border-inline-start:var(--_ui5-v2-14-0_input_icon_border);min-width:1rem;min-height:1rem;border-radius:var(--_ui5-v2-14-0_input_icon_border_radius)}.inputIcon.inputIcon--pressed{background:var(--_ui5-v2-14-0_input_icon_pressed_bg);box-shadow:var(--_ui5-v2-14-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-14-0_select_hover_icon_left_border);color:var(--_ui5-v2-14-0_input_icon_pressed_color)}.inputIcon:active{background-color:var(--sapButton_Active_Background);box-shadow:var(--_ui5-v2-14-0_input_icon_box_shadow);border-inline-start:var(--_ui5-v2-14-0_select_hover_icon_left_border);color:var(--_ui5-v2-14-0_input_icon_pressed_color)}.inputIcon:not(.inputIcon--pressed):not(:active):hover{background:var(--_ui5-v2-14-0_input_icon_hover_bg);box-shadow:var(--_ui5-v2-14-0_input_icon_box_shadow)}.inputIcon:hover{border-inline-start:var(--_ui5-v2-14-0_select_hover_icon_left_border);box-shadow:var(--_ui5-v2-14-0_input_icon_box_shadow)}:host([disabled]){cursor:default;pointer-events:none;background:none}:host([readonly]:not([disabled])){border-color:var(--_ui5-v2-14-0_input_readonly_border_color);background:var(--sapField_ReadOnly_BackgroundStyle);background-color:var(--_ui5-v2-14-0_input_readonly_background)}:host([value-state="Negative"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-14-0_input_error_icon_box_shadow)}:host([value-state="Critical"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-14-0_input_warning_icon_box_shadow)}:host([value-state="Information"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-14-0_input_information_icon_box_shadow)}:host([value-state="Positive"]) .inputIcon:not(.inputIcon--pressed):not(:active):hover{box-shadow:var(--_ui5-v2-14-0_input_success_icon_box_shadow)}:host([value-state="Negative"]:not([readonly]):not([disabled])){background:var(--sapField_InvalidBackgroundStyle);background-color:var(--sapField_InvalidBackground);border-color:var(--_ui5-v2-14-0_input_value_state_error_border_color);box-shadow:var(--sapField_InvalidShadow)}:host([value-state="Critical"]:not([readonly]):not([disabled])){background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border-color:var(--_ui5-v2-14-0_input_value_state_warning_border_color);box-shadow:var(--sapField_WarningShadow)}:host([value-state="Positive"]:not([readonly]):not([disabled])){background:var(--sapField_SuccessBackgroundStyle);background-color:var(--sapField_SuccessBackground);border-color:var(--_ui5-v2-14-0_input_value_state_success_border_color);border-width:var(--_ui5-v2-14-0_input_value_state_success_border_width);box-shadow:var(--sapField_SuccessShadow)}:host([value-state="Information"]:not([readonly]):not([disabled])){background:var(--sapField_InformationBackgroundStyle);background-color:var(--sapField_InformationBackground);border-color:var(--_ui5-v2-14-0_input_value_state_information_border_color);border-width:var(--_ui5-v2-14-0_input_information_border_width);box-shadow:var(--sapField_InformationShadow)}:host([value-state="Negative"]) .inputIcon:active,:host([value-state="Negative"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-14-0_input_error_icon_box_shadow);color:var(--_ui5-v2-14-0_input_icon_error_pressed_color)}:host([value-state="Critical"]) .inputIcon:active,:host([value-state="Critical"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-14-0_input_warning_icon_box_shadow);color:var(--_ui5-v2-14-0_input_icon_warning_pressed_color)}:host([value-state="Information"]) .inputIcon:active,:host([value-state="Information"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-14-0_input_information_icon_box_shadow);color:var(--_ui5-v2-14-0_input_icon_information_pressed_color)}:host([value-state="Positive"]) .inputIcon:active,:host([value-state="Positive"]) .inputIcon.inputIcon--pressed{box-shadow:var(--_ui5-v2-14-0_input_success_icon_box_shadow);color:var(--_ui5-v2-14-0_input_icon_success_pressed_color)}:host([value-state="Negative"]) .inputIcon,:host([value-state="Critical"]) .inputIcon{padding:var(--_ui5-v2-14-0_input_error_warning_icon_padding)}:host([value-state="Information"]) .inputIcon{padding:var(--_ui5-v2-14-0_input_information_icon_padding)}:host(:not([hidden])){display:inline-block;line-height:normal;letter-spacing:normal;word-spacing:normal;height:var(--_ui5-v2-14-0_input_height);border-radius:var(--_ui5-v2-14-0_input_border_radius)}:host{min-width:calc(var(--_ui5-v2-14-0_input_min_width) + var(--_ui5-v2-14-0_input_icon_width));color:var(--sapField_TextColor);background-color:var(--sapField_Background);border-radius:var(--_ui5-v2-14-0-datepicker_border_radius);margin:var(--_ui5-v2-14-0_input_margin_top_bottom) 0;user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none}:host(:not([disabled]):not([readonly]):active){background:var(--_ui5-v2-14-0-datepicker-hover-background)}:host(:not([disabled]):not([readonly]):hover){background:var(--_ui5-v2-14-0-datepicker-hover-background)}.ui5-date-picker-root{border-radius:inherit;height:inherit;line-height:inherit;letter-spacing:inherit;word-spacing:inherit}:host .ui5-date-picker-input{width:100%;color:inherit;background-color:inherit;border-radius:inherit;height:inherit;line-height:inherit;letter-spacing:inherit;word-spacing:inherit;margin:inherit}:host([disabled]) .ui5-date-picker-input{background-color:var(--_ui5-v2-14-0-input_disabled_background);opacity:var(--_ui5-v2-14-0_input_disabled_opacity)}:host(:not([disabled]):not([readonly])) .ui5-date-picker-input[focused]{background-color:var(--_ui5-v2-14-0-datepicker-hover-background)}.ui5-date-picker-popover::part(header){padding:0}
`;
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const datePickerPopoverCss = `.ui5-date-picker-popover{width:20rem;.ui5-popover-header{width:100%}}[ui5-calendar]{width:100%;display:flex;justify-content:center}[ui5-responsive-popover]::part(content){padding:0}
`;
var __decorate$5 = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var DatePicker_1;
let DatePicker$1 = DatePicker_1 = class DatePicker extends DateComponentBase$1 {
  constructor() {
    super(...arguments);
    this.value = "";
    this.valueState = "None";
    this.required = false;
    this.disabled = false;
    this.readonly = false;
    this.hideWeekNumbers = false;
    this.open = false;
    this._calendarCurrentPicker = "day";
  }
  get formValidityMessage() {
    return DatePicker_1.i18nBundle.getText(FORM_TEXTFIELD_REQUIRED);
  }
  get formValidity() {
    return { valueMissing: this.required && !this.value };
  }
  async formElementAnchor() {
    return (await this.getFocusDomRefAsync())?.getFocusDomRefAsync();
  }
  get formFormattedValue() {
    return this.value;
  }
  /**
   * @protected
   */
  onResponsivePopoverAfterClose() {
    this.open = false;
    if (d$h()) {
      this.blur();
    } else {
      this._dateTimeInput?.focus();
    }
    this.fireDecoratorEvent("close");
  }
  onResponsivePopoverAfterOpen() {
    this.fireDecoratorEvent("open");
  }
  onResponsivePopoverBeforeOpen() {
    this._calendar.timestamp = this._calendarTimestamp;
    this._calendarCurrentPicker = this.firstPicker;
  }
  onBeforeRendering() {
    ["minDate", "maxDate"].forEach((prop) => {
      const propValue = this[prop];
      if (!this.isValid(propValue)) {
        console.warn(`Invalid value for property "${prop}": ${propValue} is not compatible with the configured format pattern: "${this._displayFormat}"`);
      }
    });
    this.value = this.normalizeFormattedValue(this.value) || this.value;
    this.liveValue = this.value;
  }
  /**
   * Override in derivatives to change calendar selection mode
   * @protected
   */
  get _calendarSelectionMode() {
    return "Single";
  }
  /**
   * Used to provide a timestamp to the Calendar (to focus it to a relevant date when open) based on the component's state
   * Override in derivatives to provide the calendar a timestamp based on their properties
   * By default focus the calendar on the selected date if set, or the current day otherwise
   * @protected
   */
  get _calendarTimestamp() {
    if (this.value && this.dateValueUTC && this._checkValueValidity(this.value)) {
      const millisecondsUTC = this.dateValueUTC.getTime();
      return getRoundedTimestamp(millisecondsUTC);
    }
    return getTodayUTCTimestamp(this._primaryCalendarType);
  }
  /**
   * Used to provide selectedDates to the calendar based on the component's state
   * Override in derivatives to provide different rules for setting the calendar's selected dates
   * @protected
   */
  get _calendarSelectedDates() {
    if (this.value && this._checkValueValidity(this.value)) {
      return [this.value];
    }
    return [];
  }
  _onkeydown(e2) {
    if (ko(e2)) {
      e2.preventDefault();
      if (this.open) {
        if (!s$5(e2)) {
          this._toggleAndFocusInput();
        }
      } else {
        this._toggleAndFocusInput();
      }
    }
    const target = e2.target;
    if (target && this.open && this._dateTimeInput.id === target.id && (x(e2) || V(e2) || bo(e2) || fo(e2))) {
      this._togglePicker();
    }
    if (this.open) {
      return;
    }
    if (b$4(e2)) {
      if (this._internals.form) {
        i$b(this);
      }
    } else if (yo(e2)) {
      e2.preventDefault();
      this._modifyDateValue(1, "year");
    } else if (z2(e2)) {
      e2.preventDefault();
      this._modifyDateValue(1, "month");
    } else if (j(e2)) {
      e2.preventDefault();
      this._modifyDateValue(1, "day");
    } else if (eo(e2)) {
      e2.preventDefault();
      this._modifyDateValue(-1, "year");
    } else if (v$1(e2)) {
      e2.preventDefault();
      this._modifyDateValue(-1, "month");
    } else if (q(e2)) {
      e2.preventDefault();
      this._modifyDateValue(-1, "day");
    }
  }
  /**
   * @param amount
   * @param unit
   * @param preserveDate whether to preserve the day of the month (f.e. 15th of March + 1 month = 15th of April)
   * @protected
   */
  _modifyDateValue(amount, unit, preserveDate) {
    if (!this.dateValue) {
      return;
    }
    const modifiedDate = modifyDateBy(CalendarDate$2.fromLocalJSDate(this.dateValue), amount, unit, preserveDate, this._minDate, this._maxDate);
    const newValue = this.formatValue(modifiedDate.toUTCJSDate());
    this._updateValueAndFireEvents(newValue, true, ["change", "value-changed"]);
  }
  _updateValueAndFireEvents(value, normalizeValue2, events, updateValue = true) {
    const valid = this._checkValueValidity(value);
    if (valid && normalizeValue2) {
      value = this.getDisplayValueFromValue(value);
      value = this.normalizeDisplayValue(value);
    }
    let executeEvent = true;
    this.liveValue = value;
    const previousValue = this.value;
    if (updateValue) {
      this._dateTimeInput.value = value;
      this.value = this.getValueFromDisplayValue(value);
      this._updateValueState();
    }
    events.forEach((e2) => {
      if (!this.fireDecoratorEvent(e2, { value, valid })) {
        executeEvent = false;
      }
    });
    if (!executeEvent && updateValue) {
      if (this.value !== previousValue && this.value !== this._dateTimeInput.value) {
        return;
      }
      this._dateTimeInput.value = previousValue;
      this.value = previousValue;
    }
  }
  _updateValueState() {
    const valid = this._checkValueValidity(this.value);
    const previousValueState = this.valueState;
    this.valueState = valid ? o$4.None : o$4.Negative;
    const eventPrevented = !this.fireDecoratorEvent("value-state-change", { valueState: this.valueState, valid });
    if (eventPrevented) {
      this.valueState = previousValueState;
    }
  }
  getValueFromDisplayValue(value) {
    if (!this.getDisplayFormat().parse(value)) {
      return value;
    }
    return this.getValueFormat().format(this.getDisplayFormat().parse(value));
  }
  getDisplayValueFromValue(value) {
    if (!this.getValueFormat().parse(value)) {
      return value;
    }
    return this.getDisplayFormat().format(this.getValueFormat().parse(value));
  }
  /**
   * The ui5-input "submit" event handler - fire change event when the user presses enter
   * @protected
   */
  _onInputSubmit() {
  }
  /**
   * The ui5-input "change" event handler - fire change event when the user focuses out of the input
   * @protected
   */
  _onInputChange(e2) {
    this._updateValueAndFireEvents(e2.target.value, true, ["change", "value-changed"]);
  }
  /**
   * The ui5-input "input" event handler - fire input even when the user types
   * @protected
   */
  _onInputInput(e2) {
    this._updateValueAndFireEvents(e2.target.value, false, ["input"], false);
  }
  /**
   * Checks if the provided value is valid and within valid range.
   * @protected
   * @param value
   */
  _checkValueValidity(value) {
    if (value === "") {
      return true;
    }
    return this.isValidValue(value) && this.isInValidRange(value);
  }
  /**
   * Checks if the provided value is valid and within valid range.
   * @protected
   * @param value
   */
  _checkDisplayValueValidity(value) {
    if (value === "") {
      return true;
    }
    return this.isValidDisplayValue(value) && this.isInValidRangeDisplayValue(value);
  }
  _click(e2) {
    if (d$h()) {
      this.responsivePopover.opener = this;
      this.responsivePopover.open = true;
      e2.preventDefault();
    }
  }
  /**
   * Checks if a value is valid against the current date format of the DatePicker.
   * @public
   * @param value A value to be tested against the current date format
   * @deprecated Use isValidValue or isValidDisplayValue instead
   */
  isValid(value) {
    if (value === "" || value === void 0) {
      return true;
    }
    return !!this.getFormat().parse(value);
  }
  /**
   * Checks if a value is valid against the current date format of the DatePicker.
   * @public
   * @param value A value to be tested against the current date format
   */
  isValidValue(value) {
    if (value === "" || value === void 0) {
      return true;
    }
    return !!this.getValueFormat().parse(value);
  }
  /**
   * Checks if a value is valid against the current date format of the DatePicker.
   * @public
   * @param value A value to be tested against the current date format
   */
  isValidDisplayValue(value) {
    if (value === "" || value === void 0) {
      return true;
    }
    return !!this.getDisplayFormat().parse(value);
  }
  /**
   * Checks if a date is between the minimum and maximum date.
   * @public
   * @param value A value to be checked
   */
  isInValidRange(value) {
    if (value === "" || value === void 0) {
      return true;
    }
    const calendarDate = this._getCalendarDateFromString(value);
    if (!calendarDate || !this._minDate || !this._maxDate) {
      return false;
    }
    return calendarDate.valueOf() >= this._minDate.valueOf() && calendarDate.valueOf() <= this._maxDate.valueOf();
  }
  isInValidRangeDisplayValue(value) {
    if (value === "" || value === void 0) {
      return true;
    }
    const calendarDate = this._getCalendarDateFromStringDisplayValue(value);
    if (!calendarDate || !this._minDate || !this._maxDate) {
      return false;
    }
    return calendarDate.valueOf() >= this._minDate.valueOf() && calendarDate.valueOf() <= this._maxDate.valueOf();
  }
  /**
   * The parser understands many formats, but we need one format
   * @protected
   */
  normalizeValue(value) {
    if (value === "") {
      return value;
    }
    return this.getFormat().format(this.getFormat().parse(value, true), true);
  }
  /**
   * The parser understands many formats, but we need one format
   * @protected
   */
  normalizeFormattedValue(value) {
    if (!this.getValueFormat().parse(value, true)) {
      return "";
    }
    if (value === "") {
      return value;
    }
    return this.getValueFormat().format(this.getValueFormat().parse(value, true), true);
  }
  /**
   * The parser understands many formats, but we need one format
   * @protected
   */
  normalizeDisplayValue(value) {
    if (value === "" || !this.getDisplayFormat().parse(value, true)) {
      return value;
    }
    return this.getDisplayFormat().format(this.getDisplayFormat().parse(value, true), true);
  }
  get _lastDayOfTheYear() {
    const currentYear = UI5Date.getInstance().getFullYear();
    const lastDayOfTheYear = UI5Date.getInstance(currentYear, 11, 31, 23, 59, 59);
    return this.getFormat().format(lastDayOfTheYear);
  }
  /**
   * @protected
   */
  get _placeholder() {
    if (this.placeholder) {
      return this.placeholder;
    }
    return `${DatePicker_1.i18nBundle.getText(DATETIME_COMPONENTS_PLACEHOLDER_PREFIX)} ${this._lastDayOfTheYear}`;
  }
  get _headerTitleText() {
    return this.ariaLabelText || DatePicker_1.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);
  }
  get showHeader() {
    return d$h();
  }
  get showFooter() {
    return d$h();
  }
  get displayValue() {
    if (!this.getValueFormat().parse(this.value, true)) {
      return this.value;
    }
    if (!this.value) {
      return "";
    }
    return this.getDisplayFormat().format(this.getValueFormat().parse(this.value, true), true);
  }
  get accInfo() {
    return {
      "ariaRoledescription": this.roleDescription,
      "ariaHasPopup": "grid",
      "ariaRequired": this.required,
      "ariaLabel": this.ariaLabelText || void 0,
      "ariaDescription": p$2(this) || L$2(this) || void 0
    };
  }
  get ariaLabelText() {
    return E$1(this) || A$3(this) || M$1(this) || "";
  }
  get valueStateDefaultText() {
    if (this.valueState === o$4.None) {
      return;
    }
    return this.valueStateTextMappings[this.valueState];
  }
  get valueStateTextMappings() {
    return {
      [o$4.Positive]: DatePicker_1.i18nBundle.getText(VALUE_STATE_SUCCESS),
      [o$4.Negative]: DatePicker_1.i18nBundle.getText(VALUE_STATE_ERROR),
      [o$4.Critical]: DatePicker_1.i18nBundle.getText(VALUE_STATE_WARNING),
      [o$4.Information]: DatePicker_1.i18nBundle.getText(VALUE_STATE_INFORMATION)
    };
  }
  get shouldDisplayDefaultValueStateMessage() {
    return !t$6(this.valueStateMessage) && this.hasValueStateText;
  }
  get hasValueStateText() {
    return this.hasValueState && this.valueState !== o$4.Positive;
  }
  get hasValueState() {
    return this.valueState !== o$4.None;
  }
  get openIconTitle() {
    return DatePicker_1.i18nBundle.getText(DATEPICKER_OPEN_ICON_TITLE);
  }
  get openIconName() {
    return "appointment-2";
  }
  get roleDescription() {
    return DatePicker_1.i18nBundle.getText(DATEPICKER_DATE_DESCRIPTION);
  }
  get pickerAccessibleName() {
    return DatePicker_1.i18nBundle.getText(DATEPICKER_POPOVER_ACCESSIBLE_NAME, this.ariaLabelText);
  }
  /**
   * Defines whether the dialog on mobile should have header
   * @private
   */
  get _shouldHideHeader() {
    return false;
  }
  /**
   * Returns the first picker depending on the CalendarPickerMode
   */
  get firstPicker() {
    const calendarPickerMode = this._calendarPickersMode;
    let firstPicker = "day";
    if (calendarPickerMode === CalendarPickersMode$1.YEAR) {
      firstPicker = "year";
    } else if (calendarPickerMode === CalendarPickersMode$1.MONTH_YEAR) {
      firstPicker = "month";
    }
    return firstPicker;
  }
  /**
   * Defines whether the value help icon is hidden
   * @private
   */
  get _iconMode() {
    return f$i() ? IconMode$1.Decorative : IconMode$1.Interactive;
  }
  _canOpenPicker() {
    return !this.disabled && !this.readonly;
  }
  get _calendarPickersMode() {
    const format2 = this.getFormat();
    const patternSymbolTypes = format2.aFormatArray.map((patternSymbolSettings) => {
      return patternSymbolSettings.type.toLowerCase();
    });
    if (patternSymbolTypes.includes("day")) {
      return CalendarPickersMode$1.DAY_MONTH_YEAR;
    }
    if (patternSymbolTypes.includes("month") || patternSymbolTypes.includes("monthstandalone")) {
      return CalendarPickersMode$1.MONTH_YEAR;
    }
    return CalendarPickersMode$1.YEAR;
  }
  /**
   * The user selected a new date in the calendar
   * @param e
   * @protected
   */
  onSelectedDatesChange(e2) {
    e2.preventDefault();
    const newValue = e2.detail.selectedValues && e2.detail.selectedValues[0];
    this._updateValueAndFireEvents(newValue, true, ["change", "value-changed"]);
    this._togglePicker();
  }
  /**
   * The user clicked the "month" button in the header
   */
  onHeaderShowMonthPress() {
    this._calendarCurrentPicker = "month";
  }
  /**
   * The user clicked the "year" button in the header
   */
  onHeaderShowYearPress() {
    this._calendarCurrentPicker = "year";
  }
  /**
   * Formats a Java Script date object into a string representing a locale date
   * according to the `formatPattern` property of the DatePicker instance
   * @public
   * @param date A Java Script date object to be formatted as string
   * @returns The date as string
   */
  formatValue(date) {
    return this.getValueFormat().format(date);
  }
  _togglePicker() {
    this.open = !this.open;
  }
  _toggleAndFocusInput() {
    this._togglePicker();
    this._dateTimeInput.focus();
  }
  /**
   * Currently selected date represented as a Local JavaScript Date instance.
   * @public
   * @default null
   */
  get dateValue() {
    return this.liveValue ? this.getValueFormat().parse(this.liveValue) : this.getValueFormat().parse(this.value);
  }
  get dateValueUTC() {
    return this.liveValue ? this.getValueFormat().parse(this.liveValue, true) : this.getValueFormat().parse(this.value);
  }
  get styles() {
    return {
      main: {
        width: "100%"
      }
    };
  }
  get type() {
    return InputType$1.Text;
  }
};
__decorate$5([
  s$7()
], DatePicker$1.prototype, "value", void 0);
__decorate$5([
  s$7()
], DatePicker$1.prototype, "valueState", void 0);
__decorate$5([
  s$7({ type: Boolean })
], DatePicker$1.prototype, "required", void 0);
__decorate$5([
  s$7({ type: Boolean })
], DatePicker$1.prototype, "disabled", void 0);
__decorate$5([
  s$7({ type: Boolean })
], DatePicker$1.prototype, "readonly", void 0);
__decorate$5([
  s$7()
], DatePicker$1.prototype, "placeholder", void 0);
__decorate$5([
  s$7()
], DatePicker$1.prototype, "name", void 0);
__decorate$5([
  s$7({ type: Boolean })
], DatePicker$1.prototype, "hideWeekNumbers", void 0);
__decorate$5([
  s$7({ type: Boolean })
], DatePicker$1.prototype, "open", void 0);
__decorate$5([
  s$7()
], DatePicker$1.prototype, "accessibleName", void 0);
__decorate$5([
  s$7()
], DatePicker$1.prototype, "accessibleNameRef", void 0);
__decorate$5([
  s$7()
], DatePicker$1.prototype, "accessibleDescription", void 0);
__decorate$5([
  s$7()
], DatePicker$1.prototype, "accessibleDescriptionRef", void 0);
__decorate$5([
  s$7({ type: Object })
], DatePicker$1.prototype, "_respPopoverConfig", void 0);
__decorate$5([
  s$7()
], DatePicker$1.prototype, "_calendarCurrentPicker", void 0);
__decorate$5([
  d$4({ type: HTMLElement })
], DatePicker$1.prototype, "valueStateMessage", void 0);
__decorate$5([
  o$1("[ui5-datetime-input]")
], DatePicker$1.prototype, "_dateTimeInput", void 0);
__decorate$5([
  o$1("[ui5-calendar]")
], DatePicker$1.prototype, "_calendar", void 0);
__decorate$5([
  i$8("@ui5/webcomponents")
], DatePicker$1, "i18nBundle", void 0);
DatePicker$1 = DatePicker_1 = __decorate$5([
  m$7({
    tag: "ui5-date-picker",
    languageAware: true,
    formAssociated: true,
    template: DatePickerTemplate,
    styles: [
      datePickerCss,
      ResponsivePopoverCommonCss,
      datePickerPopoverCss,
      ValueStateMessageCss
    ]
  }),
  l$b("change", {
    bubbles: true,
    cancelable: true
  }),
  l$b("input", {
    bubbles: true,
    cancelable: true
  }),
  l$b("value-state-change", {
    bubbles: true,
    cancelable: true
  }),
  l$b("open"),
  l$b("close")
], DatePicker$1);
DatePicker$1.define();
const DatePicker2 = withWebComponent("ui5-date-picker", ["accessibleDescription", "accessibleDescriptionRef", "accessibleName", "accessibleNameRef", "calendarWeekNumbering", "displayFormat", "formatPattern", "maxDate", "minDate", "name", "placeholder", "primaryCalendarType", "secondaryCalendarType", "value", "valueFormat", "valueState"], ["disabled", "hideWeekNumbers", "open", "readonly", "required"], ["valueStateMessage"], ["change", "close", "input", "open", "value-state-change"]);
DatePicker2.displayName = "DatePicker";
const name$f = "slim-arrow-up";
const pathData$f = "M261.5 197q-6-6-11 0l-160 160q-5 5-11.5 5t-11.5-5-5-11.5 5-11.5l166-165q9-9 22-9t23 9l165 165q5 5 5 11t-5 11q-12 12-23 0z";
const ltr$f = false;
const collection$f = "SAP-icons-v4";
const packageName$f = "@ui5/webcomponents-icons";
y$1(name$f, { pathData: pathData$f, ltr: ltr$f, collection: collection$f, packageName: packageName$f });
const name$e = "slim-arrow-up";
const pathData$e = "M96 326q0-10 7-17l135-141q6-8 18-8 11 0 19 8l134 141q7 7 7 17 0 11-7.5 18.5T390 352q-10 0-18-8L256 223 140 344q-8 8-18 8-11 0-18.5-7.5T96 326z";
const ltr$e = false;
const collection$e = "SAP-icons-v5";
const packageName$e = "@ui5/webcomponents-icons";
y$1(name$e, { pathData: pathData$e, ltr: ltr$e, collection: collection$e, packageName: packageName$e });
const name$d = "status-negative";
const pathData$d = "M512 256q0 53-20.5 100t-55 81.5-81 54.5-99.5 20-100-20.5-81.5-55T20 355 0 256q0-54 20-100.5t55-81T156.5 20 256 0t99.5 20T437 75t55 81.5 20 99.5zM399 364q6-6 0-12l-86-86q-6-6 0-12l81-81q6-6 0-12l-37-37q-2-2-6-2t-6 2l-83 82q-1 3-6 3-3 0-6-3l-84-83q-1-2-6-2-4 0-6 2l-37 37q-6 6 0 12l83 82q6 6 0 12l-83 82q-2 2-2.5 6t2.5 6l36 37q4 2 6 2 4 0 6-2l85-84q2-2 6-2t6 2l88 88q4 2 6 2t6-2z";
const ltr$d = false;
const collection$d = "SAP-icons-v4";
const packageName$d = "@ui5/webcomponents-icons";
y$1(name$d, { pathData: pathData$d, ltr: ltr$d, collection: collection$d, packageName: packageName$d });
const name$c = "status-negative";
const pathData$c = "M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0zm45 256l74-73q9-11 9-23 0-13-9.5-22.5T352 128q-12 0-23 9l-73 74-73-74q-10-9-23-9t-22.5 9.5T128 160q0 12 9 23l74 73-74 73q-9 10-9 23t9.5 22.5T160 384t23-9l73-74 73 74q11 9 23 9 13 0 22.5-9.5T384 352t-9-23z";
const ltr$c = false;
const collection$c = "SAP-icons-v5";
const packageName$c = "@ui5/webcomponents-icons";
y$1(name$c, { pathData: pathData$c, ltr: ltr$c, collection: collection$c, packageName: packageName$c });
const statusNegative = "status-negative";
const name$b = "status-positive";
const pathData$b = "M512 256q0 54-20 100.5t-54.5 81T356 492t-100 20q-54 0-100.5-20t-81-55T20 355.5 0 256t20.5-100 55-81.5T157 20t99-20q53 0 100 20t81.5 54.5T492 156t20 100zm-118-87q4-8-1-13l-36-36q-3-4-8-4t-8 5L237 294q-3 1-4 0l-70-52q-4-3-7-3t-4.5 2-2.5 3l-29 41q-6 8 2 14l113 95q2 2 7 2t8-4z";
const ltr$b = false;
const collection$b = "SAP-icons-v4";
const packageName$b = "@ui5/webcomponents-icons";
y$1(name$b, { pathData: pathData$b, ltr: ltr$b, collection: collection$b, packageName: packageName$b });
const name$a = "status-positive";
const pathData$a = "M256 0q53 0 100 20t81.5 54.5T492 156t20 100-20 100-54.5 81.5T356 492t-100 20-100-20-81.5-54.5T20 356 0 256t20-100 54.5-81.5T156 20 256 0zm150 183q10-9 10-23 0-13-9.5-22.5T384 128t-22 9L186 308l-68-63q-9-9-22-9t-22.5 9.5T64 268q0 15 10 24l91 83q9 9 21 9 13 0 23-9z";
const ltr$a = false;
const collection$a = "SAP-icons-v5";
const packageName$a = "@ui5/webcomponents-icons";
y$1(name$a, { pathData: pathData$a, ltr: ltr$a, collection: collection$a, packageName: packageName$a });
const statusPositive = "status-positive";
const name$9 = "status-critical";
const pathData$9 = "M501 374q5 10 7.5 19.5T512 412v5q0 31-23 47t-50 16H74q-13 0-26-4t-23.5-12-17-20T0 417q0-13 4-22.5t9-20.5L198 38q21-38 61-38 38 0 59 38zM257 127q-13 0-23.5 8T223 161q1 7 2 12 3 25 4.5 48t3.5 61q0 11 7.5 16t16.5 5q22 0 23-21l2-36 9-85q0-18-10.5-26t-23.5-8zm0 299q20 0 31.5-12t11.5-32q0-19-11.5-31T257 339t-31.5 12-11.5 31q0 20 11.5 32t31.5 12z";
const ltr$9 = false;
const collection$9 = "SAP-icons-v4";
const packageName$9 = "@ui5/webcomponents-icons";
y$1(name$9, { pathData: pathData$9, ltr: ltr$9, collection: collection$9, packageName: packageName$9 });
const name$8 = "status-critical";
const pathData$8 = "M505 399q7 13 7 27 0 21-15.5 37.5T456 480H56q-25 0-40.5-16.5T0 426q0-14 7-27L208 59q17-27 48-27 14 0 27 6.5T304 59zM288 176q0-14-9-23t-23-9-23 9-9 23v96q0 14 9 23t23 9 23-9 9-23v-96zm-32 240q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9z";
const ltr$8 = false;
const collection$8 = "SAP-icons-v5";
const packageName$8 = "@ui5/webcomponents-icons";
y$1(name$8, { pathData: pathData$8, ltr: ltr$8, collection: collection$8, packageName: packageName$8 });
const statusCritical = "status-critical";
const valueStateIconMappings = {
  "Negative": statusNegative,
  "Critical": statusCritical,
  "Positive": statusPositive,
  "Information": informationIcon
};
function ProgressIndicatorTemplate() {
  return jsxs("div", { class: {
    "ui5-progress-indicator-root": true,
    "ui5-progress-indicator-max-value": this.validatedValue === 100,
    "ui5-progress-indicator-min-value": this.validatedValue === 0
  }, role: "progressbar", "aria-valuemin": 0, "aria-valuenow": this.validatedValue, "aria-valuemax": 100, "aria-valuetext": this.valueStateText, "aria-label": this.accessibleName, children: [jsx("div", { class: "ui5-progress-indicator-bar", part: "bar", style: { "width": `${this.validatedValue}%`, "transition-duration": this.shouldAnimate ? `${this._transitionDuration}ms` : "none" }, children: !this.showValueInRemainingBar && valueLabel.call(this) }), jsx("div", { class: "ui5-progress-indicator-remaining-bar", part: "remaining-bar", children: this.showValueInRemainingBar && valueLabel.call(this) })] });
}
function valueLabel() {
  return jsxs(Fragment, { children: [this.showIcon && jsx(Icon$2, { name: valueStateIcon.call(this), class: "ui5-progress-indicator-icon" }), !this.hideValue && jsxs("span", { class: "ui5-progress-indicator-value", children: [" ", this.displayValue ? this.displayValue : `${this.validatedValue}%`] })] });
}
function valueStateIcon() {
  return valueStateIconMappings[this.valueState];
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const ProgressIndicatorCss = `:host(:not([hidden])){display:inline-block;min-height:var(_ui5_progress_indicator_host_min_height);min-width:4rem;width:100%;height:var(--_ui5-v2-14-0_progress_indicator_host_height);overflow:hidden;box-sizing:var(--_ui5-v2-14-0_progress_indicator_host_box_sizing);padding:var(--_ui5-v2-14-0_progress_indicator_padding);padding-inline-end:var(--_ui5-v2-14-0_progress_indicator_padding_end)}:host(:not([hidden])[hide-value]){padding-top:var(--_ui5-v2-14-0_progress_indicator_padding_novalue);padding-bottom:var(--_ui5-v2-14-0_progress_indicator_padding_novalue)}.ui5-progress-indicator-root{display:flex;align-items:center;background:var(--_ui5-v2-14-0_progress_indicator_background_none);border-radius:var(--_ui5-v2-14-0_progress_indicator_root_border_radius);overflow:var(--_ui5-v2-14-0_progress_indicator_root_overflow);min-height:var(--_ui5-v2-14-0_progress_indicator_root_min_height);height:var(--_ui5-v2-14-0_progress_indicator_root_height);width:100%;font-size:var(--sapProgress_FontSize);font-family:var(--sapFontFamily);position:var(--_ui5-v2-14-0_progress_indicator_root_position);box-sizing:border-box}.ui5-progress-indicator-bar{background:var(--_ui5-v2-14-0_progress_indicator_value_state_none);justify-content:flex-end;height:var(--_ui5-v2-14-0_progress_indicator_bar_height);display:flex;align-items:center;flex-direction:row;color:var(--_ui5-v2-14-0_progress_indicator_bar_color);transition-property:width;transition-timing-function:linear;box-sizing:border-box;border:var(--_ui5-v2-14-0_progress_indicator_bar_border_max);border-radius:var(--_ui5-v2-14-0_progress_indicator_bar_border_radius)}.ui5-progress-indicator-min-value .ui5-progress-indicator-bar,.ui5-progress-indicator-max-value .ui5-progress-indicator-remaining-bar{border:none}.ui5-progress-indicator-max-value .ui5-progress-indicator-bar{border-radius:.5rem}.ui5-progress-indicator-min-value .ui5-progress-indicator-remaining-bar{border-inline-start:var(--_ui5-v2-14-0_progress_indicator_border);border-radius:.5rem}.ui5-progress-indicator-remaining-bar{justify-content:flex-start;width:var(--_ui5-v2-14-0_progress_indicator_remaining_bar_width);height:100%;display:flex;align-items:center;flex-direction:row;flex-grow:1;flex-basis:0;border:var(--_ui5-v2-14-0_progress_indicator_border);border-inline-start:none;border-radius:var(--_ui5-v2-14-0_progress_indicator_remaining_bar_border_radius);box-sizing:border-box;color:var(--_ui5-v2-14-0_progress_indicator_color);overflow:var(--_ui5-v2-14-0_progress_indicator_remaining_bar_overflow);position:var(--_ui5-v2-14-0_progress_indicator_remaining_bar_position)}.ui5-progress-indicator-value{margin:var(--_ui5-v2-14-0_progress_indicator_value_margin);white-space:nowrap;overflow:hidden;text-overflow:ellipsis;max-width:100%;position:var(--_ui5-v2-14-0_progress_indicator_value_position);top:var(--_ui5-v2-14-0_progress_indicator_value_top_position);inset-inline-start:var(--_ui5-v2-14-0_progress_indicator_value_left_position)}.ui5-progress-indicator-icon{margin-inline-start:.375rem;width:var(--_ui5-v2-14-0_progress_indicator_icon_size);height:var(--_ui5-v2-14-0_progress_indicator_icon_size);display:var(--_ui5-v2-14-0_progress_indicator_icon_visibility);position:var(--_ui5-v2-14-0_progress_indicator_icon_position);inset-inline-end:var(--_ui5-v2-14-0_progress_indicator_icon_right_position)}:host([value-state="Negative"]) .ui5-progress-indicator-icon{color:var(--_ui5-v2-14-0_progress_indicator_value_state_error_icon_color)}:host([value-state="Critical"]) .ui5-progress-indicator-icon{color:var(--_ui5-v2-14-0_progress_indicator_value_state_warning_icon_color)}:host([value-state="Positive"]) .ui5-progress-indicator-icon{color:var(--_ui5-v2-14-0_progress_indicator_value_state_success_icon_color)}:host([value-state="Information"]) .ui5-progress-indicator-icon{color:var(--_ui5-v2-14-0_progress_indicator_value_state_information_icon_color)}:host([value-state="Negative"]) .ui5-progress-indicator-bar{background:var(--_ui5-v2-14-0_progress_indicator_value_state_error)}:host([value-state="Critical"]) .ui5-progress-indicator-bar{background:var(--_ui5-v2-14-0_progress_indicator_value_state_warning)}:host([value-state="Positive"]) .ui5-progress-indicator-bar{background:var(--_ui5-v2-14-0_progress_indicator_value_state_success)}:host([value-state="Information"]) .ui5-progress-indicator-bar{background:var(--_ui5-v2-14-0_progress_indicator_value_state_information)}:host([value-state="Negative"]) .ui5-progress-indicator-root{background:var(--_ui5-v2-14-0_progress_indicator_background_error)}:host([value-state="Critical"]) .ui5-progress-indicator-root{background:var(--_ui5-v2-14-0_progress_indicator_background_warning)}:host([value-state="Positive"]) .ui5-progress-indicator-root{background:var(--_ui5-v2-14-0_progress_indicator_background_success)}:host([value-state="Information"]) .ui5-progress-indicator-root{background:var(--_ui5-v2-14-0_progress_indicator_background_information)}:host([value-state="Negative"]) .ui5-progress-indicator-remaining-bar{border-color:var(--_ui5-v2-14-0_progress_indicator_border_color_error)}:host([value-state="Critical"]) .ui5-progress-indicator-remaining-bar{border-color:var(--_ui5-v2-14-0_progress_indicator_border_color_warning)}:host([value-state="Positive"]) .ui5-progress-indicator-remaining-bar{border-color:var(--_ui5-v2-14-0_progress_indicator_border_color_success)}:host([value-state="Information"]) .ui5-progress-indicator-remaining-bar{border-color:var(--_ui5-v2-14-0_progress_indicator_border_color_information)}.ui5-progress-indicator-remaining-bar:before,.ui5-progress-indicator-remaining-bar:after{content:"";display:block;width:.25rem;height:.25rem;position:absolute;border-radius:50%;display:var(--_ui5-v2-14-0_progress_indicator_side_points_visibility);background:var(--_ui5-v2-14-0_progress_indicator_value_state_none)}.ui5-progress-indicator-remaining-bar:before{left:.0625rem}.ui5-progress-indicator-remaining-bar:after{right:.0625rem}:host([value-state="Negative"]) .ui5-progress-indicator-remaining-bar:before,:host([value-state="Negative"]) .ui5-progress-indicator-remaining-bar:after{background:var(--sapProgress_Value_NegativeBackground)}:host([value-state="Critical"]) .ui5-progress-indicator-remaining-bar:before,:host([value-state="Critical"]) .ui5-progress-indicator-remaining-bar:after{background:var(--sapProgress_Value_CriticalBackground)}:host([value-state="Positive"]) .ui5-progress-indicator-remaining-bar:before,:host([value-state="Positive"]) .ui5-progress-indicator-remaining-bar:after{background:var(--sapProgress_Value_PositiveBackground)}:host([value-state="Information"]) .ui5-progress-indicator-remaining-bar:before,:host([value-state="Information"]) .ui5-progress-indicator-remaining-bar:after{background:var(--sapProgress_Value_InformationBackground)}
`;
var __decorate$4 = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var ProgressIndicator_1;
let ProgressIndicator$1 = ProgressIndicator_1 = class ProgressIndicator extends b$6 {
  constructor() {
    super();
    this.hideValue = false;
    this.value = 0;
    this.valueState = "None";
    this._previousValue = 0;
    this._transitionDuration = 0;
  }
  onBeforeRendering() {
    this._transitionDuration = Math.abs(this._previousValue - this.validatedValue) * 20;
    this._previousValue = this.validatedValue;
  }
  valueStateTextMappings() {
    return {
      "Negative": ProgressIndicator_1.i18nBundle.getText(VALUE_STATE_ERROR),
      "Critical": ProgressIndicator_1.i18nBundle.getText(VALUE_STATE_WARNING),
      "Positive": ProgressIndicator_1.i18nBundle.getText(VALUE_STATE_SUCCESS),
      "Information": ProgressIndicator_1.i18nBundle.getText(VALUE_STATE_INFORMATION)
    };
  }
  get validatedValue() {
    if (this.value < 0) {
      return 0;
    }
    if (this.value > 100) {
      return 100;
    }
    return this.value;
  }
  get showValueInRemainingBar() {
    return this.value <= 50;
  }
  get shouldAnimate() {
    return d() !== u$h.None;
  }
  get valueStateText() {
    const percentValue = `${this.validatedValue}%`;
    const valueText = this.valueStateTextMappings()[this.valueState];
    return valueText ? `${percentValue} ${valueText}` : percentValue;
  }
  get showIcon() {
    return this.valueState !== o$4.None;
  }
};
__decorate$4([
  s$7()
], ProgressIndicator$1.prototype, "accessibleName", void 0);
__decorate$4([
  s$7({ type: Boolean })
], ProgressIndicator$1.prototype, "hideValue", void 0);
__decorate$4([
  s$7({ type: Number })
], ProgressIndicator$1.prototype, "value", void 0);
__decorate$4([
  s$7()
], ProgressIndicator$1.prototype, "displayValue", void 0);
__decorate$4([
  s$7()
], ProgressIndicator$1.prototype, "valueState", void 0);
__decorate$4([
  i$8("@ui5/webcomponents")
], ProgressIndicator$1, "i18nBundle", void 0);
ProgressIndicator$1 = ProgressIndicator_1 = __decorate$4([
  m$7({
    tag: "ui5-progress-indicator",
    renderer: y$4,
    styles: ProgressIndicatorCss,
    template: ProgressIndicatorTemplate
  })
], ProgressIndicator$1);
ProgressIndicator$1.define();
const ProgressIndicator2 = withWebComponent("ui5-progress-indicator", ["accessibleName", "displayValue", "value", "valueState"], ["hideValue"], [], []);
ProgressIndicator2.displayName = "ProgressIndicator";
const name$7 = "less";
const pathData$7 = "M464 224q16 0 16 16v32q0 16-16 16H48q-6 0-11-4.5T32 272v-32q0-7 5-11.5t11-4.5h416z";
const ltr$7 = false;
const collection$7 = "SAP-icons-v4";
const packageName$7 = "@ui5/webcomponents-icons";
y$1(name$7, { pathData: pathData$7, ltr: ltr$7, collection: collection$7, packageName: packageName$7 });
const name$6 = "less";
const pathData$6 = "M454 275H58q-11 0-18.5-7T32 250t7.5-18.5T58 224h396q11 0 18.5 7.5T480 250t-7.5 18-18.5 7z";
const ltr$6 = false;
const collection$6 = "SAP-icons-v5";
const packageName$6 = "@ui5/webcomponents-icons";
y$1(name$6, { pathData: pathData$6, ltr: ltr$6, collection: collection$6, packageName: packageName$6 });
var SwitchDesign;
(function(SwitchDesign2) {
  SwitchDesign2["Textual"] = "Textual";
  SwitchDesign2["Graphical"] = "Graphical";
})(SwitchDesign || (SwitchDesign = {}));
const SwitchDesign$1 = SwitchDesign;
function SwitchTemplate() {
  return jsxs("div", { class: {
    "ui5-switch-root": true,
    "ui5-switch--desktop": f$i(),
    "ui5-switch--disabled": this.disabled,
    "ui5-switch--checked": this.checked,
    "ui5-switch--semantic": this.graphical,
    "ui5-switch--no-label": !(this.graphical || this.textOn || this.textOff),
    "ui5-switch--safari": h$9()
  }, role: "switch", "aria-label": this.ariaLabelText, "aria-checked": this.checked, "aria-disabled": this.effectiveAriaDisabled, "aria-required": this.required, onClick: this._onclick, onKeyUp: this._onkeyup, onKeyDown: this._onkeydown, tabindex: this.effectiveTabIndex, title: this.tooltip, children: [jsx("div", { class: "ui5-switch-inner", children: jsx("div", { class: "ui5-switch-track", part: "slider", children: jsxs("div", { class: "ui5-switch-slider", children: [this.graphical ? jsxs(Fragment, { children: [jsx("span", { class: "ui5-switch-text ui5-switch-text--on", children: jsx(Icon$2, { name: acceptIcon, class: "ui5-switch-icon-on" }) }), jsx("span", { class: "ui5-switch-text ui5-switch-text--off", children: jsx(Icon$2, { name: decline, class: "ui5-switch-icon-off" }) })] }) : jsx(Fragment, { children: this.hasNoLabel ? jsxs(Fragment, { children: [jsx("span", { class: "ui5-switch-text ui5-switch-text--on ui5-switch-no-label-icon", part: "text-on", children: jsx(Icon$2, { name: this.sapNextIcon, class: "ui5-switch-no-label-icon-on" }) }), jsx("span", { class: "ui5-switch-text ui5-switch-text--off ui5-switch-no-label-icon", part: "text-off", children: jsx(Icon$2, { name: this.sapNextIcon, class: "ui5-switch-no-label-icon-off" }) })] }) : jsxs(Fragment, { children: [jsx("span", { class: "ui5-switch-text ui5-switch-text--on", part: "text-on", children: this._textOn }), jsx("span", { class: "ui5-switch-text ui5-switch-text--off", part: "text-off", children: this._textOff })] }) }), jsx("span", { class: "ui5-switch-handle", part: "handle" })] }) }) }), jsx("input", { type: "checkbox", checked: this.checked, class: "ui5-switch-input", "data-sap-no-tab-ref": true })] });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const switchCss = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host{-webkit-tap-highlight-color:rgba(0,0,0,0)}:host(:not([hidden])){display:inline-block}.ui5-switch-root{position:relative;display:flex;align-items:center;width:var(--_ui5-v2-14-0_switch_width);height:var(--_ui5-v2-14-0_switch_height);min-width:var(--_ui5-v2-14-0_switch_min_width);cursor:pointer;outline:none;border-radius:var(--_ui5-v2-14-0-switch-root-border-radius)}.ui5-switch-root:not(.ui5-switch--no-label):not(.ui5-switch--semantic){width:var(--_ui5-v2-14-0_switch_with_label_width);height:var(--_ui5-v2-14-0_switch_height)}.ui5-switch-root.ui5-switch--no-label{min-width:var(--_ui5-v2-14-0_switch_width)}.ui5-switch-inner{display:flex;align-items:center;justify-content:center;height:100%;width:100%;min-width:inherit;overflow:hidden;pointer-events:none;will-change:transform}:host([checked]) .ui5-switch-inner{border-radius:6.25rem;box-shadow:var(--_ui5-v2-14-0-switch-root-box-shadow)}.ui5-switch-track{display:flex;align-items:center;height:var(--_ui5-v2-14-0_switch_track_height);width:var(--_ui5-v2-14-0_switch_track_width);border:var(--_ui5-v2-14-0-switch-track-border);border-radius:var(--_ui5-v2-14-0_switch_track_border_radius);box-sizing:border-box;transition:var(--_ui5-v2-14-0_switch_track_transition)}.ui5-switch-root:not(.ui5-switch--no-label):not(.ui5-switch--semantic) .ui5-switch-track{height:var(--_ui5-v2-14-0_switch_track_with_label_height);width:var(--_ui5-v2-14-0_switch_track_with_label_width)}.ui5-switch-slider{position:relative;height:var(--_ui5-v2-14-0_switch_height);width:100%;transition:transform .1s ease-in;transform-origin:top left}.ui5-switch-slider>*:not(.ui5-switch-handle){display:var(--_ui5-v2-14-0-switch-slider-texts-display)}.ui5-switch-handle{position:absolute;display:flex;justify-content:center;align-items:center;width:var(--_ui5-v2-14-0_switch_handle_width);height:var(--_ui5-v2-14-0_switch_handle_height);border:var(--_ui5-v2-14-0_switch_handle_border);border-radius:var(--_ui5-v2-14-0_switch_handle_border_radius);box-sizing:border-box}.ui5-switch-root:not(.ui5-switch--no-label):not(.ui5-switch--semantic) .ui5-switch-handle{height:var(--_ui5-v2-14-0_switch_handle_with_label_height);width:var(--_ui5-v2-14-0_switch_handle_with_label_width)}.ui5-switch-text{display:flex;justify-content:center;position:absolute;z-index:var(--_ui5-v2-14-0_switch_text_z_index);min-width:var(--_ui5-v2-14-0_switch_text_min_width);font-size:var(--_ui5-v2-14-0_switch_text_font_size);font-family:var(--_ui5-v2-14-0-switch-text_font_family);text-transform:uppercase;text-align:center;white-space:nowrap;user-select:none;-webkit-user-select:none}.ui5-switch-handle,.ui5-switch-text{inset-inline-start:var(--_ui5-v2-14-0_switch_handle_left);top:50%;transform:translateY(-50%)}.ui5-switch-root:focus-visible:after,.ui5-switch--desktop.ui5-switch-root:focus-within:after{content:"";position:absolute;inset-inline-start:var(--_ui5-v2-14-0_switch_root_outline_left);inset-inline-end:var(--_ui5-v2-14-0_switch_root_outline_right);top:var(--_ui5-v2-14-0_switch_root_outline_top);bottom:var(--_ui5-v2-14-0_switch_root_outline_bottom);border:var(--_ui5-v2-14-0_switch_focus_outline);border-radius:var(--_ui5-v2-14-0_switch_root_after_boreder_radius);pointer-events:none;transition:var(--_ui5-v2-14-0_switch_track_transition);outline:var(--_ui5-v2-14-0_switch_root_after_outline)}.ui5-switch-root .ui5-switch-input{position:absolute;inset-inline-start:0;width:0;height:0;margin:0;visibility:hidden;appearance:none;-webkit-appearance:none}.ui5-switch-root.ui5-switch--disabled{opacity:var(--_ui5-v2-14-0_switch_disabled_opacity);cursor:default}.ui5-switch-root.ui5-switch--checked .ui5-switch-text--off{visibility:var(--_ui5-v2-14-0_switch_text_hidden)}.ui5-switch-root:not(.ui5-switch--checked) .ui5-switch-text--on{visibility:var(--_ui5-v2-14-0_switch_text_hidden)}.ui5-switch-root.ui5-switch--checked.ui5-switch--semantic .ui5-switch-text--on,.ui5-switch-root.ui5-switch--checked.ui5-switch--desktop.ui5-switch--no-label .ui5-switch-text--on{inset-inline-start:var(--_ui5-v2-14-0_switch_text_active_left)}.ui5-switch-root:not(.ui5-switch--checked).ui5-switch--semantic .ui5-switch-text--off,.ui5-switch-root:not(.ui5-switch--checked).ui5-switch--desktop.ui5-switch--no-label .ui5-switch-text--off{inset-inline-start:var(--_ui5-v2-14-0_switch_text_inactive_left);inset-inline-end:var(--_ui5-v2-14-0_switch_text_inactive_right)}.ui5-switch-root.ui5-switch--checked .ui5-switch-handle{background:var(--_ui5-v2-14-0_switch_handle_active_background_color);border-color:var(--_ui5-v2-14-0_switch_handle_active_border_color)}.ui5-switch-root:not(.ui5-switch--checked) .ui5-switch-handle{background:var(--_ui5-v2-14-0_switch_handle_inactive_background_color);border-color:var(--_ui5-v2-14-0_switch_handle_inactive_border_color)}.ui5-switch--desktop.ui5-switch-root.ui5-switch--checked:not(.ui5-switch--disabled):hover .ui5-switch-handle{background:var(--_ui5-v2-14-0_switch_handle_hover_active_background_color);border-color:var(--_ui5-v2-14-0_switch_handle_hover_active_border_color)}.ui5-switch--desktop.ui5-switch-root:not(.ui5-switch--disabled):not(.ui5-switch--checked):hover .ui5-switch-handle{background:var(--_ui5-v2-14-0_switch_handle_hover_inactive_background_color);border-color:var(--_ui5-v2-14-0_switch_handle_hover_inactive_border_color)}.ui5-switch-root.ui5-switch--semantic.ui5-switch--checked .ui5-switch-handle{background:var(--_ui5-v2-14-0_switch_handle_semantic_accept_background_color);border-color:var(--_ui5-v2-14-0_switch_handle_semantic_accept_border_color)}.ui5-switch-root.ui5-switch--semantic:not(.ui5-switch--checked) .ui5-switch-handle{background:var(--_ui5-v2-14-0_switch_handle_semantic_reject_background_color);border-color:var(--_ui5-v2-14-0_switch_handle_semantic_reject_border_color)}.ui5-switch--desktop.ui5-switch-root.ui5-switch--semantic.ui5-switch--checked:not(.ui5-switch--disabled):hover .ui5-switch-handle{background:var(--_ui5-v2-14-0_switch_handle_semantic_hover_accept_background_color);border-color:var(--_ui5-v2-14-0_switch_handle_semantic_hover_accept_border_color)}.ui5-switch--desktop.ui5-switch--semantic.ui5-switch-root:not(.ui5-switch--checked):not(.ui5-switch--disabled):hover .ui5-switch-handle{background:var(--_ui5-v2-14-0_switch_handle_semantic_hover_reject_background_color);border-color:var(--_ui5-v2-14-0_switch_handle_semantic_hover_reject_border_color)}.ui5-switch-root.ui5-switch--checked .ui5-switch-track{background:var(--_ui5-v2-14-0_switch_track_active_background_color);border-color:var(--_ui5-v2-14-0_switch_track_active_border_color)}.ui5-switch-root:not(.ui5-switch--checked) .ui5-switch-track{background:var(--_ui5-v2-14-0_switch_track_inactive_background_color);border-color:var(--_ui5-v2-14-0_switch_track_inactive_border_color)}.ui5-switch--desktop.ui5-switch-root.ui5-switch--checked:not(.ui5-switch--disabled):hover .ui5-switch-track{background:var(--_ui5-v2-14-0_switch_track_hover_active_background_color);border-color:var(--_ui5-v2-14-0_switch_track_hover_active_border_color)}.ui5-switch--desktop.ui5-switch-root:not(.ui5-switch--checked):not(.ui5-switch--disabled):hover .ui5-switch-track{background:var(--_ui5-v2-14-0_switch_track_hover_inactive_background_color);border-color:var(--_ui5-v2-14-0_switch_track_hover_inactive_border_color)}.ui5-switch-root.ui5-switch--semantic.ui5-switch--checked .ui5-switch-track{background:var(--_ui5-v2-14-0_switch_track_semantic_accept_background_color);border-color:var(--_ui5-v2-14-0_switch_track_semantic_accept_border_color)}.ui5-switch-root.ui5-switch--semantic:not(.ui5-switch--checked) .ui5-switch-track{background:var(--_ui5-v2-14-0_switch_track_semantic_reject_background_color);border-color:var(--_ui5-v2-14-0_switch_track_semantic_reject_border_color)}.ui5-switch--desktop.ui5-switch-root.ui5-switch--semantic.ui5-switch--checked:not(.ui5-switch--disabled):hover .ui5-switch-track{background:var(--_ui5-v2-14-0_switch_track_semantic_hover_accept_background_color);border-color:var(--_ui5-v2-14-0_switch_track_semantic_hover_accept_border_color)}.ui5-switch--desktop.ui5-switch--semantic.ui5-switch-root:not(.ui5-switch--checked):not(.ui5-switch--disabled):hover .ui5-switch-track{background:var(--_ui5-v2-14-0_switch_track_semantic_hover_reject_background_color);border-color:var(--_ui5-v2-14-0_switch_track_semantic_hover_reject_border_color)}.ui5-switch-root.ui5-switch--checked:not(.ui5-switch--no-label):not(.ui5-switch--semantic) .ui5-switch-slider{transform:var(--_ui5-v2-14-0_switch_transform_with_label)}.ui5-switch-root.ui5-switch--checked .ui5-switch-slider{transform:var(--_ui5-v2-14-0_switch_transform)}.ui5-switch-text .ui5-switch-text--on .ui5-switch-no-label-icon,.ui5-switch-root.ui5-switch--semantic .ui5-switch-text,.ui5-switch-root.ui5-switch--no-label .ui5-switch-text{display:flex;justify-content:center}.ui5-switch--no-label .ui5-switch-no-label-icon-on,.ui5-switch--no-label .ui5-switch-no-label-icon-off{width:var(--_ui5-v2-14-0_switch_icon_width);height:var(--_ui5-v2-14-0_switch_icon_height);display:var(--_ui5-v2-14-0_switch_track_icon_display)}.ui5-switch-root.ui5-switch--semantic .ui5-switch-icon-on,.ui5-switch-root.ui5-switch--semantic .ui5-switch-icon-off{width:var(--_ui5-v2-14-0_switch_icon_width);height:var(--_ui5-v2-14-0_switch_icon_height)}.ui5-switch-root .ui5-switch-text{font-family:var(--_ui5-v2-14-0_switch_text_font_family);font-size:var(--_ui5-v2-14-0_switch_text_font_size);width:var(--_ui5-v2-14-0_switch_text_width)}.ui5-switch-root:not(.ui5-switch--no-label):not(.ui5-switch--semantic) .ui5-switch-text{font-family:var(--_ui5-v2-14-0_switch_text_with_label_font_family);font-size:var(--_ui5-v2-14-0_switch_text_with_label_font_size);width:var(--_ui5-v2-14-0_switch_text_with_label_width)}:host([active]) .ui5-switch--desktop.ui5-switch-root:not(.ui5-switch--disabled) .ui5-switch-track{background:var(--_ui5-v2-14-0-switch_track-off-active-background)}:host([active]) .ui5-switch--desktop.ui5-switch-root.ui5-switch--checked:not(.ui5-switch--disabled):hover .ui5-switch-track{background:var(--_ui5-v2-14-0-switch_track-on-active-background)}.ui5-switch--desktop.ui5-switch-root:not(.ui5-switch--disabled):hover .ui5-switch-handle{box-shadow:var(--_ui5-v2-14-0_switch_handle_off_hover_box_shadow)}.ui5-switch--desktop.ui5-switch-root.ui5-switch--checked:not(.ui5-switch--disabled):hover .ui5-switch-handle{box-shadow:var(--_ui5-v2-14-0_switch_handle_on_hover_box_shadow)}.ui5-switch--desktop.ui5-switch-root.ui5-switch--semantic:not(.ui5-switch--disabled):hover .ui5-switch-handle{box-shadow:var(--_ui5-v2-14-0_switch_handle_semantic_off_hover_box_shadow)}.ui5-switch--desktop.ui5-switch-root.ui5-switch--semantic.ui5-switch--checked:not(.ui5-switch--disabled):hover .ui5-switch-handle{box-shadow:var(--_ui5-v2-14-0_switch_handle_semantic_on_hover_box_shadow)}.ui5-switch-root.ui5-switch--semantic .ui5-switch-icon-on,.ui5-switch-root.ui5-switch--semantic .ui5-switch-text--on{color:var(--_ui5-v2-14-0_switch_text_semantic_accept_color)}.ui5-switch-root.ui5-switch--semantic .ui5-switch-icon-off,.ui5-switch-root.ui5-switch--semantic .ui5-switch-text--off{color:var(--_ui5-v2-14-0_switch_text_semantic_reject_color)}.ui5-switch-root .ui5-switch-text--on{color:var(--_ui5-v2-14-0_switch_text_active_color);overflow:var(--_ui5-v2-14-0_switch_text_overflow);text-overflow:ellipsis;inset-inline-start:var(--_ui5-v2-14-0_switch_text_active_left_alternate)}.ui5-switch-root .ui5-switch-text--off{color:var(--_ui5-v2-14-0_switch_text_inactive_color);overflow:var(--_ui5-v2-14-0_switch_text_overflow);text-overflow:ellipsis;inset-inline-start:var(--_ui5-v2-14-0_switch_text_inactive_left_alternate);inset-inline-end:var(--_ui5-v2-14-0_switch_text_inactive_right_alternate)}.ui5-switch-root.ui5-switch--safari .ui5-switch-text--on.ui5-switch-no-label-icon,.ui5-switch-root.ui5-switch--safari .ui5-switch-text--off.ui5-switch-no-label-icon{inset-inline-start:.1875rem}.ui5-switch-root .ui5-switch-no-label-icon-on,.ui5-switch-root .ui5-switch-icon-on{color:var(--_ui5-v2-14-0_switch_text_active_color)}.ui5-switch-root .ui5-switch-no-label-icon-off,.ui5-switch-root .ui5-switch-icon-off{color:var(--_ui5-v2-14-0_switch_text_inactive_color)}:dir(rtl).ui5-switch-root.ui5-switch--checked:not(.ui5-switch--no-label):not(.ui5-switch--semantic) .ui5-switch-slider{transform:var(--_ui5-v2-14-0_switch_rtl_transform_with_label)}:dir(rtl).ui5-switch-root.ui5-switch--checked .ui5-switch-slider{transform:var(--_ui5-v2-14-0_switch_rtl_transform)}
`;
var __decorate$3 = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var Switch_1;
let Switch$1 = Switch_1 = class Switch extends b$6 {
  constructor() {
    super(...arguments);
    this.design = "Textual";
    this.checked = false;
    this.disabled = false;
    this.required = false;
    this.value = "";
  }
  get formValidityMessage() {
    return Switch_1.i18nBundle.getText(FORM_CHECKABLE_REQUIRED);
  }
  get formValidity() {
    return { valueMissing: this.required && !this.checked };
  }
  async formElementAnchor() {
    return this.getFocusDomRefAsync();
  }
  get formFormattedValue() {
    if (this.checked) {
      return this.value || "on";
    }
    return null;
  }
  get sapNextIcon() {
    return this.checked ? "accept" : "less";
  }
  _onclick() {
    this.toggle();
  }
  _onkeydown(e2) {
    if (A$2(e2)) {
      e2.preventDefault();
    }
    if (b$4(e2)) {
      this._onclick();
    }
  }
  _onkeyup(e2) {
    if (A$2(e2)) {
      this._onclick();
    }
  }
  toggle() {
    if (!this.disabled) {
      this.checked = !this.checked;
      const changePrevented = !this.fireDecoratorEvent("change");
      const valueChangePrevented = !this.fireDecoratorEvent("value-changed");
      if (changePrevented || valueChangePrevented) {
        this.checked = !this.checked;
      }
    }
  }
  get graphical() {
    return this.design === SwitchDesign$1.Graphical;
  }
  get hasNoLabel() {
    return !(this.graphical || this.textOn || this.textOff);
  }
  get _textOn() {
    return this.graphical ? "" : this.textOn;
  }
  get _textOff() {
    return this.graphical ? "" : this.textOff;
  }
  get effectiveTabIndex() {
    return this.disabled ? void 0 : 0;
  }
  get effectiveAriaDisabled() {
    return this.disabled ? "true" : void 0;
  }
  get accessibilityOnText() {
    return this._textOn;
  }
  get accessibilityOffText() {
    return this._textOff;
  }
  get hiddenText() {
    return this.checked ? this.accessibilityOnText : this.accessibilityOffText;
  }
  get ariaLabelText() {
    return [A$3(this), this.hiddenText].join(" ").trim();
  }
};
__decorate$3([
  s$7()
], Switch$1.prototype, "design", void 0);
__decorate$3([
  s$7({ type: Boolean })
], Switch$1.prototype, "checked", void 0);
__decorate$3([
  s$7({ type: Boolean })
], Switch$1.prototype, "disabled", void 0);
__decorate$3([
  s$7()
], Switch$1.prototype, "textOn", void 0);
__decorate$3([
  s$7()
], Switch$1.prototype, "textOff", void 0);
__decorate$3([
  s$7()
], Switch$1.prototype, "accessibleName", void 0);
__decorate$3([
  s$7()
], Switch$1.prototype, "accessibleNameRef", void 0);
__decorate$3([
  s$7()
], Switch$1.prototype, "tooltip", void 0);
__decorate$3([
  s$7({ type: Boolean })
], Switch$1.prototype, "required", void 0);
__decorate$3([
  s$7()
], Switch$1.prototype, "name", void 0);
__decorate$3([
  s$7()
], Switch$1.prototype, "value", void 0);
__decorate$3([
  i$8("@ui5/webcomponents")
], Switch$1, "i18nBundle", void 0);
Switch$1 = Switch_1 = __decorate$3([
  m$7({
    tag: "ui5-switch",
    formAssociated: true,
    languageAware: true,
    styles: switchCss,
    renderer: y$4,
    template: SwitchTemplate
  }),
  l$b("change", {
    bubbles: true,
    cancelable: true
  }),
  l$b("value-changed", {
    bubbles: true,
    cancelable: true
  })
], Switch$1);
Switch$1.define();
const Switch2 = withWebComponent("ui5-switch", ["accessibleName", "accessibleNameRef", "design", "name", "textOff", "textOn", "tooltip", "value"], ["checked", "disabled", "required"], [], ["change"]);
Switch2.displayName = "Switch";
var SemanticColor;
(function(SemanticColor2) {
  SemanticColor2["Default"] = "Default";
  SemanticColor2["Positive"] = "Positive";
  SemanticColor2["Negative"] = "Negative";
  SemanticColor2["Critical"] = "Critical";
  SemanticColor2["Neutral"] = "Neutral";
})(SemanticColor || (SemanticColor = {}));
const SemanticColor$1 = SemanticColor;
let a$1 = null, l2 = Date.now();
const s = 300, D = (g2) => (u3, i3, e2) => {
  const o2 = e2.value;
  return e2.value = function(t3) {
    let n2 = false;
    if (t3.target instanceof HTMLElement) {
      const r3 = t3.target.closest(g2);
      r3 === a$1 && Date.now() - l2 >= s ? n2 = true : r3 !== a$1 && (a$1 = r3, l2 = Date.now());
    }
    o2.apply(this, [t3, n2]);
  }, e2;
};
var TabContainerTabsPlacement;
(function(TabContainerTabsPlacement2) {
  TabContainerTabsPlacement2["Top"] = "Top";
  TabContainerTabsPlacement2["Bottom"] = "Bottom";
})(TabContainerTabsPlacement || (TabContainerTabsPlacement = {}));
const TabContainerTabsPlacement$1 = TabContainerTabsPlacement;
var TabLayout;
(function(TabLayout2) {
  TabLayout2["Inline"] = "Inline";
  TabLayout2["Standard"] = "Standard";
})(TabLayout || (TabLayout = {}));
const TabLayout$1 = TabLayout;
var OverflowMode;
(function(OverflowMode2) {
  OverflowMode2["End"] = "End";
  OverflowMode2["StartAndEnd"] = "StartAndEnd";
})(OverflowMode || (OverflowMode = {}));
const OverflowMode$1 = OverflowMode;
function TabContainerPopoverTemplate() {
  return jsxs(ResponsivePopover$1, { id: `${this._id}-overflowMenu`, horizontalAlign: "End", placement: "Bottom", contentOnlyOnDesktop: true, hideArrow: true, _hideHeader: true, class: "ui5-tab-container-responsive-popover", onDragStart: this._onDragStart, children: [jsx(List, { selectionMode: "Single", separators: "None", onItemClick: this._onOverflowListItemClick, onMoveOver: this._onPopoverListMoveOver, onMove: this._onPopoverListMove, onKeyDown: this._onPopoverListKeyDown, children: this._popoverItemsFlat.map((item) => item.overflowPresentation) }), jsx("div", { slot: "footer", class: "ui5-responsive-popover-footer", children: jsx(Button$2, { design: "Transparent", onClick: this._closePopover, children: this.popoverCancelButtonText }) })] });
}
function contentArea() {
  return jsx("div", { class: {
    "ui5-tc__content": true,
    "ui5-tc__content--collapsed": this._contentCollapsed
  }, part: "content", children: jsx("div", { class: "ui5-tc__contentItem", id: "ui5-tc-content", hidden: this._selectedTab?.effectiveHidden, role: "tabpanel", "aria-labelledby": this._selectedTab?._id, children: this.items.map((item) => jsx("slot", { name: item._effectiveSlotName })) }) });
}
const defaultPartials = {
  contentArea
};
function TabContainerTemplate(injectedPartials) {
  const partials = {
    ...defaultPartials,
    ...injectedPartials
  };
  return jsxs(Fragment, { children: [jsxs("div", { class: {
    "ui5-tc-root": true,
    "ui5-tc--textOnly": this.textOnly,
    "ui5-tc--withAdditionalText": this.withAdditionalText,
    "ui5-tc--standardTabLayout": this.standardTabLayout,
    "ui5-tc--noTabSelected": !this._selectedTab
  }, children: [this.tabsAtTheBottom && partials.contentArea.call(this), jsxs("div", { class: "ui5-tc__header", id: `${this._id}-header`, onFocusIn: this._onHeaderFocusin, onDragStart: this._onDragStart, onDragEnter: this._onHeaderDragEnter, onDragOver: this._onHeaderDragOver, onDrop: this._onHeaderDrop, onDragLeave: this._onHeaderDragLeave, part: "tabstrip", children: [jsx("div", { class: "ui5-tc__overflow ui5-tc__overflow--start", onClick: this._onOverflowClick, onKeyDown: this._onOverflowKeyDown, hidden: true, children: this.startOverflowButton.length ? jsx("slot", { name: "startOverflowButton" }) : (
    // else
    jsx(Button$2, { endIcon: this.overflowMenuIcon, "data-ui5-stable": "overflow-start", tabindex: -1, tooltip: this.overflowMenuTitle, accessibilityAttributes: this.overflowBtnAccessibilityAttributes, children: this._startOverflowText })
  ) }), jsx("div", { id: `${this._id}-tabStrip`, class: "ui5-tc__tabStrip", role: "tablist", "aria-describedby": this.tablistAriaDescribedById, onClick: this._onTabStripClick, onKeyDown: this._onTabStripKeyDown, onKeyUp: this._onTabStripKeyUp, children: this.items.map((item) => item.stripPresentation) }), jsx("div", { class: "ui5-tc__overflow ui5-tc__overflow--end", onClick: this._onOverflowClick, onKeyDown: this._onOverflowKeyDown, hidden: true, children: this.overflowButton.length ? jsx("slot", { name: "overflowButton" }) : jsx(Button$2, { endIcon: this.overflowMenuIcon, "data-ui5-stable": "overflow-end", tabindex: -1, tooltip: this.overflowMenuTitle, accessibilityAttributes: this.overflowBtnAccessibilityAttributes, children: this._endOverflowText }) }), jsx(DropIndicator$1, { orientation: "Vertical", ownerReference: this })] }), !this.tabsAtTheBottom && partials.contentArea.call(this), this.hasItems && jsx("span", { id: `${this._id}-invisibleText`, class: "ui5-hidden-text", children: this.accInvisibleText })] }), TabContainerPopoverTemplate.call(this)] });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const tabContainerCss = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:block;width:100%}.ui5-tc-root{display:flex;flex-direction:column;width:100%;height:100%;font-family:var(--sapFontHeaderFamily);font-size:1rem}.ui5-tc__header{position:relative;display:flex;align-items:center;background-color:var(--_ui5-v2-14-0_tc_header_background);--ui5-v2-14-0_tc_header_active_background_color: var(--_ui5-v2-14-0_tc_header_background);height:var(--_ui5-v2-14-0_tc_header_height);box-shadow:var(--_ui5-v2-14-0_tc_header_box_shadow);box-sizing:border-box}:host([tabs-placement="Bottom"]) .ui5-tc__header{border-top:var(--_ui5-v2-14-0_tc_header_border_bottom)}:host([header-background-design="Transparent"]) .ui5-tc__header{background-color:transparent;--ui5-v2-14-0_tc_header_active_background_color: transparent;box-shadow:none;border-bottom:.0625rem solid var(--sapObjectHeader_BorderColor)}:host([header-background-design="Translucent"]) .ui5-tc__header{background-color:var(--_ui5-v2-14-0_tc_header_background_translucent);--ui5-v2-14-0_tc_header_active_background_color: var(--_ui5-v2-14-0_tc_header_background_translucent)}.ui5-tc-root.ui5-tc--textOnly .ui5-tc__header{height:var(--_ui5-v2-14-0_tc_header_height_text_only)}.ui5-tc-root.ui5-tc--textOnly.ui5-tc--withAdditionalText.ui5-tc--standardTabLayout .ui5-tc__header{height:var(--_ui5-v2-14-0_tc_header_height_text_with_additional_text)}.ui5-tc__tabStrip{flex:1;display:flex;overflow:hidden;box-sizing:border-box;position:relative;white-space:nowrap}.ui5-tc__separator:focus{outline:none}.ui5-tc__overflow{flex:0 0 0}.ui5-tc__overflow.ui5-tc__overflow--end{padding-inline-start:.188rem;margin-inline-end:1rem}.ui5-tc__overflow.ui5-tc__overflow--start{margin-inline-start:1rem}.ui5-tc__overflow[hidden]{display:none}.ui5-tc__overflow>[ui5-button]{border-radius:.75rem;height:1.5rem;--_ui5-v2-14-0_button_focused_border_radius: .75rem}.ui5-tc__overflow>[ui5-button]:not([active]){color:var(--_ui5-v2-14-0_tc_overflow_text_color)}.ui5-tc__overflow>[ui5-button]:not([active]):hover{color:var(--_ui5-v2-14-0_tc_overflow_text_color)}.ui5-tc__overflow>[ui5-button][focused]{outline-offset:.125rem;--_ui5-v2-14-0_button_focused_border: none;outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor)}.ui5-tc-root.ui5-tc--textOnly .ui5-tc__content{height:calc(100% - var(--_ui5-v2-14-0_tc_header_height_text_only))}.ui5-tc__content{position:relative;display:flex;height:calc(100% - var(--_ui5-v2-14-0_tc_header_height));background-color:var(--_ui5-v2-14-0_tc_content_background);border-bottom:var(--_ui5-v2-14-0_tc_content_border_bottom);box-sizing:border-box}:host([tabs-placement="Bottom"]) .ui5-tc__content{border-top:var(--_ui5-v2-14-0_tc_content_border_bottom)}:host([content-background-design="Transparent"]) .ui5-tc__content{background-color:transparent}:host([content-background-design="Translucent"]) .ui5-tc__content{background-color:var(--_ui5-v2-14-0_tc_content_background_translucent)}:host([header-background-design="Transparent"]) .ui5-tc__content{border-bottom:none}.ui5-tc__content--collapsed{display:none}.ui5-tc--transparent .ui5-tc__content{background-color:transparent}.ui5-tc__contentItem{max-height:100%;display:flex;flex-grow:1;overflow:auto}.ui5-tc__contentItem[hidden]{display:none}.ui5-tc__header{padding:0}.ui5-tc__content{padding:1rem}:host([media-range="M"]) .ui5-tc__header,:host([media-range="L"]) .ui5-tc__header{padding:0 1rem}:host([media-range="M"]) .ui5-tc__content,:host([media-range="L"]) .ui5-tc__content{padding:1rem 2rem}:host([media-range="XL"]) .ui5-tc__header{padding:0 2rem}:host([media-range="XL"]) .ui5-tc__content{padding:1rem 3rem}.ui5-tc-root.ui5-tc--noTabSelected .ui5-tc__content{padding:0}
`;
var __decorate$2 = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var TabContainer_1;
const tabStyles = [];
const PAGE_UP_DOWN_SIZE = 5;
let TabContainer$1 = TabContainer_1 = class TabContainer extends b$6 {
  static registerTabStyles(styles2) {
    tabStyles.push(styles2);
  }
  constructor() {
    super();
    this.collapsed = false;
    this.tabLayout = "Standard";
    this.overflowMode = "End";
    this.headerBackgroundDesign = "Solid";
    this.contentBackgroundDesign = "Solid";
    this.tabsPlacement = "Top";
    this.noAutoSelection = false;
    this._animationRunning = false;
    this._contentCollapsed = false;
    this._startOverflowText = "0";
    this._endOverflowText = "More";
    this._popoverItemsFlat = [];
    this._itemsFlat = [];
    this._hasScheduledPopoverOpen = false;
    this._handleResizeBound = this._handleResize.bind(this);
    this._itemNavigation = new f$1(this, {
      getItemsCallback: () => this._getFocusableRefs(),
      skipItemsSize: PAGE_UP_DOWN_SIZE
    });
  }
  onBeforeRendering() {
    this._itemsFlat = this._flatten(this.items);
    if (!this._itemsFlat.length) {
      return;
    }
    const selectedTab = this._itemsFlat.find((tab) => !tab.isSeparator && tab.selected);
    if (selectedTab) {
      this._selectedTab = selectedTab;
    } else if (!this.noAutoSelection) {
      this._selectedTab = this._itemsFlat[0];
    } else {
      this._selectedTab = void 0;
    }
    walk(this.items, (item) => {
      if (!item.isSeparator) {
        item._selectedTabReference = this._selectedTab;
      }
    });
    this._sendStripPresentationInfos(this.items);
    if (!this._animationRunning) {
      this._contentCollapsed = this.collapsed;
    }
  }
  onAfterRendering() {
    if (!this.items.length) {
      return;
    }
    this._setItemsForStrip();
    if (!this.shadowRoot.contains(document.activeElement)) {
      const focusStart = this._getRootTab(this._selectedTab);
      if (focusStart) {
        this._itemNavigation.setCurrentItem(focusStart);
      }
    }
    if (this.responsivePopover?.open) {
      const popoverItems = this._getPopoverItemsFor(this._getPopoverOwner(this.responsivePopover.opener));
      if (popoverItems.length) {
        this._setPopoverItems(popoverItems);
      } else {
        this._closePopover();
      }
    }
  }
  onEnterDOM() {
    f$3.register(this._getHeader(), this._handleResizeBound);
    if (f$i()) {
      this.setAttribute("desktop", "");
    }
  }
  onExitDOM() {
    f$3.deregister(this._getHeader(), this._handleResizeBound);
  }
  _handleResize() {
    if (this.responsivePopover && this.responsivePopover.open) {
      this._closePopover();
    }
    this._width = this.offsetWidth;
    this._updateMediaRange(this._width);
  }
  _updateMediaRange(width) {
    this.mediaRange = i$q.getCurrentRange(i$q.RANGESETS.RANGE_4STEPS, width);
  }
  _sendStripPresentationInfos(items) {
    const setsize = this._getTabs().length;
    let posinset = 1;
    items.forEach((item) => {
      let info = {
        getElementInStrip: () => this.getDomRef().querySelector(`[id="${item._id}"]`)
      };
      if (!item.isSeparator) {
        info = {
          ...info,
          isInline: this.tabLayout === TabLayout$1.Inline,
          mixedMode: this.mixedMode,
          posinset,
          setsize,
          isTopLevelTab: items.some((i3) => i3 === item)
        };
        posinset++;
      }
      item.receiveStripInfo(info);
    });
  }
  _onHeaderFocusin(e2) {
    const tab = getTabInStrip(e2.target);
    if (tab) {
      this._itemNavigation.setCurrentItem(tab.realTabReference);
    }
  }
  _onDragStart(e2) {
    if (!e2.dataTransfer || !(e2.target instanceof HTMLElement)) {
      return;
    }
    e2.dataTransfer.dropEffect = "move";
    e2.dataTransfer.effectAllowed = "move";
    D$1.setDraggedElement(e2.target.realTabReference);
  }
  _onHeaderDragEnter(e2) {
    e2.preventDefault();
  }
  _onHeaderDragOver(e2, isLongDragOver) {
    if (!(e2.target instanceof HTMLElement) || !e2.target.closest("[data-ui5-stable=overflow-start],[data-ui5-stable=overflow-end],[role=tab],[role=separator]")) {
      this.dropIndicatorDOM.targetReference = null;
      return;
    }
    const draggedElement = D$1.getDraggedElement();
    const closestPosition = L2([...this._getTabStrip().querySelectorAll(`[role="tab"]:not([hidden])`)], e2.clientX, a$4.Horizontal);
    const overflowButton = e2.target.closest("[data-ui5-stable=overflow-start],[data-ui5-stable=overflow-end]");
    let popoverTarget = null;
    if (overflowButton) {
      popoverTarget = overflowButton;
      e2.preventDefault();
    } else if (closestPosition) {
      const dropTarget = closestPosition.element.realTabReference;
      if (dropTarget === draggedElement) {
        closestPosition.placements = closestPosition.placements.filter((placement2) => placement2 !== r$3.On);
      }
      const { targetReference, placement } = i$2(e2, this, closestPosition, dropTarget);
      this.dropIndicatorDOM.targetReference = targetReference;
      this.dropIndicatorDOM.placement = placement;
      if (placement === r$3.On && closestPosition.element.realTabReference.items.length) {
        popoverTarget = closestPosition.element;
      } else if (!placement) {
        this.dropIndicatorDOM.targetReference = null;
      }
    }
    if (popoverTarget && isLongDragOver) {
      this._showPopoverAt(popoverTarget, false, true);
    } else {
      this._closePopover();
    }
  }
  _onHeaderDrop(e2) {
    if (e2.target === this._getStartOverflowBtnDOM() || e2.target === this._getEndOverflowBtnDOM()) {
      return;
    }
    m(e2, this, this.dropIndicatorDOM.targetReference.realTabReference, this.dropIndicatorDOM.placement);
    this.dropIndicatorDOM.targetReference = null;
  }
  _moveHeaderItem(tab, e2) {
    if (!tab.movable) {
      return;
    }
    const headerItems = this.items.map((item) => item.getDomRefInStrip()).filter((item) => !item?.hasAttribute("hidden"));
    let positions = k2(headerItems, tab.getDomRefInStrip(), e2);
    positions = positions.map(({ element, placement }) => {
      while (element && element.realTabReference.hasAttribute("ui5-tab-separator") && placement === r$3.Before) {
        element = headerItems.at(headerItems.indexOf(element) - 1);
        placement = r$3.After;
      }
      while (element && element.realTabReference.hasAttribute("ui5-tab-separator") && placement === r$3.After) {
        element = headerItems.at(headerItems.indexOf(element) + 1);
        placement = r$3.Before;
      }
      return {
        element,
        placement
      };
    });
    const acceptedPosition = positions.find(({ element, placement }) => {
      return !this.fireDecoratorEvent("move-over", {
        source: {
          element: tab
        },
        destination: {
          element: element.realTabReference,
          placement
        }
      });
    });
    if (acceptedPosition) {
      this.fireDecoratorEvent("move", {
        source: {
          element: tab
        },
        destination: {
          element: acceptedPosition.element.realTabReference,
          placement: acceptedPosition.placement
        }
      });
      tab.focus();
    }
  }
  _onHeaderDragLeave(e2) {
    if (e2.relatedTarget instanceof Node && this.shadowRoot.contains(e2.relatedTarget)) {
      return;
    }
    this.dropIndicatorDOM.targetReference = null;
  }
  _onPopoverListMoveOver(e2) {
    const { destination, source } = e2.detail;
    const draggedElement = D$1.getDraggedElement();
    let destinationElement = destination.element.realTabReference;
    if (e2.detail.originalEvent instanceof KeyboardEvent) {
      const realTabReference = source.element.realTabReference;
      const siblings = this._findSiblings(realTabReference);
      let items = siblings;
      if (this.items.includes(realTabReference)) {
        items = siblings.filter((sibling) => {
          return e2.target.items.some((el) => el.realTabReference === sibling);
        });
      }
      const nextPosition = k2(items, realTabReference, e2.detail.originalEvent);
      destinationElement = nextPosition[0]?.element;
    }
    if (!destinationElement) {
      return;
    }
    if (destination.placement === r$3.On && (destinationElement.hasAttribute("ui5-tab-separator") || draggedElement === destinationElement)) {
      return;
    }
    if (draggedElement !== destinationElement && draggedElement.contains(destinationElement)) {
      return;
    }
    const placementAccepted = !this.fireDecoratorEvent("move-over", {
      source: {
        element: draggedElement
      },
      destination: {
        element: destinationElement,
        placement: destination.placement
      }
    });
    if (placementAccepted) {
      e2.preventDefault();
    } else {
      this.dropIndicatorDOM.targetReference = null;
    }
  }
  _onPopoverListMove(e2) {
    const { destination, source } = e2.detail;
    const draggedElement = D$1.getDraggedElement();
    let destinationElement = destination.element.realTabReference;
    if (e2.detail.originalEvent instanceof KeyboardEvent) {
      const realTabReference = source.element.realTabReference;
      const siblings = this._findSiblings(realTabReference);
      let items = siblings;
      if (this.items.includes(realTabReference)) {
        items = siblings.filter((sibling) => {
          return e2.target.items.some((el) => el.realTabReference === sibling);
        });
      }
      const nextPosition = k2(items, realTabReference, e2.detail.originalEvent);
      destinationElement = nextPosition[0]?.element;
    }
    if (!destinationElement) {
      return;
    }
    e2.preventDefault();
    this.fireDecoratorEvent("move", {
      source: {
        element: draggedElement
      },
      destination: {
        element: destinationElement,
        placement: destination.placement
      }
    });
    this.dropIndicatorDOM.targetReference = null;
    draggedElement.focus();
  }
  _onPopoverListKeyDown(e2) {
    if (C(e2)) {
      D$1.setDraggedElement(e2.target.realTabReference);
    }
  }
  async _onTabStripClick(e2) {
    const tab = getTabInStrip(e2.target);
    if (!tab || tab.realTabReference.disabled) {
      return;
    }
    e2.stopPropagation();
    e2.preventDefault();
    if (e2.target.hasAttribute("ui5-button")) {
      this._onTabExpandButtonClick(e2);
      return;
    }
    if (!tab.realTabReference.hasOwnContent && tab.realTabReference.tabs.length) {
      await this._togglePopover(tab);
      return;
    }
    this._onHeaderItemSelect(tab);
  }
  async _onTabExpandButtonClick(e2) {
    e2.stopPropagation();
    e2.preventDefault();
    let tabInstance;
    if (isTabInStrip(e2.target)) {
      tabInstance = e2.target;
    } else {
      tabInstance = getTabInStrip(e2.target);
    }
    if (tabInstance) {
      tabInstance.focus();
    }
    let opener2 = e2.target;
    if (e2.type === "keydown" && !e2.target.realTabReference.isSingleClickArea) {
      opener2 = e2.target.querySelector(".ui5-tab-expand-button [ui5-button]");
    }
    if (!tabInstance) {
      this._onHeaderItemSelect(opener2.parentElement);
      return;
    }
    await this._togglePopover(opener2, true);
  }
  _setPopoverInitialFocus() {
    const selectedTabInOverflow = this._getSelectedTabInOverflow();
    const tab = selectedTabInOverflow || this._getFirstFocusableItemInOverflow();
    this.responsivePopover.initialFocus = `${tab.realTabReference._id}-li`;
  }
  _getSelectedTabInOverflow() {
    return this.responsivePopover.content[0].items.find((item) => {
      return item.realTabReference && item.realTabReference.selected;
    });
  }
  _getFirstFocusableItemInOverflow() {
    return this.responsivePopover.content[0].items.find((item) => item.classList.contains("ui5-tab-overflow-item"));
  }
  _findTabInOverflow(realTab) {
    if (!this.responsivePopover.open) {
      return void 0;
    }
    return this.responsivePopover.content[0].items.find((item) => item.realTabReference === realTab);
  }
  _onTabStripKeyDown(e2) {
    const tab = getTabInStrip(e2.target);
    if (!tab) {
      return;
    }
    if (C(e2) && tab.realTabReference.movable && P(e2.key)) {
      this._moveHeaderItem(tab.realTabReference, e2);
      e2.preventDefault();
      return;
    }
    if (tab.realTabReference.disabled) {
      return;
    }
    if (b$4(e2)) {
      if (tab.realTabReference.isSingleClickArea) {
        this._onTabStripClick(e2);
      } else {
        this._onHeaderItemSelect(tab);
      }
    }
    if (A$2(e2)) {
      e2.preventDefault();
    }
    if (_(e2) || P$1(e2)) {
      if (tab.realTabReference.requiresExpandButton) {
        this._onTabExpandButtonClick(e2);
      }
      if (tab.realTabReference.isSingleClickArea) {
        this._onTabStripClick(e2);
      }
    }
  }
  _onTabStripKeyUp(e2) {
    const tab = getTabInStrip(e2.target);
    if (!tab || tab.realTabReference.disabled) {
      return;
    }
    if (A$2(e2)) {
      e2.preventDefault();
      if (tab.realTabReference.isSingleClickArea) {
        this._onTabStripClick(e2);
      } else {
        this._onHeaderItemSelect(tab);
      }
    }
  }
  _onHeaderItemSelect(tab) {
    if (!tab.hasAttribute("disabled")) {
      this._onItemSelect(tab.id);
    }
  }
  async _onOverflowListItemClick(e2) {
    e2.preventDefault();
    this._onItemSelect(e2.detail.item.id.slice(0, -3));
    this._closePopover();
    await f$h();
    const selectedTopLevel = this._getRootTab(this._selectedTab);
    selectedTopLevel?.getDomRefInStrip().focus();
  }
  /**
   * Returns all slotted tabs and their subTabs in a flattened array.
   * The order of tabs is depth-first.
   *
   * @public
   * @default []
   */
  get allItems() {
    return this._flatten(this.items);
  }
  _flatten(items) {
    const result = [];
    walk(items, (item) => {
      if (item.hasAttribute("ui5-tab") || item.hasAttribute("ui5-tab-separator")) {
        result.push(item);
      }
    });
    return result;
  }
  _onItemSelect(selectedTabId) {
    const selectedTabIndex = this._itemsFlat.findIndex((item) => item.__id === selectedTabId);
    const selectedTab = this._itemsFlat[selectedTabIndex];
    const selectionSuccessful = this.selectTab(selectedTab, selectedTabIndex);
    if (!selectionSuccessful) {
      return;
    }
    this._itemsFlat.forEach((item) => {
      if (!item.isSeparator) {
        item.selected = item === selectedTab;
      }
    });
  }
  /**
   * Fires the `tab-select` event and changes the internal reference for the currently selected tab.
   * If the event is prevented, the current tab is not changed.
   * @private
   * @param selectedTab selected tab instance
   * @param selectedTabIndex selected tab index for an array containing all tabs and sub tabs. **Note:** Use the method `allTabs` to get this array.
   * @returns true if the tab selection is successful, false if it was prevented
   */
  selectTab(selectedTab, selectedTabIndex) {
    if (!this.fireDecoratorEvent("tab-select", { tab: selectedTab, tabIndex: selectedTabIndex })) {
      return false;
    }
    this._selectedTab = selectedTab;
    return true;
  }
  slideContentDown(element) {
    return b2(element).promise();
  }
  slideContentUp(element) {
    return u2(element).promise();
  }
  async _onOverflowClick(e2) {
    if (e2.target.classList.contains("ui5-tc__overflow")) {
      return;
    }
    const overflow = e2.currentTarget;
    const isEndOverflow = overflow.classList.contains("ui5-tc__overflow--end");
    let opener2;
    if (isEndOverflow) {
      opener2 = this.overflowButton[0] || this._getEndOverflowBtnDOM();
    } else {
      opener2 = this.startOverflowButton[0] || this._getStartOverflowBtnDOM();
    }
    await this._togglePopover(opener2, true);
  }
  _sendOverflowPresentationInfos(items) {
    const semanticIcons = items.filter((item) => !item.isSeparator).some((tab) => tab.design !== SemanticColor$1.Default && tab.design !== SemanticColor$1.Neutral);
    walk(items, (item, level) => {
      item.receiveOverflowInfo({
        getElementInOverflow: () => {
          return this._findTabInOverflow(item);
        },
        style: {
          [d$g("--_ui5-tab-indentation-level")]: level,
          [d$g("--_ui5-tab-level-has-icon")]: semanticIcons ? "1" : "0"
        }
      });
    });
  }
  async _onOverflowKeyDown(e2) {
    const overflow = e2.currentTarget;
    const isEndOverflow = overflow.classList.contains("ui5-tc__overflow--end");
    const isStartOverflow = overflow.classList.contains("ui5-tc__overflow--start");
    if (_(e2) || isStartOverflow && D$3(e2) || isEndOverflow && R2(e2)) {
      e2.stopPropagation();
      e2.preventDefault();
      await this._onOverflowClick(e2);
    }
  }
  _setItemsForStrip() {
    const tabStrip = this._getTabStrip();
    let allItemsWidth = 0;
    const itemsDomRefs = this.items.map((item) => item.getDomRefInStrip());
    let allVisibleItemsWidth = 0;
    const selectedTab = this._getRootTab(this._selectedTab);
    const containerWidth = this._getTabStrip().offsetWidth;
    const selectedTabDomRef = selectedTab?.getDomRefInStrip();
    const visibleItemsDomRefs = itemsDomRefs.filter((item) => !item.hidden);
    visibleItemsDomRefs.forEach((item) => {
      allVisibleItemsWidth += this._getItemWidth(item);
    });
    const changeTabPosition = visibleItemsDomRefs.length !== itemsDomRefs.length && this.isModeStartAndEnd && selectedTabDomRef && visibleItemsDomRefs.indexOf(selectedTabDomRef) !== -1 && allVisibleItemsWidth < containerWidth && this._getItemWidth(selectedTabDomRef) < containerWidth;
    this._getStartOverflow().setAttribute("hidden", "");
    this._getEndOverflow().setAttribute("hidden", "");
    let firstVisibleIndex;
    if (changeTabPosition) {
      firstVisibleIndex = itemsDomRefs.indexOf(visibleItemsDomRefs[0]);
    }
    for (let i3 = 0; i3 < itemsDomRefs.length; i3++) {
      itemsDomRefs[i3].removeAttribute("hidden");
      itemsDomRefs[i3].removeAttribute("start-overflow");
      itemsDomRefs[i3].removeAttribute("end-overflow");
    }
    itemsDomRefs.forEach((item) => {
      allItemsWidth += this._getItemWidth(item);
    });
    const hasOverflow = tabStrip.offsetWidth < allItemsWidth;
    if (!hasOverflow) {
      return;
    }
    if (this.isModeStartAndEnd) {
      this._updateStartAndEndOverflow(itemsDomRefs, firstVisibleIndex);
      this._updateOverflowCounters();
    } else {
      this._updateEndOverflow(itemsDomRefs);
    }
  }
  _getRootTab(tab) {
    while (tab?.hasAttribute("ui5-tab")) {
      if (tab.parentElement?.hasAttribute("ui5-tabcontainer")) {
        break;
      }
      tab = tab.parentElement ?? void 0;
    }
    return tab;
  }
  _updateEndOverflow(itemsDomRefs) {
    this._getEndOverflow().removeAttribute("hidden");
    const selectedTab = this._getRootTab(this._selectedTab);
    const selectedTabDomRef = selectedTab?.getDomRefInStrip();
    const containerWidth = this._getTabStrip().offsetWidth;
    const selectedItemIndexAndWidth = this._getSelectedItemIndexAndWidth(itemsDomRefs, selectedTabDomRef);
    const lastVisibleTabIndex = this._findLastVisibleItem(itemsDomRefs, containerWidth, selectedItemIndexAndWidth.width);
    for (let i3 = lastVisibleTabIndex + 1; i3 < itemsDomRefs.length; i3++) {
      itemsDomRefs[i3].setAttribute("hidden", "");
      itemsDomRefs[i3].setAttribute("end-overflow", "");
    }
    this._endOverflowText = this.overflowButtonText;
  }
  _updateStartAndEndOverflow(itemsDomRefs, firstVisibleIndex) {
    let containerWidth = this._getTabStrip().offsetWidth;
    const selectedTab = this._getRootTab(this._selectedTab);
    const selectedTabDomRef = selectedTab?.getDomRefInStrip();
    const selectedItemIndexAndWidth = this._getSelectedItemIndexAndWidth(itemsDomRefs, selectedTabDomRef);
    const hasStartOverflow = this._hasStartOverflow(containerWidth, itemsDomRefs, selectedItemIndexAndWidth);
    const hasEndOverflow = this._hasEndOverflow(containerWidth, itemsDomRefs, selectedItemIndexAndWidth);
    let lastVisible;
    if (!hasStartOverflow) {
      this._getEndOverflow().removeAttribute("hidden");
      containerWidth = this._getTabStrip().offsetWidth;
      lastVisible = this._findLastVisibleItem(itemsDomRefs, containerWidth, selectedItemIndexAndWidth.width);
      for (let i3 = lastVisible + 1; i3 < itemsDomRefs.length; i3++) {
        itemsDomRefs[i3].setAttribute("hidden", "");
        itemsDomRefs[i3].setAttribute("end-overflow", "");
      }
      return;
    }
    if (!hasEndOverflow) {
      this._getStartOverflow().removeAttribute("hidden");
      containerWidth = this._getTabStrip().offsetWidth;
      if (!firstVisibleIndex) {
        firstVisibleIndex = this._findFirstVisibleItem(itemsDomRefs, containerWidth, selectedItemIndexAndWidth.width);
      }
      for (let i3 = firstVisibleIndex - 1; i3 >= 0; i3--) {
        itemsDomRefs[i3].setAttribute("hidden", "");
        itemsDomRefs[i3].setAttribute("start-overflow", "");
      }
      return;
    }
    this._getStartOverflow().removeAttribute("hidden");
    this._getEndOverflow().removeAttribute("hidden");
    containerWidth = this._getTabStrip().offsetWidth;
    if (!firstVisibleIndex) {
      firstVisibleIndex = this._findFirstVisibleItem(itemsDomRefs, containerWidth, selectedItemIndexAndWidth.width, selectedItemIndexAndWidth.index - 1);
    }
    lastVisible = this._findLastVisibleItem(itemsDomRefs, containerWidth, selectedItemIndexAndWidth.width, firstVisibleIndex);
    for (let i3 = firstVisibleIndex - 1; i3 >= 0; i3--) {
      itemsDomRefs[i3].setAttribute("hidden", "");
      itemsDomRefs[i3].setAttribute("start-overflow", "");
    }
    for (let i3 = lastVisible + 1; i3 < itemsDomRefs.length; i3++) {
      itemsDomRefs[i3].setAttribute("hidden", "");
      itemsDomRefs[i3].setAttribute("end-overflow", "");
    }
  }
  _hasStartOverflow(containerWidth, itemsDomRefs, selectedItemIndexAndWidth) {
    if (this._getStartOverflow().textContent !== "+0") {
      return true;
    }
    if (selectedItemIndexAndWidth.index === 0) {
      return false;
    }
    let leftItemsWidth = 0;
    for (let i3 = selectedItemIndexAndWidth.index - 1; i3 >= 0; i3--) {
      leftItemsWidth += this._getItemWidth(itemsDomRefs[i3]);
    }
    let hasStartOverflow = containerWidth < leftItemsWidth + selectedItemIndexAndWidth.width;
    if (!hasStartOverflow) {
      this._getEndOverflow().removeAttribute("hidden");
      containerWidth = this._getTabStrip().offsetWidth;
      hasStartOverflow = containerWidth < leftItemsWidth + selectedItemIndexAndWidth.width;
      this._getEndOverflow().setAttribute("hidden", "");
    }
    return hasStartOverflow;
  }
  _hasEndOverflow(containerWidth, itemsDomRefs, selectedItemIndexAndWidth) {
    if (selectedItemIndexAndWidth.index >= itemsDomRefs.length) {
      return false;
    }
    let rightItemsWidth = 0;
    for (let i3 = selectedItemIndexAndWidth.index; i3 < itemsDomRefs.length; i3++) {
      rightItemsWidth += this._getItemWidth(itemsDomRefs[i3]);
    }
    let hasEndOverflow = containerWidth < rightItemsWidth + selectedItemIndexAndWidth.width;
    if (!hasEndOverflow) {
      this._getStartOverflow().removeAttribute("hidden");
      containerWidth = this._getTabStrip().offsetWidth;
      hasEndOverflow = containerWidth < rightItemsWidth + selectedItemIndexAndWidth.width;
      this._getStartOverflow().setAttribute("hidden", "");
    }
    return hasEndOverflow;
  }
  _getItemWidth(itemDomRef) {
    const styles2 = window.getComputedStyle(itemDomRef);
    const margins = Number.parseInt(styles2.marginLeft) + Number.parseInt(styles2.marginRight);
    return itemDomRef.offsetWidth + margins;
  }
  _getSelectedItemIndexAndWidth(itemsDomRefs, selectedTabDomRef) {
    if (!selectedTabDomRef) {
      return {
        index: 0,
        width: 0
      };
    }
    let index = itemsDomRefs.indexOf(selectedTabDomRef);
    let width = selectedTabDomRef.offsetWidth;
    let selectedSeparator;
    if (itemsDomRefs[index - 1] && itemsDomRefs[index - 1].realTabReference.isSeparator) {
      selectedSeparator = itemsDomRefs[index - 1];
      width += this._getItemWidth(selectedSeparator);
    }
    itemsDomRefs.splice(index, 1);
    if (selectedSeparator) {
      itemsDomRefs.splice(index - 1, 1);
      index--;
    }
    return {
      index,
      width
    };
  }
  _findFirstVisibleItem(itemsDomRefs, containerWidth, selectedItemWidth, startIndex) {
    if (startIndex === void 0) {
      startIndex = itemsDomRefs.length - 1;
    }
    let lastVisible = startIndex + 1;
    for (let index = startIndex; index >= 0; index--) {
      const itemWidth = this._getItemWidth(itemsDomRefs[index]);
      if (containerWidth < selectedItemWidth + itemWidth) {
        break;
      }
      selectedItemWidth += itemWidth;
      lastVisible = index;
    }
    return lastVisible;
  }
  _findLastVisibleItem(itemsDomRefs, containerWidth, selectedItemWidth, startIndex = 0) {
    let lastVisibleIndex = startIndex - 1;
    let index = startIndex;
    for (; index < itemsDomRefs.length; index++) {
      const itemWidth = this._getItemWidth(itemsDomRefs[index]);
      if (containerWidth < selectedItemWidth + itemWidth) {
        break;
      }
      selectedItemWidth += itemWidth;
      lastVisibleIndex = index;
    }
    const prevItem = itemsDomRefs[index - 1];
    if (prevItem && prevItem.realTabReference.isSeparator) {
      lastVisibleIndex -= 1;
    }
    return lastVisibleIndex;
  }
  get isModeStartAndEnd() {
    return this.overflowMode === OverflowMode$1.StartAndEnd;
  }
  _updateOverflowCounters() {
    let startOverflowItemsCount = 0;
    let endOverflowItemsCount = 0;
    this._getTabs().map((tab) => tab.getDomRefInStrip()).forEach((tab) => {
      if (tab.hasAttribute("start-overflow")) {
        startOverflowItemsCount++;
      }
      if (tab.hasAttribute("end-overflow")) {
        endOverflowItemsCount++;
      }
    });
    this._startOverflowText = `+${startOverflowItemsCount}`;
    this._endOverflowText = `+${endOverflowItemsCount}`;
  }
  _getFocusableRefs() {
    if (!this.getDomRef()) {
      return [];
    }
    const focusableRefs = [];
    if (!this._getStartOverflow().hasAttribute("hidden")) {
      focusableRefs.push(this.startOverflowButton[0] || this._getStartOverflowBtnDOM());
    }
    this._getTabs().forEach((tab) => {
      const ref = tab.getDomRefInStrip();
      const focusable = ref && !ref.hasAttribute("hidden");
      if (focusable) {
        focusableRefs.push(tab);
      }
    });
    if (!this._getEndOverflow().hasAttribute("hidden")) {
      focusableRefs.push(this.overflowButton[0] || this._getEndOverflowBtnDOM());
    }
    return focusableRefs;
  }
  _getHeader() {
    return this.shadowRoot.querySelector(`#${this._id}-header`);
  }
  _getTabs() {
    return this.items.filter((item) => !item.isSeparator);
  }
  _getPopoverOwner(opener2) {
    if (opener2 === this._getStartOverflowBtnDOM() || opener2.slot === "startOverflowButton") {
      return "start-overflow";
    }
    if (opener2 === this._getEndOverflowBtnDOM() || opener2.slot === "overflowButton") {
      return "end-overflow";
    }
    return getTabInStrip(opener2);
  }
  _getPopoverItemsFor(targetOwner) {
    if (targetOwner === "start-overflow") {
      return this.items.filter((item) => {
        const stripRef = item.getDomRefInStrip();
        return stripRef && stripRef.hasAttribute("start-overflow");
      });
    }
    if (targetOwner === "end-overflow") {
      return this.items.filter((item) => {
        const stripRef = item.getDomRefInStrip();
        return stripRef && stripRef.hasAttribute("end-overflow");
      });
    }
    return targetOwner.realTabReference.items;
  }
  _setPopoverItems(items) {
    this._sendOverflowPresentationInfos(items);
    const newItemsFlat = this._flatten(items);
    if (!n$e(this._popoverItemsFlat, newItemsFlat)) {
      this._popoverItemsFlat = newItemsFlat;
    }
  }
  async _togglePopover(opener2, setInitialFocus = false) {
    this.responsivePopover = await this._respPopover();
    if (this.responsivePopover.open) {
      this._closePopover();
    } else {
      await this._showPopoverAt(opener2, setInitialFocus);
    }
  }
  async _showPopoverAt(opener2, setInitialFocus = false, preventInitialFocus = false) {
    this._hasScheduledPopoverOpen = true;
    this._setPopoverItems(this._getPopoverItemsFor(this._getPopoverOwner(opener2)));
    this.responsivePopover = await this._respPopover();
    if (setInitialFocus) {
      this._setPopoverInitialFocus();
    }
    if (this._hasScheduledPopoverOpen) {
      this.responsivePopover.preventInitialFocus = preventInitialFocus;
      this.responsivePopover.opener = opener2;
      this.responsivePopover.open = true;
    }
  }
  get hasItems() {
    const tabs = this._getTabs();
    for (let i3 = 0; i3 < tabs.length; i3++) {
      if (tabs[i3].items.length > 0) {
        return true;
      }
    }
    return false;
  }
  _getTabStrip() {
    return this.shadowRoot.querySelector(`#${this._id}-tabStrip`);
  }
  _getStartOverflow() {
    return this.shadowRoot.querySelector(".ui5-tc__overflow--start");
  }
  _getEndOverflow() {
    return this.shadowRoot.querySelector(".ui5-tc__overflow--end");
  }
  _getStartOverflowBtnDOM() {
    return this._getStartOverflow().querySelector("[ui5-button]");
  }
  _getEndOverflowBtnDOM() {
    return this._getEndOverflow().querySelector("[ui5-button]");
  }
  async _respPopover() {
    await f$h();
    return this.shadowRoot.querySelector(`#${this._id}-overflowMenu`);
  }
  _closePopover() {
    this._hasScheduledPopoverOpen = false;
    if (this.responsivePopover) {
      this.responsivePopover.open = false;
    }
  }
  get dropIndicatorDOM() {
    return this.shadowRoot.querySelector("[ui5-drop-indicator]");
  }
  _findSiblings(tab) {
    let parent;
    walk(this.items, (item) => {
      if (item.items && item.items.includes(tab)) {
        parent = item;
      }
    });
    return (parent ?? this).items;
  }
  get mixedMode() {
    const tabs = this._getTabs();
    return tabs.some((item) => item.icon) && tabs.some((item) => item.text);
  }
  get textOnly() {
    return this._getTabs().every((item) => !item.icon);
  }
  get withAdditionalText() {
    return this._getTabs().some((item) => !!item.additionalText);
  }
  get standardTabLayout() {
    return this.tabLayout === TabLayout$1.Standard;
  }
  get previousIconACCName() {
    return TabContainer_1.i18nBundle.getText(TABCONTAINER_PREVIOUS_ICON_ACC_NAME);
  }
  get nextIconACCName() {
    return TabContainer_1.i18nBundle.getText(TABCONTAINER_NEXT_ICON_ACC_NAME);
  }
  get overflowMenuTitle() {
    return TabContainer_1.i18nBundle.getText(TABCONTAINER_OVERFLOW_MENU_TITLE);
  }
  get tabsAtTheBottom() {
    return this.tabsPlacement === TabContainerTabsPlacement$1.Bottom;
  }
  get overflowMenuIcon() {
    return this.tabsAtTheBottom ? "slim-arrow-up" : "slim-arrow-down";
  }
  get overflowButtonText() {
    return TabContainer_1.i18nBundle.getText(TABCONTAINER_END_OVERFLOW);
  }
  get popoverCancelButtonText() {
    return TabContainer_1.i18nBundle.getText(TABCONTAINER_POPOVER_CANCEL_BUTTON);
  }
  get accInvisibleText() {
    return TabContainer_1.i18nBundle.getText(TABCONTAINER_SUBTABS_DESCRIPTION);
  }
  get overflowBtnAccessibilityAttributes() {
    return {
      hasPopup: "menu"
    };
  }
  get tablistAriaDescribedById() {
    return this.hasItems ? `${this._id}-invisibleText` : void 0;
  }
};
__decorate$2([
  s$7({ type: Boolean })
], TabContainer$1.prototype, "collapsed", void 0);
__decorate$2([
  s$7()
], TabContainer$1.prototype, "tabLayout", void 0);
__decorate$2([
  s$7()
], TabContainer$1.prototype, "overflowMode", void 0);
__decorate$2([
  s$7()
], TabContainer$1.prototype, "headerBackgroundDesign", void 0);
__decorate$2([
  s$7()
], TabContainer$1.prototype, "contentBackgroundDesign", void 0);
__decorate$2([
  s$7()
], TabContainer$1.prototype, "tabsPlacement", void 0);
__decorate$2([
  s$7({ type: Boolean })
], TabContainer$1.prototype, "noAutoSelection", void 0);
__decorate$2([
  s$7()
], TabContainer$1.prototype, "mediaRange", void 0);
__decorate$2([
  s$7({ type: Object })
], TabContainer$1.prototype, "_selectedTab", void 0);
__decorate$2([
  s$7({ type: Boolean, noAttribute: true })
], TabContainer$1.prototype, "_animationRunning", void 0);
__decorate$2([
  s$7({ type: Boolean, noAttribute: true })
], TabContainer$1.prototype, "_contentCollapsed", void 0);
__decorate$2([
  s$7({ noAttribute: true })
], TabContainer$1.prototype, "_startOverflowText", void 0);
__decorate$2([
  s$7({ noAttribute: true })
], TabContainer$1.prototype, "_endOverflowText", void 0);
__decorate$2([
  s$7({ type: Array })
], TabContainer$1.prototype, "_popoverItemsFlat", void 0);
__decorate$2([
  s$7({ type: Number, noAttribute: true })
], TabContainer$1.prototype, "_width", void 0);
__decorate$2([
  d$4({
    "default": true,
    type: HTMLElement,
    individualSlots: true,
    invalidateOnChildChange: {
      properties: true,
      slots: true
    }
  })
], TabContainer$1.prototype, "items", void 0);
__decorate$2([
  d$4()
], TabContainer$1.prototype, "overflowButton", void 0);
__decorate$2([
  d$4()
], TabContainer$1.prototype, "startOverflowButton", void 0);
__decorate$2([
  D("[data-ui5-stable=overflow-start],[data-ui5-stable=overflow-end],[role=tab]")
], TabContainer$1.prototype, "_onHeaderDragOver", null);
__decorate$2([
  i$8("@ui5/webcomponents")
], TabContainer$1, "i18nBundle", void 0);
TabContainer$1 = TabContainer_1 = __decorate$2([
  m$7({
    tag: "ui5-tabcontainer",
    languageAware: true,
    fastNavigation: true,
    styles: [
      tabStyles,
      tabContainerCss,
      ResponsivePopoverCommonCss
    ],
    renderer: y$4,
    template: TabContainerTemplate
  }),
  l$b("tab-select", {
    bubbles: true,
    cancelable: true
  }),
  l$b("move-over", {
    bubbles: true,
    cancelable: true
  }),
  l$b("move", {
    bubbles: true
  })
], TabContainer$1);
const isTabInStrip = (el) => el.localName === "div" && el.getAttribute("role") === "tab";
const getTabInStrip = (el) => {
  while (el) {
    if (isTabInStrip(el)) {
      return el;
    }
    el = el.parentElement;
  }
  return false;
};
const _walk = (items, callback, level) => {
  [...items].forEach((item) => {
    callback(item, level);
    if (item.hasAttribute("ui5-tab") && item.items) {
      _walk(item.items, callback, level + 1);
    }
  });
};
const walk = (items, callback) => {
  _walk(items, callback, 0);
};
TabContainer$1.define();
const TabContainer$2 = TabContainer$1;
function TabTemplate() {
  return jsxs("div", { id: this._id, class: "ui5-tab-root", "data-ui5-stable": this.stableDomRef, children: [jsx("slot", { name: this._defaultSlotName }), this.tabs.map((tab) => jsx("slot", { name: tab._effectiveSlotName }))] });
}
function additionalText() {
  return jsx("span", { class: this.stripClasses.additionalTextClasses, id: `${this._id}-additionalText`, children: this.additionalText });
}
function TabInStripTemplate() {
  return jsxs("div", { id: this._id, class: this.stripClasses.itemClasses, tabindex: -1, role: "tab", "aria-roledescription": this._roleDescription, "aria-haspopup": this._ariaHasPopup, "aria-posinset": this._forcedPosinset, "aria-setsize": this._forcedSetsize, "aria-controls": "ui5-tc-content", "aria-selected": this.effectiveSelected, "aria-disabled": this.effectiveDisabled, "aria-labelledby": this.ariaLabelledBy, draggable: this.movable, onDragStart: this._ondragstart, onDragEnd: this._ondragend, ref: this.captureRef.bind(this), children: [this.icon && jsx("div", { class: "ui5-tab-strip-item-icon-outer", children: jsx(Icon$2, { id: `${this._id}-icon`, name: this.icon, class: "ui5-tab-strip-item-icon" }) }), this._designDescription && jsx("div", { id: `${this._id}-designDescription`, class: "ui5-tab-strip-design-description", children: this._designDescription }), jsxs("div", { class: "ui5-tab-strip-itemContent", children: [!this._isInline && additionalText.call(this), this.text && jsxs("span", { class: "ui5-tab-strip-itemText", id: `${this._id}-text`, children: [this.semanticIconName && jsx(Icon$2, { class: this.semanticIconClasses, name: this.semanticIconName }), this.displayText, this.isSingleClickArea && jsx("span", { class: "ui5-tab-single-click-icon", children: jsx(Icon$2, { name: iconArrowDown }) })] })] }), this.requiresExpandButton && jsxs(Fragment, { children: [jsx("div", { class: "ui5-tab-expand-button-separator" }), jsx("div", { class: "ui5-tab-expand-button", children: jsx(Button$2, { ref: this.captureButtonRef.bind(this), icon: iconArrowDown, design: "Transparent", tabindex: -1, disabled: this.disabled, tooltip: this.expandButtonTitle, accessibilityAttributes: this.expandBtnAccessibilityAttributes }) })] })] });
}
function TabInOverflowTemplate() {
  return jsx(ListItemCustom$1, { id: `${this._id}-li`, class: this.overflowClasses, style: this._forcedStyleInOverflow, type: this.overflowState, disabled: this.effectiveDisabled, selected: this.selected, movable: this.movable, ref: this.captureRef.bind(this), children: jsx("div", { class: "ui5-tab-overflow-itemContent-wrapper", children: jsxs("div", { class: "ui5-tab-overflow-itemContent", children: [this.semanticIconName && jsx(Icon$2, { class: this.semanticIconClasses, name: this.semanticIconName }), this.icon && jsx(Icon$2, { name: this.icon }), this.text, this.additionalText && jsxs(Fragment, { children: [" (", this.additionalText, ")"] }), this._designDescription && jsx("div", { id: `${this._id}-designDescription`, class: "ui5-hidden-text", children: this._designDescription })] }) }) });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const css = `:host{display:inline-block;width:100%}.ui5-tab-root{width:100%;height:100%}
`;
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const stripCss = `.ui5-tab-semantic-icon{display:var(--_ui5-v2-14-0_tc_headerItemSemanticIcon_display);height:var(--_ui5-v2-14-0_tc_headerItemSemanticIcon_size);width:var(--_ui5-v2-14-0_tc_headerItemSemanticIcon_size);margin-inline-end:.5rem}.ui5-tab-semantic-icon--positive{color:var(--sapPositiveTextColor)}.ui5-tab-semantic-icon--negative{color:var(--sapNegativeTextColor)}.ui5-tab-semantic-icon--critical{color:var(--sapCriticalTextColor)}.ui5-tab-strip-item{height:var(--_ui5-v2-14-0_tc_header_height);color:var(--_ui5-v2-14-0_tc_headerItem_color);cursor:pointer;padding:0 var(--_ui5-v2-14-0_tc_headeritem_padding);font-size:var(--sapFontSmallSize);font-weight:var(--_ui5-v2-14-0_tc_headeritem_text_font_weight);position:relative;display:flex;align-items:center;justify-content:center;flex-shrink:0;min-width:2rem;max-width:100%;box-sizing:border-box;outline:none}.ui5-tab-strip-item[data-moving]{background-color:var(--ui5-v2-14-0_tc_header_active_background_color)}.ui5-tab-strip-itemText{position:relative;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ui5-tc__separator[hidden],.ui5-tab-strip-item[hidden],.ui5-tab-strip-item--textOnly[hidden],.ui5-tab-strip-item.ui5-tab-strip-item--textOnly.ui5-tab-strip-item--inline[hidden],.ui5-tab-strip-design-description{display:none}.ui5-tab-strip-itemContent{display:flex;height:100%;min-width:0;justify-content:center;flex-direction:column;border:var(--_ui5-v2-14-0_tc_headerItemContent_default_focus_border);border-radius:var(--_ui5-v2-14-0_tc_headerItemContent_focus_border_radius);transition:var(--_ui5-v2-14-0_tc_headerItem_transition)}.ui5-tab-expand-button{display:flex;flex-direction:column;justify-content:center;position:relative;z-index:1;background-color:var(--_ui5-v2-14-0_tc_header_background);padding-inline-end:.188rem}.ui5-tab-expand-button>[ui5-button]{height:1.5rem;min-width:1.5rem;margin-inline-start:var(--_ui5-v2-14-0_tc_headerItem_expand_button_margin_inline_start);--_ui5-v2-14-0_button_border_radius: var(--_ui5-v2-14-0_tc_headerItem_expand_button_border_radius);--_ui5-v2-14-0_button_focused_border_radius: var(--_ui5-v2-14-0_tc_headerItem_expand_button_border_radius)}.ui5-tab-expand-button>[ui5-button]:not([active]){color:var(--_ui5-v2-14-0_tc_headerItem_color)}.ui5-tab-strip-item--selected .ui5-tab-expand-button>[ui5-button]:not([active]){color:var(--_ui5-v2-14-0_tc_headerItem_text_selected_color)}.ui5-tab-expand-button>[ui5-button]:hover:not([active]){color:var(--_ui5-v2-14-0_tc_headerItem_text_selected_hover_color)}.ui5-tab-expand-button-separator{display:var(--_ui5-v2-14-0_tc_headerItem_expand_button_separator_display);position:relative;width:.0625rem;right:-.0625rem;height:.625rem;background:var(--sapTextColor);margin-inline-start:.0625rem;z-index:2;margin-left:.625rem}.ui5-tab-expand-button:hover{z-index:2}.ui5-tab-strip-item--selected .ui5-tab-expand-button-separator{background:var(--_ui5-v2-14-0_tc_headerItem_text_selected_color)}.ui5-tab-single-click-icon{margin-inline-start:var(--_ui5-v2-14-0_tc_headerItem_single_click_expand_button_margin_inline_start)}.ui5-tab-strip-item--selected.ui5-tab-strip-item--textOnly{color:var(--_ui5-v2-14-0_tc_headerItem_text_selected_color)}.ui5-tab-strip-item--selected.ui5-tab-strip-item--singleClickArea .ui5-tab-strip-itemText .ui5-tab-single-click-icon>[ui5-icon]{color:var(--_ui5-v2-14-0_tc_headerItem_text_selected_color)}.ui5-tab-strip-item--singleClickArea .ui5-tab-strip-itemText{display:flex;align-items:center}.ui5-tab-strip-item--singleClickArea .ui5-tab-strip-itemText .ui5-tab-single-click-icon{display:flex}.ui5-tab-strip-item--singleClickArea .ui5-tab-strip-itemText .ui5-tab-single-click-icon>[ui5-icon]{color:var(--_ui5-v2-14-0_tc_headerItem_color)}.ui5-tab-strip-item--textOnly:not(.ui5-tab-strip-item--twoClickArea):not(.ui5-tab-strip-item--selected):not(.ui5-tab-strip-item--negative):hover,.ui5-tab-strip-item--twoClickArea:not(.ui5-tab-strip-item--selected):not(.ui5-tab-strip-item--negative) .ui5-tab-strip-itemContent:hover,.ui5-tab-strip-item--singleClickArea:not(.ui5-tab-strip-item--selected):not(.ui5-tab-strip-item--disabled):hover .ui5-tab-single-click-icon>[ui5-icon]{color:var(--_ui5-v2-14-0_tc_headerItem_text_hover_color)}.ui5-tab-strip-item--selected.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--selected.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer:after{content:"";position:absolute;bottom:0;left:0;right:0;border-bottom:var(--sapTab_Selected_Indicator_Dimension) solid var(--sapTab_ForegroundColor);border-radius:var(--_ui5-v2-14-0_tc_headerItemContent_border_radius);background-color:var(--_ui5-v2-14-0_tc_headerItemContent_border_bg);height:var(--_ui5-v2-14-0_tc_headerItemContent_border_height)}.ui5-tab-strip-item--selected.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--selected.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemContent:after{left:var(--_ui5-v2-14-0_tc_headeritem_padding);right:var(--_ui5-v2-14-0_tc_headeritem_padding)}.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer:after{bottom:-.9375rem}.ui5-tab-strip-item--disabled{cursor:default;opacity:var(--sapContent_DisabledOpacity)}:host([desktop]) .ui5-tab-strip-item--textOnly:focus:not([data-moving]) .ui5-tab-strip-itemText:before,.ui5-tab-strip-item--textOnly:focus-visible:not([data-moving]) .ui5-tab-strip-itemText:before,:host([desktop]) .ui5-tab-strip-item--inline.ui5-tab-strip-item--textOnly:focus:not([data-moving]) .ui5-tab-strip-itemText:before,.ui5-tab-strip-item--inline.ui5-tab-strip-item--textOnly:focus-visible:not([data-moving]) .ui5-tab-strip-itemText:before{border-radius:var(--_ui5-v2-14-0_tc_headerItem_focus_border_radius);content:"";pointer-events:none;position:absolute;border:var(--_ui5-v2-14-0_tc_headerItem_focus_border);left:var(--_ui5-v2-14-0_tc_headerItem_text_focus_border_offset_left);right:var(--_ui5-v2-14-0_tc_headerItem_text_focus_border_offset_right);top:var(--_ui5-v2-14-0_tc_headerItem_text_focus_border_offset_top);bottom:var(--_ui5-v2-14-0_tc_headerItem_text_focus_border_offset_bottom)}:host([desktop]) .ui5-tab-strip-item--mixedMode:focus:not([data-moving]) .ui5-tab-strip-itemContent:before,.ui5-tab-strip-item--mixedMode:focus-visible:not([data-moving]) .ui5-tab-strip-itemContent:before{border-radius:var(--_ui5-v2-14-0_tc_headerItem_focus_border_radius);content:"";pointer-events:none;position:absolute;border:var(--_ui5-v2-14-0_tc_headerItem_focus_border);left:var(--_ui5-v2-14-0_tc_headerItem_mixed_mode_focus_border_offset_left);right:var(--_ui5-v2-14-0_tc_headerItem_mixed_mode_focus_border_offset_right);top:var(--_ui5-v2-14-0_tc_headerItem_mixed_mode_focus_border_offset_top);bottom:var(--_ui5-v2-14-0_tc_headerItem_mixed_mode_focus_border_offset_bottom)}:host([desktop]) .ui5-tab-strip-item--withIcon:focus:not([data-moving]) .ui5-tab-strip-item-icon-outer:before,.ui5-tab-strip-item--withIcon:focus-visible:not([data-moving]) .ui5-tab-strip-item-icon-outer:before{content:"";pointer-events:none;position:absolute;border:var(--_ui5-v2-14-0_tc_headerItem_focus_border);left:var(--_ui5-v2-14-0_tc_headerItem_focus_border_offset);right:var(--_ui5-v2-14-0_tc_headerItem_focus_border_offset);top:var(--_ui5-v2-14-0_tc_headerItem_focus_border_offset);bottom:var(--_ui5-v2-14-0_tc_headerItem_focus_border_offset);border-radius:var(--_ui5-v2-14-0_tc_headerItemIcon_focus_border_radius)}.ui5-tab-strip-item-icon-outer{display:flex;justify-content:center;align-items:center;position:relative;border:var(--_ui5-v2-14-0_tc_headerItemIcon_border);border-radius:50%;margin-inline-end:.25rem;height:var(--_ui5-v2-14-0_tc_item_icon_circle_size);width:var(--_ui5-v2-14-0_tc_item_icon_circle_size);pointer-events:none;background-color:var(--sapTab_Background)}.ui5-tab-strip-item-icon{width:var(--_ui5-v2-14-0_tc_item_icon_size);height:var(--_ui5-v2-14-0_tc_item_icon_size);color:var(--sapTab_IconColor);text-shadow:var(--sapContent_TextShadow);pointer-events:none}.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer{background-color:var(--sapTab_Selected_Background)}.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon{color:var(--sapTab_Selected_IconColor);text-shadow:none}.ui5-tab-strip-itemAdditionalText+.ui5-tab-strip-itemText{display:flex}.ui5-tab-strip-itemAdditionalText-hidden{visibility:hidden;margin-top:1.25rem}.ui5-tab-strip-item--inline .ui5-tab-strip-itemAdditionalText+.ui5-tab-strip-itemText{display:inline}.ui5-tab-strip-item--withIcon .ui5-tab-strip-itemAdditionalText+.ui5-tab-strip-itemText{margin-block-start:var(--_ui5-v2-14-0_tc_item_add_text_margin_top)}.ui5-tab-strip-item--textOnly,.ui5-tab-strip-item.ui5-tab-strip-item--textOnly.ui5-tab-strip-item--inline{font-size:var(--sapFontSize);height:var(--_ui5-v2-14-0_tc_item_text_only_height);display:flex;align-items:center;line-height:var(--_ui5-v2-14-0_tc_item_text_line_height)}.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemText{padding:0 .188rem}.ui5-tab-strip-item--textOnly.ui5-tab-strip-item--withAdditionalText{justify-content:flex-start;height:var(--_ui5-v2-14-0_tc_item_text_only_with_additional_text_height)}.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemText,.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemAdditionalText{display:inline-block;vertical-align:middle}.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemContent{flex-direction:row;align-items:center}.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemAdditionalText{font-size:1.5rem;margin-inline-end:.5rem}.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemText{color:var(--_ui5-v2-14-0_tc_mixedMode_itemText_color);font-family:var(--_ui5-v2-14-0_tc_mixedMode_itemText_font_family);font-size:var(--_ui5-v2-14-0_tc_mixedMode_itemText_font_size);font-weight:var(--_ui5-v2-14-0_tc_mixedMode_itemText_font_weight)}.ui5-tab-strip-item--positive.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemText,.ui5-tab-strip-item--positive .ui5-tab-strip-item-icon-outer{color:var(--sapTab_Positive_TextColor);border-color:var(--sapTab_Positive_ForegroundColor)}.ui5-tab-strip-item--selected.ui5-tab-strip-item--positive.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemText{color:var(--sapTab_Positive_Selected_TextColor)}.ui5-tab-strip-item--positive .ui5-tab-strip-item-icon{color:var(--sapTab_Positive_IconColor)}.ui5-tab-strip-item--positive.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer{background-color:var(--sapTab_Positive_Selected_Background);color:var(--_ui5-v2-14-0_tc_headerItemIcon_semantic_selected_color)}.ui5-tab-strip-item--positive.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon{color:var(--sapTab_Positive_Selected_IconColor)}.ui5-tab-strip-item.ui5-tab-strip-item--neutral .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--neutral .ui5-tab-strip-item-icon-outer:after{border-color:var(--_ui5-v2-14-0_tc_headerItem_neutral_border_color);background-color:var(--_ui5-v2-14-0_tc_headerItem_neutral_border_bg)}.ui5-tab-strip-item--selected.ui5-tab-strip-item--neutral.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemText{color:var(--sapTab_Neutral_Selected_TextColor)}.ui5-tab-strip-item.ui5-tab-strip-item--positive .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--positive .ui5-tab-strip-item-icon-outer:after{border-color:var(--sapTab_Positive_ForegroundColor);background-color:var(--_ui5-v2-14-0_tc_headerItem_positive_border_bg)}.ui5-tab-strip-item--negative.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemText,.ui5-tab-strip-item--negative .ui5-tab-strip-item-icon-outer{color:var(--sapTab_Negative_TextColor);border-color:var(--sapTab_Negative_ForegroundColor)}.ui5-tab-strip-item--selected.ui5-tab-strip-item--negative.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemText{color:var(--sapTab_Negative_Selected_TextColor)}.ui5-tab-strip-item--negative .ui5-tab-strip-item-icon{color:var(--sapTab_Negative_IconColor)}.ui5-tab-strip-item--negative.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer{background-color:var(--sapTab_Negative_Selected_Background)}.ui5-tab-strip-item--negative.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon{color:var(--sapTab_Negative_Selected_IconColor)}.ui5-tab-strip-item.ui5-tab-strip-item--negative .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--negative .ui5-tab-strip-item-icon-outer:after{border-color:var(--sapTab_Negative_ForegroundColor);background-color:var(--_ui5-v2-14-0_tc_headerItem_negative_border_bg)}.ui5-tab-strip-item--critical.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemText,.ui5-tab-strip-item--critical .ui5-tab-strip-item-icon-outer{color:var(--sapTab_Critical_TextColor);border-color:var(--sapTab_Critical_ForegroundColor)}.ui5-tab-strip-item--selected.ui5-tab-strip-item--critical.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemText{color:var(--sapTab_Critical_Selected_TextColor)}.ui5-tab-strip-item--critical .ui5-tab-strip-item-icon{color:var(--sapTab_Critical_IconColor)}.ui5-tab-strip-item--critical.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer{background-color:var(--sapTab_Critical_Selected_Background)}.ui5-tab-strip-item--critical.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon{color:var(--sapTab_Critical_Selected_IconColor)}.ui5-tab-strip-item.ui5-tab-strip-item--critical .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--critical .ui5-tab-strip-item-icon-outer:after{border-color:var(--sapTab_Critical_ForegroundColor);background-color:var(--_ui5-v2-14-0_tc_headerItem_critical_border_bg)}.ui5-tab-strip-item--neutral.ui5-tab-strip-item--textOnly .ui5-tab-strip-itemText,.ui5-tab-strip-item--neutral .ui5-tab-strip-item-icon-outer{color:var(--sapTab_Neutral_TextColor);border-color:var(--sapTab_Neutral_ForegroundColor)}.ui5-tab-strip-item--neutral .ui5-tab-strip-item-icon{color:var(--sapTab_Neutral_IconColor)}.ui5-tab-strip-item--neutral.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon-outer{background-color:var(--sapTab_Neutral_Selected_Background)}.ui5-tab-strip-item--neutral.ui5-tab-strip-item--selected .ui5-tab-strip-item-icon{color:var(--sapTab_Neutral_Selected_IconColor)}.ui5-tab-strip-item.ui5-tab-strip-item--neutral .ui5-tab-strip-itemContent:after,.ui5-tab-strip-item--neutral .ui5-tab-strip-item-icon:after{border-color:var(--_ui5-v2-14-0_tc_headerItem_neutral_border_color);background-color:var(--_ui5-v2-14-0_tc_headerItem_neutral_border_bg)}.ui5-tab-strip-item--withIcon .ui5-tab-strip-itemContent .ui5-tab-strip-itemAdditionalText{padding:0}.ui5-tab-strip-item .ui5-tab-strip-itemAdditionalText{padding:0 .188rem;color:var(--_ui5-v2-14-0_tc_headerItem_additional_text_color);font-weight:var(--_ui5-v2-14-0_tc_headerItem_additional_text_font_weight)}.ui5-tab-strip-item.ui5-tab-strip-item--mixedMode .ui5-tab-strip-itemAdditionalText{color:var(--_ui5-v2-14-0_tc_headerItem_color)}
`;
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const overflowCss = `.ui5-tab-semantic-icon{display:var(--_ui5-v2-14-0_tc_headerItemSemanticIcon_display);height:var(--_ui5-v2-14-0_tc_headerItemSemanticIcon_size);width:var(--_ui5-v2-14-0_tc_headerItemSemanticIcon_size);margin-inline-end:.5rem}.ui5-tab-semantic-icon--positive{color:var(--sapPositiveTextColor)}.ui5-tab-semantic-icon--negative{color:var(--sapNegativeTextColor)}.ui5-tab-semantic-icon--critical{color:var(--sapCriticalTextColor)}.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}.ui5-tab-overflow-item{color:var(--_ui5-v2-14-0_tc_overflowItem_default_color)}.ui5-tab-overflow-item--disabled{cursor:default;opacity:var(--sapContent_DisabledOpacity)}.ui5-tab-overflow-item[hidden]{display:none}.ui5-tab-overflow-item--positive:not(.ui5-tab-overflow-item--disabled) .ui5-tab-overflow-itemContent{color:var(--_ui5-v2-14-0_tc_overflowItem_positive_color)}.ui5-tab-overflow-item--negative:not(.ui5-tab-overflow-item--disabled) .ui5-tab-overflow-itemContent{color:var(--_ui5-v2-14-0_tc_overflowItem_negative_color)}.ui5-tab-overflow-item--critical:not(.ui5-tab-overflow-item--disabled) .ui5-tab-overflow-itemContent{color:var(--_ui5-v2-14-0_tc_overflowItem_critical_color)}.ui5-tab-overflow-item[active] .ui5-tab-overflow-itemContent{color:var(--sapList_Active_TextColor)}.ui5-tab-overflow-itemContent{display:flex;align-items:center;position:relative;height:var(--_ui5-v2-14-0_tc_item_text);pointer-events:none;font-size:.875rem}.ui5-tab-overflow-itemContent-wrapper{padding-inline-start:calc((calc(var(--_ui5-v2-14-0-tab-indentation-level) + var(--_ui5-v2-14-0-tab-level-has-icon) * var(--_ui5-v2-14-0_tc_overflowItem_additional, 0))) * (var(--_ui5-v2-14-0_tc_overflowItem_indent) + var(--_ui5-v2-14-0_tc_overflowItem_extra_indent)))}.ui5-tab-overflow-item .ui5-tab-semantic-icon{position:absolute;inset-inline-start:-1.25rem}.ui5-tab-overflow-item--selectedSubTab{background-color:var(--sapList_SelectionBackgroundColor)}.ui5-tab-overflow-item [ui5-icon]:not(.ui5-tab-semantic-icon){width:1.375rem;height:1.375rem;padding-inline-end:.75rem;color:var(--_ui5-v2-14-0_tc_overflowItem_current_color)}.ui5-tab-container-responsive-popover [ui5-li-custom][focused]::part(native-li):after{inset:var(--_ui5-v2-14-0_tc_overflowItem_focus_offset)}.ui5-tab-container-responsive-popover::part(content){padding:0}
`;
var __decorate$1 = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
var Tab_1;
const DESIGN_DESCRIPTIONS = {
  [SemanticColor$1.Positive]: TAB_ARIA_DESIGN_POSITIVE,
  [SemanticColor$1.Negative]: TAB_ARIA_DESIGN_NEGATIVE,
  [SemanticColor$1.Neutral]: TAB_ARIA_DESIGN_NEUTRAL,
  [SemanticColor$1.Critical]: TAB_ARIA_DESIGN_CRITICAL
};
let Tab$1 = Tab_1 = class Tab extends b$6 {
  constructor() {
    super(...arguments);
    this.disabled = false;
    this.design = "Default";
    this.selected = false;
    this.movable = false;
    this._isTopLevelTab = false;
  }
  set forcedTabIndex(val) {
    this.getDomRefInStrip().setAttribute("tabindex", val);
  }
  get forcedTabIndex() {
    return this.getDomRefInStrip().getAttribute("tabindex");
  }
  get displayText() {
    let text = this.text;
    if (this._isInline && this.additionalText) {
      text += ` (${this.additionalText})`;
    }
    return text;
  }
  get isSeparator() {
    return false;
  }
  get stripPresentation() {
    return n$d(Tab_1.stripTemplate, this);
  }
  get overflowPresentation() {
    return n$d(Tab_1.overflowTemplate, this);
  }
  get stableDomRef() {
    return this.getAttribute("stable-dom-ref") || `${this._id}-stable-dom-ref`;
  }
  get requiresExpandButton() {
    return this.items.length > 0 && this._isTopLevelTab && this.hasOwnContent;
  }
  get isSingleClickArea() {
    return this.items.length > 0 && this._isTopLevelTab && !this.hasOwnContent;
  }
  get isTwoClickArea() {
    return this.items.length > 0 && this._isTopLevelTab && this.hasOwnContent;
  }
  get isOnSelectedTabPath() {
    return this._selectedTabReference === this || this.tabs.some((subTab) => subTab.isOnSelectedTabPath);
  }
  get _effectiveSlotName() {
    return this.isOnSelectedTabPath ? this._individualSlot : `disabled-${this._individualSlot}`;
  }
  get _defaultSlotName() {
    return this._selectedTabReference === this ? "" : "disabled-slot";
  }
  get hasOwnContent() {
    return t$6(this.content);
  }
  get expandBtnAccessibilityAttributes() {
    return {
      hasPopup: "menu"
    };
  }
  receiveStripInfo({ getElementInStrip, posinset, setsize, isInline, isTopLevelTab, mixedMode }) {
    this._getElementInStrip = getElementInStrip;
    this._forcedPosinset = posinset;
    this._forcedSetsize = setsize;
    this._forcedMixedMode = mixedMode;
    this._isInline = isInline;
    this._isTopLevelTab = !!isTopLevelTab;
  }
  receiveOverflowInfo({ getElementInOverflow, style }) {
    this._getElementInOverflow = getElementInOverflow;
    this._forcedStyleInOverflow = style;
  }
  /**
   * Returns the DOM reference of the tab that is placed in the header.
   *
   * **Note:** Tabs, placed in the `items` slot of other tabs are not shown in the header. Calling this method on such tabs will return `undefined`.
   *
   * **Note:** If you need a DOM ref to the tab content please use the `getDomRef` method.
   * @public
   * @since 1.0.0-rc.16
   */
  getDomRefInStrip() {
    return this._getElementInStrip?.();
  }
  getFocusDomRef() {
    let focusedDomRef = this._getElementInOverflow?.();
    if (!focusedDomRef) {
      focusedDomRef = this._getElementInStrip?.();
    }
    return focusedDomRef;
  }
  async focus(focusOptions) {
    await f$h();
    return super.focus(focusOptions);
  }
  get isMixedModeTab() {
    return !this.icon && this._forcedMixedMode;
  }
  get isTextOnlyTab() {
    return !this.icon && !this._forcedMixedMode;
  }
  get isIconTab() {
    return !!this.icon;
  }
  get effectiveDisabled() {
    return this.disabled || void 0;
  }
  get effectiveSelected() {
    const subItemSelected = this.tabs.some((elem) => elem.effectiveSelected);
    return this.selected || this._selectedTabReference === this || subItemSelected;
  }
  get effectiveHidden() {
    return !this.effectiveSelected;
  }
  get tabs() {
    return this.items.filter((tab) => !tab.isSeparator);
  }
  get ariaLabelledBy() {
    const labels = [];
    if (this.text) {
      labels.push(`${this._id}-text`);
    }
    if (this.additionalText) {
      labels.push(`${this._id}-additionalText`);
    }
    if (this.icon) {
      labels.push(`${this._id}-icon`);
    }
    if (this._designDescription) {
      labels.push(`${this._id}-designDescription`);
    }
    return labels.join(" ");
  }
  get stripClasses() {
    const classes = ["ui5-tab-strip-item"];
    if (this.effectiveSelected) {
      classes.push("ui5-tab-strip-item--selected");
    }
    if (this.disabled) {
      classes.push("ui5-tab-strip-item--disabled");
    }
    if (this._isInline) {
      classes.push("ui5-tab-strip-item--inline");
    }
    if (this.additionalText) {
      classes.push("ui5-tab-strip-item--withAdditionalText");
    }
    if (!this.icon && !this._forcedMixedMode) {
      classes.push("ui5-tab-strip-item--textOnly");
    }
    if (this.icon) {
      classes.push("ui5-tab-strip-item--withIcon");
    }
    if (!this.icon && this._forcedMixedMode) {
      classes.push("ui5-tab-strip-item--mixedMode");
    }
    if (this.design !== SemanticColor$1.Default) {
      classes.push(`ui5-tab-strip-item--${this.design.toLowerCase()}`);
    }
    if (this.isSingleClickArea) {
      classes.push(`ui5-tab-strip-item--singleClickArea`);
    }
    if (this.isTwoClickArea) {
      classes.push(`ui5-tab-strip-item--twoClickArea`);
    }
    return {
      itemClasses: classes.join(" "),
      additionalTextClasses: this.additionalTextClasses
    };
  }
  get additionalTextClasses() {
    const classes = [];
    if (this.additionalText) {
      classes.push("ui5-tab-strip-itemAdditionalText");
    }
    if (this.icon && !this.additionalText) {
      classes.push("ui5-tab-strip-itemAdditionalText-hidden");
    }
    return classes.join(" ");
  }
  get expandButtonTitle() {
    return Tab_1.i18nBundle.getText(TABCONTAINER_END_OVERFLOW);
  }
  get _roleDescription() {
    return this.items.length > 0 ? Tab_1.i18nBundle.getText(TAB_SPLIT_ROLE_DESCRIPTION) : void 0;
  }
  get _ariaHasPopup() {
    return this.isSingleClickArea ? "menu" : void 0;
  }
  get semanticIconName() {
    switch (this.design) {
      case SemanticColor$1.Positive:
        return "sys-enter-2";
      case SemanticColor$1.Negative:
        return "error";
      case SemanticColor$1.Critical:
        return "alert";
      default:
        return null;
    }
  }
  get _designDescription() {
    if (this.design === SemanticColor$1.Default) {
      return null;
    }
    return Tab_1.i18nBundle.getText(DESIGN_DESCRIPTIONS[this.design]);
  }
  get semanticIconClasses() {
    const classes = ["ui5-tab-semantic-icon"];
    if (this.design !== SemanticColor$1.Default && this.design !== SemanticColor$1.Neutral) {
      classes.push(`ui5-tab-semantic-icon--${this.design.toLowerCase()}`);
    }
    return classes.join(" ");
  }
  get overflowClasses() {
    const classes = ["ui5-tab-overflow-item"];
    if (this.design !== SemanticColor$1.Default && this.design !== SemanticColor$1.Neutral) {
      classes.push(`ui5-tab-overflow-item--${this.design.toLowerCase()}`);
    }
    if (this.effectiveDisabled) {
      classes.push("ui5-tab-overflow-item--disabled");
    }
    if (this.selected) {
      classes.push("ui5-tab-overflow-item--selectedSubTab");
    }
    return classes.join(" ");
  }
  get overflowState() {
    return this.disabled || this.isSingleClickArea ? ListItemType$1.Inactive : ListItemType$1.Active;
  }
  static get stripTemplate() {
    return TabInStripTemplate;
  }
  static get overflowTemplate() {
    return TabInOverflowTemplate;
  }
  _ondragstart(e2) {
    if (e2.target instanceof HTMLElement) {
      D$1.setDraggedElement(this);
      e2.target.setAttribute("data-moving", "");
    }
  }
  _ondragend(e2) {
    if (e2.target instanceof HTMLElement) {
      D$1.clearDraggedElement();
      e2.target.removeAttribute("data-moving");
    }
  }
  captureRef(ref) {
    if (ref) {
      ref.realTabReference = this;
    }
  }
  captureButtonRef(ref) {
    if (ref) {
      ref.tab = this;
    }
  }
};
__decorate$1([
  s$7()
], Tab$1.prototype, "text", void 0);
__decorate$1([
  s$7({ type: Boolean })
], Tab$1.prototype, "disabled", void 0);
__decorate$1([
  s$7()
], Tab$1.prototype, "additionalText", void 0);
__decorate$1([
  s$7()
], Tab$1.prototype, "icon", void 0);
__decorate$1([
  s$7()
], Tab$1.prototype, "design", void 0);
__decorate$1([
  s$7({ type: Boolean })
], Tab$1.prototype, "selected", void 0);
__decorate$1([
  s$7({ type: Boolean })
], Tab$1.prototype, "movable", void 0);
__decorate$1([
  s$7({ type: Boolean })
], Tab$1.prototype, "_isTopLevelTab", void 0);
__decorate$1([
  s$7({ type: Object })
], Tab$1.prototype, "_selectedTabReference", void 0);
__decorate$1([
  d$4({
    type: Node,
    "default": true,
    invalidateOnChildChange: {
      properties: true,
      slots: false
    }
  })
], Tab$1.prototype, "content", void 0);
__decorate$1([
  d$4({
    type: HTMLElement,
    individualSlots: true,
    invalidateOnChildChange: {
      properties: true,
      slots: false
    }
  })
], Tab$1.prototype, "items", void 0);
__decorate$1([
  i$8("@ui5/webcomponents")
], Tab$1, "i18nBundle", void 0);
Tab$1 = Tab_1 = __decorate$1([
  m$7({
    tag: "ui5-tab",
    languageAware: true,
    renderer: y$4,
    template: TabTemplate,
    styles: css
  })
], Tab$1);
Tab$1.define();
TabContainer$2.registerTabStyles(stripCss);
TabContainer$2.registerTabStyles(draggableElementStyles);
TabContainer$2.registerTabStyles(overflowCss);
const Tab2 = withWebComponent("ui5-tab", ["additionalText", "design", "icon", "text"], ["disabled", "movable", "selected"], ["items"], []);
Tab2.displayName = "Tab";
const TabContainer2 = withWebComponent("ui5-tabcontainer", ["contentBackgroundDesign", "headerBackgroundDesign", "overflowMode", "tabLayout"], ["collapsed", "noAutoSelection"], ["overflowButton", "startOverflowButton"], ["move-over", "move", "tab-select"]);
TabContainer2.displayName = "TabContainer";
function ToastTemplate() {
  return jsx(Fragment, { children: jsx("div", { class: "ui5-toast-root", role: "alert", tabindex: this._tabindex, children: jsx("bdi", { children: jsx("slot", {}) }) }) });
}
p$8("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p$8("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const ToastCss = `:host{font-family:var(--sapFontFamily);color:var(--sapContent_ContrastTextColor);font-size:var(--sapFontSize);position:fixed;display:none;box-sizing:border-box;max-width:15rem;overflow:hidden;background:var(--_ui5-v2-14-0_toast_background);box-shadow:var(--_ui5-v2-14-0_toast_shadow);border-radius:var(--sapElement_BorderCornerRadius);transition-property:opacity;opacity:1;word-wrap:break-word;text-align:center;text-overflow:ellipsis;white-space:pre-line;padding:1rem;inset:unset;margin:0;border:none}.ui5-toast-root{height:100%;width:100%;padding:0;outline:none;box-sizing:border-box;display:flex;align-items:center;justify-content:center;min-height:fit-content}:host([open]){display:block}:host(:not([placement])){bottom:var(--_ui5-v2-14-0_toast_vertical_offset);left:50%;transform:translate(-50%)}:host([placement="TopStart"]){top:var(--_ui5-v2-14-0_toast_vertical_offset);left:var(--_ui5-v2-14-0_toast_horizontal_offset)}:host([placement="MiddleStart"]){left:var(--_ui5-v2-14-0_toast_horizontal_offset);top:50%;transform:translateY(-50%)}:host([placement="BottomStart"]){left:var(--_ui5-v2-14-0_toast_horizontal_offset);bottom:var(--_ui5-v2-14-0_toast_vertical_offset)}:host([placement="TopCenter"]){top:var(--_ui5-v2-14-0_toast_vertical_offset);left:50%;transform:translate(-50%)}:host([placement="MiddleCenter"]){left:50%;top:50%;transform:translate(-50%,-50%)}:host([placement="BottomCenter"]){bottom:var(--_ui5-v2-14-0_toast_vertical_offset);left:50%;transform:translate(-50%)}:host([placement="TopEnd"]){right:var(--_ui5-v2-14-0_toast_horizontal_offset);top:var(--_ui5-v2-14-0_toast_vertical_offset)}:host([placement="MiddleEnd"]){right:var(--_ui5-v2-14-0_toast_horizontal_offset);top:50%;transform:translateY(-50%)}:host([placement="BottomEnd"]){right:var(--_ui5-v2-14-0_toast_horizontal_offset);bottom:var(--_ui5-v2-14-0_toast_vertical_offset)}:host([focused]){outline-width:var(--sapContent_FocusWidth);outline-style:var(--sapContent_FocusStyle);outline-color:var(--sapContent_FocusColor);outline-offset:var(--_ui5-v2-14-0_toast_offset_width)}
`;
var __decorate = function(decorators, target, key, desc) {
  var c2 = arguments.length, r3 = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r3 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d2 = decorators[i3]) r3 = (c2 < 3 ? d2(r3) : c2 > 3 ? d2(target, key, r3) : d2(target, key)) || r3;
  return c2 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
};
const MIN_DURATION = 500;
const MAX_DURATION = 1e3;
const openedToasts = [];
let opener;
let globalListenerAdded = false;
const handleGlobalKeydown = (e2) => {
  const isCtrl = e2.metaKey || !A$7() && e2.ctrlKey;
  const isMKey = e2.key && e2.key.toLowerCase() === "m";
  const isCombinationPressed = isCtrl && e2.shiftKey && isMKey;
  const hasOpenToast = openedToasts.length;
  if (isCombinationPressed) {
    e2.preventDefault();
    if (hasOpenToast) {
      openedToasts[0].focusable = true;
      if (openedToasts[0].focused) {
        openedToasts[0].focused = false;
        opener?.focus();
      } else {
        opener = document.activeElement;
        openedToasts[0].focus();
      }
    }
  }
};
let Toast$1 = class Toast extends b$6 {
  constructor() {
    super();
    this.duration = 3e3;
    this.placement = "BottomCenter";
    this.open = false;
    this.hover = false;
    this.focusable = false;
    this.focused = false;
    this._onfocusinFn = this._onfocusin.bind(this);
    this._onfocusoutFn = this._onfocusout.bind(this);
    this._onkeydownFn = this._onkeydown.bind(this);
    this._onmouseoverFn = this._onmouseover.bind(this);
    this._onmouseleaveFn = this._onmouseleave.bind(this);
    this._ontransitionendFn = this._ontransitionend.bind(this);
  }
  onBeforeRendering() {
    if (this.open) {
      openedToasts.pop();
      openedToasts.push(this);
    }
    requestAnimationFrame(() => {
      const transitionDuration = Math.min(this.effectiveDuration / 3, MAX_DURATION);
      this.style.transitionDuration = this.open ? `${transitionDuration}ms` : "";
      this.style.transitionDelay = this.open ? `${this.effectiveDuration - transitionDuration}ms` : "";
      this.style.opacity = this.open && !this.hover && !this.focused ? "0" : "";
    });
    if (!globalListenerAdded) {
      document.addEventListener("keydown", handleGlobalKeydown);
      globalListenerAdded = true;
    }
  }
  onAfterRendering() {
    if (!this.hasAttribute("popover")) {
      this.setAttribute("popover", "manual");
    }
    if (this.open) {
      this.showPopover();
    }
  }
  _onfocusin() {
    if (this.focusable) {
      this.focused = true;
    }
  }
  _onfocusout() {
    this.focused = false;
  }
  /**
   * If the minimum duration is lower than 500ms, we force
   * it to be 500ms, as described in the documentation.
   * @private
   */
  get effectiveDuration() {
    return this.duration < MIN_DURATION ? MIN_DURATION : this.duration;
  }
  _ontransitionend() {
    if (this.hover || this.focused) {
      return;
    }
    this.open = false;
    this.focusable = false;
    this.focused = false;
    this.fireDecoratorEvent("close");
    this.hidePopover();
  }
  _onmouseover() {
    this.hover = true;
  }
  _onmouseleave() {
    this.hover = false;
  }
  _onkeydown(e2) {
    if (m$4(e2)) {
      this.focused = false;
      opener?.focus();
    }
  }
  get _tabindex() {
    return this.focused ? 0 : -1;
  }
  onEnterDOM() {
    this.addEventListener("focusin", this._onfocusinFn);
    this.addEventListener("focusout", this._onfocusoutFn);
    this.addEventListener("keydown", this._onkeydownFn);
    this.addEventListener("mouseover", this._onmouseoverFn);
    this.addEventListener("mouseleave", this._onmouseleaveFn);
    this.addEventListener("transitionend", this._ontransitionendFn);
    this.addEventListener("transitioncancel", this._ontransitionendFn);
  }
  onExitDOM() {
    this.removeEventListener("focusin", this._onfocusinFn);
    this.removeEventListener("focusout", this._onfocusoutFn);
    this.removeEventListener("keydown", this._onkeydownFn);
    this.removeEventListener("mouseover", this._onmouseoverFn);
    this.removeEventListener("mouseleave", this._onmouseleaveFn);
    this.removeEventListener("transitionend", this._ontransitionendFn);
    this.removeEventListener("transitioncancel", this._ontransitionendFn);
  }
};
__decorate([
  s$7({ type: Number })
], Toast$1.prototype, "duration", void 0);
__decorate([
  s$7()
], Toast$1.prototype, "placement", void 0);
__decorate([
  s$7({ type: Boolean })
], Toast$1.prototype, "open", void 0);
__decorate([
  s$7({ type: Boolean })
], Toast$1.prototype, "hover", void 0);
__decorate([
  s$7({ type: Boolean })
], Toast$1.prototype, "focusable", void 0);
__decorate([
  s$7({ type: Boolean })
], Toast$1.prototype, "focused", void 0);
Toast$1 = __decorate([
  m$7({
    tag: "ui5-toast",
    renderer: y$4,
    styles: ToastCss,
    template: ToastTemplate
  }),
  l$b("close")
], Toast$1);
Toast$1.define();
const Toast2 = withWebComponent("ui5-toast", ["duration", "placement"], ["open"], [], ["close"]);
Toast2.displayName = "Toast";
const name$5 = "action-settings";
const pathData$5 = "M0 224q0-14 9-23t23-9h26q2-8 5.5-15.5T71 161l-19-18q-9-10-9-23t9-22l46-46q9-9 22-9 14 0 23 9l18 19q8-4 15.5-7.5T192 58V32q0-14 9-23t23-9h64q14 0 23 9t9 23v26q8 3 15.5 6t14.5 7l19-19q9-9 23-9 13 0 22 9l46 46q9 9 9 22t-9 23l-19 19q8 13 12 30h27q14 0 23 9t9 23v64q0 14-9 23t-23 9h-27q-4 16-12 30l19 19q9 10 9 23t-9 22l-46 46q-9 9-22 9-14 0-23-9l-19-19q-7 4-14.5 7t-15.5 6v26q0 14-9 23t-23 9h-64q-14 0-23-9t-9-23v-26q-8-2-15.5-5.5T161 441l-18 19q-9 9-23 9-13 0-22-9l-46-46q-9-9-9-22t9-23l19-18q-4-8-7.5-15.5T58 320H32q-14 0-23-9t-9-23v-64zm32 0v64h49q3 10 5.5 17.5T92 320q3 8 7.5 16.5T110 357l-35 35 45 45 35-35q17 10 34 17t35 12v49h64v-50q10-3 17.5-5.5T320 420q8-4 17-8t20-10l35 35 45-45-35-36q9-17 15.5-33.5T430 288h50v-64h-50q-10-36-28-68l35-36-45-45-35 35q-17-10-33.5-16.5T288 82V32h-64v49l-16.5 5.5L192 92l-18 8-19 10-35-35-45 45 35 35q-18 34-29 69H32zm135 0l3-9q3-6 7-12t9-11q10-10 18-15.5t20-10.5q17-5 32-5 17 0 32 6l9 3 12 8 11 9q3 2 5 5 13 12 19 32 6 15 6 32t-6 32q-6 19-19 32-2 3-5 5-5 5-11 9l-12 8-9 3q-15 6-32 6-15 0-32-5-12-5-20-10.5T186 320q-5-5-9-11t-7-12l-3-9q-6-15-6-32t6-32zm26 32q0 17 8.5 31.5T224 310q14 9 32 9 6 0 16-2 12-4 21-10.5t16-18.5q9-14 9-32 0-19-9-32-7-12-16-18.5T272 195q-10-2-16-2-18 0-32 9-14 8-22.5 22.5T193 256z";
const ltr$5 = false;
const accData$3 = ICON_ACTION_SETTINGS;
const collection$5 = "SAP-icons-v4";
const packageName$5 = "@ui5/webcomponents-icons";
y$1(name$5, { pathData: pathData$5, ltr: ltr$5, accData: accData$3, collection: collection$5, packageName: packageName$5 });
const name$4 = "action-settings";
const pathData$4 = "M475 299q11 8 16 19t5 22-5 23l-19 37q-7 14-19.5 21t-26.5 7q-10 0-19-3l-31-13-45 27-7 32q-3 18-17.5 29.5T274 512h-36q-18 0-32-11.5T188 471l-7-32-45-27-31 13q-9 3-19 3-14 0-26.5-7T40 400l-18-37q-6-9-6-21 0-28 29-48l16-13v-51l-24-17q-11-8-16-19t-5-23q0-11 6-23l18-36q7-14 19.5-21T86 84q11 0 20 4l30 12 45-27 7-32q4-18 18-29.5T238 0h36q18 0 32.5 11.5T324 41l7 32 44 27 25-10q15-5 26-5 32 0 46 27l19 36q5 13 5 23 0 12-5 23t-16 19l-24 17v51zm-54 24q-21-16-21-41v-52q0-25 21-41l24-18-19-36-31 13q-9 3-19 3-16 0-27-7l-44-27q-19-10-24-33l-7-33h-36l-7 33q-5 23-24 33l-44 27q-11 7-26 7-11 0-20-3l-30-13-20 36 25 18q20 15 20 41v52q0 26-20 41l-25 17 19 37 27-10q8-4 13-5t10-1q13 0 27 7l44 26q19 12 24 34l7 33h36l7-33q5-21 24-34l44-26q14-7 27-7 10 0 19 4l30 12 20-37zM256 160q40 0 68 28t28 68-28 68-68 28-68-28-28-68 28-68 68-28zm0 141q19 0 32-13t13-32-13-32-32-13-32 13-13 32 13 32 32 13z";
const ltr$4 = false;
const accData$2 = ICON_ACTION_SETTINGS;
const collection$4 = "SAP-icons-v5";
const packageName$4 = "@ui5/webcomponents-icons";
y$1(name$4, { pathData: pathData$4, ltr: ltr$4, accData: accData$2, collection: collection$4, packageName: packageName$4 });
const actionSettingsIcon = "action-settings";
const name$3 = "factory";
const pathData$3 = "M0 480V112q0-16 16-16h96q6 0 11 4.5t5 11.5v144h368q6 0 11 4.5t5 11.5v208h-96V360q0-8-8-8h-48q-8 0-8 8v120H0zm320-32v-88q0-15 9-26t23-13q1-1 8-1h48q17 0 28.5 11.5T448 360v88h32V288H96V128H32v320h288zm32-224v-82q0-8 8-8 3 0 4 1l123 74q5 3 3.5 9t-7.5 6H352zm-160-82q0-8 8-8 3 0 4 1l123 74q5 3 3.5 9t-7.5 6H200q-8 0-8-8v-74zM0 60V36q0-4 8-4h112q8 0 8 4v24q0 4-8 4H8q-8 0-8-4zm192 260h56q8 0 8 8v48q0 8-8 8h-48q-8 0-8-8v-56zm-96 56v-48q0-8 8-8h48q8 0 8 8v48q0 8-8 8h-48q-8 0-8-8z";
const ltr$3 = false;
const collection$3 = "SAP-icons-v4";
const packageName$3 = "@ui5/webcomponents-icons";
y$1(name$3, { pathData: pathData$3, ltr: ltr$3, collection: collection$3, packageName: packageName$3 });
const name$2 = "factory";
const pathData$2 = "M502 236q10 7 10 20v198q0 11-7.5 18.5T486 480H26q-11 0-18.5-7.5T0 454V58q0-11 7.5-18.5T26 32h108q11 0 18.5 7.5T160 58v166h44v-70q0-11 7.5-18.5T230 128q9 0 16 6l87 69v-49q0-11 7.5-18.5T358 128t16 6zM51 83v45h58V83H51zm58 141v-45H51v45h58zm352 44l-77-61v49q0 11-7.5 18.5T358 282q-8 0-16-6l-86-69v43q0 11-7.5 18.5T230 276h-70v44h6q11 0 18.5 7.5T192 346t-7.5 18-18.5 7h-6v58h301V268zM51 320h58v-44H51v44zm237 0q13 0 22.5 9.5T320 352t-9.5 22.5T288 384t-22.5-9.5T256 352t9.5-22.5T288 320zm64 32q0-13 9.5-22.5T384 320t22.5 9.5T416 352t-9.5 22.5T384 384t-22.5-9.5T352 352zM51 429h58v-58H51v58z";
const ltr$2 = false;
const collection$2 = "SAP-icons-v5";
const packageName$2 = "@ui5/webcomponents-icons";
y$1(name$2, { pathData: pathData$2, ltr: ltr$2, collection: collection$2, packageName: packageName$2 });
const factory$1 = "factory";
const PLANT = "C200";
let currentLang = "ko-KR";
let bundle = {};
const listeners = /* @__PURE__ */ new Set();
function notify() {
  listeners.forEach((fn) => {
    try {
      fn();
    } catch {
    }
  });
}
function toUi5Lang(lang) {
  const map = {
    "ko-KR": "ko",
    en: "en",
    vi: "vi",
    "zh-Hans": "zh-CN",
    id: "id"
  };
  return map[lang] || "en";
}
async function fetchBundleFor(lang) {
  try {
    const maybe = await window.i18n?.getBundle?.();
    if (maybe && typeof maybe === "object") {
      return maybe;
    }
  } catch {
  }
  const url = `./locales/${lang}/lang.json`;
  const res = await fetch(url);
  if (!res.ok) throw new Error(`i18n bundle load failed: ${url}`);
  return await res.json();
}
async function initI18n(lang) {
  try {
    const saved = await window.i18n?.getLang?.();
    currentLang = lang || saved || "ko-KR";
    bundle = await fetchBundleFor(currentLang);
    try {
      const { setLanguage } = await __vitePreload(async () => {
        const { setLanguage: setLanguage2 } = await Promise.resolve().then(() => Language);
        return { setLanguage: setLanguage2 };
      }, true ? void 0 : void 0, import.meta.url);
      await setLanguage(toUi5Lang(currentLang));
    } catch {
    }
    document.documentElement.lang = currentLang;
    document.documentElement.dir = ["ar", "he", "fa", "ur"].some((p3) => currentLang.startsWith(p3)) ? "rtl" : "ltr";
  } catch (e2) {
    console.error("❌ i18n 초기화 실패:", e2);
    bundle = {};
  }
}
function escapeRegExp(str) {
  return str.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
}
function t2(key, params) {
  let raw = bundle[key] ?? key;
  if (!params) return raw;
  for (const [k3, v2] of Object.entries(params)) {
    const re = new RegExp(`\\{${escapeRegExp(k3)}\\}`, "g");
    raw = raw.replace(re, String(v2));
  }
  return raw;
}
async function setAppLanguage(lang) {
  if (!lang || lang === currentLang) return;
  try {
    await window.i18n?.setLang?.(lang);
  } catch {
  }
  currentLang = lang;
  try {
    bundle = await fetchBundleFor(lang);
  } catch (e2) {
    console.error("❌ 번들 재로딩 실패:", e2);
    bundle = {};
  }
  try {
    const { setLanguage } = await __vitePreload(async () => {
      const { setLanguage: setLanguage2 } = await Promise.resolve().then(() => Language);
      return { setLanguage: setLanguage2 };
    }, true ? void 0 : void 0, import.meta.url);
    await setLanguage(toUi5Lang(lang));
  } catch {
  }
  document.documentElement.lang = lang;
  document.documentElement.dir = ["ar", "he", "fa", "ur"].some((p3) => lang.startsWith(p3)) ? "rtl" : "ltr";
  notify();
}
function getCurrentLang() {
  return currentLang;
}
function useI18nRerender() {
  const [, setTick] = reactExports.useState(0);
  reactExports.useEffect(() => {
    const cb = () => setTick((x2) => x2 + 1);
    listeners.add(cb);
    return () => {
      listeners.delete(cb);
    };
  }, []);
}
function MyApp() {
  const navigate = useNavigate();
  const [i18nReady, setI18nReady] = reactExports.useState(false);
  reactExports.useEffect(() => {
    let mounted = true;
    (async () => {
      await initI18n();
      if (mounted) setI18nReady(true);
    })();
    return () => {
      mounted = false;
    };
  }, []);
  if (!i18nReady) return null;
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { padding: "1rem" }, children: /* @__PURE__ */ jsxRuntimeExports.jsxs(TabContainer2, { collapsed: false, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Tab2, { text: t2("home.tab.dmMe"), children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { padding: "1rem", minHeight: "1600px" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Text2, { style: { fontSize: "1.5rem", fontWeight: "bold" }, children: t2("home.title.dmMe") }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "div",
        {
          style: {
            display: "flex",
            flexWrap: "wrap",
            marginTop: "1rem"
          },
          children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              Card2,
              {
                style: {
                  width: "180px",
                  height: "180px",
                  margin: "1rem",
                  borderRadius: "8px",
                  display: "flex",
                  flexDirection: "column",
                  alignItems: "center",
                  justifyContent: "center",
                  boxShadow: "0 2px 5px rgba(0,0,0,0.1)",
                  cursor: "pointer",
                  position: "relative"
                },
                onClick: () => {
                  {
                    navigate("./outgoing");
                  }
                },
                children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx(Text2, { style: { fontWeight: "bold", fontSize: "1rem", margin: "1rem" }, children: t2("home.card.eScanProd") }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Icon2,
                    {
                      name: factory$1,
                      style: {
                        width: "2rem",
                        height: "2rem",
                        position: "absolute",
                        bottom: "1.5rem",
                        left: "1.5rem",
                        color: "#0a6ed1"
                      }
                    }
                  )
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              Card2,
              {
                style: {
                  width: "180px",
                  height: "180px",
                  margin: "1rem",
                  borderRadius: "8px",
                  display: "flex",
                  flexDirection: "column",
                  alignItems: "center",
                  justifyContent: "center",
                  boxShadow: "0 2px 5px rgba(0,0,0,0.1)",
                  cursor: "pointer",
                  position: "relative"
                },
                onClick: () => {
                  {
                    navigate("./outgoing/reprint");
                  }
                },
                children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx(Text2, { style: { fontWeight: "bold", fontSize: "1rem", margin: "1rem", textAlign: "center" }, children: t2("home.card.eScanReprint") }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Icon2,
                    {
                      name: actionSettingsIcon,
                      style: {
                        width: "2rem",
                        height: "2rem",
                        position: "absolute",
                        bottom: "1.5rem",
                        left: "1.5rem",
                        color: "#0a6ed1"
                      }
                    }
                  )
                ]
              }
            )
          ]
        }
      )
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Tab2, { text: t2("home.tab.interface"), children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { padding: "1rem", minHeight: "600px" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Text2, { style: { fontSize: "1.5rem", fontWeight: "bold" }, children: t2("home.title.interface") }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "div",
        {
          style: {
            display: "flex",
            flexWrap: "wrap",
            marginTop: "1rem"
          },
          children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              Card2,
              {
                style: {
                  width: "180px",
                  height: "180px",
                  margin: "1rem",
                  borderRadius: "8px",
                  display: "flex",
                  flexDirection: "column",
                  alignItems: "center",
                  justifyContent: "center",
                  boxShadow: "0 2px 5px rgba(0,0,0,0.1)",
                  cursor: "pointer",
                  position: "relative"
                },
                onClick: () => {
                  {
                    navigate("./interface/order");
                  }
                },
                children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx(Text2, { style: { fontWeight: "bold", fontSize: "1rem", margin: "1rem" }, children: t2("home.card.createOrder") }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Icon2,
                    {
                      name: factory$1,
                      style: {
                        width: "2rem",
                        height: "2rem",
                        position: "absolute",
                        bottom: "1.5rem",
                        left: "1.5rem",
                        color: "#0a6ed1"
                      }
                    }
                  )
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              Card2,
              {
                style: {
                  width: "180px",
                  height: "180px",
                  margin: "1rem",
                  borderRadius: "8px",
                  display: "flex",
                  flexDirection: "column",
                  alignItems: "center",
                  justifyContent: "center",
                  boxShadow: "0 2px 5px rgba(0,0,0,0.1)",
                  cursor: "pointer",
                  position: "relative"
                },
                onClick: () => {
                  {
                    navigate("./interface/change");
                  }
                },
                children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx(Text2, { style: { fontWeight: "bold", fontSize: "1rem", margin: "1rem" }, children: t2("home.card.changeSfc") }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Icon2,
                    {
                      name: factory$1,
                      style: {
                        width: "2rem",
                        height: "2rem",
                        position: "absolute",
                        bottom: "1.5rem",
                        left: "1.5rem",
                        color: "#0a6ed1"
                      }
                    }
                  )
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              Card2,
              {
                style: {
                  width: "180px",
                  height: "180px",
                  margin: "1rem",
                  borderRadius: "8px",
                  display: "flex",
                  flexDirection: "column",
                  alignItems: "center",
                  justifyContent: "center",
                  boxShadow: "0 2px 5px rgba(0,0,0,0.1)",
                  cursor: "pointer",
                  position: "relative"
                },
                onClick: () => {
                  {
                    navigate("./interface/total");
                  }
                },
                children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Text2,
                    {
                      style: {
                        fontWeight: "bold",
                        fontSize: "1rem",
                        margin: "1rem",
                        textAlign: "center"
                      },
                      children: t2("home.card.totalInterface", { defaultValue: "통합테스트인터페이스" })
                    }
                  ),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Icon2,
                    {
                      name: actionSettingsIcon,
                      style: {
                        width: "2rem",
                        height: "2rem",
                        position: "absolute",
                        bottom: "1.5rem",
                        left: "1.5rem",
                        color: "#0a6ed1"
                      }
                    }
                  )
                ]
              }
            )
          ]
        }
      )
    ] }) })
  ] }) });
}
const a2 = async (e2) => {
  switch (e2) {
    case "en":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import("./messagebundle_en-BfoCdMkQ.js");
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_US_sappsd":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import("./messagebundle_en_US_sappsd-CrCAJXdg.js");
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_US_saprigi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import("./messagebundle_en_US_saprigi-2bL79chd.js");
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_US_saptrc":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import("./messagebundle_en_US_saptrc-BVEVQLEm.js");
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    default:
      throw "unknown locale";
  }
}, r2 = async (e2) => {
  const t3 = await a2(e2);
  if (typeof t3 == "string" && t3.endsWith(".json")) throw new Error('[i18n] Invalid bundling detected - dynamic JSON imports bundled as URLs. Switch to inlining JSON files from the build. Check the "Assets" documentation for more information.');
  return t3;
}, i2 = ["en", "en_US_sappsd", "en_US_saprigi", "en_US_saptrc"];
i2.forEach((e2) => {
  $$3("@ui5/webcomponents-base", e2, r2);
});
const availableLocales = ["ar", "ar_EG", "ar_SA", "bg", "ca", "cnr", "cs", "da", "de", "de_AT", "de_CH", "el", "el_CY", "en", "en_AU", "en_GB", "en_HK", "en_IE", "en_IN", "en_NZ", "en_PG", "en_SG", "en_ZA", "es", "es_AR", "es_BO", "es_CL", "es_CO", "es_MX", "es_PE", "es_UY", "es_VE", "et", "fa", "fi", "fr", "fr_BE", "fr_CA", "fr_CH", "fr_LU", "he", "hi", "hr", "hu", "id", "it", "it_CH", "ja", "kk", "ko", "lt", "lv", "ms", "mk", "nb", "nl", "nl_BE", "pl", "pt", "pt_PT", "ro", "ru", "ru_UA", "sk", "sl", "sr", "sr_Latn", "sv", "th", "tr", "uk", "vi", "zh_CN", "zh_HK", "zh_SG", "zh_TW"];
const importCldrJson = async (localeId) => {
  switch (localeId) {
    case "ar":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-ar" */
          "./ar-DIZx9qZG.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ar_EG":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-ar_EG" */
          "./ar_EG-Ca1Vt9Z4.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ar_SA":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-ar_SA" */
          "./ar_SA-CgC0kJJR.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "bg":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-bg" */
          "./bg-BTsGwbdG.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ca":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-ca" */
          "./ca-DTgc-Ekf.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "cnr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-cnr" */
          "./cnr-TCl_vBw6.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "cs":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-cs" */
          "./cs-D0_6eTC3.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "da":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-da" */
          "./da-CaXTtjXv.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "de":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-de" */
          "./de-ar5JbNzP.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "de_AT":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-de_AT" */
          "./de_AT-DWnFWS-l.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "de_CH":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-de_CH" */
          "./de_CH-Cfvh1PhM.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "el":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-el" */
          "./el-Bg5wUv5k.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "el_CY":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-el_CY" */
          "./el_CY-_COSZuxy.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-en" */
          "./en-CDZQZZjw.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_AU":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-en_AU" */
          "./en_AU-B2mFKJgq.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_GB":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-en_GB" */
          "./en_GB-C9XVxvD-.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_HK":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-en_HK" */
          "./en_HK-fh-pN-Ca.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_IE":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-en_IE" */
          "./en_IE-DqLy1hkI.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_IN":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-en_IN" */
          "./en_IN-Bchtr5rB.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_NZ":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-en_NZ" */
          "./en_NZ-DrXp29C_.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_PG":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-en_PG" */
          "./en_PG-Bd-n85cB.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_SG":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-en_SG" */
          "./en_SG-DawU51Gz.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_ZA":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-en_ZA" */
          "./en_ZA-DS4CymLM.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-es" */
          "./es-DDDpoPbz.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es_AR":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-es_AR" */
          "./es_AR-xxLXOFjT.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es_BO":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-es_BO" */
          "./es_BO-B4Wg7O9q.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es_CL":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-es_CL" */
          "./es_CL-CpSGkKzW.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es_CO":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-es_CO" */
          "./es_CO-DUOL3yQq.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es_MX":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-es_MX" */
          "./es_MX-tFD8wCXr.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es_PE":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-es_PE" */
          "./es_PE-DMMCfJy1.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es_UY":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-es_UY" */
          "./es_UY-DgOJwpfA.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es_VE":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-es_VE" */
          "./es_VE-BBiJ0jF0.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "et":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-et" */
          "./et-C9pND7D6.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fa":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-fa" */
          "./fa-DHNn1ZN0.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-fi" */
          "./fi-BnFNFGoy.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-fr" */
          "./fr-D2nxqjlK.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fr_BE":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-fr_BE" */
          "./fr_BE-CW4MLEbd.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fr_CA":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-fr_CA" */
          "./fr_CA-VZRDnMNr.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fr_CH":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-fr_CH" */
          "./fr_CH-DHJ5WIfF.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fr_LU":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-fr_LU" */
          "./fr_LU-D5jdgzeo.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "he":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-he" */
          "./he-aALpog5W.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "hi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-hi" */
          "./hi-BLPB1s_-.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "hr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-hr" */
          "./hr-CPLkwedh.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "hu":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-hu" */
          "./hu-DXv7rCbz.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "id":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-id" */
          "./id-BWgbYrbZ.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "it":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-it" */
          "./it-DvDDc9oi.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "it_CH":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-it_CH" */
          "./it_CH-DLY6g_O_.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ja":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-ja" */
          "./ja-E3YYc8ah.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "kk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-kk" */
          "./kk-B0TuMeB3.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ko":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-ko" */
          "./ko-s-1bZGUZ.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "lt":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-lt" */
          "./lt-B7SRXquK.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "lv":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-lv" */
          "./lv-Ct_g3HZD.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ms":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-ms" */
          "./ms-C03L6ZgP.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "mk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-mk" */
          "./mk-CKguFBOv.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "nb":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-nb" */
          "./nb-DZIB9BU_.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "nl":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-nl" */
          "./nl-C14jw00h.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "nl_BE":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-nl_BE" */
          "./nl_BE-Balm-C1Q.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "pl":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-pl" */
          "./pl-B2iQgAah.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "pt":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-pt" */
          "./pt-DWgBfHbl.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "pt_PT":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-pt_PT" */
          "./pt_PT-BS9Pa9lJ.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ro":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-ro" */
          "./ro-D66PcNyN.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ru":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-ru" */
          "./ru-DN04Vfz0.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ru_UA":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-ru_UA" */
          "./ru_UA-FiBS1taS.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-sk" */
          "./sk-CN0WFz9d.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sl":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-sl" */
          "./sl-6jmwwDmw.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-sr" */
          "./sr-B-9lEj4i.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sr_Latn":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-sr_Latn" */
          "./sr_Latn-DOuJB2XP.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sv":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-sv" */
          "./sv-DFI0u9T3.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "th":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-th" */
          "./th-DkCgGLKt.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "tr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-tr" */
          "./tr-DWmSL5GM.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "uk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-uk" */
          "./uk-BufMh1j1.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "vi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-vi" */
          "./vi-CgbRY3n9.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "zh_CN":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-zh_CN" */
          "./zh_CN-BFTYo3w2.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "zh_HK":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-zh_HK" */
          "./zh_HK-COAIZDJv.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "zh_SG":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-zh_SG" */
          "./zh_SG-CSg_1Yz3.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "zh_TW":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-cldr-zh_TW" */
          "./zh_TW-C67lNywv.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    default:
      throw "unknown locale";
  }
};
const importAndCheck$4 = async (localeId) => {
  const data = await importCldrJson(localeId);
  if (typeof data === "string" && data.endsWith(".json")) {
    throw new Error(`[LocaleData] Invalid bundling detected - dynamic JSON imports bundled as URLs. Switch to inlining JSON files from the build. Check the "Assets" documentation for more information.`);
  }
  return data;
};
availableLocales.forEach((localeId) => C$2(localeId, importAndCheck$4));
const loadThemeProperties$2 = async (themeName) => {
  switch (themeName) {
    case "sap_fiori_3":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-theming-sap-fiori_3-parameters-bundle" */
          "./parameters-bundle.css-CMOSanK-.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_fiori_3_dark":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-theming-sap-fiori_3_dark-parameters-bundle" */
          "./parameters-bundle.css-DceYLtLl.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_fiori_3_hcb":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-theming-sap-fiori_3_hcb-parameters-bundle" */
          "./parameters-bundle.css-mpXtRdPA.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_fiori_3_hcw":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-theming-sap-fiori_3_hcw-parameters-bundle" */
          "./parameters-bundle.css-Bhsf8Hb5.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_horizon":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-theming-sap-horizon-parameters-bundle" */
          "./parameters-bundle.css-DwN2BBfl.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_horizon_dark":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-theming-sap-horizon_dark-parameters-bundle" */
          "./parameters-bundle.css-hI1_b2x0.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_horizon_hcb":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-theming-sap-horizon_hcb-parameters-bundle" */
          "./parameters-bundle.css-BmmPNXIq.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_horizon_hcw":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-theming-sap-horizon_hcw-parameters-bundle" */
          "./parameters-bundle.css-DSYAAihB.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    default:
      throw "unknown theme";
  }
};
const loadAndCheck$2 = async (themeName) => {
  const data = await loadThemeProperties$2(themeName);
  if (typeof data === "string" && data.endsWith(".json")) {
    throw new Error(`[themes] Invalid bundling detected - dynamic JSON imports bundled as URLs. Switch to inlining JSON files from the build. Check the "Assets" documentation for more information.`);
  }
  return data;
};
["sap_fiori_3", "sap_fiori_3_dark", "sap_fiori_3_hcb", "sap_fiori_3_hcw", "sap_horizon", "sap_horizon_dark", "sap_horizon_hcb", "sap_horizon_hcw"].forEach((themeName) => p$8("@ui5/webcomponents-theming", themeName, loadAndCheck$2));
const importMessageBundle$3 = async (localeId) => {
  switch (localeId) {
    case "ar":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-ar" */
          "./messagebundle_ar-By0ELKn1.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "bg":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-bg" */
          "./messagebundle_bg-CtKf3_pD.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ca":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-ca" */
          "./messagebundle_ca-ByYs-6x0.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "cnr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-cnr" */
          "./messagebundle_cnr-B2C2UtnY.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "cs":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-cs" */
          "./messagebundle_cs-CglsMLoj.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "cy":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-cy" */
          "./messagebundle_cy-BQU59Edl.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "da":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-da" */
          "./messagebundle_da-Dnrxp7vZ.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "de":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-de" */
          "./messagebundle_de-Dbpn-Kzy.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "el":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-el" */
          "./messagebundle_el-BbKk0xSf.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-en" */
          "./messagebundle_en-DvYWXfG3.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_GB":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-en_GB" */
          "./messagebundle_en_GB-Bo0ABb8q.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_US_sappsd":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-en_US_sappsd" */
          "./messagebundle_en_US_sappsd-DnyNqUM9.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_US_saprigi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-en_US_saprigi" */
          "./messagebundle_en_US_saprigi-DZ_EqeE9.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_US_saptrc":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-en_US_saptrc" */
          "./messagebundle_en_US_saptrc-BsR0a7JW.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-es" */
          "./messagebundle_es-CjKpS0VR.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es_MX":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-es_MX" */
          "./messagebundle_es_MX-CaUIlVEp.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "et":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-et" */
          "./messagebundle_et-C50d_WIs.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-fi" */
          "./messagebundle_fi-BjJAU_zd.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-fr" */
          "./messagebundle_fr-CZjoFOTp.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fr_CA":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-fr_CA" */
          "./messagebundle_fr_CA-DZBFnNAJ.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "hi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-hi" */
          "./messagebundle_hi-CMAHfPzF.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "hr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-hr" */
          "./messagebundle_hr-DJBozPw3.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "hu":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-hu" */
          "./messagebundle_hu-CmnM7BSH.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "id":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-id" */
          "./messagebundle_id-Dx8KYXZj.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "it":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-it" */
          "./messagebundle_it-hDgBOSV3.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "iw":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-iw" */
          "./messagebundle_iw-CfnJye2i.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ja":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-ja" */
          "./messagebundle_ja-DiyT2vK2.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "kk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-kk" */
          "./messagebundle_kk-CZn0MmH2.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ko":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-ko" */
          "./messagebundle_ko-CQgzMWRu.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "lt":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-lt" */
          "./messagebundle_lt-BnmsTwH0.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "lv":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-lv" */
          "./messagebundle_lv-BhX-3e7T.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "mk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-mk" */
          "./messagebundle_mk-1F54i8zg.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ms":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-ms" */
          "./messagebundle_ms-C4ALLG8v.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "nl":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-nl" */
          "./messagebundle_nl-COOj_3wb.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "no":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-no" */
          "./messagebundle_no-raoH9TFS.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "pl":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-pl" */
          "./messagebundle_pl-BypwDfY-.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "pt":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-pt" */
          "./messagebundle_pt-BGN4m4Lf.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "pt_PT":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-pt_PT" */
          "./messagebundle_pt_PT-Bieyl7u4.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ro":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-ro" */
          "./messagebundle_ro-nTlNR9MA.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ru":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-ru" */
          "./messagebundle_ru-BDcLROAo.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sh":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-sh" */
          "./messagebundle_sh-Conx2VHX.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-sk" */
          "./messagebundle_sk-B0_P6rhh.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sl":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-sl" */
          "./messagebundle_sl-82XaNOOU.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-sr" */
          "./messagebundle_sr-nEv82gwv.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sv":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-sv" */
          "./messagebundle_sv-gTC20rWk.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "th":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-th" */
          "./messagebundle_th-B-LFWoo4.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "tr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-tr" */
          "./messagebundle_tr-Ddfex1-g.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "uk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-uk" */
          "./messagebundle_uk-Cf9LoYFs.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "vi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-vi" */
          "./messagebundle_vi-Gus-NSRW.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "zh_CN":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-zh_CN" */
          "./messagebundle_zh_CN-KensJmFt.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "zh_TW":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-icons-messagebundle-zh_TW" */
          "./messagebundle_zh_TW-DZQ07fJI.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    default:
      throw "unknown locale";
  }
};
const importAndCheck$3 = async (localeId) => {
  const data = await importMessageBundle$3(localeId);
  if (typeof data === "string" && data.endsWith(".json")) {
    throw new Error(`[i18n] Invalid bundling detected - dynamic JSON imports bundled as URLs. Switch to inlining JSON files from the build. Check the "Assets" documentation for more information.`);
  }
  return data;
};
const localeIds$3 = [
  "ar",
  "bg",
  "ca",
  "cnr",
  "cs",
  "cy",
  "da",
  "de",
  "el",
  "en",
  "en_GB",
  "en_US_sappsd",
  "en_US_saprigi",
  "en_US_saptrc",
  "es",
  "es_MX",
  "et",
  "fi",
  "fr",
  "fr_CA",
  "hi",
  "hr",
  "hu",
  "id",
  "it",
  "iw",
  "ja",
  "kk",
  "ko",
  "lt",
  "lv",
  "mk",
  "ms",
  "nl",
  "no",
  "pl",
  "pt",
  "pt_PT",
  "ro",
  "ru",
  "sh",
  "sk",
  "sl",
  "sr",
  "sv",
  "th",
  "tr",
  "uk",
  "vi",
  "zh_CN",
  "zh_TW"
];
localeIds$3.forEach((localeId) => {
  $$3("@ui5/webcomponents-icons", localeId, importAndCheck$3);
});
const loadThemeProperties$1 = async (themeName) => {
  switch (themeName) {
    case "sap_fiori_3":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-sap-fiori_3-parameters-bundle" */
          "./parameters-bundle.css-BwS30KHE.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_fiori_3_dark":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-sap-fiori_3_dark-parameters-bundle" */
          "./parameters-bundle.css-DDWiHEOc.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_fiori_3_hcb":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-sap-fiori_3_hcb-parameters-bundle" */
          "./parameters-bundle.css-BxkUMOpS.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_fiori_3_hcw":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-sap-fiori_3_hcw-parameters-bundle" */
          "./parameters-bundle.css-DU64Vzqj.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_horizon":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-sap-horizon-parameters-bundle" */
          "./parameters-bundle.css-BTv-Aftj.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_horizon_dark":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-sap-horizon_dark-parameters-bundle" */
          "./parameters-bundle.css-iu_gHBrO.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_horizon_hcb":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-sap-horizon_hcb-parameters-bundle" */
          "./parameters-bundle.css-CKkwf5aO.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_horizon_hcw":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-sap-horizon_hcw-parameters-bundle" */
          "./parameters-bundle.css-Bnu5-8lo.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    default:
      throw "unknown theme";
  }
};
const loadAndCheck$1 = async (themeName) => {
  const data = await loadThemeProperties$1(themeName);
  if (typeof data === "string" && data.endsWith(".json")) {
    throw new Error(`[themes] Invalid bundling detected - dynamic JSON imports bundled as URLs. Switch to inlining JSON files from the build. Check the "Assets" documentation for more information.`);
  }
  return data;
};
["sap_fiori_3", "sap_fiori_3_dark", "sap_fiori_3_hcb", "sap_fiori_3_hcw", "sap_horizon", "sap_horizon_dark", "sap_horizon_hcb", "sap_horizon_hcw"].forEach((themeName) => p$8("@ui5/webcomponents", themeName, loadAndCheck$1));
const importMessageBundle$2 = async (localeId) => {
  switch (localeId) {
    case "ar":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-ar" */
          "./messagebundle_ar-DvH3E0Ud.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "bg":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-bg" */
          "./messagebundle_bg-DvZHVJTP.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ca":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-ca" */
          "./messagebundle_ca-D7L5sECl.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "cnr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-cnr" */
          "./messagebundle_cnr-0WfVn3zK.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "cs":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-cs" */
          "./messagebundle_cs-nPoH54lC.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "cy":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-cy" */
          "./messagebundle_cy-DbATGoab.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "da":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-da" */
          "./messagebundle_da-DgKwICpH.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "de":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-de" */
          "./messagebundle_de-CZyzFSMD.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "el":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-el" */
          "./messagebundle_el-B6ggsyoT.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-en" */
          "./messagebundle_en-BWDdb7_j.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_GB":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-en_GB" */
          "./messagebundle_en_GB-CUGZymhP.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_US_sappsd":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-en_US_sappsd" */
          "./messagebundle_en_US_sappsd-ChW3prXe.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_US_saprigi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-en_US_saprigi" */
          "./messagebundle_en_US_saprigi-C2NW584z.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_US_saptrc":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-en_US_saptrc" */
          "./messagebundle_en_US_saptrc-C7RmZG1u.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-es" */
          "./messagebundle_es-Bj2hElnS.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es_MX":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-es_MX" */
          "./messagebundle_es_MX-CqJAncBi.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "et":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-et" */
          "./messagebundle_et-BEqzNo_A.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-fi" */
          "./messagebundle_fi-Ds_GcEuE.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-fr" */
          "./messagebundle_fr-BG1kUmp4.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fr_CA":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-fr_CA" */
          "./messagebundle_fr_CA-BlAP6caP.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "hi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-hi" */
          "./messagebundle_hi-C2PiVaQw.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "hr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-hr" */
          "./messagebundle_hr-c64mJn9h.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "hu":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-hu" */
          "./messagebundle_hu-CePLXtAC.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "id":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-id" */
          "./messagebundle_id-ClIzgznD.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "it":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-it" */
          "./messagebundle_it-CD2GDuad.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "iw":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-iw" */
          "./messagebundle_iw-BFGU1HJQ.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ja":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-ja" */
          "./messagebundle_ja-CMq2Oq-G.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "kk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-kk" */
          "./messagebundle_kk-jXwa6s0V.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ko":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-ko" */
          "./messagebundle_ko-D_PBAxrT.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "lt":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-lt" */
          "./messagebundle_lt-UcpiRF-q.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "lv":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-lv" */
          "./messagebundle_lv-BKOdLhWA.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "mk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-mk" */
          "./messagebundle_mk-BOEXtS1p.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ms":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-ms" */
          "./messagebundle_ms-lZdE9gU-.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "nl":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-nl" */
          "./messagebundle_nl-Bf8apLXU.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "no":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-no" */
          "./messagebundle_no-BGisBgTh.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "pl":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-pl" */
          "./messagebundle_pl-DJfYiG3X.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "pt":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-pt" */
          "./messagebundle_pt-hXjGSP0b.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "pt_PT":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-pt_PT" */
          "./messagebundle_pt_PT-CyyB1aKY.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ro":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-ro" */
          "./messagebundle_ro-Do4SDbCa.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ru":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-ru" */
          "./messagebundle_ru-BieDUtmn.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sh":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-sh" */
          "./messagebundle_sh-BHqpJt_s.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-sk" */
          "./messagebundle_sk-DEKnIVME.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sl":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-sl" */
          "./messagebundle_sl-DKE5zg0G.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-sr" */
          "./messagebundle_sr-Df6ky2Xm.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sv":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-sv" */
          "./messagebundle_sv-BvvtVLKy.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "th":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-th" */
          "./messagebundle_th-PD-qC6Gh.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "tr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-tr" */
          "./messagebundle_tr-BiizMxvw.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "uk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-uk" */
          "./messagebundle_uk-BYy5d0Nb.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "vi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-vi" */
          "./messagebundle_vi-OUu_8_T7.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "zh_CN":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-zh_CN" */
          "./messagebundle_zh_CN-BtZUxmzz.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "zh_TW":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-messagebundle-zh_TW" */
          "./messagebundle_zh_TW-DXcIzAwk.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    default:
      throw "unknown locale";
  }
};
const importAndCheck$2 = async (localeId) => {
  const data = await importMessageBundle$2(localeId);
  if (typeof data === "string" && data.endsWith(".json")) {
    throw new Error(`[i18n] Invalid bundling detected - dynamic JSON imports bundled as URLs. Switch to inlining JSON files from the build. Check the "Assets" documentation for more information.`);
  }
  return data;
};
const localeIds$2 = [
  "ar",
  "bg",
  "ca",
  "cnr",
  "cs",
  "cy",
  "da",
  "de",
  "el",
  "en",
  "en_GB",
  "en_US_sappsd",
  "en_US_saprigi",
  "en_US_saptrc",
  "es",
  "es_MX",
  "et",
  "fi",
  "fr",
  "fr_CA",
  "hi",
  "hr",
  "hu",
  "id",
  "it",
  "iw",
  "ja",
  "kk",
  "ko",
  "lt",
  "lv",
  "mk",
  "ms",
  "nl",
  "no",
  "pl",
  "pt",
  "pt_PT",
  "ro",
  "ru",
  "sh",
  "sk",
  "sl",
  "sr",
  "sv",
  "th",
  "tr",
  "uk",
  "vi",
  "zh_CN",
  "zh_TW"
];
localeIds$2.forEach((localeId) => {
  $$3("@ui5/webcomponents", localeId, importAndCheck$2);
});
const loadThemeProperties = async (themeName) => {
  switch (themeName) {
    case "sap_fiori_3":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-sap-fiori_3-parameters-bundle" */
          "./parameters-bundle.css-DMX07b-F.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_fiori_3_dark":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-sap-fiori_3_dark-parameters-bundle" */
          "./parameters-bundle.css-B8mcy1mu.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_fiori_3_hcb":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-sap-fiori_3_hcb-parameters-bundle" */
          "./parameters-bundle.css-Bhm77BGm.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_fiori_3_hcw":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-sap-fiori_3_hcw-parameters-bundle" */
          "./parameters-bundle.css-CPIqgC2U.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_horizon":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-sap-horizon-parameters-bundle" */
          "./parameters-bundle.css-CjiVLO-Z.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_horizon_dark":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-sap-horizon_dark-parameters-bundle" */
          "./parameters-bundle.css-C-PVAlcH.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_horizon_hcb":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-sap-horizon_hcb-parameters-bundle" */
          "./parameters-bundle.css-BJFcSJ3I.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sap_horizon_hcw":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-sap-horizon_hcw-parameters-bundle" */
          "./parameters-bundle.css-C9aSAXNw.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    default:
      throw "unknown theme";
  }
};
const loadAndCheck = async (themeName) => {
  const data = await loadThemeProperties(themeName);
  if (typeof data === "string" && data.endsWith(".json")) {
    throw new Error(`[themes] Invalid bundling detected - dynamic JSON imports bundled as URLs. Switch to inlining JSON files from the build. Check the "Assets" documentation for more information.`);
  }
  return data;
};
["sap_fiori_3", "sap_fiori_3_dark", "sap_fiori_3_hcb", "sap_fiori_3_hcw", "sap_horizon", "sap_horizon_dark", "sap_horizon_hcb", "sap_horizon_hcw"].forEach((themeName) => p$8("@ui5/webcomponents-fiori", themeName, loadAndCheck));
const importMessageBundle$1 = async (localeId) => {
  switch (localeId) {
    case "ar":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-ar" */
          "./messagebundle_ar-DVCqjm8a.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "bg":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-bg" */
          "./messagebundle_bg-CvNTwnZT.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ca":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-ca" */
          "./messagebundle_ca-OFKbVNSc.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "cnr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-cnr" */
          "./messagebundle_cnr-IQJDxVPA.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "cs":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-cs" */
          "./messagebundle_cs-DA7UJ7Ld.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "cy":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-cy" */
          "./messagebundle_cy-CJbNZ-Ym.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "da":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-da" */
          "./messagebundle_da-DnZmWoeA.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "de":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-de" */
          "./messagebundle_de-BiMd72uu.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "el":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-el" */
          "./messagebundle_el-Bhl5rD4q.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-en" */
          "./messagebundle_en-Bk3nImZU.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_GB":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-en_GB" */
          "./messagebundle_en_GB-BiSUacv1.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_US_sappsd":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-en_US_sappsd" */
          "./messagebundle_en_US_sappsd-DQ5u0yFr.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_US_saprigi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-en_US_saprigi" */
          "./messagebundle_en_US_saprigi-CIoKQAHi.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_US_saptrc":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-en_US_saptrc" */
          "./messagebundle_en_US_saptrc-DOnA088n.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-es" */
          "./messagebundle_es-8MnS5kS8.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es_MX":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-es_MX" */
          "./messagebundle_es_MX-DTDqgVsN.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "et":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-et" */
          "./messagebundle_et-b2wjOtju.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-fi" */
          "./messagebundle_fi-QITfO2Ld.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-fr" */
          "./messagebundle_fr-iKXsqjsz.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fr_CA":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-fr_CA" */
          "./messagebundle_fr_CA-B1fYSx9b.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "hi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-hi" */
          "./messagebundle_hi-Cdpd8cM_.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "hr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-hr" */
          "./messagebundle_hr-BVXfmGxV.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "hu":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-hu" */
          "./messagebundle_hu-CS4Baoht.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "id":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-id" */
          "./messagebundle_id-9rrh3P1e.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "it":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-it" */
          "./messagebundle_it-BsbJGbPk.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "iw":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-iw" */
          "./messagebundle_iw-BOkZylCX.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ja":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-ja" */
          "./messagebundle_ja-DsULjBkg.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "kk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-kk" */
          "./messagebundle_kk-BM4k8FsX.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ko":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-ko" */
          "./messagebundle_ko-ByWhTJi0.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "lt":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-lt" */
          "./messagebundle_lt-ggFhHsbj.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "lv":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-lv" */
          "./messagebundle_lv-CU-P0nP_.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "mk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-mk" */
          "./messagebundle_mk-RtADjhCa.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ms":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-ms" */
          "./messagebundle_ms-DzkhmWTe.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "nl":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-nl" */
          "./messagebundle_nl-BiQpJurE.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "no":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-no" */
          "./messagebundle_no-D8aCNJTr.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "pl":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-pl" */
          "./messagebundle_pl-Bo-Jelpe.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "pt":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-pt" */
          "./messagebundle_pt-ZNnrDWi3.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "pt_PT":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-pt_PT" */
          "./messagebundle_pt_PT-bz9I0UDW.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ro":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-ro" */
          "./messagebundle_ro-DTT_9AHz.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ru":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-ru" */
          "./messagebundle_ru-CPS0u5NC.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sh":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-sh" */
          "./messagebundle_sh-DPsodUyb.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-sk" */
          "./messagebundle_sk-CXXSNW-a.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sl":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-sl" */
          "./messagebundle_sl-D-_eOAdE.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-sr" */
          "./messagebundle_sr-DxP1MccW.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sv":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-sv" */
          "./messagebundle_sv-BEe02PoH.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "th":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-th" */
          "./messagebundle_th-CCIBTHbn.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "tr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-tr" */
          "./messagebundle_tr-Ce4P282E.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "uk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-uk" */
          "./messagebundle_uk-BCrqshYx.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "vi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-vi" */
          "./messagebundle_vi-DhBn06Ud.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "zh_CN":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-zh_CN" */
          "./messagebundle_zh_CN-BYna0Ova.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "zh_TW":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-fiori-messagebundle-zh_TW" */
          "./messagebundle_zh_TW-DNMpbg9z.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    default:
      throw "unknown locale";
  }
};
const importAndCheck$1 = async (localeId) => {
  const data = await importMessageBundle$1(localeId);
  if (typeof data === "string" && data.endsWith(".json")) {
    throw new Error(`[i18n] Invalid bundling detected - dynamic JSON imports bundled as URLs. Switch to inlining JSON files from the build. Check the "Assets" documentation for more information.`);
  }
  return data;
};
const localeIds$1 = [
  "ar",
  "bg",
  "ca",
  "cnr",
  "cs",
  "cy",
  "da",
  "de",
  "el",
  "en",
  "en_GB",
  "en_US_sappsd",
  "en_US_saprigi",
  "en_US_saptrc",
  "es",
  "es_MX",
  "et",
  "fi",
  "fr",
  "fr_CA",
  "hi",
  "hr",
  "hu",
  "id",
  "it",
  "iw",
  "ja",
  "kk",
  "ko",
  "lt",
  "lv",
  "mk",
  "ms",
  "nl",
  "no",
  "pl",
  "pt",
  "pt_PT",
  "ro",
  "ru",
  "sh",
  "sk",
  "sl",
  "sr",
  "sv",
  "th",
  "tr",
  "uk",
  "vi",
  "zh_CN",
  "zh_TW"
];
localeIds$1.forEach((localeId) => {
  $$3("@ui5/webcomponents-fiori", localeId, importAndCheck$1);
});
const importMessageBundle = async (localeId) => {
  switch (localeId) {
    case "ar":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-ar" */
          "./messagebundle_ar-BlItYMoB.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "bg":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-bg" */
          "./messagebundle_bg-DmNMKius.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ca":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-ca" */
          "./messagebundle_ca-B25cYBuW.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "cnr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-cnr" */
          "./messagebundle_cnr-jULIO7lj.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "cs":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-cs" */
          "./messagebundle_cs-BnDpZuq_.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "cy":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-cy" */
          "./messagebundle_cy-Ce6T4m8B.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "da":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-da" */
          "./messagebundle_da-BeGKV2d0.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "de":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-de" */
          "./messagebundle_de-C93kMa6u.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "el":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-el" */
          "./messagebundle_el-Dzqg_BfG.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-en" */
          "./messagebundle_en-CDuxfot-.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_GB":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-en_GB" */
          "./messagebundle_en_GB-AVRcP9GJ.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_US_sappsd":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-en_US_sappsd" */
          "./messagebundle_en_US_sappsd-fHVxAQ-8.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_US_saprigi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-en_US_saprigi" */
          "./messagebundle_en_US_saprigi-ClbYLj8D.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "en_US_saptrc":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-en_US_saptrc" */
          "./messagebundle_en_US_saptrc-DDgIN3JJ.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-es" */
          "./messagebundle_es-C28w-qqZ.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "es_MX":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-es_MX" */
          "./messagebundle_es_MX-DiAeKeO3.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "et":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-et" */
          "./messagebundle_et-pg2GdJ0I.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-fi" */
          "./messagebundle_fi-CbCvwIeX.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-fr" */
          "./messagebundle_fr-CDd3YG0I.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "fr_CA":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-fr_CA" */
          "./messagebundle_fr_CA-DU7alBvk.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "hi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-hi" */
          "./messagebundle_hi-D8Z4nKL0.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "hr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-hr" */
          "./messagebundle_hr-ah3VxTmM.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "hu":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-hu" */
          "./messagebundle_hu-COGNOsyV.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "id":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-id" */
          "./messagebundle_id-B9Lj11SC.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "it":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-it" */
          "./messagebundle_it-kSfQz4hL.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "iw":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-iw" */
          "./messagebundle_iw-BFhqhsmA.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ja":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-ja" */
          "./messagebundle_ja-CrQ13VTd.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "kk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-kk" */
          "./messagebundle_kk-31tCzrtc.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ko":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-ko" */
          "./messagebundle_ko-CkwEPyGg.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "lt":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-lt" */
          "./messagebundle_lt-CRve6UH5.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "lv":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-lv" */
          "./messagebundle_lv-Btv7L-nV.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "mk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-mk" */
          "./messagebundle_mk-BgZcvzdC.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ms":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-ms" */
          "./messagebundle_ms-BfVT7Lrg.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "nl":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-nl" */
          "./messagebundle_nl-f63L9SGd.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "no":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-no" */
          "./messagebundle_no-CmP7escy.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "pl":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-pl" */
          "./messagebundle_pl-CK5RAU_l.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "pt":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-pt" */
          "./messagebundle_pt-BIJeQ93Y.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "pt_PT":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-pt_PT" */
          "./messagebundle_pt_PT-CaguRRJI.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ro":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-ro" */
          "./messagebundle_ro-B4UO1v2L.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "ru":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-ru" */
          "./messagebundle_ru-Cl-6XQ2B.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sh":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-sh" */
          "./messagebundle_sh-pY4MHwIF.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-sk" */
          "./messagebundle_sk-DUvMeJq5.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sl":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-sl" */
          "./messagebundle_sl-B_LWb0pq.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-sr" */
          "./messagebundle_sr-BK1oWmT1.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "sv":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-sv" */
          "./messagebundle_sv-v9fBEzmy.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "th":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-th" */
          "./messagebundle_th-CJQOx8ZQ.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "tr":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-tr" */
          "./messagebundle_tr-BnEsZYql.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "uk":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-uk" */
          "./messagebundle_uk-DSTpys9_.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "vi":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-vi" */
          "./messagebundle_vi-DB6599gN.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "zh_CN":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-zh_CN" */
          "./messagebundle_zh_CN-DtVljUPo.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    case "zh_TW":
      return (await __vitePreload(async () => {
        const { default: __vite_default__ } = await import(
          /* webpackChunkName: "ui5-webcomponents-react-messagebundle-zh_TW" */
          "./messagebundle_zh_TW-Bv_sf6NP.js"
        );
        return { default: __vite_default__ };
      }, true ? [] : void 0, import.meta.url)).default;
    default:
      throw "unknown locale";
  }
};
const importAndCheck = async (localeId) => {
  const data = await importMessageBundle(localeId);
  if (typeof data === "string" && data.endsWith(".json")) {
    throw new Error(`[i18n] Invalid bundling detected - dynamic JSON imports bundled as URLs. Switch to inlining JSON files from the build. Check the "Assets" documentation for more information.`);
  }
  return data;
};
const localeIds = [
  "ar",
  "bg",
  "ca",
  "cnr",
  "cs",
  "cy",
  "da",
  "de",
  "el",
  "en",
  "en_GB",
  "en_US_sappsd",
  "en_US_saprigi",
  "en_US_saptrc",
  "es",
  "es_MX",
  "et",
  "fi",
  "fr",
  "fr_CA",
  "hi",
  "hr",
  "hu",
  "id",
  "it",
  "iw",
  "ja",
  "kk",
  "ko",
  "lt",
  "lv",
  "mk",
  "ms",
  "nl",
  "no",
  "pl",
  "pt",
  "pt_PT",
  "ro",
  "ru",
  "sh",
  "sk",
  "sl",
  "sr",
  "sv",
  "th",
  "tr",
  "uk",
  "vi",
  "zh_CN",
  "zh_TW"
];
localeIds.forEach((localeId) => {
  $$3("@ui5/webcomponents-react", localeId, importAndCheck);
});
const name$1 = "save";
const pathData$1 = "M32 363V86q0-23 15.5-38.5T86 32h340q22 0 38 15.5T480 86v340q0 23-16 38.5T426 480H149q-5 0-13-5L37 375q-5-5-5-12zm32-6l91 91h5V320q0-14 9-23t23-9h128q13 0 22.5 9t9.5 23v128h74q9 0 15.5-6.5T448 426V86q0-9-6.5-15.5T426 64h-42v128q0 14-9.5 23t-22.5 9H160q-14 0-23-9t-9-23V64H86q-9 0-15.5 6.5T64 86v271zm96-293v128h192V64H160zm160 384V320H192v128h128zm-96-56v-48q0-8 7-8h17q8 0 8 8v48q0 8-8 8h-17q-7 0-7-8z";
const ltr$1 = false;
const accData$1 = ICON_SAVE;
const collection$1 = "SAP-icons-v4";
const packageName$1 = "@ui5/webcomponents-icons";
y$1(name$1, { pathData: pathData$1, ltr: ltr$1, accData: accData$1, collection: collection$1, packageName: packageName$1 });
const name = "save";
const pathData = "M505 151q7 9 7 19v252q0 38-26 64t-64 26H90q-38 0-64-26T0 422V90q0-38 26-64T90 0h252q10 0 19 7zm-44 29L332 51H179v90h147q11 0 18.5 7.5T352 167t-7.5 18-18.5 7H153q-11 0-18-7t-7-18V51H90q-17 0-28 11T51 90v332q0 17 11 28t28 11h38V314q0-11 7-18.5t18-7.5h206q11 0 18 7.5t7 18.5v147h38q17 0 28-11t11-28V180zM333 339H179v122h154V339z";
const ltr = false;
const accData = ICON_SAVE;
const collection = "SAP-icons-v5";
const packageName = "@ui5/webcomponents-icons";
y$1(name, { pathData, ltr, accData, collection, packageName });
const saveIcon = "save";
const okGreen = "" + new URL("E_Confirm_Ok-DWllAGld.png", import.meta.url).href;
const okOrange = "" + new URL("E_Confirm_Orange-z8KdVk-j.png", import.meta.url).href;
const okDodgerblue = "" + new URL("E_Confirm_Dodgerblue-BEZMOMuz.png", import.meta.url).href;
const okYellow = "" + new URL("E_Confirm_Yellow-O6dQwPSn.png", import.meta.url).href;
const okWhite = "" + new URL("E_Confirm_White-DjBRnH4Q.png", import.meta.url).href;
function bind(fn, thisArg) {
  return function wrap() {
    return fn.apply(thisArg, arguments);
  };
}
const { toString } = Object.prototype;
const { getPrototypeOf } = Object;
const { iterator, toStringTag } = Symbol;
const kindOf = /* @__PURE__ */ ((cache2) => (thing) => {
  const str = toString.call(thing);
  return cache2[str] || (cache2[str] = str.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null));
const kindOfTest = (type) => {
  type = type.toLowerCase();
  return (thing) => kindOf(thing) === type;
};
const typeOfTest = (type) => (thing) => typeof thing === type;
const { isArray } = Array;
const isUndefined = typeOfTest("undefined");
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && isFunction$1(val.constructor.isBuffer) && val.constructor.isBuffer(val);
}
const isArrayBuffer = kindOfTest("ArrayBuffer");
function isArrayBufferView(val) {
  let result;
  if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) {
    result = ArrayBuffer.isView(val);
  } else {
    result = val && val.buffer && isArrayBuffer(val.buffer);
  }
  return result;
}
const isString = typeOfTest("string");
const isFunction$1 = typeOfTest("function");
const isNumber = typeOfTest("number");
const isObject = (thing) => thing !== null && typeof thing === "object";
const isBoolean = (thing) => thing === true || thing === false;
const isPlainObject = (val) => {
  if (kindOf(val) !== "object") {
    return false;
  }
  const prototype2 = getPrototypeOf(val);
  return (prototype2 === null || prototype2 === Object.prototype || Object.getPrototypeOf(prototype2) === null) && !(toStringTag in val) && !(iterator in val);
};
const isEmptyObject = (val) => {
  if (!isObject(val) || isBuffer(val)) {
    return false;
  }
  try {
    return Object.keys(val).length === 0 && Object.getPrototypeOf(val) === Object.prototype;
  } catch (e2) {
    return false;
  }
};
const isDate = kindOfTest("Date");
const isFile = kindOfTest("File");
const isBlob = kindOfTest("Blob");
const isFileList = kindOfTest("FileList");
const isStream = (val) => isObject(val) && isFunction$1(val.pipe);
const isFormData = (thing) => {
  let kind;
  return thing && (typeof FormData === "function" && thing instanceof FormData || isFunction$1(thing.append) && ((kind = kindOf(thing)) === "formdata" || // detect form-data instance
  kind === "object" && isFunction$1(thing.toString) && thing.toString() === "[object FormData]"));
};
const isURLSearchParams = kindOfTest("URLSearchParams");
const [isReadableStream, isRequest, isResponse, isHeaders] = ["ReadableStream", "Request", "Response", "Headers"].map(kindOfTest);
const trim = (str) => str.trim ? str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function forEach(obj, fn, { allOwnKeys = false } = {}) {
  if (obj === null || typeof obj === "undefined") {
    return;
  }
  let i3;
  let l3;
  if (typeof obj !== "object") {
    obj = [obj];
  }
  if (isArray(obj)) {
    for (i3 = 0, l3 = obj.length; i3 < l3; i3++) {
      fn.call(null, obj[i3], i3, obj);
    }
  } else {
    if (isBuffer(obj)) {
      return;
    }
    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);
    const len = keys.length;
    let key;
    for (i3 = 0; i3 < len; i3++) {
      key = keys[i3];
      fn.call(null, obj[key], key, obj);
    }
  }
}
function findKey(obj, key) {
  if (isBuffer(obj)) {
    return null;
  }
  key = key.toLowerCase();
  const keys = Object.keys(obj);
  let i3 = keys.length;
  let _key;
  while (i3-- > 0) {
    _key = keys[i3];
    if (key === _key.toLowerCase()) {
      return _key;
    }
  }
  return null;
}
const _global = (() => {
  if (typeof globalThis !== "undefined") return globalThis;
  return typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : global;
})();
const isContextDefined = (context) => !isUndefined(context) && context !== _global;
function merge() {
  const { caseless, skipUndefined } = isContextDefined(this) && this || {};
  const result = {};
  const assignValue = (val, key) => {
    const targetKey = caseless && findKey(result, key) || key;
    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {
      result[targetKey] = merge(result[targetKey], val);
    } else if (isPlainObject(val)) {
      result[targetKey] = merge({}, val);
    } else if (isArray(val)) {
      result[targetKey] = val.slice();
    } else if (!skipUndefined || !isUndefined(val)) {
      result[targetKey] = val;
    }
  };
  for (let i3 = 0, l3 = arguments.length; i3 < l3; i3++) {
    arguments[i3] && forEach(arguments[i3], assignValue);
  }
  return result;
}
const extend = (a3, b3, thisArg, { allOwnKeys } = {}) => {
  forEach(b3, (val, key) => {
    if (thisArg && isFunction$1(val)) {
      a3[key] = bind(val, thisArg);
    } else {
      a3[key] = val;
    }
  }, { allOwnKeys });
  return a3;
};
const stripBOM = (content2) => {
  if (content2.charCodeAt(0) === 65279) {
    content2 = content2.slice(1);
  }
  return content2;
};
const inherits = (constructor, superConstructor, props, descriptors2) => {
  constructor.prototype = Object.create(superConstructor.prototype, descriptors2);
  constructor.prototype.constructor = constructor;
  Object.defineProperty(constructor, "super", {
    value: superConstructor.prototype
  });
  props && Object.assign(constructor.prototype, props);
};
const toFlatObject = (sourceObj, destObj, filter2, propFilter) => {
  let props;
  let i3;
  let prop;
  const merged = {};
  destObj = destObj || {};
  if (sourceObj == null) return destObj;
  do {
    props = Object.getOwnPropertyNames(sourceObj);
    i3 = props.length;
    while (i3-- > 0) {
      prop = props[i3];
      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {
        destObj[prop] = sourceObj[prop];
        merged[prop] = true;
      }
    }
    sourceObj = filter2 !== false && getPrototypeOf(sourceObj);
  } while (sourceObj && (!filter2 || filter2(sourceObj, destObj)) && sourceObj !== Object.prototype);
  return destObj;
};
const endsWith = (str, searchString, position) => {
  str = String(str);
  if (position === void 0 || position > str.length) {
    position = str.length;
  }
  position -= searchString.length;
  const lastIndex = str.indexOf(searchString, position);
  return lastIndex !== -1 && lastIndex === position;
};
const toArray = (thing) => {
  if (!thing) return null;
  if (isArray(thing)) return thing;
  let i3 = thing.length;
  if (!isNumber(i3)) return null;
  const arr = new Array(i3);
  while (i3-- > 0) {
    arr[i3] = thing[i3];
  }
  return arr;
};
const isTypedArray = /* @__PURE__ */ ((TypedArray) => {
  return (thing) => {
    return TypedArray && thing instanceof TypedArray;
  };
})(typeof Uint8Array !== "undefined" && getPrototypeOf(Uint8Array));
const forEachEntry = (obj, fn) => {
  const generator = obj && obj[iterator];
  const _iterator = generator.call(obj);
  let result;
  while ((result = _iterator.next()) && !result.done) {
    const pair = result.value;
    fn.call(obj, pair[0], pair[1]);
  }
};
const matchAll = (regExp, str) => {
  let matches;
  const arr = [];
  while ((matches = regExp.exec(str)) !== null) {
    arr.push(matches);
  }
  return arr;
};
const isHTMLForm = kindOfTest("HTMLFormElement");
const toCamelCase = (str) => {
  return str.toLowerCase().replace(
    /[-_\s]([a-z\d])(\w*)/g,
    function replacer(m2, p1, p22) {
      return p1.toUpperCase() + p22;
    }
  );
};
const hasOwnProperty = (({ hasOwnProperty: hasOwnProperty2 }) => (obj, prop) => hasOwnProperty2.call(obj, prop))(Object.prototype);
const isRegExp = kindOfTest("RegExp");
const reduceDescriptors = (obj, reducer) => {
  const descriptors2 = Object.getOwnPropertyDescriptors(obj);
  const reducedDescriptors = {};
  forEach(descriptors2, (descriptor, name2) => {
    let ret;
    if ((ret = reducer(descriptor, name2, obj)) !== false) {
      reducedDescriptors[name2] = ret || descriptor;
    }
  });
  Object.defineProperties(obj, reducedDescriptors);
};
const freezeMethods = (obj) => {
  reduceDescriptors(obj, (descriptor, name2) => {
    if (isFunction$1(obj) && ["arguments", "caller", "callee"].indexOf(name2) !== -1) {
      return false;
    }
    const value = obj[name2];
    if (!isFunction$1(value)) return;
    descriptor.enumerable = false;
    if ("writable" in descriptor) {
      descriptor.writable = false;
      return;
    }
    if (!descriptor.set) {
      descriptor.set = () => {
        throw Error("Can not rewrite read-only method '" + name2 + "'");
      };
    }
  });
};
const toObjectSet = (arrayOrString, delimiter) => {
  const obj = {};
  const define = (arr) => {
    arr.forEach((value) => {
      obj[value] = true;
    });
  };
  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));
  return obj;
};
const noop = () => {
};
const toFiniteNumber = (value, defaultValue) => {
  return value != null && Number.isFinite(value = +value) ? value : defaultValue;
};
function isSpecCompliantForm(thing) {
  return !!(thing && isFunction$1(thing.append) && thing[toStringTag] === "FormData" && thing[iterator]);
}
const toJSONObject = (obj) => {
  const stack = new Array(10);
  const visit = (source, i3) => {
    if (isObject(source)) {
      if (stack.indexOf(source) >= 0) {
        return;
      }
      if (isBuffer(source)) {
        return source;
      }
      if (!("toJSON" in source)) {
        stack[i3] = source;
        const target = isArray(source) ? [] : {};
        forEach(source, (value, key) => {
          const reducedValue = visit(value, i3 + 1);
          !isUndefined(reducedValue) && (target[key] = reducedValue);
        });
        stack[i3] = void 0;
        return target;
      }
    }
    return source;
  };
  return visit(obj, 0);
};
const isAsyncFn = kindOfTest("AsyncFunction");
const isThenable = (thing) => thing && (isObject(thing) || isFunction$1(thing)) && isFunction$1(thing.then) && isFunction$1(thing.catch);
const _setImmediate = ((setImmediateSupported, postMessageSupported) => {
  if (setImmediateSupported) {
    return setImmediate;
  }
  return postMessageSupported ? ((token, callbacks) => {
    _global.addEventListener("message", ({ source, data }) => {
      if (source === _global && data === token) {
        callbacks.length && callbacks.shift()();
      }
    }, false);
    return (cb) => {
      callbacks.push(cb);
      _global.postMessage(token, "*");
    };
  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);
})(
  typeof setImmediate === "function",
  isFunction$1(_global.postMessage)
);
const asap = typeof queueMicrotask !== "undefined" ? queueMicrotask.bind(_global) : typeof process !== "undefined" && process.nextTick || _setImmediate;
const isIterable = (thing) => thing != null && isFunction$1(thing[iterator]);
const utils$1 = {
  isArray,
  isArrayBuffer,
  isBuffer,
  isFormData,
  isArrayBufferView,
  isString,
  isNumber,
  isBoolean,
  isObject,
  isPlainObject,
  isEmptyObject,
  isReadableStream,
  isRequest,
  isResponse,
  isHeaders,
  isUndefined,
  isDate,
  isFile,
  isBlob,
  isRegExp,
  isFunction: isFunction$1,
  isStream,
  isURLSearchParams,
  isTypedArray,
  isFileList,
  forEach,
  merge,
  extend,
  trim,
  stripBOM,
  inherits,
  toFlatObject,
  kindOf,
  kindOfTest,
  endsWith,
  toArray,
  forEachEntry,
  matchAll,
  isHTMLForm,
  hasOwnProperty,
  hasOwnProp: hasOwnProperty,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors,
  freezeMethods,
  toObjectSet,
  toCamelCase,
  noop,
  toFiniteNumber,
  findKey,
  global: _global,
  isContextDefined,
  isSpecCompliantForm,
  toJSONObject,
  isAsyncFn,
  isThenable,
  setImmediate: _setImmediate,
  asap,
  isIterable
};
function AxiosError$1(message, code, config, request, response) {
  Error.call(this);
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, this.constructor);
  } else {
    this.stack = new Error().stack;
  }
  this.message = message;
  this.name = "AxiosError";
  code && (this.code = code);
  config && (this.config = config);
  request && (this.request = request);
  if (response) {
    this.response = response;
    this.status = response.status ? response.status : null;
  }
}
utils$1.inherits(AxiosError$1, Error, {
  toJSON: function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: utils$1.toJSONObject(this.config),
      code: this.code,
      status: this.status
    };
  }
});
const prototype$1 = AxiosError$1.prototype;
const descriptors = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((code) => {
  descriptors[code] = { value: code };
});
Object.defineProperties(AxiosError$1, descriptors);
Object.defineProperty(prototype$1, "isAxiosError", { value: true });
AxiosError$1.from = (error, code, config, request, response, customProps) => {
  const axiosError = Object.create(prototype$1);
  utils$1.toFlatObject(error, axiosError, function filter2(obj) {
    return obj !== Error.prototype;
  }, (prop) => {
    return prop !== "isAxiosError";
  });
  const msg = error && error.message ? error.message : "Error";
  const errCode = code == null && error ? error.code : code;
  AxiosError$1.call(axiosError, msg, errCode, config, request, response);
  if (error && axiosError.cause == null) {
    Object.defineProperty(axiosError, "cause", { value: error, configurable: true });
  }
  axiosError.name = error && error.name || "Error";
  customProps && Object.assign(axiosError, customProps);
  return axiosError;
};
const httpAdapter = null;
function isVisitable(thing) {
  return utils$1.isPlainObject(thing) || utils$1.isArray(thing);
}
function removeBrackets(key) {
  return utils$1.endsWith(key, "[]") ? key.slice(0, -2) : key;
}
function renderKey(path, key, dots) {
  if (!path) return key;
  return path.concat(key).map(function each(token, i3) {
    token = removeBrackets(token);
    return !dots && i3 ? "[" + token + "]" : token;
  }).join(dots ? "." : "");
}
function isFlatArray(arr) {
  return utils$1.isArray(arr) && !arr.some(isVisitable);
}
const predicates = utils$1.toFlatObject(utils$1, {}, null, function filter(prop) {
  return /^is[A-Z]/.test(prop);
});
function toFormData$1(obj, formData, options) {
  if (!utils$1.isObject(obj)) {
    throw new TypeError("target must be an object");
  }
  formData = formData || new FormData();
  options = utils$1.toFlatObject(options, {
    metaTokens: true,
    dots: false,
    indexes: false
  }, false, function defined(option, source) {
    return !utils$1.isUndefined(source[option]);
  });
  const metaTokens = options.metaTokens;
  const visitor = options.visitor || defaultVisitor;
  const dots = options.dots;
  const indexes = options.indexes;
  const _Blob = options.Blob || typeof Blob !== "undefined" && Blob;
  const useBlob = _Blob && utils$1.isSpecCompliantForm(formData);
  if (!utils$1.isFunction(visitor)) {
    throw new TypeError("visitor must be a function");
  }
  function convertValue(value) {
    if (value === null) return "";
    if (utils$1.isDate(value)) {
      return value.toISOString();
    }
    if (utils$1.isBoolean(value)) {
      return value.toString();
    }
    if (!useBlob && utils$1.isBlob(value)) {
      throw new AxiosError$1("Blob is not supported. Use a Buffer instead.");
    }
    if (utils$1.isArrayBuffer(value) || utils$1.isTypedArray(value)) {
      return useBlob && typeof Blob === "function" ? new Blob([value]) : Buffer.from(value);
    }
    return value;
  }
  function defaultVisitor(value, key, path) {
    let arr = value;
    if (value && !path && typeof value === "object") {
      if (utils$1.endsWith(key, "{}")) {
        key = metaTokens ? key : key.slice(0, -2);
        value = JSON.stringify(value);
      } else if (utils$1.isArray(value) && isFlatArray(value) || (utils$1.isFileList(value) || utils$1.endsWith(key, "[]")) && (arr = utils$1.toArray(value))) {
        key = removeBrackets(key);
        arr.forEach(function each(el, index) {
          !(utils$1.isUndefined(el) || el === null) && formData.append(
            // eslint-disable-next-line no-nested-ternary
            indexes === true ? renderKey([key], index, dots) : indexes === null ? key : key + "[]",
            convertValue(el)
          );
        });
        return false;
      }
    }
    if (isVisitable(value)) {
      return true;
    }
    formData.append(renderKey(path, key, dots), convertValue(value));
    return false;
  }
  const stack = [];
  const exposedHelpers = Object.assign(predicates, {
    defaultVisitor,
    convertValue,
    isVisitable
  });
  function build(value, path) {
    if (utils$1.isUndefined(value)) return;
    if (stack.indexOf(value) !== -1) {
      throw Error("Circular reference detected in " + path.join("."));
    }
    stack.push(value);
    utils$1.forEach(value, function each(el, key) {
      const result = !(utils$1.isUndefined(el) || el === null) && visitor.call(
        formData,
        el,
        utils$1.isString(key) ? key.trim() : key,
        path,
        exposedHelpers
      );
      if (result === true) {
        build(el, path ? path.concat(key) : [key]);
      }
    });
    stack.pop();
  }
  if (!utils$1.isObject(obj)) {
    throw new TypeError("data must be an object");
  }
  build(obj);
  return formData;
}
function encode$1(str) {
  const charMap = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {
    return charMap[match];
  });
}
function AxiosURLSearchParams(params, options) {
  this._pairs = [];
  params && toFormData$1(params, this, options);
}
const prototype = AxiosURLSearchParams.prototype;
prototype.append = function append(name2, value) {
  this._pairs.push([name2, value]);
};
prototype.toString = function toString2(encoder) {
  const _encode = encoder ? function(value) {
    return encoder.call(this, value, encode$1);
  } : encode$1;
  return this._pairs.map(function each(pair) {
    return _encode(pair[0]) + "=" + _encode(pair[1]);
  }, "").join("&");
};
function encode(val) {
  return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+");
}
function buildURL(url, params, options) {
  if (!params) {
    return url;
  }
  const _encode = options && options.encode || encode;
  if (utils$1.isFunction(options)) {
    options = {
      serialize: options
    };
  }
  const serializeFn = options && options.serialize;
  let serializedParams;
  if (serializeFn) {
    serializedParams = serializeFn(params, options);
  } else {
    serializedParams = utils$1.isURLSearchParams(params) ? params.toString() : new AxiosURLSearchParams(params, options).toString(_encode);
  }
  if (serializedParams) {
    const hashmarkIndex = url.indexOf("#");
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }
    url += (url.indexOf("?") === -1 ? "?" : "&") + serializedParams;
  }
  return url;
}
class InterceptorManager {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(fulfilled, rejected, options) {
    this.handlers.push({
      fulfilled,
      rejected,
      synchronous: options ? options.synchronous : false,
      runWhen: options ? options.runWhen : null
    });
    return this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(id) {
    if (this.handlers[id]) {
      this.handlers[id] = null;
    }
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    if (this.handlers) {
      this.handlers = [];
    }
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(fn) {
    utils$1.forEach(this.handlers, function forEachHandler(h2) {
      if (h2 !== null) {
        fn(h2);
      }
    });
  }
}
const transitionalDefaults = {
  silentJSONParsing: true,
  forcedJSONParsing: true,
  clarifyTimeoutError: false
};
const URLSearchParams$1 = typeof URLSearchParams !== "undefined" ? URLSearchParams : AxiosURLSearchParams;
const FormData$1 = typeof FormData !== "undefined" ? FormData : null;
const Blob$1 = typeof Blob !== "undefined" ? Blob : null;
const platform$1 = {
  isBrowser: true,
  classes: {
    URLSearchParams: URLSearchParams$1,
    FormData: FormData$1,
    Blob: Blob$1
  },
  protocols: ["http", "https", "file", "blob", "url", "data"]
};
const hasBrowserEnv = typeof window !== "undefined" && typeof document !== "undefined";
const _navigator = typeof navigator === "object" && navigator || void 0;
const hasStandardBrowserEnv = hasBrowserEnv && (!_navigator || ["ReactNative", "NativeScript", "NS"].indexOf(_navigator.product) < 0);
const hasStandardBrowserWebWorkerEnv = (() => {
  return typeof WorkerGlobalScope !== "undefined" && // eslint-disable-next-line no-undef
  self instanceof WorkerGlobalScope && typeof self.importScripts === "function";
})();
const origin = hasBrowserEnv && window.location.href || "http://localhost";
const utils = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hasBrowserEnv,
  hasStandardBrowserEnv,
  hasStandardBrowserWebWorkerEnv,
  navigator: _navigator,
  origin
}, Symbol.toStringTag, { value: "Module" }));
const platform = {
  ...utils,
  ...platform$1
};
function toURLEncodedForm(data, options) {
  return toFormData$1(data, new platform.classes.URLSearchParams(), {
    visitor: function(value, key, path, helpers) {
      if (platform.isNode && utils$1.isBuffer(value)) {
        this.append(key, value.toString("base64"));
        return false;
      }
      return helpers.defaultVisitor.apply(this, arguments);
    },
    ...options
  });
}
function parsePropPath(name2) {
  return utils$1.matchAll(/\w+|\[(\w*)]/g, name2).map((match) => {
    return match[0] === "[]" ? "" : match[1] || match[0];
  });
}
function arrayToObject(arr) {
  const obj = {};
  const keys = Object.keys(arr);
  let i3;
  const len = keys.length;
  let key;
  for (i3 = 0; i3 < len; i3++) {
    key = keys[i3];
    obj[key] = arr[key];
  }
  return obj;
}
function formDataToJSON(formData) {
  function buildPath(path, value, target, index) {
    let name2 = path[index++];
    if (name2 === "__proto__") return true;
    const isNumericKey = Number.isFinite(+name2);
    const isLast = index >= path.length;
    name2 = !name2 && utils$1.isArray(target) ? target.length : name2;
    if (isLast) {
      if (utils$1.hasOwnProp(target, name2)) {
        target[name2] = [target[name2], value];
      } else {
        target[name2] = value;
      }
      return !isNumericKey;
    }
    if (!target[name2] || !utils$1.isObject(target[name2])) {
      target[name2] = [];
    }
    const result = buildPath(path, value, target[name2], index);
    if (result && utils$1.isArray(target[name2])) {
      target[name2] = arrayToObject(target[name2]);
    }
    return !isNumericKey;
  }
  if (utils$1.isFormData(formData) && utils$1.isFunction(formData.entries)) {
    const obj = {};
    utils$1.forEachEntry(formData, (name2, value) => {
      buildPath(parsePropPath(name2), value, obj, 0);
    });
    return obj;
  }
  return null;
}
function stringifySafely(rawValue, parser, encoder) {
  if (utils$1.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils$1.trim(rawValue);
    } catch (e2) {
      if (e2.name !== "SyntaxError") {
        throw e2;
      }
    }
  }
  return (encoder || JSON.stringify)(rawValue);
}
const defaults = {
  transitional: transitionalDefaults,
  adapter: ["xhr", "http", "fetch"],
  transformRequest: [function transformRequest(data, headers) {
    const contentType = headers.getContentType() || "";
    const hasJSONContentType = contentType.indexOf("application/json") > -1;
    const isObjectPayload = utils$1.isObject(data);
    if (isObjectPayload && utils$1.isHTMLForm(data)) {
      data = new FormData(data);
    }
    const isFormData2 = utils$1.isFormData(data);
    if (isFormData2) {
      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;
    }
    if (utils$1.isArrayBuffer(data) || utils$1.isBuffer(data) || utils$1.isStream(data) || utils$1.isFile(data) || utils$1.isBlob(data) || utils$1.isReadableStream(data)) {
      return data;
    }
    if (utils$1.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils$1.isURLSearchParams(data)) {
      headers.setContentType("application/x-www-form-urlencoded;charset=utf-8", false);
      return data.toString();
    }
    let isFileList2;
    if (isObjectPayload) {
      if (contentType.indexOf("application/x-www-form-urlencoded") > -1) {
        return toURLEncodedForm(data, this.formSerializer).toString();
      }
      if ((isFileList2 = utils$1.isFileList(data)) || contentType.indexOf("multipart/form-data") > -1) {
        const _FormData = this.env && this.env.FormData;
        return toFormData$1(
          isFileList2 ? { "files[]": data } : data,
          _FormData && new _FormData(),
          this.formSerializer
        );
      }
    }
    if (isObjectPayload || hasJSONContentType) {
      headers.setContentType("application/json", false);
      return stringifySafely(data);
    }
    return data;
  }],
  transformResponse: [function transformResponse(data) {
    const transitional2 = this.transitional || defaults.transitional;
    const forcedJSONParsing = transitional2 && transitional2.forcedJSONParsing;
    const JSONRequested = this.responseType === "json";
    if (utils$1.isResponse(data) || utils$1.isReadableStream(data)) {
      return data;
    }
    if (data && utils$1.isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {
      const silentJSONParsing = transitional2 && transitional2.silentJSONParsing;
      const strictJSONParsing = !silentJSONParsing && JSONRequested;
      try {
        return JSON.parse(data, this.parseReviver);
      } catch (e2) {
        if (strictJSONParsing) {
          if (e2.name === "SyntaxError") {
            throw AxiosError$1.from(e2, AxiosError$1.ERR_BAD_RESPONSE, this, null, this.response);
          }
          throw e2;
        }
      }
    }
    return data;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: platform.classes.FormData,
    Blob: platform.classes.Blob
  },
  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  },
  headers: {
    common: {
      "Accept": "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
utils$1.forEach(["delete", "get", "head", "post", "put", "patch"], (method) => {
  defaults.headers[method] = {};
});
const ignoreDuplicateOf = utils$1.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]);
const parseHeaders = (rawHeaders) => {
  const parsed = {};
  let key;
  let val;
  let i3;
  rawHeaders && rawHeaders.split("\n").forEach(function parser(line) {
    i3 = line.indexOf(":");
    key = line.substring(0, i3).trim().toLowerCase();
    val = line.substring(i3 + 1).trim();
    if (!key || parsed[key] && ignoreDuplicateOf[key]) {
      return;
    }
    if (key === "set-cookie") {
      if (parsed[key]) {
        parsed[key].push(val);
      } else {
        parsed[key] = [val];
      }
    } else {
      parsed[key] = parsed[key] ? parsed[key] + ", " + val : val;
    }
  });
  return parsed;
};
const $internals = Symbol("internals");
function normalizeHeader(header) {
  return header && String(header).trim().toLowerCase();
}
function normalizeValue(value) {
  if (value === false || value == null) {
    return value;
  }
  return utils$1.isArray(value) ? value.map(normalizeValue) : String(value);
}
function parseTokens(str) {
  const tokens = /* @__PURE__ */ Object.create(null);
  const tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
  let match;
  while (match = tokensRE.exec(str)) {
    tokens[match[1]] = match[2];
  }
  return tokens;
}
const isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());
function matchHeaderValue(context, value, header, filter2, isHeaderNameFilter) {
  if (utils$1.isFunction(filter2)) {
    return filter2.call(this, value, header);
  }
  if (isHeaderNameFilter) {
    value = header;
  }
  if (!utils$1.isString(value)) return;
  if (utils$1.isString(filter2)) {
    return value.indexOf(filter2) !== -1;
  }
  if (utils$1.isRegExp(filter2)) {
    return filter2.test(value);
  }
}
function formatHeader(header) {
  return header.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (w2, char, str) => {
    return char.toUpperCase() + str;
  });
}
function buildAccessors(obj, header) {
  const accessorName = utils$1.toCamelCase(" " + header);
  ["get", "set", "has"].forEach((methodName) => {
    Object.defineProperty(obj, methodName + accessorName, {
      value: function(arg1, arg2, arg3) {
        return this[methodName].call(this, header, arg1, arg2, arg3);
      },
      configurable: true
    });
  });
}
let AxiosHeaders$1 = class AxiosHeaders {
  constructor(headers) {
    headers && this.set(headers);
  }
  set(header, valueOrRewrite, rewrite) {
    const self2 = this;
    function setHeader(_value, _header, _rewrite) {
      const lHeader = normalizeHeader(_header);
      if (!lHeader) {
        throw new Error("header name must be a non-empty string");
      }
      const key = utils$1.findKey(self2, lHeader);
      if (!key || self2[key] === void 0 || _rewrite === true || _rewrite === void 0 && self2[key] !== false) {
        self2[key || _header] = normalizeValue(_value);
      }
    }
    const setHeaders = (headers, _rewrite) => utils$1.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));
    if (utils$1.isPlainObject(header) || header instanceof this.constructor) {
      setHeaders(header, valueOrRewrite);
    } else if (utils$1.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {
      setHeaders(parseHeaders(header), valueOrRewrite);
    } else if (utils$1.isObject(header) && utils$1.isIterable(header)) {
      let obj = {}, dest, key;
      for (const entry of header) {
        if (!utils$1.isArray(entry)) {
          throw TypeError("Object iterator must return a key-value pair");
        }
        obj[key = entry[0]] = (dest = obj[key]) ? utils$1.isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]] : entry[1];
      }
      setHeaders(obj, valueOrRewrite);
    } else {
      header != null && setHeader(valueOrRewrite, header, rewrite);
    }
    return this;
  }
  get(header, parser) {
    header = normalizeHeader(header);
    if (header) {
      const key = utils$1.findKey(this, header);
      if (key) {
        const value = this[key];
        if (!parser) {
          return value;
        }
        if (parser === true) {
          return parseTokens(value);
        }
        if (utils$1.isFunction(parser)) {
          return parser.call(this, value, key);
        }
        if (utils$1.isRegExp(parser)) {
          return parser.exec(value);
        }
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(header, matcher) {
    header = normalizeHeader(header);
    if (header) {
      const key = utils$1.findKey(this, header);
      return !!(key && this[key] !== void 0 && (!matcher || matchHeaderValue(this, this[key], key, matcher)));
    }
    return false;
  }
  delete(header, matcher) {
    const self2 = this;
    let deleted = false;
    function deleteHeader(_header) {
      _header = normalizeHeader(_header);
      if (_header) {
        const key = utils$1.findKey(self2, _header);
        if (key && (!matcher || matchHeaderValue(self2, self2[key], key, matcher))) {
          delete self2[key];
          deleted = true;
        }
      }
    }
    if (utils$1.isArray(header)) {
      header.forEach(deleteHeader);
    } else {
      deleteHeader(header);
    }
    return deleted;
  }
  clear(matcher) {
    const keys = Object.keys(this);
    let i3 = keys.length;
    let deleted = false;
    while (i3--) {
      const key = keys[i3];
      if (!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {
        delete this[key];
        deleted = true;
      }
    }
    return deleted;
  }
  normalize(format2) {
    const self2 = this;
    const headers = {};
    utils$1.forEach(this, (value, header) => {
      const key = utils$1.findKey(headers, header);
      if (key) {
        self2[key] = normalizeValue(value);
        delete self2[header];
        return;
      }
      const normalized = format2 ? formatHeader(header) : String(header).trim();
      if (normalized !== header) {
        delete self2[header];
      }
      self2[normalized] = normalizeValue(value);
      headers[normalized] = true;
    });
    return this;
  }
  concat(...targets) {
    return this.constructor.concat(this, ...targets);
  }
  toJSON(asStrings) {
    const obj = /* @__PURE__ */ Object.create(null);
    utils$1.forEach(this, (value, header) => {
      value != null && value !== false && (obj[header] = asStrings && utils$1.isArray(value) ? value.join(", ") : value);
    });
    return obj;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([header, value]) => header + ": " + value).join("\n");
  }
  getSetCookie() {
    return this.get("set-cookie") || [];
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(thing) {
    return thing instanceof this ? thing : new this(thing);
  }
  static concat(first, ...targets) {
    const computed = new this(first);
    targets.forEach((target) => computed.set(target));
    return computed;
  }
  static accessor(header) {
    const internals = this[$internals] = this[$internals] = {
      accessors: {}
    };
    const accessors = internals.accessors;
    const prototype2 = this.prototype;
    function defineAccessor(_header) {
      const lHeader = normalizeHeader(_header);
      if (!accessors[lHeader]) {
        buildAccessors(prototype2, _header);
        accessors[lHeader] = true;
      }
    }
    utils$1.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);
    return this;
  }
};
AxiosHeaders$1.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
utils$1.reduceDescriptors(AxiosHeaders$1.prototype, ({ value }, key) => {
  let mapped = key[0].toUpperCase() + key.slice(1);
  return {
    get: () => value,
    set(headerValue) {
      this[mapped] = headerValue;
    }
  };
});
utils$1.freezeMethods(AxiosHeaders$1);
function transformData(fns, response) {
  const config = this || defaults;
  const context = response || config;
  const headers = AxiosHeaders$1.from(context.headers);
  let data = context.data;
  utils$1.forEach(fns, function transform(fn) {
    data = fn.call(config, data, headers.normalize(), response ? response.status : void 0);
  });
  headers.normalize();
  return data;
}
function isCancel$1(value) {
  return !!(value && value.__CANCEL__);
}
function CanceledError$1(message, config, request) {
  AxiosError$1.call(this, message == null ? "canceled" : message, AxiosError$1.ERR_CANCELED, config, request);
  this.name = "CanceledError";
}
utils$1.inherits(CanceledError$1, AxiosError$1, {
  __CANCEL__: true
});
function settle(resolve, reject, response) {
  const validateStatus2 = response.config.validateStatus;
  if (!response.status || !validateStatus2 || validateStatus2(response.status)) {
    resolve(response);
  } else {
    reject(new AxiosError$1(
      "Request failed with status code " + response.status,
      [AxiosError$1.ERR_BAD_REQUEST, AxiosError$1.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
      response.config,
      response.request,
      response
    ));
  }
}
function parseProtocol(url) {
  const match = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url);
  return match && match[1] || "";
}
function speedometer(samplesCount, min) {
  samplesCount = samplesCount || 10;
  const bytes = new Array(samplesCount);
  const timestamps = new Array(samplesCount);
  let head = 0;
  let tail = 0;
  let firstSampleTS;
  min = min !== void 0 ? min : 1e3;
  return function push(chunkLength) {
    const now2 = Date.now();
    const startedAt = timestamps[tail];
    if (!firstSampleTS) {
      firstSampleTS = now2;
    }
    bytes[head] = chunkLength;
    timestamps[head] = now2;
    let i3 = tail;
    let bytesCount = 0;
    while (i3 !== head) {
      bytesCount += bytes[i3++];
      i3 = i3 % samplesCount;
    }
    head = (head + 1) % samplesCount;
    if (head === tail) {
      tail = (tail + 1) % samplesCount;
    }
    if (now2 - firstSampleTS < min) {
      return;
    }
    const passed = startedAt && now2 - startedAt;
    return passed ? Math.round(bytesCount * 1e3 / passed) : void 0;
  };
}
function throttle(fn, freq) {
  let timestamp = 0;
  let threshold = 1e3 / freq;
  let lastArgs;
  let timer;
  const invoke = (args, now2 = Date.now()) => {
    timestamp = now2;
    lastArgs = null;
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
    fn(...args);
  };
  const throttled = (...args) => {
    const now2 = Date.now();
    const passed = now2 - timestamp;
    if (passed >= threshold) {
      invoke(args, now2);
    } else {
      lastArgs = args;
      if (!timer) {
        timer = setTimeout(() => {
          timer = null;
          invoke(lastArgs);
        }, threshold - passed);
      }
    }
  };
  const flush = () => lastArgs && invoke(lastArgs);
  return [throttled, flush];
}
const progressEventReducer = (listener, isDownloadStream, freq = 3) => {
  let bytesNotified = 0;
  const _speedometer = speedometer(50, 250);
  return throttle((e2) => {
    const loaded = e2.loaded;
    const total = e2.lengthComputable ? e2.total : void 0;
    const progressBytes = loaded - bytesNotified;
    const rate = _speedometer(progressBytes);
    const inRange = loaded <= total;
    bytesNotified = loaded;
    const data = {
      loaded,
      total,
      progress: total ? loaded / total : void 0,
      bytes: progressBytes,
      rate: rate ? rate : void 0,
      estimated: rate && total && inRange ? (total - loaded) / rate : void 0,
      event: e2,
      lengthComputable: total != null,
      [isDownloadStream ? "download" : "upload"]: true
    };
    listener(data);
  }, freq);
};
const progressEventDecorator = (total, throttled) => {
  const lengthComputable = total != null;
  return [(loaded) => throttled[0]({
    lengthComputable,
    total,
    loaded
  }), throttled[1]];
};
const asyncDecorator = (fn) => (...args) => utils$1.asap(() => fn(...args));
const isURLSameOrigin = platform.hasStandardBrowserEnv ? /* @__PURE__ */ ((origin2, isMSIE) => (url) => {
  url = new URL(url, platform.origin);
  return origin2.protocol === url.protocol && origin2.host === url.host && (isMSIE || origin2.port === url.port);
})(
  new URL(platform.origin),
  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)
) : () => true;
const cookies = platform.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(name2, value, expires, path, domain, secure) {
      const cookie = [name2 + "=" + encodeURIComponent(value)];
      utils$1.isNumber(expires) && cookie.push("expires=" + new Date(expires).toGMTString());
      utils$1.isString(path) && cookie.push("path=" + path);
      utils$1.isString(domain) && cookie.push("domain=" + domain);
      secure === true && cookie.push("secure");
      document.cookie = cookie.join("; ");
    },
    read(name2) {
      const match = document.cookie.match(new RegExp("(^|;\\s*)(" + name2 + ")=([^;]*)"));
      return match ? decodeURIComponent(match[3]) : null;
    },
    remove(name2) {
      this.write(name2, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);
function isAbsoluteURL(url) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
}
function combineURLs(baseURL, relativeURL) {
  return relativeURL ? baseURL.replace(/\/?\/$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
}
function buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {
  let isRelativeUrl = !isAbsoluteURL(requestedURL);
  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
}
const headersToObject = (thing) => thing instanceof AxiosHeaders$1 ? { ...thing } : thing;
function mergeConfig$1(config1, config2) {
  config2 = config2 || {};
  const config = {};
  function getMergedValue(target, source, prop, caseless) {
    if (utils$1.isPlainObject(target) && utils$1.isPlainObject(source)) {
      return utils$1.merge.call({ caseless }, target, source);
    } else if (utils$1.isPlainObject(source)) {
      return utils$1.merge({}, source);
    } else if (utils$1.isArray(source)) {
      return source.slice();
    }
    return source;
  }
  function mergeDeepProperties(a3, b3, prop, caseless) {
    if (!utils$1.isUndefined(b3)) {
      return getMergedValue(a3, b3, prop, caseless);
    } else if (!utils$1.isUndefined(a3)) {
      return getMergedValue(void 0, a3, prop, caseless);
    }
  }
  function valueFromConfig2(a3, b3) {
    if (!utils$1.isUndefined(b3)) {
      return getMergedValue(void 0, b3);
    }
  }
  function defaultToConfig2(a3, b3) {
    if (!utils$1.isUndefined(b3)) {
      return getMergedValue(void 0, b3);
    } else if (!utils$1.isUndefined(a3)) {
      return getMergedValue(void 0, a3);
    }
  }
  function mergeDirectKeys(a3, b3, prop) {
    if (prop in config2) {
      return getMergedValue(a3, b3);
    } else if (prop in config1) {
      return getMergedValue(void 0, a3);
    }
  }
  const mergeMap = {
    url: valueFromConfig2,
    method: valueFromConfig2,
    data: valueFromConfig2,
    baseURL: defaultToConfig2,
    transformRequest: defaultToConfig2,
    transformResponse: defaultToConfig2,
    paramsSerializer: defaultToConfig2,
    timeout: defaultToConfig2,
    timeoutMessage: defaultToConfig2,
    withCredentials: defaultToConfig2,
    withXSRFToken: defaultToConfig2,
    adapter: defaultToConfig2,
    responseType: defaultToConfig2,
    xsrfCookieName: defaultToConfig2,
    xsrfHeaderName: defaultToConfig2,
    onUploadProgress: defaultToConfig2,
    onDownloadProgress: defaultToConfig2,
    decompress: defaultToConfig2,
    maxContentLength: defaultToConfig2,
    maxBodyLength: defaultToConfig2,
    beforeRedirect: defaultToConfig2,
    transport: defaultToConfig2,
    httpAgent: defaultToConfig2,
    httpsAgent: defaultToConfig2,
    cancelToken: defaultToConfig2,
    socketPath: defaultToConfig2,
    responseEncoding: defaultToConfig2,
    validateStatus: mergeDirectKeys,
    headers: (a3, b3, prop) => mergeDeepProperties(headersToObject(a3), headersToObject(b3), prop, true)
  };
  utils$1.forEach(Object.keys({ ...config1, ...config2 }), function computeConfigValue(prop) {
    const merge2 = mergeMap[prop] || mergeDeepProperties;
    const configValue = merge2(config1[prop], config2[prop], prop);
    utils$1.isUndefined(configValue) && merge2 !== mergeDirectKeys || (config[prop] = configValue);
  });
  return config;
}
const resolveConfig = (config) => {
  const newConfig = mergeConfig$1({}, config);
  let { data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth } = newConfig;
  newConfig.headers = headers = AxiosHeaders$1.from(headers);
  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);
  if (auth) {
    headers.set(
      "Authorization",
      "Basic " + btoa((auth.username || "") + ":" + (auth.password ? unescape(encodeURIComponent(auth.password)) : ""))
    );
  }
  if (utils$1.isFormData(data)) {
    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {
      headers.setContentType(void 0);
    } else if (utils$1.isFunction(data.getHeaders)) {
      const formHeaders = data.getHeaders();
      const allowedHeaders = ["content-type", "content-length"];
      Object.entries(formHeaders).forEach(([key, val]) => {
        if (allowedHeaders.includes(key.toLowerCase())) {
          headers.set(key, val);
        }
      });
    }
  }
  if (platform.hasStandardBrowserEnv) {
    withXSRFToken && utils$1.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));
    if (withXSRFToken || withXSRFToken !== false && isURLSameOrigin(newConfig.url)) {
      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);
      if (xsrfValue) {
        headers.set(xsrfHeaderName, xsrfValue);
      }
    }
  }
  return newConfig;
};
const isXHRAdapterSupported = typeof XMLHttpRequest !== "undefined";
const xhrAdapter = isXHRAdapterSupported && function(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    const _config = resolveConfig(config);
    let requestData = _config.data;
    const requestHeaders = AxiosHeaders$1.from(_config.headers).normalize();
    let { responseType, onUploadProgress, onDownloadProgress } = _config;
    let onCanceled;
    let uploadThrottled, downloadThrottled;
    let flushUpload, flushDownload;
    function done() {
      flushUpload && flushUpload();
      flushDownload && flushDownload();
      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);
      _config.signal && _config.signal.removeEventListener("abort", onCanceled);
    }
    let request = new XMLHttpRequest();
    request.open(_config.method.toUpperCase(), _config.url, true);
    request.timeout = _config.timeout;
    function onloadend() {
      if (!request) {
        return;
      }
      const responseHeaders = AxiosHeaders$1.from(
        "getAllResponseHeaders" in request && request.getAllResponseHeaders()
      );
      const responseData = !responseType || responseType === "text" || responseType === "json" ? request.responseText : request.response;
      const response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config,
        request
      };
      settle(function _resolve(value) {
        resolve(value);
        done();
      }, function _reject(err) {
        reject(err);
        done();
      }, response);
      request = null;
    }
    if ("onloadend" in request) {
      request.onloadend = onloadend;
    } else {
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        }
        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf("file:") === 0)) {
          return;
        }
        setTimeout(onloadend);
      };
    }
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }
      reject(new AxiosError$1("Request aborted", AxiosError$1.ECONNABORTED, config, request));
      request = null;
    };
    request.onerror = function handleError(event) {
      const msg = event && event.message ? event.message : "Network Error";
      const err = new AxiosError$1(msg, AxiosError$1.ERR_NETWORK, config, request);
      err.event = event || null;
      reject(err);
      request = null;
    };
    request.ontimeout = function handleTimeout() {
      let timeoutErrorMessage = _config.timeout ? "timeout of " + _config.timeout + "ms exceeded" : "timeout exceeded";
      const transitional2 = _config.transitional || transitionalDefaults;
      if (_config.timeoutErrorMessage) {
        timeoutErrorMessage = _config.timeoutErrorMessage;
      }
      reject(new AxiosError$1(
        timeoutErrorMessage,
        transitional2.clarifyTimeoutError ? AxiosError$1.ETIMEDOUT : AxiosError$1.ECONNABORTED,
        config,
        request
      ));
      request = null;
    };
    requestData === void 0 && requestHeaders.setContentType(null);
    if ("setRequestHeader" in request) {
      utils$1.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {
        request.setRequestHeader(key, val);
      });
    }
    if (!utils$1.isUndefined(_config.withCredentials)) {
      request.withCredentials = !!_config.withCredentials;
    }
    if (responseType && responseType !== "json") {
      request.responseType = _config.responseType;
    }
    if (onDownloadProgress) {
      [downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true);
      request.addEventListener("progress", downloadThrottled);
    }
    if (onUploadProgress && request.upload) {
      [uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress);
      request.upload.addEventListener("progress", uploadThrottled);
      request.upload.addEventListener("loadend", flushUpload);
    }
    if (_config.cancelToken || _config.signal) {
      onCanceled = (cancel) => {
        if (!request) {
          return;
        }
        reject(!cancel || cancel.type ? new CanceledError$1(null, config, request) : cancel);
        request.abort();
        request = null;
      };
      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);
      if (_config.signal) {
        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener("abort", onCanceled);
      }
    }
    const protocol = parseProtocol(_config.url);
    if (protocol && platform.protocols.indexOf(protocol) === -1) {
      reject(new AxiosError$1("Unsupported protocol " + protocol + ":", AxiosError$1.ERR_BAD_REQUEST, config));
      return;
    }
    request.send(requestData || null);
  });
};
const composeSignals = (signals, timeout) => {
  const { length } = signals = signals ? signals.filter(Boolean) : [];
  if (timeout || length) {
    let controller = new AbortController();
    let aborted;
    const onabort = function(reason) {
      if (!aborted) {
        aborted = true;
        unsubscribe();
        const err = reason instanceof Error ? reason : this.reason;
        controller.abort(err instanceof AxiosError$1 ? err : new CanceledError$1(err instanceof Error ? err.message : err));
      }
    };
    let timer = timeout && setTimeout(() => {
      timer = null;
      onabort(new AxiosError$1(`timeout ${timeout} of ms exceeded`, AxiosError$1.ETIMEDOUT));
    }, timeout);
    const unsubscribe = () => {
      if (signals) {
        timer && clearTimeout(timer);
        timer = null;
        signals.forEach((signal2) => {
          signal2.unsubscribe ? signal2.unsubscribe(onabort) : signal2.removeEventListener("abort", onabort);
        });
        signals = null;
      }
    };
    signals.forEach((signal2) => signal2.addEventListener("abort", onabort));
    const { signal } = controller;
    signal.unsubscribe = () => utils$1.asap(unsubscribe);
    return signal;
  }
};
const streamChunk = function* (chunk, chunkSize) {
  let len = chunk.byteLength;
  if (len < chunkSize) {
    yield chunk;
    return;
  }
  let pos = 0;
  let end;
  while (pos < len) {
    end = pos + chunkSize;
    yield chunk.slice(pos, end);
    pos = end;
  }
};
const readBytes = async function* (iterable, chunkSize) {
  for await (const chunk of readStream(iterable)) {
    yield* streamChunk(chunk, chunkSize);
  }
};
const readStream = async function* (stream) {
  if (stream[Symbol.asyncIterator]) {
    yield* stream;
    return;
  }
  const reader = stream.getReader();
  try {
    for (; ; ) {
      const { done, value } = await reader.read();
      if (done) {
        break;
      }
      yield value;
    }
  } finally {
    await reader.cancel();
  }
};
const trackStream = (stream, chunkSize, onProgress, onFinish) => {
  const iterator2 = readBytes(stream, chunkSize);
  let bytes = 0;
  let done;
  let _onFinish = (e2) => {
    if (!done) {
      done = true;
      onFinish && onFinish(e2);
    }
  };
  return new ReadableStream({
    async pull(controller) {
      try {
        const { done: done2, value } = await iterator2.next();
        if (done2) {
          _onFinish();
          controller.close();
          return;
        }
        let len = value.byteLength;
        if (onProgress) {
          let loadedBytes = bytes += len;
          onProgress(loadedBytes);
        }
        controller.enqueue(new Uint8Array(value));
      } catch (err) {
        _onFinish(err);
        throw err;
      }
    },
    cancel(reason) {
      _onFinish(reason);
      return iterator2.return();
    }
  }, {
    highWaterMark: 2
  });
};
const DEFAULT_CHUNK_SIZE = 64 * 1024;
const { isFunction } = utils$1;
const globalFetchAPI = (({ Request, Response }) => ({
  Request,
  Response
}))(utils$1.global);
const {
  ReadableStream: ReadableStream$1,
  TextEncoder
} = utils$1.global;
const test = (fn, ...args) => {
  try {
    return !!fn(...args);
  } catch (e2) {
    return false;
  }
};
const factory = (env) => {
  env = utils$1.merge.call({
    skipUndefined: true
  }, globalFetchAPI, env);
  const { fetch: envFetch, Request, Response } = env;
  const isFetchSupported = envFetch ? isFunction(envFetch) : typeof fetch === "function";
  const isRequestSupported = isFunction(Request);
  const isResponseSupported = isFunction(Response);
  if (!isFetchSupported) {
    return false;
  }
  const isReadableStreamSupported = isFetchSupported && isFunction(ReadableStream$1);
  const encodeText = isFetchSupported && (typeof TextEncoder === "function" ? /* @__PURE__ */ ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) : async (str) => new Uint8Array(await new Request(str).arrayBuffer()));
  const supportsRequestStream = isRequestSupported && isReadableStreamSupported && test(() => {
    let duplexAccessed = false;
    const hasContentType = new Request(platform.origin, {
      body: new ReadableStream$1(),
      method: "POST",
      get duplex() {
        duplexAccessed = true;
        return "half";
      }
    }).headers.has("Content-Type");
    return duplexAccessed && !hasContentType;
  });
  const supportsResponseStream = isResponseSupported && isReadableStreamSupported && test(() => utils$1.isReadableStream(new Response("").body));
  const resolvers = {
    stream: supportsResponseStream && ((res) => res.body)
  };
  isFetchSupported && (() => {
    ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((type) => {
      !resolvers[type] && (resolvers[type] = (res, config) => {
        let method = res && res[type];
        if (method) {
          return method.call(res);
        }
        throw new AxiosError$1(`Response type '${type}' is not supported`, AxiosError$1.ERR_NOT_SUPPORT, config);
      });
    });
  })();
  const getBodyLength = async (body) => {
    if (body == null) {
      return 0;
    }
    if (utils$1.isBlob(body)) {
      return body.size;
    }
    if (utils$1.isSpecCompliantForm(body)) {
      const _request = new Request(platform.origin, {
        method: "POST",
        body
      });
      return (await _request.arrayBuffer()).byteLength;
    }
    if (utils$1.isArrayBufferView(body) || utils$1.isArrayBuffer(body)) {
      return body.byteLength;
    }
    if (utils$1.isURLSearchParams(body)) {
      body = body + "";
    }
    if (utils$1.isString(body)) {
      return (await encodeText(body)).byteLength;
    }
  };
  const resolveBodyLength = async (headers, body) => {
    const length = utils$1.toFiniteNumber(headers.getContentLength());
    return length == null ? getBodyLength(body) : length;
  };
  return async (config) => {
    let {
      url,
      method,
      data,
      signal,
      cancelToken,
      timeout,
      onDownloadProgress,
      onUploadProgress,
      responseType,
      headers,
      withCredentials = "same-origin",
      fetchOptions
    } = resolveConfig(config);
    let _fetch = envFetch || fetch;
    responseType = responseType ? (responseType + "").toLowerCase() : "text";
    let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);
    let request = null;
    const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {
      composedSignal.unsubscribe();
    });
    let requestContentLength;
    try {
      if (onUploadProgress && supportsRequestStream && method !== "get" && method !== "head" && (requestContentLength = await resolveBodyLength(headers, data)) !== 0) {
        let _request = new Request(url, {
          method: "POST",
          body: data,
          duplex: "half"
        });
        let contentTypeHeader;
        if (utils$1.isFormData(data) && (contentTypeHeader = _request.headers.get("content-type"))) {
          headers.setContentType(contentTypeHeader);
        }
        if (_request.body) {
          const [onProgress, flush] = progressEventDecorator(
            requestContentLength,
            progressEventReducer(asyncDecorator(onUploadProgress))
          );
          data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);
        }
      }
      if (!utils$1.isString(withCredentials)) {
        withCredentials = withCredentials ? "include" : "omit";
      }
      const isCredentialsSupported = isRequestSupported && "credentials" in Request.prototype;
      const resolvedOptions = {
        ...fetchOptions,
        signal: composedSignal,
        method: method.toUpperCase(),
        headers: headers.normalize().toJSON(),
        body: data,
        duplex: "half",
        credentials: isCredentialsSupported ? withCredentials : void 0
      };
      request = isRequestSupported && new Request(url, resolvedOptions);
      let response = await (isRequestSupported ? _fetch(request, fetchOptions) : _fetch(url, resolvedOptions));
      const isStreamResponse = supportsResponseStream && (responseType === "stream" || responseType === "response");
      if (supportsResponseStream && (onDownloadProgress || isStreamResponse && unsubscribe)) {
        const options = {};
        ["status", "statusText", "headers"].forEach((prop) => {
          options[prop] = response[prop];
        });
        const responseContentLength = utils$1.toFiniteNumber(response.headers.get("content-length"));
        const [onProgress, flush] = onDownloadProgress && progressEventDecorator(
          responseContentLength,
          progressEventReducer(asyncDecorator(onDownloadProgress), true)
        ) || [];
        response = new Response(
          trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {
            flush && flush();
            unsubscribe && unsubscribe();
          }),
          options
        );
      }
      responseType = responseType || "text";
      let responseData = await resolvers[utils$1.findKey(resolvers, responseType) || "text"](response, config);
      !isStreamResponse && unsubscribe && unsubscribe();
      return await new Promise((resolve, reject) => {
        settle(resolve, reject, {
          data: responseData,
          headers: AxiosHeaders$1.from(response.headers),
          status: response.status,
          statusText: response.statusText,
          config,
          request
        });
      });
    } catch (err) {
      unsubscribe && unsubscribe();
      if (err && err.name === "TypeError" && /Load failed|fetch/i.test(err.message)) {
        throw Object.assign(
          new AxiosError$1("Network Error", AxiosError$1.ERR_NETWORK, config, request),
          {
            cause: err.cause || err
          }
        );
      }
      throw AxiosError$1.from(err, err && err.code, config, request);
    }
  };
};
const seedCache = /* @__PURE__ */ new Map();
const getFetch = (config) => {
  let env = config ? config.env : {};
  const { fetch: fetch2, Request, Response } = env;
  const seeds = [
    Request,
    Response,
    fetch2
  ];
  let len = seeds.length, i3 = len, seed, target, map = seedCache;
  while (i3--) {
    seed = seeds[i3];
    target = map.get(seed);
    target === void 0 && map.set(seed, target = i3 ? /* @__PURE__ */ new Map() : factory(env));
    map = target;
  }
  return target;
};
getFetch();
const knownAdapters = {
  http: httpAdapter,
  xhr: xhrAdapter,
  fetch: {
    get: getFetch
  }
};
utils$1.forEach(knownAdapters, (fn, value) => {
  if (fn) {
    try {
      Object.defineProperty(fn, "name", { value });
    } catch (e2) {
    }
    Object.defineProperty(fn, "adapterName", { value });
  }
});
const renderReason = (reason) => `- ${reason}`;
const isResolvedHandle = (adapter) => utils$1.isFunction(adapter) || adapter === null || adapter === false;
const adapters = {
  getAdapter: (adapters2, config) => {
    adapters2 = utils$1.isArray(adapters2) ? adapters2 : [adapters2];
    const { length } = adapters2;
    let nameOrAdapter;
    let adapter;
    const rejectedReasons = {};
    for (let i3 = 0; i3 < length; i3++) {
      nameOrAdapter = adapters2[i3];
      let id;
      adapter = nameOrAdapter;
      if (!isResolvedHandle(nameOrAdapter)) {
        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];
        if (adapter === void 0) {
          throw new AxiosError$1(`Unknown adapter '${id}'`);
        }
      }
      if (adapter && (utils$1.isFunction(adapter) || (adapter = adapter.get(config)))) {
        break;
      }
      rejectedReasons[id || "#" + i3] = adapter;
    }
    if (!adapter) {
      const reasons = Object.entries(rejectedReasons).map(
        ([id, state]) => `adapter ${id} ` + (state === false ? "is not supported by the environment" : "is not available in the build")
      );
      let s2 = length ? reasons.length > 1 ? "since :\n" + reasons.map(renderReason).join("\n") : " " + renderReason(reasons[0]) : "as no adapter specified";
      throw new AxiosError$1(
        `There is no suitable adapter to dispatch the request ` + s2,
        "ERR_NOT_SUPPORT"
      );
    }
    return adapter;
  },
  adapters: knownAdapters
};
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
  if (config.signal && config.signal.aborted) {
    throw new CanceledError$1(null, config);
  }
}
function dispatchRequest(config) {
  throwIfCancellationRequested(config);
  config.headers = AxiosHeaders$1.from(config.headers);
  config.data = transformData.call(
    config,
    config.transformRequest
  );
  if (["post", "put", "patch"].indexOf(config.method) !== -1) {
    config.headers.setContentType("application/x-www-form-urlencoded", false);
  }
  const adapter = adapters.getAdapter(config.adapter || defaults.adapter, config);
  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);
    response.data = transformData.call(
      config,
      config.transformResponse,
      response
    );
    response.headers = AxiosHeaders$1.from(response.headers);
    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel$1(reason)) {
      throwIfCancellationRequested(config);
      if (reason && reason.response) {
        reason.response.data = transformData.call(
          config,
          config.transformResponse,
          reason.response
        );
        reason.response.headers = AxiosHeaders$1.from(reason.response.headers);
      }
    }
    return Promise.reject(reason);
  });
}
const VERSION$1 = "1.12.2";
const validators$1 = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((type, i3) => {
  validators$1[type] = function validator2(thing) {
    return typeof thing === type || "a" + (i3 < 1 ? "n " : " ") + type;
  };
});
const deprecatedWarnings = {};
validators$1.transitional = function transitional(validator2, version, message) {
  function formatMessage(opt, desc) {
    return "[Axios v" + VERSION$1 + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
  }
  return (value, opt, opts) => {
    if (validator2 === false) {
      throw new AxiosError$1(
        formatMessage(opt, " has been removed" + (version ? " in " + version : "")),
        AxiosError$1.ERR_DEPRECATED
      );
    }
    if (version && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true;
      console.warn(
        formatMessage(
          opt,
          " has been deprecated since v" + version + " and will be removed in the near future"
        )
      );
    }
    return validator2 ? validator2(value, opt, opts) : true;
  };
};
validators$1.spelling = function spelling(correctSpelling) {
  return (value, opt) => {
    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);
    return true;
  };
};
function assertOptions(options, schema, allowUnknown) {
  if (typeof options !== "object") {
    throw new AxiosError$1("options must be an object", AxiosError$1.ERR_BAD_OPTION_VALUE);
  }
  const keys = Object.keys(options);
  let i3 = keys.length;
  while (i3-- > 0) {
    const opt = keys[i3];
    const validator2 = schema[opt];
    if (validator2) {
      const value = options[opt];
      const result = value === void 0 || validator2(value, opt, options);
      if (result !== true) {
        throw new AxiosError$1("option " + opt + " must be " + result, AxiosError$1.ERR_BAD_OPTION_VALUE);
      }
      continue;
    }
    if (allowUnknown !== true) {
      throw new AxiosError$1("Unknown option " + opt, AxiosError$1.ERR_BAD_OPTION);
    }
  }
}
const validator = {
  assertOptions,
  validators: validators$1
};
const validators = validator.validators;
let Axios$1 = class Axios {
  constructor(instanceConfig) {
    this.defaults = instanceConfig || {};
    this.interceptors = {
      request: new InterceptorManager(),
      response: new InterceptorManager()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  async request(configOrUrl, config) {
    try {
      return await this._request(configOrUrl, config);
    } catch (err) {
      if (err instanceof Error) {
        let dummy = {};
        Error.captureStackTrace ? Error.captureStackTrace(dummy) : dummy = new Error();
        const stack = dummy.stack ? dummy.stack.replace(/^.+\n/, "") : "";
        try {
          if (!err.stack) {
            err.stack = stack;
          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\n.+\n/, ""))) {
            err.stack += "\n" + stack;
          }
        } catch (e2) {
        }
      }
      throw err;
    }
  }
  _request(configOrUrl, config) {
    if (typeof configOrUrl === "string") {
      config = config || {};
      config.url = configOrUrl;
    } else {
      config = configOrUrl || {};
    }
    config = mergeConfig$1(this.defaults, config);
    const { transitional: transitional2, paramsSerializer, headers } = config;
    if (transitional2 !== void 0) {
      validator.assertOptions(transitional2, {
        silentJSONParsing: validators.transitional(validators.boolean),
        forcedJSONParsing: validators.transitional(validators.boolean),
        clarifyTimeoutError: validators.transitional(validators.boolean)
      }, false);
    }
    if (paramsSerializer != null) {
      if (utils$1.isFunction(paramsSerializer)) {
        config.paramsSerializer = {
          serialize: paramsSerializer
        };
      } else {
        validator.assertOptions(paramsSerializer, {
          encode: validators.function,
          serialize: validators.function
        }, true);
      }
    }
    if (config.allowAbsoluteUrls !== void 0) ;
    else if (this.defaults.allowAbsoluteUrls !== void 0) {
      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;
    } else {
      config.allowAbsoluteUrls = true;
    }
    validator.assertOptions(config, {
      baseUrl: validators.spelling("baseURL"),
      withXsrfToken: validators.spelling("withXSRFToken")
    }, true);
    config.method = (config.method || this.defaults.method || "get").toLowerCase();
    let contextHeaders = headers && utils$1.merge(
      headers.common,
      headers[config.method]
    );
    headers && utils$1.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (method) => {
        delete headers[method];
      }
    );
    config.headers = AxiosHeaders$1.concat(contextHeaders, headers);
    const requestInterceptorChain = [];
    let synchronousRequestInterceptors = true;
    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
      if (typeof interceptor.runWhen === "function" && interceptor.runWhen(config) === false) {
        return;
      }
      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
    });
    const responseInterceptorChain = [];
    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
    });
    let promise;
    let i3 = 0;
    let len;
    if (!synchronousRequestInterceptors) {
      const chain = [dispatchRequest.bind(this), void 0];
      chain.unshift(...requestInterceptorChain);
      chain.push(...responseInterceptorChain);
      len = chain.length;
      promise = Promise.resolve(config);
      while (i3 < len) {
        promise = promise.then(chain[i3++], chain[i3++]);
      }
      return promise;
    }
    len = requestInterceptorChain.length;
    let newConfig = config;
    while (i3 < len) {
      const onFulfilled = requestInterceptorChain[i3++];
      const onRejected = requestInterceptorChain[i3++];
      try {
        newConfig = onFulfilled(newConfig);
      } catch (error) {
        onRejected.call(this, error);
        break;
      }
    }
    try {
      promise = dispatchRequest.call(this, newConfig);
    } catch (error) {
      return Promise.reject(error);
    }
    i3 = 0;
    len = responseInterceptorChain.length;
    while (i3 < len) {
      promise = promise.then(responseInterceptorChain[i3++], responseInterceptorChain[i3++]);
    }
    return promise;
  }
  getUri(config) {
    config = mergeConfig$1(this.defaults, config);
    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);
    return buildURL(fullPath, config.params, config.paramsSerializer);
  }
};
utils$1.forEach(["delete", "get", "head", "options"], function forEachMethodNoData(method) {
  Axios$1.prototype[method] = function(url, config) {
    return this.request(mergeConfig$1(config || {}, {
      method,
      url,
      data: (config || {}).data
    }));
  };
});
utils$1.forEach(["post", "put", "patch"], function forEachMethodWithData(method) {
  function generateHTTPMethod(isForm) {
    return function httpMethod(url, data, config) {
      return this.request(mergeConfig$1(config || {}, {
        method,
        headers: isForm ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url,
        data
      }));
    };
  }
  Axios$1.prototype[method] = generateHTTPMethod();
  Axios$1.prototype[method + "Form"] = generateHTTPMethod(true);
});
let CancelToken$1 = class CancelToken {
  constructor(executor) {
    if (typeof executor !== "function") {
      throw new TypeError("executor must be a function.");
    }
    let resolvePromise;
    this.promise = new Promise(function promiseExecutor(resolve) {
      resolvePromise = resolve;
    });
    const token = this;
    this.promise.then((cancel) => {
      if (!token._listeners) return;
      let i3 = token._listeners.length;
      while (i3-- > 0) {
        token._listeners[i3](cancel);
      }
      token._listeners = null;
    });
    this.promise.then = (onfulfilled) => {
      let _resolve;
      const promise = new Promise((resolve) => {
        token.subscribe(resolve);
        _resolve = resolve;
      }).then(onfulfilled);
      promise.cancel = function reject() {
        token.unsubscribe(_resolve);
      };
      return promise;
    };
    executor(function cancel(message, config, request) {
      if (token.reason) {
        return;
      }
      token.reason = new CanceledError$1(message, config, request);
      resolvePromise(token.reason);
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason) {
      throw this.reason;
    }
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(listener) {
    if (this.reason) {
      listener(this.reason);
      return;
    }
    if (this._listeners) {
      this._listeners.push(listener);
    } else {
      this._listeners = [listener];
    }
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(listener) {
    if (!this._listeners) {
      return;
    }
    const index = this._listeners.indexOf(listener);
    if (index !== -1) {
      this._listeners.splice(index, 1);
    }
  }
  toAbortSignal() {
    const controller = new AbortController();
    const abort = (err) => {
      controller.abort(err);
    };
    this.subscribe(abort);
    controller.signal.unsubscribe = () => this.unsubscribe(abort);
    return controller.signal;
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let cancel;
    const token = new CancelToken(function executor(c2) {
      cancel = c2;
    });
    return {
      token,
      cancel
    };
  }
};
function spread$1(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
}
function isAxiosError$1(payload) {
  return utils$1.isObject(payload) && payload.isAxiosError === true;
}
const HttpStatusCode$1 = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(HttpStatusCode$1).forEach(([key, value]) => {
  HttpStatusCode$1[value] = key;
});
function createInstance(defaultConfig) {
  const context = new Axios$1(defaultConfig);
  const instance = bind(Axios$1.prototype.request, context);
  utils$1.extend(instance, Axios$1.prototype, context, { allOwnKeys: true });
  utils$1.extend(instance, context, null, { allOwnKeys: true });
  instance.create = function create(instanceConfig) {
    return createInstance(mergeConfig$1(defaultConfig, instanceConfig));
  };
  return instance;
}
const axios = createInstance(defaults);
axios.Axios = Axios$1;
axios.CanceledError = CanceledError$1;
axios.CancelToken = CancelToken$1;
axios.isCancel = isCancel$1;
axios.VERSION = VERSION$1;
axios.toFormData = toFormData$1;
axios.AxiosError = AxiosError$1;
axios.Cancel = axios.CanceledError;
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = spread$1;
axios.isAxiosError = isAxiosError$1;
axios.mergeConfig = mergeConfig$1;
axios.AxiosHeaders = AxiosHeaders$1;
axios.formToJSON = (thing) => formDataToJSON(utils$1.isHTMLForm(thing) ? new FormData(thing) : thing);
axios.getAdapter = adapters.getAdapter;
axios.HttpStatusCode = HttpStatusCode$1;
axios.default = axios;
const {
  Axios: Axios2,
  AxiosError,
  CanceledError,
  isCancel,
  CancelToken: CancelToken2,
  VERSION,
  all: all2,
  Cancel,
  isAxiosError,
  spread,
  toFormData,
  AxiosHeaders: AxiosHeaders2,
  HttpStatusCode,
  formToJSON,
  getAdapter,
  mergeConfig
} = axios;
const SAP_CONFIG = {
  tokenUrl: `https://dmc-for-dev-gzkiwpb4.authentication.us20.hana.ondemand.com/oauth/token`,
  clientId: `sb-e073cc8c-e3bd-4fb7-b152-9e141fb25a5a!b31643|dmc-services!b257`,
  clientSecret: `b347225a-95fa-4098-829e-0be2508a0120$014oiS3md3mGHXYf2O0gtIINl-cFc-0t9ZAf9nAuV4E=`,
  apiLogisticsUrl: `https://api.us20.dmc.cloud.sap/logistics/v1/readLogisticsOrder?keyType=REFERENCE_NUMBER&id=C20047&plant=${PLANT}`,
  workCenterApiUrl: `https://api.us20.dmc.cloud.sap/workcenter/v2/workcenters?plant=${PLANT}`,
  resourceApiUrl: `https://api.us20.dmc.cloud.sap/resource/v2/resources?plant=${PLANT}`,
  sfcApiUrl: `https://api.us20.dmc.cloud.sap/sfc/v1/sfcdetail?sfc=C20047&plant=${PLANT}`,
  materialApiUrl: `https://api.us20.dmc.cloud.sap/material/v2/materials?plant=${PLANT}`,
  sfcsApiUrl: `https://api.us20.dmc.cloud.sap/sfc/v1/worklist/sfcs?plant=${PLANT}&allSfcSteps=false`,
  packingUnitUrl: `https://api.us20.dmc.cloud.sap/packingUnits/v1/packingUnits?plant=${PLANT}&number=C200PU29`,
  acceptUrl: "https://api.us20.dmc.cloud.sap/logistics/v1/execution/acceptLogisticsOrder",
  confirmUrl: "https://api.us20.dmc.cloud.sap/logistics/v1/execution/confirmLogisticsOrder",
  pickUrl: "https://api.us20.dmc.cloud.sap/logistics/v1/execution/pickLogisticsOrder",
  SFC_START_API: "https://api.us20.dmc.cloud.sap/sfc/v1/sfcs/start",
  SFC_CONFIRM_API: "https://api.us20.dmc.cloud.sap/sfc/v1/sfcs/complete",
  POST_ASSEMBLED_COMPONENT_API: "https://api.us20.dmc.cloud.sap/assembly/v1/assembledComponents",
  POST_ASSEMBLED_COMPONENT_AUTO_API: "https://api.us20.dmc.cloud.sap/assembly/v1/autoAssemble",
  SFC_DETAIL_API: "https://api.us20.dmc.cloud.sap/sfc/v1/sfcdetail",
  ROUTING_API: "https://api.us20.dmc.cloud.sap/routing/v1/routings",
  BOM_API: "https://api.us20.dmc.cloud.sap/bom/v1/boms",
  ASSEMBLE_COMPLETED: "https://api.us20.dmc.cloud.sap/assembly/v1/assembledComponents",
  INVENTORIES_API: "https://api.us20.dmc.cloud.sap/inventory/v1/inventories",
  GOODS_ISSUE_I_API: "https://api.us20.dmc.cloud.sap/processorder/v1/goodsissue",
  GOODS_ISSUE_Q_API: "https://api.us20.dmc.cloud.sap/inventory/v1/inventory/goodsIssues",
  GOODSRECEIPTS_API_Q: "https://api.us20.dmc.cloud.sap/inventory/v1/inventory/goodsReceipts",
  GOODSRECEIPTS_API_I: "https://api.us20.dmc.cloud.sap/inventory/v1/inventory/erpGoodsReceipts",
  UNIT_CODE_API: "https://api.us20.dmc.cloud.sap/uom/v2/uoms",
  POST_QTY_CONFIRM: "https://api.us20.dmc.cloud.sap/quantityConfirmation/v1/confirm",
  POST_QTY_FINAL_CONFIRM: "https://api.us20.dmc.cloud.sap/quantityConfirmation/v1/reportOperationActivityFinalConfirmation",
  POST_AUTOCONFIRM: "https://api.us20.dmc.cloud.sap/activityConfirmation/v1/autoconfirm",
  POST_ACTIVITY_CONFIRM: "https://api.us20.dmc.cloud.sap/activityConfirmation/v1/confirm",
  GET_POSTINGS: "https://api.us20.dmc.cloud.sap/activityConfirmation/v1/postings/details",
  CANCEL_GOODSRECEIPTS: "https://api.us20.dmc.cloud.sap/inventory/v1/inventory/goodsReceipts/cancel",
  CANCEL_GOODSISSUE: "https://api.us20.dmc.cloud.sap/processorder/v1/goodsissue/cancellations",
  GET_ORDER_LIST: "https://api.us20.dmc.cloud.sap/order/v1/orders/list",
  POST_ORDER_RELEASE: "https://api.us20.dmc.cloud.sap/order/v2/orders/release",
  PUT_ALTER_RESOURCE: "https://api.us20.dmc.cloud.sap/sfc/v1/alternateResource",
  GET_STANDARDVALUE: "https://api.us20.dmc.cloud.sap/standardValue/v1/details"
};
let accessToken = null;
function getAccessToken() {
  return accessToken;
}
async function refreshToken() {
  try {
    const rsp = await axios.post(
      SAP_CONFIG.tokenUrl,
      new URLSearchParams({ grant_type: "client_credentials" }),
      {
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        auth: {
          username: SAP_CONFIG.clientId,
          password: SAP_CONFIG.clientSecret
        }
      }
    );
    accessToken = rsp.data.access_token;
    console.log(`[TOKEN] refreshed @ ${(/* @__PURE__ */ new Date()).toISOString()}`);
  } catch (err) {
    accessToken = null;
    console.error("[TOKEN] refresh failed:", err.message);
  }
}
var yoctoQueue;
var hasRequiredYoctoQueue;
function requireYoctoQueue() {
  if (hasRequiredYoctoQueue) return yoctoQueue;
  hasRequiredYoctoQueue = 1;
  class Node2 {
    /// value;
    /// next;
    constructor(value) {
      this.value = value;
      this.next = void 0;
    }
  }
  class Queue {
    // TODO: Use private class fields when targeting Node.js 12.
    // #_head;
    // #_tail;
    // #_size;
    constructor() {
      this.clear();
    }
    enqueue(value) {
      const node = new Node2(value);
      if (this._head) {
        this._tail.next = node;
        this._tail = node;
      } else {
        this._head = node;
        this._tail = node;
      }
      this._size++;
    }
    dequeue() {
      const current = this._head;
      if (!current) {
        return;
      }
      this._head = this._head.next;
      this._size--;
      return current.value;
    }
    clear() {
      this._head = void 0;
      this._tail = void 0;
      this._size = 0;
    }
    get size() {
      return this._size;
    }
    *[Symbol.iterator]() {
      let current = this._head;
      while (current) {
        yield current.value;
        current = current.next;
      }
    }
  }
  yoctoQueue = Queue;
  return yoctoQueue;
}
var pLimit_1;
var hasRequiredPLimit;
function requirePLimit() {
  if (hasRequiredPLimit) return pLimit_1;
  hasRequiredPLimit = 1;
  const Queue = requireYoctoQueue();
  const pLimit2 = (concurrency) => {
    if (!((Number.isInteger(concurrency) || concurrency === Infinity) && concurrency > 0)) {
      throw new TypeError("Expected `concurrency` to be a number from 1 and up");
    }
    const queue = new Queue();
    let activeCount = 0;
    const next = () => {
      activeCount--;
      if (queue.size > 0) {
        queue.dequeue()();
      }
    };
    const run = async (fn, resolve, ...args) => {
      activeCount++;
      const result = (async () => fn(...args))();
      resolve(result);
      try {
        await result;
      } catch {
      }
      next();
    };
    const enqueue = (fn, resolve, ...args) => {
      queue.enqueue(run.bind(null, fn, resolve, ...args));
      (async () => {
        await Promise.resolve();
        if (activeCount < concurrency && queue.size > 0) {
          queue.dequeue()();
        }
      })();
    };
    const generator = (fn, ...args) => new Promise((resolve) => {
      enqueue(fn, resolve, ...args);
    });
    Object.defineProperties(generator, {
      activeCount: {
        get: () => activeCount
      },
      pendingCount: {
        get: () => queue.size
      },
      clearQueue: {
        value: () => {
          queue.clear();
        }
      }
    });
    return generator;
  };
  pLimit_1 = pLimit2;
  return pLimit_1;
}
var pLimitExports = requirePLimit();
const pLimit = /* @__PURE__ */ getDefaultExportFromCjs(pLimitExports);
function format(date = /* @__PURE__ */ new Date(), pattern) {
  const pad = (n2) => n2.toString().padStart(2, "0");
  const y2 = date.getFullYear();
  const M3 = pad(date.getMonth() + 1);
  const d2 = pad(date.getDate());
  const H3 = pad(date.getHours());
  const m2 = pad(date.getMinutes());
  const s2 = pad(date.getSeconds());
  if (pattern === "YYYYMMDD") return `${y2}${M3}${d2}`;
  if (pattern === "YYYYMMDD HHmmss") return `${y2}${M3}${d2} ${H3}${m2}${s2}`;
  return `${y2}-${M3}-${d2} ${H3}:${m2}:${s2}`;
}
const DEFAULTS = {
  NEXT_ORDER_NUMBER: "",
  // DB는 nvarchar(10) → 빈 문자열 기본
  STYLE_NAME: "WMNS NIKE AIR MAX BOLT",
  GENDER_CD: "WO",
  OP_NAME: "IP Injection",
  PART_NAME: "MIDSOLE",
  DEVICE_ID: "POP_DEVICE_01",
  DAY_SEQ: "1H"
};
const pad3 = (n2) => n2.toString().padStart(3, "0");
const clamp = (s2, n2) => (s2 ?? "").toString().slice(0, n2);
function parseFromMaterialCode(material) {
  const m2 = (material ?? "").toString().trim();
  if (m2.length < 12) return {};
  const op = m2.slice(0, 3);
  const style6 = m2.slice(3, 9);
  const color3 = m2.slice(9, 12);
  const styleCd = `${style6}-${color3}`;
  return { opCd: op, styleCd };
}
function buildPassCardPayload(row, ctx) {
  const seq3 = pad3(row.PCARD_SEQ);
  const now2 = /* @__PURE__ */ new Date();
  const { opCd: parsedOP, styleCd: parsedSTYLE } = parseFromMaterialCode(row.MATERIAL_CODE);
  const workCenter = ctx.WORK_CENTER && String(ctx.WORK_CENTER).trim() || row.RESOURCE_CD || "";
  const bdFromWorkCenter = workCenter.slice(0, 2);
  const BD_CD = clamp(ctx.BD_CD ?? bdFromWorkCenter, 3);
  const OP_CD = clamp(parsedOP ?? ctx.OP_CD ?? "", 3);
  const OP_NAME = clamp(ctx.OP_NAME ?? DEFAULTS.OP_NAME, 100);
  const PART_NAME = clamp(ctx.PART_NAME ?? DEFAULTS.PART_NAME, 100);
  const GENDER_CD = clamp(ctx.GENDER_CD ?? DEFAULTS.GENDER_CD, 3);
  const STYLE_NAME = clamp(row.STYLE_NAME ?? DEFAULTS.STYLE_NAME, 100);
  const DEVICE_ID = clamp(ctx.DEVICE_ID ?? DEFAULTS.DEVICE_ID, 20);
  const WORK_CENTER_CLAMPED = clamp(workCenter, 50);
  const STYLE_CD_RAW = parsedSTYLE ?? row.STYLE_CD ?? "";
  const STYLE_CD = clamp(STYLE_CD_RAW, 10);
  const SIZE_CD = clamp(row.SIZE_CD, 3);
  const rawDaySeq = ctx.DAY_SEQ && String(ctx.DAY_SEQ).trim() || DEFAULTS.DAY_SEQ;
  const DAY_SEQ = clamp(rawDaySeq.endsWith("H") ? rawDaySeq : `${rawDaySeq}H`, 3);
  const ORDER_NUMBER = clamp(row.ORDER_NUMBER, 10);
  const nextOrderNo = clamp(row.NEXT_ORDER_NUMBER ?? DEFAULTS.NEXT_ORDER_NUMBER, 10);
  const BAR_KEY = `${ORDER_NUMBER}${seq3}`;
  const qrValue = `${BAR_KEY}_${ORDER_NUMBER}_${nextOrderNo}`.replace(/_$/, "");
  const ymd = format(now2, "YYYYMMDD");
  const building = BD_CD ? `${BD_CD}-` : "";
  const orderTitle = `${ctx.PLANT_CD}-${building}${ymd}-${OP_CD}-${DAY_SEQ}-${seq3}`;
  const view = {
    orderTitle,
    prod: row.RESOURCE_CD,
    next: row.NEXT_RESOURCE_CD ?? "",
    modelBold: STYLE_CD,
    // 굵게: DM8974-400
    modelSub: STYLE_NAME,
    procName: `${OP_CD} (${OP_NAME}) / ${PART_NAME}`,
    workInfo: `${ctx.PLANT_CD} - ${OP_CD} / ${ORDER_NUMBER}`,
    wo: "7 - 7T",
    qty: String(row.PCARD_QTY),
    size: SIZE_CD,
    dateTime: format(now2, "YYYY-MM-DD HH:mm:ss"),
    qrValue
  };
  const insert = {
    PLANT_CD: ctx.PLANT_CD,
    SFC_CD: clamp(ctx.SFC_CD, 128),
    BAR_KEY,
    DAY_SEQ,
    PCARD_SEQ: seq3,
    PCARD_QTY: row.PCARD_QTY,
    BD_CD,
    WORK_CENTER: WORK_CENTER_CLAMPED,
    ORDER_NUMBER,
    NEXT_ORDER_NUMBER: nextOrderNo,
    STYLE_CD,
    STYLE_NAME,
    SIZE_CD,
    GENDER_CD,
    OP_CD,
    OP_NAME,
    PART_NAME,
    RESOURCE_CD: clamp(row.RESOURCE_CD, 10),
    NEXT_RESOURCE_CD: clamp(row.NEXT_RESOURCE_CD ?? "", 10),
    DEVICE_ID,
    USER_IP: clamp(ctx.USER_IP ?? "", 50),
    PRINT_YN: "N",
    PRINT_CNT: "0"
  };
  return { view, insert };
}
let _baseUrl = null;
let _axios = null;
function getIpc() {
  const ipc = window?.ipc;
  if (!ipc || typeof ipc.invoke !== "function") {
    throw new Error(
      "[API] preload에서 window.ipc가 노출되지 않았습니다. preload의 contextBridge.exposeInMainWorld('ipc', ...) 구성을 확인하세요."
    );
  }
  return ipc;
}
async function getApiBaseUrl() {
  if (_baseUrl) return _baseUrl;
  const ipc = getIpc();
  const port = await ipc.invoke("getLocalApiPort");
  _baseUrl = `http://127.0.0.1:${port}`;
  console.log("[API] baseURL =", _baseUrl);
  return _baseUrl;
}
async function getAxios() {
  if (_axios) return _axios;
  const baseURL = await getApiBaseUrl();
  _axios = axios.create({ baseURL, timeout: 3e4 });
  return _axios;
}
function E_ScanOutgoing_Detail_Y({
  open,
  onClose,
  data,
  cellInfo,
  rows,
  onConfirm,
  plant_cd,
  work_date
}) {
  pLimit(5);
  const [cardData, setCardData] = reactExports.useState([]);
  const originalCardDataRef = reactExports.useRef([]);
  const [toastMessage, setToastMessage] = reactExports.useState("");
  const [toastOpen, setToastOpen] = reactExports.useState(false);
  const [currentPage, setCurrentPage] = reactExports.useState(1);
  const [isSfcMode, setIsSfcMode] = reactExports.useState(false);
  const [minValidSfc, setMinValidSfc] = reactExports.useState(null);
  const orderedSfcListRef = reactExports.useRef([]);
  const stableSfc = reactExports.useMemo(() => {
    return typeof data?.SFC === "string" ? data.SFC : "";
  }, [data]);
  const [localIp, setLocalIp] = reactExports.useState("");
  const [externalIp, setExternalIp] = reactExports.useState("");
  const [elapsedTime, setElapsedTime] = reactExports.useState("00:00:00");
  const filterOptions = [
    { key: "notStarted", label: t2("filter.notStarted") },
    { key: "inProgress", label: t2("filter.inProgress") },
    // ⚠️ 프로젝트에 키가 있어야 함
    { key: "completed", label: t2("filter.completed") }
  ];
  const [checkedStates, setCheckedStates] = reactExports.useState({
    notStarted: false,
    inProgress: false,
    completed: false
  });
  const COLUMN_COUNT = 2;
  const ROWS_PER_PAGE = 4;
  const CARD_ROW_HEIGHT = 90;
  const ROW_GAP_PX = 8;
  const columnCount = COLUMN_COUNT;
  const itemsPerPage = COLUMN_COUNT * ROWS_PER_PAGE;
  const showToast = (msg) => {
    setToastMessage(msg);
    setToastOpen(true);
    setTimeout(() => setToastOpen(false), 3e3);
  };
  const filteredCardData = reactExports.useMemo(() => {
    const { notStarted, inProgress, completed } = checkedStates;
    if (!notStarted && !inProgress && !completed) return cardData;
    return cardData.filter((card) => {
      const hasInput = !!card.input_dt;
      const hasProd = !!card.prod_dt;
      if (notStarted && !hasInput && !hasProd) return true;
      if (inProgress && hasInput && !hasProd) return true;
      if (completed && hasInput && hasProd) return true;
      return false;
    });
  }, [cardData, checkedStates]);
  const paginatedData = [...filteredCardData].filter((x2) => x2.seq != null).sort((a3, b3) => {
    const rank = (item) => {
      const hasInput = !!item.input_dt;
      const hasProd = !!item.prod_dt;
      if (hasInput && !hasProd) return 0;
      if (!hasInput && !hasProd) return 1;
      return 2;
    };
    const aRank = rank(a3);
    const bRank = rank(b3);
    if (aRank !== bRank) return aRank - bRank;
    return a3.seq - b3.seq;
  }).slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);
  const paddedData = [...paginatedData];
  while (paddedData.length < itemsPerPage) {
    paddedData.push(null);
  }
  const rowsByColumns = Array.from(
    { length: Math.ceil(paddedData.length / columnCount) },
    (_2, rowIndex) => paddedData.slice(rowIndex * columnCount, rowIndex * columnCount + columnCount)
  );
  const totalPages = Math.ceil(filteredCardData.length / itemsPerPage);
  reactExports.useEffect(() => {
    (async () => {
      try {
        const ax = await getAxios();
        const res = await ax.get("/api/devices/ports");
        console.log("📦 연결된 포트:", res.data);
      } catch (err) {
        console.error("❌ 포트 조회 오류:", err);
      }
    })();
  }, []);
  reactExports.useEffect(() => {
    const fetchIp = async () => {
      try {
        const ax = await getAxios();
        const { data: data2 } = await ax.get("/api/get-ip", {
          headers: { Accept: "application/json" }
        });
        const local = String(data2?.localIp ?? "");
        const external = String(data2?.externalIp ?? "");
        setLocalIp(local);
        setExternalIp(external);
        console.log(t2("app.log.ip.local", { ip: local }));
        console.log(t2("app.log.ip.external", { ip: external }));
      } catch (err) {
        const status = err?.response?.status;
        const body = err?.response?.data;
        console.error("❌ IP 조회 실패", status ? `status=${status}` : "", body ?? err?.message ?? err);
        setLocalIp("");
        setExternalIp("");
      }
    };
    fetchIp();
  }, []);
  reactExports.useEffect(() => {
    if (!open || !data) return;
    const loadData = async () => {
      try {
        const ax = await getAxios();
        const quantity = Number(data.QUANTITY || 0);
        const sfc = String(data.SFC || "").slice(0, 128);
        const fullCount = Math.floor(quantity / 12);
        const remainder = quantity % 12;
        const generatedCards = [];
        for (let i3 = 0; i3 < fullCount; i3++) {
          generatedCards.push({
            seq: i3 + 1,
            qty: 12,
            input_dt: "",
            prod_dt: "",
            confirm_YN: "N",
            flag: "ACTIVE",
            sfc,
            q_sfc: sfc,
            mappedSFC: sfc,
            operation: "",
            resource: ""
          });
        }
        if (remainder > 0) {
          generatedCards.push({
            seq: fullCount + 1,
            qty: remainder,
            input_dt: "",
            prod_dt: "",
            confirm_YN: "N",
            flag: "ACTIVE",
            sfc,
            q_sfc: sfc,
            mappedSFC: sfc,
            operation: "",
            resource: ""
          });
        }
        const res = await ax.get("/api/mssql/escan-detail-v2", {
          params: {
            plant_cd,
            sfc_cd: sfc,
            work_center: data.WORK_CENTER
          }
        });
        const savedScans = res.data;
        for (const scan of savedScans) {
          const seqNum = Number(scan.SEQ);
          const idx = generatedCards.findIndex((card2) => card2.seq === seqNum);
          if (idx === -1) continue;
          const card = generatedCards[idx];
          card.input_dt = scan.INPUT_DT ?? "";
          card.prod_dt = scan.PROD_DT ?? "";
          card.qty = scan.PCARD_QTY ?? card.qty;
          const hasInput = !!card.input_dt;
          const hasProd = !!card.prod_dt;
          card.confirm_YN = hasInput && hasProd ? "P" : hasInput ? "T" : "N";
        }
        setCardData(generatedCards);
        originalCardDataRef.current = JSON.parse(JSON.stringify(generatedCards));
        setIsSfcMode(false);
        setMinValidSfc(sfc);
        orderedSfcListRef.current = [sfc];
        console.log("✅ 최종 카드 리스트:", generatedCards);
      } catch (err) {
        console.error("❌ 카드 생성 실패:", err);
      }
    };
    loadData();
  }, [open, data?.ORDER_NUMBER]);
  const handleDetailOk = (clickedCard) => {
    if (["TP", "P", "Y"].includes(clickedCard.confirm_YN)) {
      console.log("⛔ 클릭 제한 상태:", clickedCard.seq, clickedCard.confirm_YN);
      return;
    }
    setCardData(
      (prev) => prev.map((item) => {
        if (item.seq !== clickedCard.seq) return item;
        const { confirm_YN } = item;
        let next = confirm_YN;
        if (confirm_YN === "N") {
          next = "TT";
        } else if (confirm_YN === "TT") {
          next = "T";
        } else if (confirm_YN === "T") {
          next = "TP";
        }
        console.log(`🟢 카드 상태 변경: ${item.seq} | ${confirm_YN} → ${next}`);
        return { ...item, confirm_YN: next };
      })
    );
  };
  const getColorByStatus = (status) => {
    switch (status) {
      case "Y":
      case "P":
        return "limegreen";
      case "T":
        return "dodgerblue";
      case "TP":
        return "orange";
      case "TT":
        return "yellow";
      case "N":
        return "#f5f5f5";
    }
  };
  const getImageByStatus = (status) => {
    switch (status) {
      case "P":
      case "Y":
        return okGreen;
      case "TP":
        return okOrange;
      case "T":
        return okDodgerblue;
      case "TT":
        return okYellow;
      case "N":
        return okWhite;
      default:
        return okWhite;
    }
  };
  const getModifiedRows = (original, current) => {
    return current.map((cur, idx) => {
      const ori = original[idx];
      const normalizedCurStatus = cur.confirm_YN === "TP" ? "P" : cur.confirm_YN === "TT" ? "T" : cur.confirm_YN;
      const normalizedOriStatus = ori.confirm_YN === "TP" ? "T" : ori.confirm_YN === "TT" ? "N" : ori.confirm_YN;
      const isChanged = normalizedCurStatus !== normalizedOriStatus;
      const scanType = cur.input_dt == null ? "T" : "P";
      return {
        ...cur,
        confirm_YN: normalizedCurStatus,
        SCAN_TYPE: scanType,
        _changed: isChanged && ["T", "P"].includes(normalizedCurStatus)
      };
    }).filter((item) => item._changed).map(({ _changed, ...rest }) => rest);
  };
  const filteredModifiedCards = reactExports.useMemo(() => {
    const modified = getModifiedRows(originalCardDataRef.current, cardData);
    return modified.filter((card) => filteredCardData.some((f4) => f4.seq === card.seq));
  }, [cardData, filteredCardData]);
  const filteredUpdatableCards = reactExports.useMemo(() => {
    return filteredCardData.filter(
      (card) => (card.confirm_YN === "N" || card.confirm_YN === "T") && card.flag !== "FINISH"
    );
  }, [filteredCardData]);
  const isSingleSfc = orderedSfcListRef.current.length <= 1;
  const isClickable = isSingleSfc || stableSfc !== "" && stableSfc === minValidSfc;
  const isSfcBlocked = isSfcMode && !!minValidSfc && data.SFC !== minValidSfc;
  const canSaveDetail = filteredModifiedCards.length > 0 && !isSfcBlocked && isClickable;
  const canSaveAll = filteredUpdatableCards.length > 0 && !isSfcBlocked && isClickable;
  const isCardClickable = (card) => {
    if (!isSfcMode) return true;
    if (!data?.SFC) return false;
    if (minValidSfc && data.SFC !== minValidSfc) return false;
    return card.mappedSFC === data.SFC;
  };
  const callSapStartApi = async (payload) => {
    try {
      console.log("🚀 [SAP START] 호출 준비 시작");
      if (!getAccessToken()) {
        console.warn("🔒 토큰 없음 → 토큰 새로 발급 시도 중...");
        await refreshToken();
      }
      const token = getAccessToken();
      if (!token) {
        console.error("❌ SAP 토큰 발급 실패 → API 호출 중단");
        return;
      }
      console.log("📡 [SAP START] 실제 호출 시작");
      console.log("🧾 호출 URL:", SAP_CONFIG.SFC_START_API);
      console.log("📦 요청 Payload:", JSON.stringify(payload, null, 2));
      console.log("🔑 토큰 일부:", token.slice(0, 10) + "...");
      const ax = await getAxios();
      const res = await ax.post("/api/sap-start", payload);
      console.log("✅ SAP 응답 수신 성공:", res.data);
    } catch (err) {
      const apiErr = err.response?.data?.error;
      console.error("❌ SAP 호출 오류:", apiErr?.message || err.message);
      console.error("📥 오류 응답 전체:", err.response?.data || "(응답 없음)");
    }
  };
  const handlePostConfirm_V2 = async (cardsToSave) => {
    try {
      const ax = await getAxios();
      await ax.post("/api/mssql/escan-detail-save_v2", {
        list: cardsToSave
      });
      setCardData(
        (prev) => prev.map(
          (item) => cardsToSave.some((c2) => c2.SEQ === item.seq.toString()) ? { ...item, confirm_YN: "Y" } : item
        )
      );
    } catch (err) {
      console.error("❌ 저장 중 오류 발생:", err);
      showToast(t2("toast.saveFailed"));
    }
  };
  const fetchSfcDetail2 = async (plant_cd2, sfc) => {
    try {
      const ax = await getAxios();
      const res = await ax.get("/api/sap/sfc-detail", {
        params: { plant_cd: plant_cd2, sfc }
      });
      return res.data;
    } catch (err) {
      console.error("❌ SAP SFC 상태 조회 실패:", err.response?.data || err.message);
      return null;
    }
  };
  const fetchPostedGoodsReceipts2 = async (plant, order, sfc, material, transactionIds, maxRetries = 30, delayMs = 1e3) => {
    const ax = await getAxios();
    for (let attempt = 1; attempt <= maxRetries; attempt++) {
      try {
        const res = await ax.get("/api/sap/goodsreceipts", {
          params: { plant, order, sfc, material }
        });
        const data2 = res.data;
        const result = Array.isArray(data2) ? data2 : Array.isArray(data2?.content) ? data2.content : Array.isArray(data2?.lineItems) ? data2.lineItems : [];
        const postedOnly = data2.filter((d2) => d2.status === "POSTED_TO_TARGET_SYS");
        if (transactionIds.length > 0) {
          const matched = postedOnly.filter((d2) => transactionIds.includes(d2.transactionId?.trim?.()));
          if (matched.length > 0) {
            console.log(`✅ TxID 매칭된 입고 데이터 발견 (시도 ${attempt}회)`);
            console.table(
              matched.map((d2) => ({
                order: d2.order,
                sfc: d2.sfc,
                txId: d2.transactionId,
                qty: d2.quantityInBaseUnit?.value
              }))
            );
            return postedOnly;
          }
          console.log(`⏳ TxID 매칭 결과 없음 (시도 ${attempt}회) → 재시도`);
          await new Promise((res2) => setTimeout(res2, delayMs));
        } else {
          console.log(`✅ 전체 POSTED 입고 조회 (TxID 없음, ${postedOnly.length}건)`);
          return postedOnly;
        }
      } catch (err) {
        console.warn(`🚨 조회 실패 (시도 ${attempt}회):`, err);
        await new Promise((res) => setTimeout(res, delayMs));
      }
    }
    console.warn("❌ 최대 재시도 초과. TxID 일치 입고 데이터 확인 불가");
    return [];
  };
  const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));
  const callSapPostGoodsReceipt = async ({
    plant,
    order,
    postedBy,
    lineItems
  }) => {
    console.log("🚀 [SAP GoodsReceipt] 호출 시작");
    console.log("📦 요청 Payload:", {
      plant,
      order,
      postedBy,
      lineItems
    });
    const payload = {
      plant,
      order,
      postedBy,
      lineItems
    };
    const url = "/api/sap-goods-receipt";
    let attempt = 0;
    const ax = await getAxios();
    while (true) {
      try {
        console.log(`🚀 [SAP GoodsReceipt] 시도 ${attempt + 1}회`);
        const res = await ax.post(url, payload, {
          headers: {
            "Content-Type": "application/json"
          }
        });
        console.log("✅ SAP GoodsReceipt 호출 성공:", res.data);
        return res.data;
      } catch (err) {
        const responseData = err?.response?.data || {};
        console.error(`❌ 호출 실패 (${attempt + 1}회차):`, responseData.error || err.message);
        attempt++;
        if (attempt >= 10) {
          console.warn("⚠️ 10회 연속 실패 → 2초 후 루프 재시작");
          attempt = 0;
          await delay(2e3);
        } else {
          await delay(1e3);
        }
      }
    }
  };
  const callSapPostAutoConfirm = async ({
    plant,
    shopOrder,
    sfc,
    operationActivity,
    operationActivityVersion,
    stepId,
    workCenter,
    resource,
    routingId,
    finalConfirmation,
    postConfirmationToErp,
    postedBy,
    postingDateTime
  }) => {
    try {
      const ax = await getAxios();
      const res = await ax.post("/api/sap-post-autoconfirm", {
        plant,
        shopOrder,
        sfc,
        operationActivity,
        operationActivityVersion,
        stepId,
        workCenter,
        resource,
        routingId,
        finalConfirmation,
        postConfirmationToErp,
        postedBy,
        postingDateTime
      });
      console.log("✅ AutoActivityConfirm 성공", res.data);
    } catch (err) {
      console.error("❌ AutoActivityConfirm 실패", err.response?.data || err.message);
    }
  };
  async function buildEpcardInsertList({
    items,
    data: data2,
    plant_cd: plant_cd2,
    localIp: localIp2
  }) {
    const opt = await window.config.getPasscardOptions?.().catch(() => void 0);
    const print = opt ?? {
      deviceName: "BIXOLON SRP-330II",
      preview: false,
      widthMicrons: 79e3,
      heightMicrons: 6e4,
      previewCountAsPrint: true
    };
    const previewFlag = !!print.preview;
    const countPreview = print.previewCountAsPrint !== false;
    const markPrinted = previewFlag ? !!countPreview : true;
    const ensureDaySeq = (v2) => {
      const s2 = String(v2 ?? "1H").trim();
      return s2.endsWith("H") ? s2 : `${s2}H`;
    };
    const nz = (v2, d2) => v2 ?? d2;
    const now2 = /* @__PURE__ */ new Date();
    const toYmd2 = (d2) => {
      const p3 = (n2) => String(n2).padStart(2, "0");
      return `${d2.getFullYear()}${p3(d2.getMonth() + 1)}${p3(d2.getDate())}`;
    };
    const nowYmd = toYmd2(now2);
    const confirmed = items.filter((it2) => it2.confirm_YN === "P");
    const list = confirmed.map((it2) => {
      const row = {
        ORDER_NUMBER: String(data2.ORDER_NUMBER ?? ""),
        NEXT_ORDER_NUMBER: data2.NEXT_ORDER_NUMBER ? String(data2.NEXT_ORDER_NUMBER) : "",
        STYLE_CD: String(data2.STYLE_CD ?? ""),
        STYLE_NAME: nz(data2.MATERIAL_DESCRIPTION, "WMNS NIKE AIR MAX BOLT"),
        SIZE_CD: String(data2.SIZE_CD ?? ""),
        RESOURCE_CD: String(data2.WORK_CENTER ?? ""),
        NEXT_RESOURCE_CD: data2.NEXT_RESOURCE_CD ? String(data2.NEXT_RESOURCE_CD) : void 0,
        PCARD_QTY: Number(it2.qty) || 0,
        PCARD_SEQ: Number(it2.seq) || 0,
        MATERIAL_CODE: String(data2.MATERIAL_CODE ?? data2.MATERIAL ?? "")
      };
      const ctx = {
        PLANT_CD: plant_cd2,
        BD_CD: nz(data2.BD_CD, "IP"),
        OP_CD: nz(data2.OP_CD, "IPIPI"),
        OP_NAME: nz(data2.OP_NAME, "IP Injection"),
        DAY_SEQ: ensureDaySeq(data2.DAY_SEQ),
        DEVICE_ID: nz(data2.DEVICE_ID, "POP_DEVICE_01"),
        USER_IP: localIp2 || "0.0.0.0",
        SFC_CD: String(data2.SFC ?? "").slice(0, 128),
        WORK_CENTER: String(data2.WORK_CENTER ?? ""),
        PART_NAME: nz(data2.PART_NAME, "MIDSOLE")
      };
      const { insert } = buildPassCardPayload(row, ctx);
      insert.CREATE_DATE = insert.CREATE_DATE ?? nowYmd;
      insert.CREATE_DT = insert.CREATE_DT ?? now2;
      insert.PRINT_DATE = insert.PRINT_DATE ?? nowYmd;
      insert.PRINT_DT = insert.PRINT_DT ?? now2;
      if (markPrinted) {
        const cnt = Number(insert.PRINT_CNT ?? "0");
        insert.PRINT_YN = "Y";
        insert.PRINT_CNT = String(cnt + 1);
      } else {
        insert.PRINT_YN = insert.PRINT_YN ?? "N";
        insert.PRINT_CNT = insert.PRINT_CNT ?? "0";
      }
      return { ...insert, MARK_PRINTED: markPrinted };
    });
    return { list, print, previewFlag };
  }
  const handleSaveDetail = async () => {
    const changed = getModifiedRows(originalCardDataRef.current, cardData);
    const filtered = changed.filter((item) => ["T", "P"].includes(item.confirm_YN));
    setCardData(
      (prev) => prev.map(
        (item) => filtered.some((f4) => f4.seq === item.seq) ? { ...item, isSaving: true } : item
      )
    );
    if (filtered.length === 0) return showToast(t2("toast.noChanges"));
    const rawSfc = String(data?.SFC || "").slice(0, 128);
    if (!rawSfc) {
      console.error("❌ 유효하지 않은 SFC: null 또는 빈 문자열입니다.");
      showToast(t2("toast.missingSfc"));
      return;
    }
    try {
      const ax = await getAxios();
      const payload = filtered.map((item) => ({
        PLANT_CD: plant_cd,
        WORK_CENTER: data.WORK_CENTER,
        ORDER_NUMBER: data.ORDER_NUMBER,
        SEQ: item.seq.toString(),
        MATERIAL_CODE: data.MATERIAL_CODE,
        SIZE_CD: data.SIZE_CD,
        ITPO_TYPE: item.confirm_YN,
        SFC: rawSfc,
        SCAN_TYPE: !item.input_dt ? "T" : "P",
        PCARD_QTY: item.qty,
        USER_IP: localIp || "0.0.0.0",
        DEVICE_ID: "POP_DEVICE_01"
      }));
      handlePostConfirm_V2(payload);
      onConfirm?.(payload);
      try {
        const { list, print, previewFlag } = await buildEpcardInsertList({
          items: filtered,
          data,
          plant_cd,
          localIp
        });
        if (list.length === 0) {
          console.info("[PASSCARD] no rows to insert/print");
          return;
        }
        await ax.post("/api/mssql/epcard/print-bulk", { list });
        console.info("[PASSCARD] DB insert OK. now printing...", { count: list.length });
        const bridge = window?.printBridge?.passcards;
        const ipcInvoke = window?.ipc?.invoke ?? window?.electron?.ipcRenderer?.invoke;
        const jobs = list;
        const options = {
          deviceName: print.deviceName,
          preview: !!previewFlag,
          widthMicrons: print.widthMicrons,
          heightMicrons: print.heightMicrons
        };
        const withTimeout = (p3, ms, tag2) => Promise.race([
          p3,
          new Promise((_2, rej) => setTimeout(() => rej(new Error(tag2)), ms))
        ]);
        let res = null;
        if (typeof bridge === "function") {
          console.info("[PASSCARD] try printBridge.passcards(jobs, options)");
          res = await withTimeout(bridge(jobs, options), 15e3, "bridge timeout");
        } else if (ipcInvoke) {
          console.info('[PASSCARD] try ipc.invoke("print:passcards", {jobs, options})');
          res = await withTimeout(
            ipcInvoke("print:passcards", { jobs, options }),
            15e3,
            "ipc timeout"
          );
        } else {
          console.error(
            "❌ PASSCARD: no print bridge or ipc.invoke available (preload 미적용 가능)"
          );
        }
        console.info("[PASSCARD] print dispatched:", res ?? "ok");
      } catch (e2) {
        console.error("❌ PASSCARD 벌크 저장/출력 실패:", e2);
        setCardData(
          (prev) => prev.map(
            (item) => filtered.some((f4) => f4.seq === item.seq) ? { ...item, isSaving: false } : item
          )
        );
        showToast(t2("toast.processError"));
        return;
      }
      const sfcDetail = await fetchSfcDetail2(plant_cd, String(data.SFC).slice(0, 128));
      const bomCode = sfcDetail?.bom?.bom;
      const rawBomType = sfcDetail?.bom?.type;
      const bomType = rawBomType === "SHOPORDERBOM" ? "SHOP_ORDER" : rawBomType === "MASTERBOM" ? "MASTER" : rawBomType === "SFCBOM" ? "SFC" : void 0;
      if (!bomCode || !bomType) {
        console.warn("❗ BOM 정보가 없거나 타입 변환 실패");
        return showToast(t2("toast.noBomInfo"));
      }
      const operation = sfcDetail?.steps?.[0]?.operation?.operation;
      const step = sfcDetail?.steps?.[0];
      const stepId = step?.stepId;
      const routing = step?.stepRouting?.routing;
      const resource = step?.resource;
      const operation_Version = step?.operation?.version;
      const totalQuantity = Number(sfcDetail.quantity ?? 0);
      if (!operation) {
        console.error("❌ operation 정보를 가져올 수 없습니다.");
        throw new Error("SFC의 operation 정보를 확인할 수 없습니다.");
      }
      let components = [];
      let baseUnitOfMeasure = "";
      let bomVersion = "";
      let resolvedBomCode = "";
      try {
        const bomResp = await ax.get("/api/sap/bom-detail", {
          params: {
            plant: plant_cd,
            bom: bomCode,
            type: bomType
          }
        });
        const bomData = Array.isArray(bomResp.data) ? bomResp.data[0] : bomResp.data;
        console.log("📦 [RAW_BOM_DATA]", JSON.stringify(bomData, null, 2));
        baseUnitOfMeasure = bomData?.baseUnitOfMeasure;
        resolvedBomCode = bomData?.bom ?? "";
        bomVersion = bomData?.version ?? "";
        if (!Array.isArray(bomData?.components)) {
          console.warn("❗ BOM components 데이터가 없습니다.");
          return showToast(t2("toast.noBomComponents"));
        }
        components = bomData.components.map((comp) => {
          const component = comp.material?.material ?? "";
          const componentVersion = comp.material?.version ?? "";
          const quantity = comp.quantity;
          const totalQuantity2 = comp.totalQuantity ?? null;
          const unitOfMeasure = comp.unitOfMeasure ?? "";
          const storageLocation = comp.storageLocation ?? "";
          if (!component || !componentVersion || quantity == null) return null;
          return {
            component,
            componentVersion,
            quantity,
            totalQuantity: totalQuantity2,
            unitOfMeasure,
            storageLocation
          };
        }).filter(
          (c2) => c2 !== null
        );
        console.log("🧩 BOM에서 추출된 components:", components);
      } catch (err) {
        console.error("❌ BOM Detail 조회 실패", err);
        return showToast(t2("toast.loadBomFailed"));
      }
      const hasAnyInput = cardData.some((c2) => !!c2.input_dt);
      if (!hasAnyInput) {
        const sapPayload = {
          plant: plant_cd.slice(0, 6),
          operation,
          resource: String(data.WORK_CENTER ?? "").slice(0, 36),
          // quantity: Number(data.QUANTITY ?? 0),
          // quantity: 0,
          sfcs: [String(data.SFC ?? "").slice(0, 128)],
          processLot: ""
        };
        await callSapStartApi(sapPayload);
      }
      const totalQty = filtered.filter((item) => item.confirm_YN === "P").reduce((sum, item) => sum + Number(item.qty || 0), 0);
      const usedSeqList = filtered.filter((item) => item.confirm_YN === "P").map((item) => item.seq);
      let sapPosted = false;
      for (const item of filtered) {
        if (item.confirm_YN === "P" && !sapPosted) {
          console.log("✅ GoodsReceipt 진입 (합산 처리)");
          const rawSfc2 = String(data.SFC ?? "").slice(0, 128);
          const workDate = work_date;
          const storageLocation = String(data.PUTAWAYSTORAGELOCATION ?? "").slice(0, 10);
          const orderNumber = String(data.ORDER_NUMBER ?? "").slice(0, 12);
          const materialCode = data.MATERIAL_CODE;
          const materialVersion = data.MATERIAL_VERSION || "ERP001";
          let uomData = null;
          try {
            const uomResp = await ax.get("/api/sap/unit-codes", {
              params: { unitCode: baseUnitOfMeasure }
            });
            const matched = Array.isArray(uomResp.data) ? uomResp.data[0] : uomResp.data;
            if (!matched || !matched.unitCode) throw new Error("단위코드 조회 실패");
            uomData = matched;
          } catch (err) {
            console.error("❌ 단위코드 조회 실패:", err);
            return showToast(t2("toast.loadUomFailed"));
          }
          const getPreferredCommercialCode = (codes = []) => {
            const preferredLanguages = ["ko", "en"];
            for (const lang of preferredLanguages) {
              const match = codes.find((c2) => c2.language === lang);
              if (match?.commercialCode) return match.commercialCode;
            }
            return codes[0]?.commercialCode || baseUnitOfMeasure;
          };
          const unitOfMeasure = {
            commercialUnitOfMeasure: getPreferredCommercialCode(uomData?.commercialCodes),
            internalUnitOfMeasure: baseUnitOfMeasure,
            isoUnitOfMeasure: uomData?.isoCode || baseUnitOfMeasure
          };
          try {
            const response = await callSapPostGoodsReceipt({
              plant: plant_cd,
              order: orderNumber,
              postedBy: "dmc_services_user",
              lineItems: [
                {
                  material: materialCode,
                  materialVersion,
                  postingDate: workDate,
                  quantity: {
                    unitOfMeasure,
                    value: totalQty
                  },
                  sfc: rawSfc2,
                  storageLocation
                }
              ]
            });
            const transactionIds = Array.isArray(response?.lineItems) ? response.lineItems.filter((item2) => item2?.transactionId && !item2?.hasError).map((item2) => item2.transactionId) : [];
            if (!transactionIds.length) {
              console.error("❌ 유효한 트랜잭션 ID 없음 → 조회 중단");
              return;
            }
            const allPostedReceipts = await fetchPostedGoodsReceipts2(
              plant_cd,
              orderNumber,
              rawSfc2,
              materialCode,
              transactionIds
            );
            const postedMatchedTxIds = new Set(
              allPostedReceipts.filter((gr) => transactionIds.includes(gr.transactionId?.trim?.())).map((gr) => gr.transactionId?.trim?.())
            );
            const postedQty = allPostedReceipts.filter((gr) => !postedMatchedTxIds.has(gr.transactionId?.trim?.())).reduce((sum, gr) => sum + Number(gr.quantityInBaseUnit?.value ?? 0), 0);
            const currentProcessingQty = allPostedReceipts.filter((gr) => postedMatchedTxIds.has(gr.transactionId?.trim?.())).reduce((sum, gr) => sum + Number(gr.quantityInBaseUnit?.value ?? 0), 0);
            const totalDone = Math.round((postedQty + currentProcessingQty) * 1e3) / 1e3;
            const isFinal = Math.abs(totalQuantity - totalDone) < 1e-3;
            console.log("📦 입고 누적 수량 체크");
            console.log(`   🔹 총 수량 (SFC 기준): ${totalQuantity}`);
            console.log(`   🔹 누적 입고 수량 (POSTED): ${postedQty}`);
            console.log(`   🔹 현재 처리 중 수량 (TxID 매칭): ${currentProcessingQty}`);
            console.log(`   🔹 누적 합계: ${totalDone}`);
            console.log(`   🔹 잔량: ${Math.max(0, totalQuantity - totalDone)}`);
            console.log(`   🔹 Final 여부: ${isFinal ? "✅ Final" : "⏳ 미완료"}`);
            try {
              const qtyConfirmResp = await ax.post("/api/sap-post-qty-confirm", {
                plant: plant_cd,
                shopOrder: orderNumber,
                sfc: rawSfc2,
                operationActivity: operation,
                workCenter: data.WORK_CENTER,
                yieldQuantity: totalQty,
                yieldQuantityUnit: unitOfMeasure.internalUnitOfMeasure,
                yieldQuantityIsoUnit: unitOfMeasure.isoUnitOfMeasure,
                isFinalConfirmation: isFinal
              });
              console.log("✅ Quantity Confirmation 성공:", qtyConfirmResp.data);
            } catch (qcErr) {
              const err = qcErr;
              console.error("❌ Quantity Confirmation 실패:", err.response?.data || err.message);
            }
            if (isFinal) {
              const postingDateTime = new Date(Date.now()).toISOString().replace(/\.\d{3}Z$/, ".000Z");
              try {
                await callSapPostAutoConfirm({
                  plant: plant_cd,
                  shopOrder: orderNumber,
                  sfc: rawSfc2,
                  operationActivity: operation,
                  operationActivityVersion: operation_Version,
                  stepId: stepId ?? "",
                  workCenter: data.WORK_CENTER,
                  resource,
                  routingId: routing ?? "",
                  finalConfirmation: true,
                  postConfirmationToErp: true,
                  postedBy: "dongil.kang@changshininc.com",
                  postingDateTime
                });
                console.log("✅ AutoActivityConfirm 성공");
              } catch (autoErr) {
                console.error("❌ AutoActivityConfirm 실패:", autoErr);
              }
              try {
                const finalConfirmResp = await ax.post("/api/sap-post-final-confirm", {
                  plant: plant_cd,
                  shopOrder: orderNumber,
                  sfc: rawSfc2,
                  operationActivity: operation
                });
                console.log("✅ Final Quantity Confirmation 성공:", finalConfirmResp.data);
              } catch (finalErr) {
                console.error("❌ FinalConfirm 실패:", finalErr);
              }
            }
          } catch (err) {
            console.error("❌ SAP GoodsReceipt 처리 중 오류:", err);
            showToast(t2("toast.processError"));
            return;
          }
          try {
            console.log("📦 파라미터 확인:", {
              plant_cd,
              sfc: rawSfc2,
              scan_type: item.confirm_YN,
              seqList: usedSeqList
            });
            const uploadResp = await ax.post("/api/mssql/update-upload-yn", {
              plant_cd,
              sfc: rawSfc2,
              scan_type: item.confirm_YN,
              seqList: usedSeqList
            });
            console.log("✅ MSSQL 업로드 상태 업데이트 성공:", uploadResp.data);
          } catch (uploadErr) {
            console.error("❌ MSSQL 업로드 상태 업데이트 실패:", uploadErr);
          }
          sapPosted = true;
        }
      }
    } catch (err) {
      console.error("❌ SaveDetail 처리 오류:", err);
      showToast(t2("toast.processError"));
    } finally {
      setCardData(
        (prev) => prev.map(
          (item) => filtered.some((f4) => f4.seq === item.seq) ? { ...item, isSaving: false } : item
        )
      );
      onClose();
    }
  };
  const handleSaveAll = async () => {
    const currentSfc = minValidSfc;
    const updatedData = cardData.map((item) => {
      if (item.confirm_YN === "N" && !item.input_dt) {
        return { ...item, confirm_YN: "T" };
      }
      if (item.confirm_YN === "T" && item.input_dt && !item.prod_dt) {
        return { ...item, confirm_YN: "P" };
      }
      return item;
    });
    setCardData(updatedData);
    await new Promise((r3) => setTimeout(r3, 0));
    const filtered = updatedData.filter(
      (x2) => x2.mappedSFC === currentSfc && ["T", "P"].includes(x2.confirm_YN) && x2.flag !== "FINISH" && !x2.prod_dt
      // 🎯 아직 생산 미처리된 카드만 포함
    );
    setCardData(
      (prev) => prev.map(
        (item) => filtered.some((f4) => f4.seq === item.seq) ? { ...item, isSaving: true } : item
      )
    );
    const rawSfc = String(data?.SFC || "").slice(0, 128);
    if (!rawSfc) {
      console.error("❌ 유효하지 않은 SFC: null 또는 빈 문자열입니다.");
      showToast(t2("toast.missingSfc"));
      return;
    }
    if (filtered.length === 0) return showToast(t2("toast.nothingToConfirm"));
    try {
      const ax = await getAxios();
      const payload = filtered.map((item) => ({
        PLANT_CD: plant_cd,
        WORK_CENTER: data.WORK_CENTER,
        ORDER_NUMBER: data.ORDER_NUMBER,
        SEQ: item.seq.toString(),
        MATERIAL_CODE: data.MATERIAL_CODE,
        SIZE_CD: data.SIZE_CD,
        ITPO_TYPE: item.confirm_YN,
        SFC: rawSfc,
        SCAN_TYPE: !item.input_dt ? "T" : "P",
        PCARD_QTY: item.qty,
        USER_IP: localIp || "0.0.0.0",
        DEVICE_ID: "POP_DEVICE_01"
      }));
      handlePostConfirm_V2(payload);
      onConfirm?.(payload);
      const itemsForPrint = filtered.filter((it2) => it2.confirm_YN === "P");
      if (itemsForPrint.length === 0) {
        console.info("[PASSCARD] skip print (no P rows)");
      } else {
        try {
          const { list, print, previewFlag } = await buildEpcardInsertList({
            items: itemsForPrint,
            data,
            plant_cd,
            localIp
          });
          if (list.length === 0) {
            console.info("[PASSCARD] nothing to insert/print (empty list from builder)");
          } else {
            await ax.post("/api/mssql/epcard/print-bulk", { list });
            console.info("[PASSCARD] DB insert OK. now printing...", { count: list.length });
            const bridge = window?.printBridge?.passcards;
            const ipcInvoke = window?.ipc?.invoke ?? window?.electron?.ipcRenderer?.invoke;
            const jobs = list;
            const options = {
              deviceName: print.deviceName,
              preview: !!previewFlag,
              // 컨피그/빌더에서 온 프리뷰만 사용
              widthMicrons: print.widthMicrons,
              heightMicrons: print.heightMicrons
            };
            const withTimeout = (p3, ms, tag2) => Promise.race([
              p3,
              new Promise((_2, rej) => setTimeout(() => rej(new Error(tag2)), ms))
            ]);
            let res = null;
            if (typeof bridge === "function") {
              console.info("[PASSCARD] try printBridge.passcards(jobs, options)");
              res = await withTimeout(bridge(jobs, options), 15e3, "bridge timeout");
            } else if (ipcInvoke) {
              console.info('[PASSCARD] try ipc.invoke("print:passcards", {jobs, options})');
              res = await withTimeout(
                ipcInvoke("print:passcards", { jobs, options }),
                15e3,
                "ipc timeout"
              );
            } else {
              console.error(
                "❌ PASSCARD: no print bridge or ipc.invoke available (preload missing?)"
              );
            }
            console.info("[PASSCARD] print dispatched:", res ?? "ok");
          }
        } catch (e2) {
          console.warn("⚠️ PASSCARD print step failed (continue flow):", e2);
        } finally {
        }
      }
      const sfcDetail = await fetchSfcDetail2(plant_cd, String(data.SFC).slice(0, 128));
      const bomCode = sfcDetail?.bom?.bom;
      const rawBomType = sfcDetail?.bom?.type;
      const bomType = rawBomType === "SHOPORDERBOM" ? "SHOP_ORDER" : rawBomType === "MASTERBOM" ? "MASTER" : rawBomType === "SFCBOM" ? "SFC" : void 0;
      if (!bomCode || !bomType) {
        console.warn("❗ BOM 정보가 없거나 타입 변환 실패");
        return showToast(t2("toast.noBomInfo"));
      }
      const operation = sfcDetail?.steps?.[0]?.operation?.operation;
      const step = sfcDetail?.steps?.[0];
      const stepId = step?.stepId;
      const routing = step?.stepRouting?.routing;
      const resource = step?.resource;
      const operation_Version = step?.operation?.version;
      const totalQuantity = Number(sfcDetail.quantity ?? 0);
      if (!operation) {
        console.error("❌ operation 정보를 가져올 수 없습니다.");
        throw new Error("SFC의 operation 정보를 확인할 수 없습니다.");
      }
      let components = [];
      let baseUnitOfMeasure = "";
      let bomVersion = "";
      let resolvedBomCode = "";
      try {
        const bomResp = await ax.get("/api/sap/bom-detail", {
          params: {
            plant: plant_cd,
            bom: bomCode,
            type: bomType
          }
        });
        const bomData = Array.isArray(bomResp.data) ? bomResp.data[0] : bomResp.data;
        console.log("📦 [RAW_BOM_DATA]", JSON.stringify(bomData, null, 2));
        baseUnitOfMeasure = bomData?.baseUnitOfMeasure;
        resolvedBomCode = bomData?.bom ?? "";
        bomVersion = bomData?.version ?? "";
        if (!Array.isArray(bomData?.components)) {
          console.warn("❗ BOM components 데이터가 없습니다.");
          return showToast(t2("toast.noBomComponents"));
        }
        components = bomData.components.map((comp) => {
          const component = comp.material?.material ?? "";
          const componentVersion = comp.material?.version ?? "";
          const quantity = comp.quantity;
          const totalQuantity2 = comp.totalQuantity ?? null;
          const unitOfMeasure2 = comp.unitOfMeasure ?? "";
          const storageLocation2 = comp.storageLocation ?? "";
          if (!component || !componentVersion || quantity == null) return null;
          return {
            component,
            componentVersion,
            quantity,
            totalQuantity: totalQuantity2,
            unitOfMeasure: unitOfMeasure2,
            storageLocation: storageLocation2
          };
        }).filter(
          (c2) => c2 !== null
        );
        console.log("🧩 BOM에서 추출된 components:", components);
      } catch (err) {
        console.error("❌ BOM Detail 조회 실패", err);
        return showToast(t2("toast.loadBomFailed"));
      }
      const hasAnyInput = cardData.some((c2) => !!c2.input_dt);
      if (!hasAnyInput) {
        await callSapStartApi({
          plant: plant_cd,
          operation,
          resource: data.WORK_CENTER,
          sfcs: [rawSfc],
          processLot: ""
        });
      }
      const uomResp = await ax.get("/api/sap/unit-codes", {
        params: { unitCode: baseUnitOfMeasure }
      });
      const uomData = Array.isArray(uomResp.data) ? uomResp.data[0] : uomResp.data;
      const unitOfMeasure = {
        commercialUnitOfMeasure: uomData?.commercialCodes?.[0]?.commercialCode || baseUnitOfMeasure,
        internalUnitOfMeasure: baseUnitOfMeasure,
        isoUnitOfMeasure: uomData?.isoCode || baseUnitOfMeasure
      };
      const totalQty = filtered.filter((item) => item.confirm_YN === "P").reduce((sum, item) => sum + Number(item.qty || 0), 0);
      const orderNumber = data.ORDER_NUMBER;
      const storageLocation = data.PUTAWAYSTORAGELOCATION || "";
      const workDate = work_date;
      const grResp = await callSapPostGoodsReceipt({
        plant: plant_cd,
        order: orderNumber,
        postedBy: "dmc_services_user",
        lineItems: [
          {
            material: data.MATERIAL_CODE,
            materialVersion: data.MATERIAL_VERSION || "ERP001",
            postingDate: workDate,
            quantity: {
              unitOfMeasure,
              value: totalQty
            },
            sfc: rawSfc,
            storageLocation
          }
        ]
      });
      const transactionIds = (grResp?.lineItems || []).filter((item) => item?.transactionId && !item?.hasError).map((item) => item.transactionId);
      const posted = await fetchPostedGoodsReceipts2(
        plant_cd,
        orderNumber,
        rawSfc,
        data.MATERIAL_CODE,
        transactionIds
      );
      const postedMatched = new Set(posted.map((d2) => d2.transactionId));
      const postedQty = posted.reduce(
        (sum, d2) => sum + Number(d2.quantityInBaseUnit?.value || 0),
        0
      );
      const isFinal = Math.abs(totalQuantity - postedQty) < 1e-3;
      await ax.post("/api/sap-post-qty-confirm", {
        plant: plant_cd,
        shopOrder: orderNumber,
        sfc: rawSfc,
        operationActivity: operation,
        workCenter: data.WORK_CENTER,
        yieldQuantity: totalQty,
        yieldQuantityUnit: unitOfMeasure.internalUnitOfMeasure,
        yieldQuantityIsoUnit: unitOfMeasure.isoUnitOfMeasure,
        isFinalConfirmation: isFinal
      });
      if (isFinal) {
      }
      let standardValueObj = null;
      try {
      } catch (err) {
        console.error("❌ Standard Value 조회 실패:", err.response?.data || err.message);
      }
      const seqList = filtered.map((item) => item.seq);
      await ax.post("/api/mssql/update-upload-yn", {
        plant_cd,
        sfc: rawSfc,
        scan_type: "P",
        seqList
      });
      showToast(t2("toast.saveAllDone"));
    } catch (err) {
      console.error("❌ SaveAll 처리 오류:", err);
      showToast(t2("toast.saveAllError"));
    } finally {
      setCardData(
        (prev) => prev.map(
          (item) => filtered.some((f4) => f4.seq === item.seq) ? { ...item, isSaving: false } : item
        )
      );
      onClose();
    }
  };
  const cardBlock = (data2) => {
    if (!data2) return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { height: "80px" } });
    const backgroundColor = getColorByStatus(data2.confirm_YN);
    const clickable = isCardClickable(data2);
    const isSaving = data2.isSaving === true;
    return /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "div",
      {
        style: {
          display: "flex",
          gap: "0.5rem",
          alignItems: "center",
          width: "100%",
          height: "80px",
          pointerEvents: clickable ? "auto" : "none"
        },
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              style: {
                flex: 1,
                borderRadius: "10px",
                border: "none",
                backgroundColor,
                lineHeight: "1.2rem",
                color: "black",
                fontWeight: "bold",
                display: "flex",
                flexDirection: "column",
                justifyContent: "space-between",
                padding: "6px",
                boxShadow: "inset 0 0 4px rgba(0, 0, 0, 0.2)"
              },
              children: isSaving ? /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "div",
                {
                  style: {
                    fontSize: "2rem",
                    // ✅ 글자 크게
                    fontWeight: "bold",
                    color: "#d9534f",
                    lineHeight: "2rem",
                    // ✅ 세로 공간 키움
                    minHeight: "80px",
                    // ✅ 카드 전체 높이와 맞춤
                    display: "flex",
                    flexDirection: "column",
                    justifyContent: "center",
                    textAlign: "center"
                  },
                  children: [
                    t2("ui.inProgress"),
                    " ",
                    /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
                  ]
                }
              ) : /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
                  t2("detail.pcSeq"),
                  " : ",
                  data2.seq,
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  t2("detail.qty"),
                  " : ",
                  isNaN(data2.qty) ? "-" : data2.qty
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
                  t2("detail.input"),
                  " : ",
                  data2.input_dt || "-",
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  t2("detail.prod"),
                  " : ",
                  data2.prod_dt || "-"
                ] })
              ] })
            }
          ),
          isSaving ? /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "div",
            {
              style: {
                width: "60px",
                height: "60px",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                fontSize: "0.9rem",
                fontWeight: "bold",
                color: "#d9534f",
                // 빨간 느낌
                border: "2px dashed red",
                borderRadius: "10px",
                textAlign: "center",
                lineHeight: "1rem"
              },
              children: [
                "⏳",
                /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                t2("ui.inProgressShort")
              ]
            }
          ) : /* @__PURE__ */ jsxRuntimeExports.jsx(
            "img",
            {
              src: getImageByStatus(data2.confirm_YN),
              alt: "OK",
              style: {
                width: "60px",
                height: "60px",
                borderRadius: "10px",
                cursor: clickable ? "pointer" : "not-allowed",
                opacity: clickable ? 1 : 0.4,
                objectFit: "contain",
                pointerEvents: clickable ? "auto" : "none"
              },
              onClick: () => {
                if (["TT", "TP", "P", "Y"].includes(data2.confirm_YN)) {
                  console.log("⛔ 클릭 차단 상태", data2.seq, data2.confirm_YN);
                  return;
                }
                console.log("✅ 클릭 허용됨", data2.seq);
                console.log("🔹 confirm_YN:", data2.confirm_YN);
                handleDetailOk(data2);
              }
            }
          )
        ]
      }
    );
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Toast2, { open: toastOpen, children: toastMessage }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Dialog2,
      {
        open,
        onClose,
        style: {
          width: "860px",
          height: "85vh",
          backgroundColor: "black",
          color: "white",
          overflowX: "hidden"
        },
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { padding: "1rem" }, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "div",
            {
              style: {
                display: "flex",
                justifyContent: "flex-start",
                gap: "1.6rem",
                marginBottom: "1rem"
              },
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(
                  "div",
                  {
                    style: {
                      backgroundColor: "black",
                      color: "white",
                      fontSize: "13px",
                      minWidth: "220px"
                    },
                    children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                      "table",
                      {
                        style: {
                          width: "100%",
                          borderCollapse: "collapse",
                          tableLayout: "fixed",
                          border: "1px solid white"
                        },
                        children: /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", { children: Object.entries({
                          Date: data?.WORK_DATE ?? "-",
                          Line: data?.WORK_CENTER ?? "-",
                          Model: data?.MODEL_CD ?? "-",
                          Style: data?.STYLE_CD ?? "-",
                          Material: data?.MATERIAL_CODE ?? "-",
                          Description: data?.MATERIAL_DESCRIPTION ?? "-",
                          SFC: data?.SFC ?? "-",
                          Qty: data?.QUANTITY ?? "-",
                          Size: data?.SIZE_CD ?? "-",
                          "Order No.": data?.ORDER_NUMBER ?? "-",
                          Storage: data?.PUTAWAYSTORAGELOCATION ?? "-"
                        }).map(([key, value]) => /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
                          /* @__PURE__ */ jsxRuntimeExports.jsxs(
                            "td",
                            {
                              style: {
                                width: "100px",
                                fontWeight: "bold",
                                padding: "6px 8px",
                                border: "1px solid white",
                                backgroundColor: "black",
                                color: "white",
                                whiteSpace: "nowrap"
                              },
                              children: [
                                "• ",
                                key
                              ]
                            }
                          ),
                          /* @__PURE__ */ jsxRuntimeExports.jsxs(
                            "td",
                            {
                              style: {
                                padding: "6px 8px",
                                border: "1px solid white",
                                backgroundColor: "black",
                                color: "white",
                                whiteSpace: "nowrap",
                                overflow: "hidden",
                                textOverflow: "ellipsis"
                              },
                              children: [
                                ": ",
                                value
                              ]
                            }
                          )
                        ] }, key)) })
                      }
                    )
                  }
                ),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { textAlign: "center", marginBottom: "1rem" }, children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    Text2,
                    {
                      style: {
                        fontSize: "3rem",
                        color: "white",
                        fontWeight: "bold",
                        marginTop: "-10px",
                        marginBottom: "0.5rem"
                      },
                      children: t2("dialog.confirm.title")
                    }
                  ),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "div",
                    {
                      style: {
                        display: "flex",
                        justifyContent: "center",
                        gap: "1.5rem",
                        marginBottom: "1.7rem"
                      },
                      children: filterOptions.map(({ key, label }) => {
                        const isChecked = checkedStates[key];
                        const backgroundColor = isChecked ? key === "completed" ? "limegreen" : key === "notStarted" ? "#d3d3d3" : "dodgerblue" : "#444";
                        return /* @__PURE__ */ jsxRuntimeExports.jsxs(
                          "label",
                          {
                            style: {
                              display: "flex",
                              alignItems: "center",
                              gap: "8px",
                              backgroundColor,
                              padding: "18px 15px",
                              borderRadius: "8px",
                              color: "white",
                              fontSize: "1.5rem",
                              cursor: "pointer",
                              border: isChecked ? "2px solid cyan" : "2px solid transparent",
                              transition: "border 0.2s, background-color 0.2s"
                            },
                            children: [
                              /* @__PURE__ */ jsxRuntimeExports.jsx(
                                "input",
                                {
                                  type: "checkbox",
                                  checked: isChecked,
                                  onChange: (e2) => setCheckedStates((prev) => ({
                                    ...prev,
                                    [key]: e2.target.checked
                                  })),
                                  style: {
                                    transform: "scale(1.8)",
                                    cursor: "pointer",
                                    width: "20px",
                                    height: "20px",
                                    accentColor: "cyan"
                                  }
                                }
                              ),
                              label
                            ]
                          },
                          key
                        );
                      })
                    }
                  ),
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", justifyContent: "center", gap: "0.5rem" }, children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                      Button2,
                      {
                        icon: saveIcon,
                        className: "detail-button",
                        onClick: handleSaveDetail,
                        disabled: !canSaveDetail,
                        children: t2("button.saveDetail")
                      }
                    ),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(
                      Button2,
                      {
                        icon: saveIcon,
                        className: "detail-button",
                        onClick: handleSaveAll,
                        disabled: !canSaveAll,
                        children: t2("button.saveAll")
                      }
                    ),
                    /* @__PURE__ */ jsxRuntimeExports.jsx(Button2, { icon: "decline", className: "detail-button detail-button-danger", onClick: onClose, children: t2("button.close") })
                  ] })
                ] })
              ]
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              style: {
                display: "flex",
                flexDirection: "column",
                gap: `${ROW_GAP_PX}px`,
                // ✅ 화면에 정확히 4행만 보이도록 높이 고정
                height: `${ROWS_PER_PAGE * CARD_ROW_HEIGHT + (ROWS_PER_PAGE - 1) * ROW_GAP_PX}px`,
                overflow: "hidden"
                // 넘치면 숨김 (스크롤 없음)
              },
              children: rowsByColumns.map((row, rowIndex) => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { display: "flex", justifyContent: "space-between", gap: "1rem" }, children: row.map((data2, colIndex) => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { flex: 1, minWidth: 0, overflow: "hidden" }, children: data2 ? cardBlock(data2) : /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { height: `${CARD_ROW_HEIGHT}px` } }) }, colIndex)) }, rowIndex))
            }
          ),
          cardData.length > itemsPerPage && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { marginTop: "1rem", textAlign: "center" }, children: Array.from({ length: totalPages }).map((_2, idx) => {
            const pageNum = idx + 1;
            return /* @__PURE__ */ jsxRuntimeExports.jsx(
              Button2,
              {
                onClick: () => setCurrentPage(pageNum),
                style: {
                  margin: "0 8px",
                  backgroundColor: currentPage === pageNum ? "cyan" : "#222",
                  color: "white",
                  borderRadius: "8px",
                  fontWeight: "bold"
                },
                children: pageNum
              },
              pageNum
            );
          }) })
        ] })
      }
    )
  ] });
}
function E_ScanOutgoing_Detail_N({ open, onClose, data, onConfirm, plant_cd, work_date }) {
  const [cardData, setCardData] = reactExports.useState([]);
  const originalCardDataRef = reactExports.useRef([]);
  const [toastMessage, setToastMessage] = reactExports.useState("");
  const [toastOpen, setToastOpen] = reactExports.useState(false);
  const [currentPage, setCurrentPage] = reactExports.useState(1);
  const [isSfcMode, setIsSfcMode] = reactExports.useState(false);
  const [minValidSfc, setMinValidSfc] = reactExports.useState(null);
  const orderedSfcListRef = reactExports.useRef([]);
  const stableSfc = reactExports.useMemo(() => {
    return typeof data?.SFC === "string" ? data.SFC : "";
  }, [data]);
  const [localIp, setLocalIp] = reactExports.useState("");
  const [externalIp, setExternalIp] = reactExports.useState("");
  const split2 = (s2) => {
    const [a3, b3] = String(s2).split("\\n");
    return { a: a3 ?? s2, b: b3 ?? "" };
  };
  const filterOptions = [
    { key: "all", label: t2("filter.all") },
    { key: "notStarted", label: t2("filter.notStarted") },
    { key: "completed", label: t2("filter.completed") }
  ];
  const [checkedStates, setCheckedStates] = reactExports.useState({
    all: false,
    notStarted: false,
    completed: false
  });
  const COLUMN_COUNT = 2;
  const ROWS_PER_PAGE = 4;
  const columnCount = COLUMN_COUNT;
  const itemsPerPage = COLUMN_COUNT * ROWS_PER_PAGE;
  const showToast = (msg) => {
    setToastMessage(msg);
    setToastOpen(true);
    setTimeout(() => setToastOpen(false), 3e3);
  };
  const filteredCardData = reactExports.useMemo(() => {
    const { all: all3, notStarted, completed } = checkedStates;
    const isInitial = !all3 && !notStarted && !completed;
    if (isInitial || all3) return cardData;
    return cardData.filter((card) => {
      const isConfirmed = card.confirm_YN === "P";
      if (notStarted && !isConfirmed) return true;
      if (completed && isConfirmed) return true;
      return false;
    });
  }, [cardData, checkedStates]);
  const paginatedData = [...filteredCardData].filter((x2) => x2.seq != null).sort((a3, b3) => {
    const aHasProd = !!a3.prod_dt;
    const bHasProd = !!b3.prod_dt;
    if (aHasProd !== bHasProd) {
      return aHasProd ? 1 : -1;
    }
    return a3.seq - b3.seq;
  }).slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);
  const paddedData = [...paginatedData];
  while (paddedData.length < itemsPerPage) {
    paddedData.push(null);
  }
  const rowsByColumns = Array.from(
    { length: Math.ceil(paddedData.length / columnCount) },
    (_2, rowIndex) => paddedData.slice(rowIndex * columnCount, rowIndex * columnCount + columnCount)
  );
  const totalPages = Math.ceil(filteredCardData.length / itemsPerPage);
  reactExports.useEffect(() => {
    const fetchIp = async () => {
      try {
        const ax = await getAxios();
        const { data: data2 } = await ax.get("/api/get-ip", {
          headers: { Accept: "application/json" }
        });
        const local = String(data2?.localIp ?? "");
        const external = String(data2?.externalIp ?? "");
        setLocalIp(local);
        setExternalIp(external);
        console.log(t2("app.log.ip.local", { ip: local }));
        console.log(t2("app.log.ip.external", { ip: external }));
      } catch (err) {
        const status = err?.response?.status;
        const body = err?.response?.data;
        console.error("❌ IP 조회 실패", status ? `status=${status}` : "", body ?? err?.message ?? err);
        setLocalIp("");
        setExternalIp("");
      }
    };
    fetchIp();
  }, []);
  reactExports.useEffect(() => {
    if (!open || !data) return;
    const loadData = async () => {
      try {
        const ax = await getAxios();
        const quantity = Number(data.QUANTITY || 0);
        const sfc = String(data.SFC || "").slice(0, 128);
        const fullCount = Math.floor(quantity / 12);
        const remainder = quantity % 12;
        const generatedCards = [];
        for (let i3 = 0; i3 < fullCount; i3++) {
          generatedCards.push({
            seq: i3 + 1,
            qty: 12,
            input_dt: "",
            prod_dt: "",
            confirm_YN: "N",
            flag: "ACTIVE",
            sfc,
            q_sfc: sfc,
            mappedSFC: sfc,
            operation: "",
            resource: ""
          });
        }
        if (remainder > 0) {
          generatedCards.push({
            seq: fullCount + 1,
            qty: remainder,
            input_dt: "",
            prod_dt: "",
            confirm_YN: "N",
            flag: "ACTIVE",
            sfc,
            q_sfc: sfc,
            mappedSFC: sfc,
            operation: "",
            resource: ""
          });
        }
        const res = await ax.get("/api/mssql/escan-detail-v2", {
          params: {
            plant_cd,
            sfc_cd: sfc,
            work_center: data.WORK_CENTER
          }
        });
        const savedScans = res.data;
        for (const scan of savedScans) {
          const seqNum = Number(scan.SEQ);
          const idx = generatedCards.findIndex((card2) => card2.seq === seqNum);
          if (idx === -1) continue;
          const card = generatedCards[idx];
          card.prod_dt = scan.PROD_DT ?? "";
          card.qty = scan.PCARD_QTY ?? card.qty;
          const hasProd = !!card.prod_dt;
          card.confirm_YN = hasProd ? "P" : " ";
        }
        setCardData(generatedCards);
        originalCardDataRef.current = JSON.parse(JSON.stringify(generatedCards));
        setIsSfcMode(false);
        setMinValidSfc(sfc);
        orderedSfcListRef.current = [sfc];
        console.log("✅ 최종 카드 리스트:", generatedCards);
      } catch (err) {
        console.error("❌ 카드 생성 실패:", err);
      }
    };
    loadData();
  }, [open, data?.ORDER_NUMBER]);
  const getColorByStatus = (item) => {
    switch (item.confirm_YN) {
      case "P":
        return "limegreen";
      case "T":
        return "orange";
      case "N":
        return "white";
      default:
        return "#f5f5f5";
    }
  };
  const getImageByStatus = (item) => {
    switch (item.confirm_YN) {
      case "P":
        return okGreen;
      case "T":
        return okOrange;
      case "N":
        return okWhite;
      default:
        return okWhite;
    }
  };
  const handleDetailOk = (clickedCard) => {
    console.log("🟠 카드 클릭됨:", clickedCard.seq, clickedCard.confirm_YN);
    setCardData(
      (prev) => prev.map((item) => {
        if (item.seq !== clickedCard.seq) return item;
        console.log("🔄 상태 변경 전:", item.confirm_YN);
        if (item.confirm_YN === "N") {
          console.log("🟠 상태 변경: N → T");
          return { ...item, confirm_YN: "T" };
        }
        if (item.confirm_YN === "T") {
          console.log("⚪ 상태 변경: T → N");
          return { ...item, confirm_YN: "N" };
        }
        return item;
      })
    );
  };
  const getModifiedRows = (original, current) => {
    return current.map((cur, idx) => {
      const ori = original[idx];
      const isChanged = cur.confirm_YN !== ori.confirm_YN;
      return {
        ...cur,
        SCAN_TYPE: "P",
        _changed: isChanged && (cur.confirm_YN === "P" || cur.confirm_YN === "T")
      };
    }).filter((item) => item._changed).map(({ _changed, ...rest }) => rest);
  };
  const filteredModifiedCards = reactExports.useMemo(() => {
    const modified = getModifiedRows(originalCardDataRef.current, cardData);
    return modified.filter(
      (card) => filteredCardData.some((f4) => f4.seq === card.seq)
    );
  }, [cardData, filteredCardData]);
  const filteredUpdatableCards = reactExports.useMemo(() => {
    return filteredCardData.filter(
      (card) => card.confirm_YN === "N" && card.flag !== "FINISH"
    );
  }, [filteredCardData]);
  const isSingleSfc = orderedSfcListRef.current.length <= 1;
  const isClickable = isSingleSfc || stableSfc !== "" && stableSfc === minValidSfc;
  const isSfcBlocked = isSfcMode && !!minValidSfc && data.SFC !== minValidSfc;
  const canSaveDetail = filteredModifiedCards.length > 0 && !isSfcBlocked && isClickable;
  const canSaveAll = filteredUpdatableCards.length > 0 && !isSfcBlocked && isClickable;
  const isCardClickable = (card) => {
    if (!isSfcMode) return true;
    if (!data?.SFC) return false;
    if (minValidSfc && data.SFC !== minValidSfc) return false;
    return card.mappedSFC === data.SFC;
  };
  const callSapStartApi = async (payload) => {
    try {
      const ax = await getAxios();
      console.log("🚀 [SAP START] 호출 준비 시작");
      if (!getAccessToken()) {
        console.warn("🔒 토큰 없음 → 토큰 새로 발급 시도 중...");
        await refreshToken();
      }
      const token = getAccessToken();
      if (!token) {
        console.error("❌ SAP 토큰 발급 실패 → API 호출 중단");
        return;
      }
      console.log("📡 [SAP START] 실제 호출 시작");
      console.log("🧾 호출 URL:", SAP_CONFIG.SFC_START_API);
      console.log("📦 요청 Payload:", JSON.stringify(payload, null, 2));
      console.log("🔑 토큰 일부:", token.slice(0, 10) + "...");
      const res = await ax.post("/api/sap-start", payload);
      console.log("✅ SAP 응답 수신 성공:", res.data);
    } catch (err) {
      const apiErr = err.response?.data?.error;
      console.error("❌ SAP 호출 오류:", apiErr?.message || err.message);
      console.error("📥 오류 응답 전체:", err.response?.data || "(응답 없음)");
    }
  };
  const handlePostConfirm_V2 = async (cardsToSave) => {
    try {
      const ax = await getAxios();
      await ax.post("/api/mssql/escan-detail-save_v2", {
        list: cardsToSave
      });
      setCardData(
        (prev) => prev.map(
          (item) => cardsToSave.some((c2) => c2.SEQ === item.seq.toString()) ? { ...item, confirm_YN: "Y" } : item
        )
      );
    } catch (err) {
      console.error("❌ 저장 중 오류 발생:", err);
      showToast(t2("toast.saveFailed"));
    }
  };
  const fetchSfcDetail2 = async (plant_cd2, sfc) => {
    try {
      const ax = await getAxios();
      const res = await ax.get("/api/sap/sfc-detail", {
        params: { plant_cd: plant_cd2, sfc }
      });
      return res.data;
    } catch (err) {
      console.error("❌ SAP SFC 상태 조회 실패:", err.response?.data || err.message);
      return null;
    }
  };
  const fetchPostedGoodsReceipts2 = async (plant, order, sfc, material, transactionIds, maxRetries = 30, delayMs = 1e3) => {
    const ax = await getAxios();
    for (let attempt = 1; attempt <= maxRetries; attempt++) {
      try {
        const res = await ax.get("/api/sap/goodsreceipts", {
          params: { plant, order, sfc, material }
        });
        const data2 = res.data;
        const result = Array.isArray(data2) ? data2 : Array.isArray(data2?.content) ? data2.content : Array.isArray(data2?.lineItems) ? data2.lineItems : [];
        const postedOnly = data2.filter((d2) => d2.status === "POSTED_TO_TARGET_SYS");
        if (transactionIds.length > 0) {
          const matched = postedOnly.filter(
            (d2) => transactionIds.includes(d2.transactionId?.trim?.())
          );
          if (matched.length > 0) {
            console.log(`✅ TxID 매칭된 입고 데이터 발견 (시도 ${attempt}회)`);
            console.table(
              matched.map((d2) => ({
                order: d2.order,
                sfc: d2.sfc,
                txId: d2.transactionId,
                qty: d2.quantityInBaseUnit?.value
              }))
            );
            return postedOnly;
          }
          console.log(`⏳ TxID 매칭 결과 없음 (시도 ${attempt}회) → 재시도`);
          await new Promise((res2) => setTimeout(res2, delayMs));
        } else {
          console.log(`✅ 전체 POSTED 입고 조회 (TxID 없음, ${postedOnly.length}건)`);
          return postedOnly;
        }
      } catch (err) {
        console.warn(`🚨 조회 실패 (시도 ${attempt}회):`, err);
        await new Promise((res) => setTimeout(res, delayMs));
      }
    }
    console.warn("❌ 최대 재시도 초과. TxID 일치 입고 데이터 확인 불가");
    return [];
  };
  const fetchStandardValueObject = async ({
    plant,
    workCenter,
    operationActivity,
    operationActivityVersion,
    object,
    objectType,
    objectVersion
  }) => {
    try {
      const ax = await getAxios();
      const res = await ax.get("/api/sap/standard-value", {
        params: {
          plant,
          workCenter,
          operationActivity,
          operationActivityVersion,
          object,
          objectType,
          objectVersion
        }
      });
      const resData = res.data;
      if (!resData || !Array.isArray(resData?.standardValueCollectionList)) {
        console.warn("⚠️ SAP 응답에 standardValueCollectionList 없음");
        return null;
      }
      console.log("✅ SAP 표준시간 전체 응답:", resData);
      return resData;
    } catch (err) {
      console.error("❌ SAP StandardValue 조회 실패:", err.response?.data || err.message);
      return null;
    }
  };
  const callSapPostActivityConfirm = async ({
    plant,
    shopOrder,
    sfc,
    operationActivity,
    stepId,
    workCenter,
    activityList
  }) => {
    try {
      const ax = await getAxios();
      const activities = activityList.map((item) => ({
        activityId: item.activityId,
        quantity: item.quantity,
        unitOfMeasure: item.unitOfMeasure,
        // 고정
        isoUnitOfMeasure: item.isoUnitOfMeasure,
        // 고정
        postedBy: item.postedBy,
        postingDateTime: item.postingDateTime
      }));
      const payload = {
        plant,
        shopOrder,
        sfc,
        operationActivity,
        stepId,
        workCenter,
        finalConfirmation: true,
        allowPostingsAfterOperationActivityComplete: true,
        activities
      };
      const res = await ax.post("/api/sap-post-activity-confirm", payload);
      console.log("✅ Activity Confirm 성공:", res.data);
    } catch (err) {
      console.error("❌ Activity Confirm 실패:", err.response?.data || err.message);
    }
  };
  const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));
  const callSapPostGoodsReceipt = async ({
    plant,
    order,
    postedBy,
    lineItems
  }) => {
    console.log("🚀 [SAP GoodsReceipt] 호출 시작");
    console.log("📦 요청 Payload:", {
      plant,
      order,
      postedBy,
      lineItems
    });
    const payload = {
      plant,
      order,
      postedBy,
      lineItems
    };
    const url = "/api/sap-goods-receipt";
    let attempt = 0;
    while (true) {
      try {
        const ax = await getAxios();
        console.log(`🚀 [SAP GoodsReceipt] 시도 ${attempt + 1}회`);
        const res = await ax.post(url, payload, {
          headers: {
            "Content-Type": "application/json"
          }
        });
        console.log("✅ SAP GoodsReceipt 호출 성공:", res.data);
        return res.data;
      } catch (err) {
        const responseData = err?.response?.data || {};
        console.error(`❌ 호출 실패 (${attempt + 1}회차):`, responseData.error || err.message);
        attempt++;
        if (attempt >= 10) {
          console.warn("⚠️ 10회 연속 실패 → 2초 후 루프 재시작");
          attempt = 0;
          await delay(2e3);
        } else {
          await delay(1e3);
        }
      }
    }
  };
  async function buildEpcardInsertList({
    items,
    data: data2,
    plant_cd: plant_cd2,
    localIp: localIp2
  }) {
    const opt = await window.config?.getPasscardOptions?.().catch(() => void 0);
    const print = opt ?? {
      deviceName: "BIXOLON SRP-330II",
      preview: false,
      widthMicrons: 79e3,
      heightMicrons: 54e3,
      previewCountAsPrint: true
    };
    const previewFlag = !!print.preview;
    const nz = (v2, d2) => v2 ?? d2;
    const sTrim = (v2) => String(v2 ?? "").trim();
    const normalizeDaySeq3 = (v2) => {
      const s2 = sTrim(v2).toUpperCase();
      const base = s2.endsWith("H") ? s2.slice(0, -1) : s2;
      const n2 = Math.max(0, Math.min(99, Number(base) || 0));
      return `${String(n2).padStart(2, "0")}H`;
    };
    const toSeq3 = (v2) => String(Math.max(0, Math.min(999, Number(v2) || 0))).padStart(3, "0");
    const confirmed = (items || []).filter((it2) => sTrim(it2?.confirm_YN).toUpperCase() === "P");
    const seen2 = /* @__PURE__ */ new Set();
    const list = confirmed.map((it2) => {
      const resourceCdSrc0 = sTrim(data2?.RESOURCE_CD);
      const looksLikeWC = resourceCdSrc0.length <= 6 && !resourceCdSrc0.includes("-");
      const RESOURCE_CD = looksLikeWC ? "C200-IPIPI-01" : resourceCdSrc0 || "C200-IPIPI-01";
      const NEXT_RESOURCE_CD = data2?.NEXT_RESOURCE_CD || "C200-IPIPU-03";
      const seq3 = toSeq3(it2?.seq);
      const styleCd0 = sTrim(data2?.STYLE_CD);
      const materialCode0 = sTrim(data2?.MATERIAL_CODE ?? data2?.MATERIAL);
      const styleFromMat = materialCode0 ? materialCode0.split("-")[0] : "";
      const STYLE_CD = styleCd0 || styleFromMat || "NA";
      const qtyInt = Math.max(0, Math.floor(Number(it2?.qty) || 0));
      const row = {
        ORDER_NUMBER: sTrim(data2?.ORDER_NUMBER),
        NEXT_ORDER_NUMBER: sTrim(data2?.NEXT_ORDER_NUMBER ?? ""),
        STYLE_CD,
        STYLE_NAME: nz(data2?.MATERIAL_DESCRIPTION, materialCode0 || "STYLE"),
        SIZE_CD: sTrim(data2?.SIZE_CD || "N/A"),
        RESOURCE_CD,
        NEXT_RESOURCE_CD,
        PCARD_QTY: qtyInt,
        PCARD_SEQ: Number(seq3),
        // 내부 계산용 숫자 OK
        MATERIAL_CODE: materialCode0
      };
      const ctx = {
        PLANT_CD: sTrim(plant_cd2 ?? "C200"),
        BD_CD: nz(data2?.BD_CD, "IP"),
        OP_CD: nz(data2?.OP_CD, "IPI"),
        OP_NAME: nz(data2?.OP_NAME, "IP Injection"),
        DAY_SEQ: normalizeDaySeq3(data2?.DAY_SEQ ?? "1H"),
        DEVICE_ID: nz(data2?.DEVICE_ID, "POP_DEVICE_01"),
        USER_IP: sTrim(localIp2 || "0.0.0.0"),
        SFC_CD: sTrim(data2?.SFC ?? ""),
        WORK_CENTER: nz(data2?.WORK_CENTER, resourceCdSrc0 || "N/A"),
        PART_NAME: nz(data2?.PART_NAME, "MIDSOLE"),
        GENDER_CD: nz(data2?.GENDER_CD, "WO")
      };
      const { insert } = buildPassCardPayload(row, ctx);
      insert.DAY_SEQ = normalizeDaySeq3(insert.DAY_SEQ ?? ctx.DAY_SEQ ?? "1H");
      insert.PCARD_SEQ = toSeq3(insert.PCARD_SEQ ?? seq3);
      insert.BAR_KEY = insert.BAR_KEY ? String(insert.BAR_KEY).trim().slice(0, 20) : "";
      const dedupKey = [
        insert.PLANT_CD,
        insert.SFC_CD,
        insert.BAR_KEY,
        insert.PCARD_SEQ,
        insert.ORDER_NUMBER
      ].join("|");
      if (seen2.has(dedupKey)) return null;
      seen2.add(dedupKey);
      return insert;
    }).filter(Boolean);
    return { list, print, previewFlag };
  }
  const handleSaveDetail = async () => {
    const changed = getModifiedRows(originalCardDataRef.current, cardData);
    const autoPromoted = changed.map(
      (item) => item.confirm_YN === "T" ? { ...item, confirm_YN: "P" } : item
    );
    const filtered = autoPromoted.filter((item) => item.confirm_YN === "P");
    const targetSeqs = new Set(filtered.map((it2) => String(it2.seq)));
    setCardData(
      (prev) => prev.map(
        (item) => targetSeqs.has(String(item.seq)) ? { ...item, isSaving: true } : item
      )
    );
    if (filtered.length === 0) return showToast(t2("toast.noChanges"));
    const rawSfc = String(data?.SFC || "").slice(0, 128);
    if (!rawSfc) {
      console.error("❌ 유효하지 않은 SFC: null 또는 빈 문자열입니다.");
      showToast(t2("toast.missingSfc"));
      setCardData(
        (prev) => prev.map(
          (item) => targetSeqs.has(String(item.seq)) ? { ...item, isSaving: false } : item
        )
      );
      return;
    }
    try {
      const ax = await getAxios();
      const payload = filtered.map((item) => ({
        PLANT_CD: plant_cd,
        WORK_CENTER: data.WORK_CENTER,
        ORDER_NUMBER: data.ORDER_NUMBER,
        SEQ: item.seq.toString(),
        MATERIAL_CODE: data.MATERIAL_CODE,
        SIZE_CD: data.SIZE_CD,
        ITPO_TYPE: item.confirm_YN,
        // 여기도 거의 항상 "P"
        SFC: rawSfc,
        SCAN_TYPE: "P",
        // 고정
        PCARD_QTY: item.qty,
        USER_IP: localIp || "0.0.0.0",
        DEVICE_ID: "POP_DEVICE_01"
      }));
      const payloadWithBothTypes = [
        ...payload,
        ...payload.map((p3) => ({
          ...p3,
          SCAN_TYPE: "T"
        }))
      ];
      await handlePostConfirm_V2(payloadWithBothTypes);
      onConfirm?.(payloadWithBothTypes);
      try {
        const { list, print, previewFlag } = await buildEpcardInsertList({
          items: filtered,
          data,
          plant_cd,
          localIp
        });
        if (list.length === 0) {
          console.info("[PASSCARD] no rows to insert/print");
          setCardData(
            (prev) => prev.map(
              (item) => targetSeqs.has(String(item.seq)) ? { ...item, isSaving: false } : item
            )
          );
          return;
        }
        const bridge = window?.printBridge?.passcards;
        const ipcInvoke = window?.ipc?.invoke ?? window?.electron?.ipcRenderer?.invoke;
        const on = window?.ipc?.on ?? window?.electron?.ipcRenderer?.on;
        const off = window?.ipc?.off ?? window?.electron?.ipcRenderer?.removeListener;
        const batchId = `pcard-${Date.now()}-${Math.random().toString(36).slice(2, 7)}`;
        const jobs = list.map((j2) => ({
          PLANT_CD: String(j2.PLANT_CD ?? "C200").slice(0, 4),
          SFC_CD: String(j2.SFC_CD ?? "").slice(0, 128),
          ORDER_NUMBER: String(j2.ORDER_NUMBER ?? "").slice(0, 10),
          BAR_KEY: String(j2.BAR_KEY ?? "").slice(0, 20),
          PCARD_SEQ: String(j2.PCARD_SEQ ?? "").slice(0, 20),
          NEXT_ORDER_NUMBER: String(j2.NEXT_ORDER_NUMBER ?? "").slice(0, 10),
          SIZE: String(j2.SIZE_CD ?? j2.SIZE ?? "").slice(0, 8),
          QTY: Number(j2.PCARD_QTY ?? j2.QTY ?? 0),
          WORK_CENTER: String(j2.WORK_CENTER ?? "").slice(0, 50),
          CREATE_DATE: String(j2.CREATE_DATE ?? "").slice(0, 20),
          PRINT_DT: String(j2.PRINT_DT ?? "").slice(0, 20)
        }));
        const options = {
          deviceName: print.deviceName,
          preview: !!previewFlag,
          widthMicrons: print.widthMicrons,
          heightMicrons: print.heightMicrons
        };
        const withTimeout = (p3, ms, tag2) => Promise.race([
          p3,
          new Promise((_2, rej) => setTimeout(() => rej(new Error(`timeout: ${tag2}`)), ms))
        ]);
        const normalizeUpsertResp2 = (data2, expected) => {
          let inserted = Number(data2?.insertedCount ?? data2?.inserted ?? 0);
          let updated = Number(data2?.updatedCount ?? data2?.updated ?? 0);
          let ack = inserted + updated;
          const ra = data2?.rowsAffected ?? data2?.rowCount;
          if (!ack) {
            if (Array.isArray(ra)) ack = Number(ra[0] ?? 0);
            else if (typeof ra === "number") ack = ra;
          }
          if (!ack && typeof data2?.message === "string") {
            const m2 = data2.message.match(/(\d+)\s*건/);
            if (m2) ack = Number(m2[1]);
          }
          const okFlag = data2?.ok === true;
          const ok = okFlag || ack >= expected;
          return { ok, ack, inserted, updated, raw: data2 };
        };
        let upsertOK = false;
        try {
          const ins = await ax.post("/api/mssql/epcard/print-bulk", { list });
          const norm = normalizeUpsertResp2(ins?.data, list.length);
          upsertOK = !!norm.ok;
          if (!upsertOK) {
            console.error(`[PASSCARD] upsert failed: ack=${norm.ack}/${list.length}`, norm.raw);
          }
        } catch (e2) {
          console.error("❌ PASSCARD upsert error:", e2);
          upsertOK = false;
        }
        if (!upsertOK) {
          showToast(t2("toast.bulkFailed"));
          setCardData(
            (prev) => prev.map(
              (item) => targetSeqs.has(String(item.seq)) ? { ...item, isSaving: false } : item
            )
          );
          return;
        }
        console.info("[PASSCARD] DB upsert(PENDING) OK. now printing...");
        try {
          if (typeof bridge === "function") {
            await withTimeout(bridge(jobs, options), 15e3, "bridge");
          } else if (ipcInvoke) {
            await withTimeout(
              ipcInvoke("print:passcards", { jobs, options, batchId }),
              15e3,
              "ipc"
            );
          } else {
            throw new Error("no print bridge or ipc.invoke available (preload missing?)");
          }
          console.info("[PASSCARD] print dispatched (FAST)");
        } catch (printErr) {
          console.error("❌ PASSCARD print error:", printErr);
          showToast(t2("toast.printFailed"));
          setCardData(
            (prev) => prev.map(
              (item) => targetSeqs.has(String(item.seq)) ? { ...item, isSaving: false } : item
            )
          );
          return;
        } finally {
          setTimeout(() => {
            off?.("passcard:job-result", () => {
            });
            off?.("passcard:batch-done", () => {
            });
          }, 9e4);
        }
      } catch (e2) {
        console.error("❌ PASSCARD 벌크 저장/출력 실패:", e2);
        setCardData(
          (prev) => prev.map(
            (item) => targetSeqs.has(String(item.seq)) ? { ...item, isSaving: false } : item
          )
        );
        showToast(t2("toast.processError"));
        return;
      }
      const sfcDetail = await fetchSfcDetail2(plant_cd, String(data.SFC).slice(0, 128));
      ;
      const bomCode = sfcDetail?.bom?.bom;
      const rawBomType = sfcDetail?.bom?.type;
      const bomType = rawBomType === "SHOPORDERBOM" ? "SHOP_ORDER" : rawBomType === "MASTERBOM" ? "MASTER" : rawBomType === "SFCBOM" ? "SFC" : void 0;
      if (!bomCode || !bomType) {
        console.warn("❗ BOM 정보가 없거나 타입 변환 실패");
        return showToast(t2("toast.noBomInfo"));
      }
      const operation = sfcDetail?.steps?.[0]?.operation?.operation;
      const step = sfcDetail?.steps?.[0];
      const stepId = step?.stepId;
      const routing = step?.stepRouting?.routing;
      const resource = step?.resource;
      const operation_Version = step?.operation?.version;
      const totalQuantity = Number(sfcDetail.quantity ?? 0);
      if (!operation) {
        console.error("❌ operation 정보를 가져올 수 없습니다.");
        throw new Error("SFC의 operation 정보를 확인할 수 없습니다.");
      }
      let components = [];
      let baseUnitOfMeasure = "";
      let bomVersion = "";
      let resolvedBomCode = "";
      try {
        const ax2 = await getAxios();
        const bomResp = await ax2.get("/api/sap/bom-detail", {
          params: {
            plant: plant_cd,
            bom: bomCode,
            type: bomType
          }
        });
        const bomData = Array.isArray(bomResp.data) ? bomResp.data[0] : bomResp.data;
        console.log("📦 [RAW_BOM_DATA]", JSON.stringify(bomData, null, 2));
        baseUnitOfMeasure = bomData?.baseUnitOfMeasure;
        resolvedBomCode = bomData?.bom ?? "";
        bomVersion = bomData?.version ?? "";
        if (!Array.isArray(bomData?.components)) {
          console.warn("❗ BOM components 데이터가 없습니다.");
          return showToast(t2("toast.noBomComponents"));
        }
        components = bomData.components.map((comp) => {
          const component = comp.material?.material ?? "";
          const componentVersion = comp.material?.version ?? "";
          const quantity = comp.quantity;
          const totalQuantity2 = comp.totalQuantity ?? null;
          const unitOfMeasure = comp.unitOfMeasure ?? "";
          const storageLocation = comp.storageLocation ?? "";
          if (!component || !componentVersion || quantity == null) return null;
          return {
            component,
            componentVersion,
            quantity,
            totalQuantity: totalQuantity2,
            unitOfMeasure,
            storageLocation
          };
        }).filter((c2) => c2 !== null);
        console.log("🧩 BOM에서 추출된 components:", components);
      } catch (err) {
        console.error("❌ BOM Detail 조회 실패", err);
        return showToast(t2("toast.loadBomFailed"));
      }
      const hasAnyInput = cardData.some((c2) => !!c2.prod_dt);
      if (!hasAnyInput) {
        const sapPayload = {
          plant: plant_cd.slice(0, 6),
          operation,
          resource: String(data.WORK_CENTER ?? "").slice(0, 36),
          // quantity: Number(data.QUANTITY ?? 0),
          // quantity: 0,
          sfcs: [String(data.SFC ?? "").slice(0, 128)],
          processLot: ""
        };
        await callSapStartApi(sapPayload);
      }
      const totalQty = filtered.filter((item) => item.confirm_YN === "P").reduce((sum, item) => sum + Number(item.qty || 0), 0);
      const usedSeqList = filtered.filter((item) => item.confirm_YN === "P").map((item) => item.seq);
      let sapPosted = false;
      for (const item of filtered) {
        if (item.confirm_YN === "P" && !sapPosted) {
          console.log("✅ GoodsReceipt 진입 (합산 처리)");
          const rawSfc2 = String(data.SFC ?? "").slice(0, 128);
          const workDate = work_date;
          const storageLocation = String(data.PUTAWAYSTORAGELOCATION ?? "").slice(0, 10);
          const orderNumber = String(data.ORDER_NUMBER ?? "").slice(0, 12);
          const materialCode = data.MATERIAL_CODE;
          const materialVersion = data.MATERIAL_VERSION || "ERP001";
          let uomData = null;
          try {
            const ax2 = await getAxios();
            const uomResp = await ax2.get("/api/sap/unit-codes", {
              params: { unitCode: baseUnitOfMeasure }
            });
            const matched = Array.isArray(uomResp.data) ? uomResp.data[0] : uomResp.data;
            if (!matched || !matched.unitCode) throw new Error("단위코드 조회 실패");
            uomData = matched;
          } catch (err) {
            console.error("❌ 단위코드 조회 실패:", err);
            return showToast(t2("toast.loadUomFailed"));
          }
          const getPreferredCommercialCode = (codes = []) => {
            const preferredLanguages = ["ko", "en"];
            for (const lang of preferredLanguages) {
              const match = codes.find((c2) => c2.language === lang);
              if (match?.commercialCode) return match.commercialCode;
            }
            return codes[0]?.commercialCode || baseUnitOfMeasure;
          };
          const unitOfMeasure = {
            commercialUnitOfMeasure: getPreferredCommercialCode(uomData?.commercialCodes),
            internalUnitOfMeasure: baseUnitOfMeasure,
            isoUnitOfMeasure: uomData?.isoCode || baseUnitOfMeasure
          };
          const response = await callSapPostGoodsReceipt({
            plant: plant_cd,
            order: orderNumber,
            postedBy: "dmc_services_user",
            lineItems: [
              {
                material: materialCode,
                materialVersion,
                postingDate: workDate,
                quantity: {
                  unitOfMeasure,
                  value: totalQty
                },
                sfc: rawSfc2,
                storageLocation
              }
            ]
          });
          const transactionIds = Array.isArray(response?.lineItems) ? response.lineItems.filter((item2) => item2?.transactionId && !item2?.hasError).map((item2) => item2.transactionId) : [];
          if (!transactionIds.length) {
            console.error("❌ 유효한 트랜잭션 ID 없음 → 조회 중단");
            return;
          }
          try {
            const allPostedReceipts = await fetchPostedGoodsReceipts2(
              plant_cd,
              orderNumber,
              rawSfc2,
              materialCode,
              transactionIds
            );
            const postedMatchedTxIds = new Set(
              allPostedReceipts.filter((gr) => transactionIds.includes(gr.transactionId?.trim?.())).map((gr) => gr.transactionId?.trim?.())
            );
            const postedQty = allPostedReceipts.filter((gr) => !postedMatchedTxIds.has(gr.transactionId?.trim?.())).reduce((sum, gr) => sum + Number(gr.quantityInBaseUnit?.value ?? 0), 0);
            const currentProcessingQty = allPostedReceipts.filter((gr) => postedMatchedTxIds.has(gr.transactionId?.trim?.())).reduce((sum, gr) => sum + Number(gr.quantityInBaseUnit?.value ?? 0), 0);
            const totalDone = Math.round((postedQty + currentProcessingQty) * 1e3) / 1e3;
            const isFinal = Math.abs(totalQuantity - totalDone) < 1e-3;
            console.log("📦 입고 누적 수량 체크");
            console.log(`   🔹 총 수량 (SFC 기준): ${totalQuantity}`);
            console.log(`   🔹 누적 입고 수량 (POSTED): ${postedQty}`);
            console.log(`   🔹 현재 처리 중 수량 (TxID 매칭): ${currentProcessingQty}`);
            console.log(`   🔹 누적 합계: ${totalDone}`);
            console.log(`   🔹 잔량: ${Math.max(0, totalQuantity - totalDone)}`);
            console.log(`   🔹 Final 여부: ${isFinal ? "✅ Final" : "⏳ 미완료"}`);
            try {
              const ax2 = await getAxios();
              const qtyConfirmResp = await ax2.post("/api/sap-post-qty-confirm", {
                plant: plant_cd,
                shopOrder: orderNumber,
                sfc: rawSfc2,
                operationActivity: operation,
                workCenter: data.WORK_CENTER,
                yieldQuantity: totalQty,
                yieldQuantityUnit: unitOfMeasure.internalUnitOfMeasure,
                yieldQuantityIsoUnit: unitOfMeasure.isoUnitOfMeasure,
                // isFinalConfirmation: isFinal  2025.10.1
                isFinalConfirmation: false
              });
              console.log("✅ Quantity Confirmation 성공:", qtyConfirmResp.data);
            } catch (qcErr) {
              const err = qcErr;
              console.error("❌ Quantity Confirmation 실패:", err.response?.data || err.message);
            }
            if (isFinal) {
              let standardValueObj = null;
              try {
                standardValueObj = await fetchStandardValueObject({
                  plant: plant_cd,
                  workCenter: data.WORK_CENTER,
                  operationActivity: operation,
                  operationActivityVersion: operation_Version,
                  object: orderNumber,
                  objectType: "SHOP_ORDER_ROUTING",
                  objectVersion: "ERP001"
                });
                console.log("✅ 조회된 Standard Value 전체 구조:", standardValueObj);
              } catch (err) {
                console.error("❌ Standard Value 조회 실패:", err.response?.data || err.message);
              }
              if (!standardValueObj) return;
              const postingDateTime = (/* @__PURE__ */ new Date()).toISOString().replace(/\.\d{3}Z$/, ".000Z");
              const postedBy = "dongil.kang@changshininc.com";
              const activityList = standardValueObj.standardValueCollectionList.map((item2) => ({
                activityId: item2.standardVal,
                quantity: item2.standardValueQuantity?.value || 0,
                unitOfMeasure: item2.standardValueQuantity?.unitOfMeasure?.uom || "S",
                isoUnitOfMeasure: item2.standardValueQuantity?.unitOfMeasure?.internalUom || "S",
                postedBy,
                postingDateTime
              }));
              try {
                await callSapPostActivityConfirm({
                  plant: plant_cd,
                  shopOrder: orderNumber,
                  sfc: data.SFC,
                  operationActivity: operation,
                  stepId: stepId ?? "",
                  workCenter: data.WORK_CENTER,
                  activityList
                });
                console.log("✅ SAP Activity Confirm 성공");
              } catch (err) {
                console.error("❌ SAP Activity Confirm 실패:", err.response?.data || err.message);
              }
            }
          } catch (err) {
            console.error("❌ SFC 상태 확인 또는 SAP 호출 실패:", err);
          }
          try {
            const ax2 = await getAxios();
            console.log("📦 파라미터 확인:", { plant_cd, sfc: rawSfc2, scan_type: item.confirm_YN, seqList: usedSeqList });
            const uploadResp = await ax2.post("/api/mssql/update-upload-yn", {
              plant_cd,
              sfc: rawSfc2,
              scan_type: item.confirm_YN,
              seqList: usedSeqList
            });
            console.log("✅ MSSQL 업로드 상태 업데이트 성공:", uploadResp.data);
          } catch (uploadErr) {
            console.error("❌ MSSQL 업로드 상태 업데이트 실패:", uploadErr);
          }
          sapPosted = true;
        }
      }
      setCardData(
        (prev) => prev.map(
          (item) => targetSeqs.has(String(item.seq)) ? { ...item, isSaving: false } : item
        )
      );
      onClose();
    } catch (err) {
      console.error("❌ 전체 SaveDetail 처리 오류:", err);
      showToast(t2("toast.processError"));
      setCardData(
        (prev) => prev.map(
          (item) => targetSeqs.has(String(item.seq)) ? { ...item, isSaving: false } : item
        )
      );
    }
  };
  const handleSaveAll = async () => {
    const currentSfc = minValidSfc;
    const rawSfc = String(data?.SFC || "").slice(0, 128);
    const updatedData = cardData.map((item) => {
      if (item.mappedSFC === currentSfc) {
        if (item.confirm_YN === "N") return { ...item, confirm_YN: "T" };
        if (item.confirm_YN === "T") return { ...item, confirm_YN: "P" };
      }
      return item;
    });
    setCardData(updatedData);
    const filtered = updatedData.filter(
      (x2) => x2.mappedSFC === currentSfc && (!x2.prod_dt || x2.prod_dt.trim() === "") && ["T", "P"].includes(x2.confirm_YN) && x2.flag !== "FINISH"
    );
    if (filtered.length === 0) {
      return showToast(t2("toast.nothingToConfirm"));
    }
    const promoted = filtered.map((item) => ({ ...item, confirm_YN: "P" }));
    const targetSeqs = new Set(promoted.map((p3) => p3.seq));
    setCardData(
      (prev) => prev.map(
        (item) => targetSeqs.has(item.seq) ? { ...item, isSaving: true } : item
      )
    );
    const payloadP = promoted.map((item) => ({
      PLANT_CD: plant_cd,
      WORK_CENTER: data.WORK_CENTER,
      ORDER_NUMBER: data.ORDER_NUMBER,
      SEQ: item.seq.toString(),
      MATERIAL_CODE: data.MATERIAL_CODE,
      SIZE_CD: data.SIZE_CD,
      ITPO_TYPE: item.confirm_YN,
      // "P"
      SFC: rawSfc,
      SCAN_TYPE: "P",
      PCARD_QTY: item.qty,
      USER_IP: localIp || "0.0.0.0",
      DEVICE_ID: "POP_DEVICE_01"
    }));
    const payloadWithBothTypes = [
      ...payloadP,
      ...payloadP.map((p3) => ({ ...p3, SCAN_TYPE: "T" }))
    ];
    const cleanupSavingFlags = () => setCardData(
      (prev) => prev.map(
        (item) => targetSeqs.has(item.seq) ? { ...item, isSaving: false } : item
      )
    );
    try {
      const ax = await getAxios();
      try {
        await handlePostConfirm_V2(payloadWithBothTypes);
        onConfirm?.(payloadWithBothTypes);
      } catch (e2) {
        console.error("❌ handlePostConfirm_V2 실패 (계속 진행):", e2);
      }
      const itemsForPrint = promoted;
      let previewFlag = false;
      if (itemsForPrint.length > 0) {
        const { list, print, previewFlag: pf } = await buildEpcardInsertList({
          items: itemsForPrint,
          data,
          plant_cd,
          localIp
        });
        previewFlag = !!pf;
        const normalizeUpsertResp2 = (data2, expected) => {
          let inserted = Number(data2?.insertedCount ?? data2?.inserted ?? 0);
          let updated = Number(data2?.updatedCount ?? data2?.updated ?? 0);
          let ack = inserted + updated;
          const ra = data2?.rowsAffected ?? data2?.rowCount;
          if (!ack) {
            if (Array.isArray(ra)) ack = Number(ra[0] ?? 0);
            else if (typeof ra === "number") ack = ra;
          }
          if (!ack && typeof data2?.message === "string") {
            const m2 = data2.message.match(/(\d+)\s*건/);
            if (m2) ack = Number(m2[1]);
          }
          const okFlag = data2?.ok === true;
          const ok = okFlag || ack >= expected;
          return { ok, ack, inserted, updated, raw: data2 };
        };
        const ins = await ax.post("/api/mssql/epcard/print-bulk", { list });
        const norm = normalizeUpsertResp2(ins?.data, list.length);
        if (!norm.ok) {
          console.error(
            `[PASSCARD] upsert failed: ack=${norm.ack}/${list.length}`,
            norm.raw
          );
          cleanupSavingFlags();
          showToast(t2("toast.processError"));
          return;
        }
        console.info(
          "[PASSCARD] DB upsert(PENDING) OK. now printing...",
          { count: list.length, inserted: norm.inserted, updated: norm.updated }
        );
        try {
          const bridge = window?.printBridge?.passcards;
          const ipcInvoke = window?.ipc?.invoke ?? window?.electron?.ipcRenderer?.invoke;
          const on = window?.ipc?.on ?? window?.electron?.ipcRenderer?.on;
          const off = window?.ipc?.off ?? window?.electron?.ipcRenderer?.removeListener;
          const batchId = `pcard-${Date.now()}-${Math.random().toString(36).slice(2, 7)}`;
          const toSeq3 = (v2) => String(Math.max(0, Math.min(999, Number(v2) || 0))).padStart(3, "0");
          const jobs = list.map((j2) => ({
            PLANT_CD: String(j2.PLANT_CD ?? "C200").slice(0, 4),
            SFC_CD: String(j2.SFC_CD ?? "").slice(0, 128),
            ORDER_NUMBER: String(j2.ORDER_NUMBER ?? "").slice(0, 10),
            BAR_KEY: String(j2.BAR_KEY ?? "").slice(0, 20),
            PCARD_SEQ: toSeq3(j2.PCARD_SEQ),
            NEXT_ORDER_NUMBER: String(j2.NEXT_ORDER_NUMBER ?? "").slice(0, 10),
            SIZE: String(j2.SIZE_CD ?? j2.SIZE ?? "").slice(0, 8),
            QTY: Number(j2.PCARD_QTY ?? j2.QTY ?? 0),
            WORK_CENTER: String(j2.WORK_CENTER ?? "").slice(0, 50),
            CREATE_DATE: String(j2.CREATE_DATE ?? "").slice(0, 20),
            PRINT_DT: String(j2.PRINT_DT ?? "").slice(0, 20)
          }));
          const options = {
            deviceName: print.deviceName,
            preview: previewFlag,
            widthMicrons: print.widthMicrons,
            heightMicrons: print.heightMicrons
          };
          const handleJob = (_2, msg) => {
            if (!msg || msg.batchId !== batchId) return;
            const seq3 = toSeq3(msg?.key?.PCARD_SEQ ?? msg?.index + 1);
            setCardData(
              (prev) => prev.map(
                (it2) => toSeq3(it2.seq) === seq3 ? { ...it2, isSaving: false } : it2
              )
            );
            if (msg.ok !== true && msg.pending !== true) {
              console.warn("[PASSCARD] job failed:", msg?.error || "unknown");
            }
          };
          const handleDone = (_2, summary) => {
            if (!summary || summary.batchId !== batchId) return;
            off?.("passcard:job-result", handleJob);
            off?.("passcard:batch-done", handleDone);
            const { okCount, failCount } = summary;
            console.info(
              `[PASSCARD] batch done: ok=${okCount}, fail=${failCount}`
            );
          };
          on?.("passcard:job-result", handleJob);
          on?.("passcard:batch-done", handleDone);
          if (typeof bridge === "function") {
            await bridge(jobs, options);
          } else if (ipcInvoke) {
            await ipcInvoke("print:passcards", { jobs, options, batchId });
          } else {
            throw new Error(
              "no print bridge or ipc.invoke available (preload missing?)"
            );
          }
          console.info("[PASSCARD] print dispatched (FAST)");
          setTimeout(() => {
            off?.("passcard:job-result", handleJob);
            off?.("passcard:batch-done", handleDone);
          }, 9e4);
        } catch (printErr) {
          console.error("❌ PASSCARD print error (SAP은 계속):", printErr);
        }
      } else {
        console.info("[PASSCARD] skip print (no P rows)");
      }
      const sfcDetail = await fetchSfcDetail2(
        plant_cd,
        String(data.SFC).slice(0, 128)
      );
      const bomCode = sfcDetail?.bom?.bom;
      const rawBomType = sfcDetail?.bom?.type;
      const bomType = rawBomType === "SHOPORDERBOM" ? "SHOP_ORDER" : rawBomType === "MASTERBOM" ? "MASTER" : rawBomType === "SFCBOM" ? "SFC" : void 0;
      if (!bomCode || !bomType) {
        console.warn("❗ BOM 정보가 없거나 타입 변환 실패");
        return showToast(t2("toast.noBomInfo"));
      }
      const operation = sfcDetail?.steps?.[0]?.operation?.operation;
      const step = sfcDetail?.steps?.[0];
      const stepId = step?.stepId;
      const routing = step?.stepRouting?.routing;
      const resource = step?.resource;
      const operation_Version = step?.operation?.version;
      const totalQuantity = Number(sfcDetail.quantity ?? 0);
      if (!operation) {
        console.error("❌ operation 정보를 가져올 수 없습니다.");
        throw new Error("SFC의 operation 정보를 확인할 수 없습니다.");
      }
      let baseUnitOfMeasure = "";
      try {
        const bomResp = await ax.get("/api/sap/bom-detail", {
          params: { plant: plant_cd, bom: bomCode, type: bomType }
        });
        const bomData = Array.isArray(bomResp.data) ? bomResp.data[0] : bomResp.data;
        console.log("📦 [RAW_BOM_DATA]", JSON.stringify(bomData, null, 2));
        baseUnitOfMeasure = bomData?.baseUnitOfMeasure;
        if (!Array.isArray(bomData?.components)) {
          console.warn("❗ BOM components 데이터가 없습니다.");
          return showToast(t2("toast.noBomComponents"));
        }
        console.log("🧩 BOM에서 추출된 components:", bomData.components);
      } catch (err) {
        console.error("❌ BOM Detail 조회 실패", err);
        return showToast(t2("toast.loadBomFailed"));
      }
      const hasAnyInput = updatedData.some(
        (c2) => c2.mappedSFC === currentSfc && !!c2.prod_dt
      );
      if (!hasAnyInput) {
        await callSapStartApi({
          plant: plant_cd,
          operation,
          resource: data.WORK_CENTER,
          sfcs: [rawSfc],
          processLot: ""
        });
      }
      const uomResp = await ax.get("/api/sap/unit-codes", {
        params: { unitCode: baseUnitOfMeasure }
      });
      const uomData = Array.isArray(uomResp.data) ? uomResp.data[0] : uomResp.data;
      const unitOfMeasure = {
        commercialUnitOfMeasure: uomData?.commercialCodes?.[0]?.commercialCode || baseUnitOfMeasure,
        internalUnitOfMeasure: baseUnitOfMeasure,
        isoUnitOfMeasure: uomData?.isoCode || baseUnitOfMeasure
      };
      const totalQty = promoted.reduce(
        (sum, item) => sum + Number(item.qty || 0),
        0
      );
      const orderNumber = data.ORDER_NUMBER;
      const storageLocation = data.PUTAWAYSTORAGELOCATION || "";
      const workDate = work_date;
      const grResp = await callSapPostGoodsReceipt({
        plant: plant_cd,
        order: orderNumber,
        postedBy: "dmc_services_user",
        lineItems: [
          {
            material: data.MATERIAL_CODE,
            materialVersion: data.MATERIAL_VERSION || "ERP001",
            postingDate: workDate,
            quantity: { unitOfMeasure, value: totalQty },
            sfc: rawSfc,
            storageLocation
          }
        ]
      });
      const txIds = (grResp?.lineItems || []).filter((li) => li?.transactionId && !li?.hasError).map((li) => String(li.transactionId).trim());
      let isFinal = false;
      try {
        const allPosted = await fetchPostedGoodsReceipts2(
          plant_cd,
          orderNumber,
          rawSfc,
          data.MATERIAL_CODE,
          txIds
        );
        const txIdSet = new Set(txIds.map((x2) => String(x2).trim()));
        const postedQty = allPosted.filter((gr) => !txIdSet.has(String(gr.transactionId || "").trim())).reduce(
          (sum, gr) => sum + Number(gr.quantityInBaseUnit?.value ?? 0),
          0
        );
        const currentProcessingQty = allPosted.filter((gr) => txIdSet.has(String(gr.transactionId || "").trim())).reduce(
          (sum, gr) => sum + Number(gr.quantityInBaseUnit?.value ?? 0),
          0
        );
        const totalDone = Math.round((postedQty + currentProcessingQty) * 1e3) / 1e3;
        isFinal = Math.abs(totalQuantity - totalDone) < 1e-3;
        console.log("📦 입고 누적 수량 체크", {
          totalQuantity,
          postedQty,
          currentProcessingQty,
          totalDone,
          isFinal
        });
      } catch (e2) {
        console.warn("⚠️ TxID 기반 POSTED 조회 실패, isFinal=false 처리", e2);
      }
      await ax.post("/api/sap-post-qty-confirm", {
        plant: plant_cd,
        shopOrder: orderNumber,
        sfc: rawSfc,
        operationActivity: operation,
        workCenter: data.WORK_CENTER,
        yieldQuantity: totalQty,
        yieldQuantityUnit: unitOfMeasure.internalUnitOfMeasure,
        yieldQuantityIsoUnit: unitOfMeasure.isoUnitOfMeasure,
        // isFinalConfirmation: isFinal  (정책상 false 고정)
        isFinalConfirmation: false
      });
      try {
        const standardValueObj = await fetchStandardValueObject({
          plant: plant_cd,
          workCenter: data.WORK_CENTER,
          operationActivity: operation,
          operationActivityVersion: operation_Version,
          object: orderNumber,
          objectType: "SHOP_ORDER_ROUTING",
          objectVersion: "ERP001"
        });
        if (standardValueObj) {
          const postingDateTime = (/* @__PURE__ */ new Date()).toISOString().replace(/\.\d{3}Z$/, ".000Z");
          const postedBy = "dongil.kang@changshininc.com";
          const activityList = standardValueObj.standardValueCollectionList.map((item) => ({
            activityId: item.standardVal,
            quantity: item.standardValueQuantity?.value || 0,
            unitOfMeasure: item.standardValueQuantity?.unitOfMeasure?.uom || "S",
            isoUnitOfMeasure: item.standardValueQuantity?.unitOfMeasure?.internalUom || "S",
            postedBy,
            postingDateTime
          }));
          await callSapPostActivityConfirm({
            plant: plant_cd,
            shopOrder: orderNumber,
            sfc: data.SFC,
            operationActivity: operation,
            stepId: stepId ?? "",
            workCenter: data.WORK_CENTER,
            activityList
          });
          console.log("✅ SAP Activity Confirm 성공");
        }
      } catch (err) {
        console.error("❌ SAP Activity Confirm 실패:", err?.response?.data || err?.message);
      }
      await ax.post("/api/mssql/update-upload-yn", {
        plant_cd,
        sfc: rawSfc,
        scan_type: "P",
        seqList: promoted.map((it2) => it2.seq)
      });
      showToast(t2("toast.saveAllDone"));
    } catch (err) {
      console.error("❌ SaveAll 처리 오류:", err);
      showToast(t2("toast.saveAllError"));
    } finally {
      cleanupSavingFlags();
      onClose();
    }
  };
  const cardBlock = (data2) => {
    if (!data2) return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { height: "80px" } });
    const clickable = isCardClickable(data2);
    const isSaving = data2.isSaving === true;
    const backgroundColor = isSaving ? "#ffe4e1" : getColorByStatus(data2);
    return /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "div",
      {
        style: {
          display: "flex",
          gap: "0.5rem",
          alignItems: "center",
          width: "100%",
          height: "80px",
          pointerEvents: clickable ? "auto" : "none"
        },
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              style: {
                flex: 1,
                borderRadius: "10px",
                border: "none",
                backgroundColor,
                lineHeight: "1.2rem",
                color: "black",
                fontWeight: "bold",
                display: "flex",
                flexDirection: "column",
                justifyContent: "space-between",
                padding: "6px",
                boxShadow: "inset 0 0 4px rgba(0,0,0,0.2)"
              },
              children: isSaving ? /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "div",
                {
                  style: {
                    fontSize: "2rem",
                    // ✅ 글자 크게
                    fontWeight: "bold",
                    color: "#d9534f",
                    lineHeight: "2rem",
                    // ✅ 세로 공간 키움
                    minHeight: "80px",
                    // ✅ 카드 전체 높이와 맞춤
                    display: "flex",
                    flexDirection: "column",
                    justifyContent: "center",
                    textAlign: "center"
                  },
                  children: [
                    t2("ui.inProgress"),
                    /* @__PURE__ */ jsxRuntimeExports.jsx("br", {})
                  ]
                }
              ) : /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
                /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
                  t2("detail.pcSeq"),
                  " : ",
                  data2.seq,
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  t2("detail.qty"),
                  " : ",
                  isNaN(data2.qty) ? "-" : data2.qty
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
                  t2("detail.input"),
                  " : ",
                  data2.input_dt || "-",
                  " ",
                  /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                  t2("detail.prod"),
                  " : ",
                  data2.prod_dt || "-"
                ] })
              ] })
            }
          ),
          isSaving ? /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              style: {
                width: "60px",
                height: "60px",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                fontSize: "0.9rem",
                fontWeight: "bold",
                color: "#d9534f",
                // 빨간 느낌
                border: "2px dashed red",
                borderRadius: "10px",
                textAlign: "center",
                lineHeight: "1rem"
              },
              children: t2("ui.inProgressShort")
            }
          ) : /* @__PURE__ */ jsxRuntimeExports.jsx(
            "img",
            {
              src: getImageByStatus(data2),
              alt: "OK",
              style: {
                width: "60px",
                height: "60px",
                fontSize: "0.75rem",
                borderRadius: "10px",
                cursor: clickable ? "pointer" : "not-allowed",
                opacity: clickable ? 1 : 0.4,
                objectFit: "contain",
                pointerEvents: clickable ? "auto" : "none"
              },
              onClick: () => {
                if (!clickable) return;
                console.log("✅ 클릭 허용됨", data2.seq);
                console.log("🔹 confirm_YN:", data2.confirm_YN);
                handleDetailOk(data2);
              }
            }
          )
        ]
      }
    );
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Toast2, { open: toastOpen, children: toastMessage }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(
      Dialog2,
      {
        open,
        onClose,
        style: { width: "860px", height: "85vh", backgroundColor: "black", color: "white", overflowX: "hidden" },
        children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { padding: "1rem" }, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", justifyContent: "flex-start", gap: "1.6rem", marginBottom: "1rem" }, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { backgroundColor: "black", color: "white", fontSize: "13px", minWidth: "220px" }, children: /* @__PURE__ */ jsxRuntimeExports.jsx("table", { style: { width: "100%", borderCollapse: "collapse", tableLayout: "fixed", border: "1px solid white" }, children: /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", { children: Object.entries({
              [t2("app.detail.date")]: data?.WORK_DATE ?? "-",
              [t2("app.detail.line")]: data?.WORK_CENTER ?? "-",
              [t2("app.table.model")]: data?.MODEL_CD ?? "-",
              [t2("app.table.styleCode")]: data?.STYLE_CD ?? "-",
              [t2("app.table.materialCode")]: data?.MATERIAL_CODE ?? "-",
              [t2("app.table.materialName")]: data?.MATERIAL_DESCRIPTION ?? "-",
              [t2("app.table.sfc")]: data?.SFC ?? "-",
              [t2("app.table.quantity")]: data?.QUANTITY ?? "-",
              [t2("app.detail.size")]: data?.SIZE_CD ?? "-",
              [t2("app.detail.orderNo")]: data?.ORDER_NUMBER ?? "-",
              [t2("app.detail.storage")]: data?.PUTAWAYSTORAGELOCATION ?? "-"
            }).map(([key, value]) => /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { style: { width: "100px", fontWeight: "bold", padding: "6px 8px", border: "1px solid white", backgroundColor: "black", color: "white", whiteSpace: "nowrap" }, children: [
                "• ",
                key
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("td", { style: { padding: "6px 8px", border: "1px solid white", backgroundColor: "black", color: "white", whiteSpace: "nowrap", overflow: "hidden", textOverflow: "ellipsis" }, children: [
                ": ",
                value
              ] })
            ] }, key)) }) }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { textAlign: "center", marginBottom: "1rem" }, children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx(Text2, { style: { fontSize: "3rem", color: "white", fontWeight: "bold", marginTop: "-10px", marginBottom: "0.5rem" }, children: t2("dialog.confirm.title") }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: {
                display: "flex",
                justifyContent: "center",
                gap: "1.5rem",
                marginBottom: "1.7rem"
              }, children: filterOptions.map(({ key, label }) => {
                const isChecked = checkedStates[key];
                const backgroundColor = isChecked ? key === "completed" ? "limegreen" : key === "notStarted" ? "#d3d3d3" : "dodgerblue" : "#444";
                return /* @__PURE__ */ jsxRuntimeExports.jsxs(
                  "label",
                  {
                    style: {
                      display: "flex",
                      alignItems: "center",
                      gap: "8px",
                      backgroundColor,
                      padding: "18px 15px",
                      borderRadius: "8px",
                      color: "white",
                      fontSize: "1.5rem",
                      cursor: "pointer",
                      border: isChecked ? "2px solid cyan" : "2px solid transparent",
                      transition: "border 0.2s, background-color 0.2s"
                    },
                    children: [
                      /* @__PURE__ */ jsxRuntimeExports.jsx(
                        "input",
                        {
                          type: "checkbox",
                          checked: isChecked,
                          onChange: (e2) => setCheckedStates((prev) => ({
                            ...prev,
                            [key]: e2.target.checked
                          })),
                          style: {
                            transform: "scale(1.8)",
                            cursor: "pointer",
                            width: "20px",
                            height: "20px",
                            accentColor: "cyan"
                          }
                        }
                      ),
                      label
                    ]
                  },
                  key
                );
              }) }),
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", justifyContent: "center", gap: "0.5rem" }, children: [
                (() => {
                  const { a: a3, b: b3 } = split2(t2("button.saveDetail"));
                  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
                    Button2,
                    {
                      icon: saveIcon,
                      className: "detail-button",
                      onClick: handleSaveDetail,
                      disabled: !canSaveDetail,
                      children: [
                        a3,
                        b3 ? /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
                          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                          b3
                        ] }) : null
                      ]
                    }
                  );
                })(),
                (() => {
                  const { a: a3, b: b3 } = split2(t2("button.saveAll"));
                  return /* @__PURE__ */ jsxRuntimeExports.jsxs(
                    Button2,
                    {
                      icon: saveIcon,
                      className: "detail-button",
                      onClick: handleSaveAll,
                      disabled: !canSaveAll,
                      children: [
                        a3,
                        b3 ? /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
                          /* @__PURE__ */ jsxRuntimeExports.jsx("br", {}),
                          b3
                        ] }) : null
                      ]
                    }
                  );
                })(),
                /* @__PURE__ */ jsxRuntimeExports.jsx(Button2, { icon: "decline", className: "detail-button detail-button-danger", onClick: onClose, children: t2("button.close") })
              ] })
            ] })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { display: "flex", flexDirection: "column", gap: "0.5rem", marginLeft: "0px" }, children: rowsByColumns.map((row, rowIndex) => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { display: "flex", justifyContent: "space-between", gap: "1rem" }, children: row.map((data2, colIndex) => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { flex: 1, minWidth: 0, overflow: "hidden" }, children: data2 ? cardBlock(data2) : /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { height: "80px" } }) }, colIndex)) }, rowIndex)) }),
          cardData.length > itemsPerPage && /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { marginTop: "1rem", textAlign: "center" }, children: Array.from({ length: totalPages }).map((_2, idx) => {
            const pageNum = idx + 1;
            return /* @__PURE__ */ jsxRuntimeExports.jsx(
              Button2,
              {
                onClick: () => setCurrentPage(pageNum),
                style: {
                  margin: "0 8px",
                  backgroundColor: currentPage === pageNum ? "cyan" : "#222",
                  color: "white",
                  borderRadius: "8px",
                  fontWeight: "bold"
                },
                children: pageNum
              },
              pageNum
            );
          }) })
        ] })
      }
    )
  ] });
}
const nameStartChar = ":A-Za-z_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
const nameChar = nameStartChar + "\\-.\\d\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
const nameRegexp = "[" + nameStartChar + "][" + nameChar + "]*";
const regexName = new RegExp("^" + nameRegexp + "$");
function getAllMatches(string, regex) {
  const matches = [];
  let match = regex.exec(string);
  while (match) {
    const allmatches = [];
    allmatches.startIndex = regex.lastIndex - match[0].length;
    const len = match.length;
    for (let index = 0; index < len; index++) {
      allmatches.push(match[index]);
    }
    matches.push(allmatches);
    match = regex.exec(string);
  }
  return matches;
}
const isName = function(string) {
  const match = regexName.exec(string);
  return !(match === null || typeof match === "undefined");
};
function isExist(v2) {
  return typeof v2 !== "undefined";
}
const defaultOptions$1 = {
  allowBooleanAttributes: false,
  //A tag can have attributes without any value
  unpairedTags: []
};
function validate(xmlData, options) {
  options = Object.assign({}, defaultOptions$1, options);
  const tags = [];
  let tagFound = false;
  let reachedRoot = false;
  if (xmlData[0] === "\uFEFF") {
    xmlData = xmlData.substr(1);
  }
  for (let i3 = 0; i3 < xmlData.length; i3++) {
    if (xmlData[i3] === "<" && xmlData[i3 + 1] === "?") {
      i3 += 2;
      i3 = readPI(xmlData, i3);
      if (i3.err) return i3;
    } else if (xmlData[i3] === "<") {
      let tagStartPos = i3;
      i3++;
      if (xmlData[i3] === "!") {
        i3 = readCommentAndCDATA(xmlData, i3);
        continue;
      } else {
        let closingTag = false;
        if (xmlData[i3] === "/") {
          closingTag = true;
          i3++;
        }
        let tagName = "";
        for (; i3 < xmlData.length && xmlData[i3] !== ">" && xmlData[i3] !== " " && xmlData[i3] !== "	" && xmlData[i3] !== "\n" && xmlData[i3] !== "\r"; i3++) {
          tagName += xmlData[i3];
        }
        tagName = tagName.trim();
        if (tagName[tagName.length - 1] === "/") {
          tagName = tagName.substring(0, tagName.length - 1);
          i3--;
        }
        if (!validateTagName(tagName)) {
          let msg;
          if (tagName.trim().length === 0) {
            msg = "Invalid space after '<'.";
          } else {
            msg = "Tag '" + tagName + "' is an invalid name.";
          }
          return getErrorObject("InvalidTag", msg, getLineNumberForPosition(xmlData, i3));
        }
        const result = readAttributeStr(xmlData, i3);
        if (result === false) {
          return getErrorObject("InvalidAttr", "Attributes for '" + tagName + "' have open quote.", getLineNumberForPosition(xmlData, i3));
        }
        let attrStr = result.value;
        i3 = result.index;
        if (attrStr[attrStr.length - 1] === "/") {
          const attrStrStart = i3 - attrStr.length;
          attrStr = attrStr.substring(0, attrStr.length - 1);
          const isValid = validateAttributeString(attrStr, options);
          if (isValid === true) {
            tagFound = true;
          } else {
            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));
          }
        } else if (closingTag) {
          if (!result.tagClosed) {
            return getErrorObject("InvalidTag", "Closing tag '" + tagName + "' doesn't have proper closing.", getLineNumberForPosition(xmlData, i3));
          } else if (attrStr.trim().length > 0) {
            return getErrorObject("InvalidTag", "Closing tag '" + tagName + "' can't have attributes or invalid starting.", getLineNumberForPosition(xmlData, tagStartPos));
          } else if (tags.length === 0) {
            return getErrorObject("InvalidTag", "Closing tag '" + tagName + "' has not been opened.", getLineNumberForPosition(xmlData, tagStartPos));
          } else {
            const otg = tags.pop();
            if (tagName !== otg.tagName) {
              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);
              return getErrorObject(
                "InvalidTag",
                "Expected closing tag '" + otg.tagName + "' (opened in line " + openPos.line + ", col " + openPos.col + ") instead of closing tag '" + tagName + "'.",
                getLineNumberForPosition(xmlData, tagStartPos)
              );
            }
            if (tags.length == 0) {
              reachedRoot = true;
            }
          }
        } else {
          const isValid = validateAttributeString(attrStr, options);
          if (isValid !== true) {
            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i3 - attrStr.length + isValid.err.line));
          }
          if (reachedRoot === true) {
            return getErrorObject("InvalidXml", "Multiple possible root nodes found.", getLineNumberForPosition(xmlData, i3));
          } else if (options.unpairedTags.indexOf(tagName) !== -1) ;
          else {
            tags.push({ tagName, tagStartPos });
          }
          tagFound = true;
        }
        for (i3++; i3 < xmlData.length; i3++) {
          if (xmlData[i3] === "<") {
            if (xmlData[i3 + 1] === "!") {
              i3++;
              i3 = readCommentAndCDATA(xmlData, i3);
              continue;
            } else if (xmlData[i3 + 1] === "?") {
              i3 = readPI(xmlData, ++i3);
              if (i3.err) return i3;
            } else {
              break;
            }
          } else if (xmlData[i3] === "&") {
            const afterAmp = validateAmpersand(xmlData, i3);
            if (afterAmp == -1)
              return getErrorObject("InvalidChar", "char '&' is not expected.", getLineNumberForPosition(xmlData, i3));
            i3 = afterAmp;
          } else {
            if (reachedRoot === true && !isWhiteSpace(xmlData[i3])) {
              return getErrorObject("InvalidXml", "Extra text at the end", getLineNumberForPosition(xmlData, i3));
            }
          }
        }
        if (xmlData[i3] === "<") {
          i3--;
        }
      }
    } else {
      if (isWhiteSpace(xmlData[i3])) {
        continue;
      }
      return getErrorObject("InvalidChar", "char '" + xmlData[i3] + "' is not expected.", getLineNumberForPosition(xmlData, i3));
    }
  }
  if (!tagFound) {
    return getErrorObject("InvalidXml", "Start tag expected.", 1);
  } else if (tags.length == 1) {
    return getErrorObject("InvalidTag", "Unclosed tag '" + tags[0].tagName + "'.", getLineNumberForPosition(xmlData, tags[0].tagStartPos));
  } else if (tags.length > 0) {
    return getErrorObject("InvalidXml", "Invalid '" + JSON.stringify(tags.map((t3) => t3.tagName), null, 4).replace(/\r?\n/g, "") + "' found.", { line: 1, col: 1 });
  }
  return true;
}
function isWhiteSpace(char) {
  return char === " " || char === "	" || char === "\n" || char === "\r";
}
function readPI(xmlData, i3) {
  const start = i3;
  for (; i3 < xmlData.length; i3++) {
    if (xmlData[i3] == "?" || xmlData[i3] == " ") {
      const tagname = xmlData.substr(start, i3 - start);
      if (i3 > 5 && tagname === "xml") {
        return getErrorObject("InvalidXml", "XML declaration allowed only at the start of the document.", getLineNumberForPosition(xmlData, i3));
      } else if (xmlData[i3] == "?" && xmlData[i3 + 1] == ">") {
        i3++;
        break;
      } else {
        continue;
      }
    }
  }
  return i3;
}
function readCommentAndCDATA(xmlData, i3) {
  if (xmlData.length > i3 + 5 && xmlData[i3 + 1] === "-" && xmlData[i3 + 2] === "-") {
    for (i3 += 3; i3 < xmlData.length; i3++) {
      if (xmlData[i3] === "-" && xmlData[i3 + 1] === "-" && xmlData[i3 + 2] === ">") {
        i3 += 2;
        break;
      }
    }
  } else if (xmlData.length > i3 + 8 && xmlData[i3 + 1] === "D" && xmlData[i3 + 2] === "O" && xmlData[i3 + 3] === "C" && xmlData[i3 + 4] === "T" && xmlData[i3 + 5] === "Y" && xmlData[i3 + 6] === "P" && xmlData[i3 + 7] === "E") {
    let angleBracketsCount = 1;
    for (i3 += 8; i3 < xmlData.length; i3++) {
      if (xmlData[i3] === "<") {
        angleBracketsCount++;
      } else if (xmlData[i3] === ">") {
        angleBracketsCount--;
        if (angleBracketsCount === 0) {
          break;
        }
      }
    }
  } else if (xmlData.length > i3 + 9 && xmlData[i3 + 1] === "[" && xmlData[i3 + 2] === "C" && xmlData[i3 + 3] === "D" && xmlData[i3 + 4] === "A" && xmlData[i3 + 5] === "T" && xmlData[i3 + 6] === "A" && xmlData[i3 + 7] === "[") {
    for (i3 += 8; i3 < xmlData.length; i3++) {
      if (xmlData[i3] === "]" && xmlData[i3 + 1] === "]" && xmlData[i3 + 2] === ">") {
        i3 += 2;
        break;
      }
    }
  }
  return i3;
}
const doubleQuote = '"';
const singleQuote = "'";
function readAttributeStr(xmlData, i3) {
  let attrStr = "";
  let startChar = "";
  let tagClosed = false;
  for (; i3 < xmlData.length; i3++) {
    if (xmlData[i3] === doubleQuote || xmlData[i3] === singleQuote) {
      if (startChar === "") {
        startChar = xmlData[i3];
      } else if (startChar !== xmlData[i3]) ;
      else {
        startChar = "";
      }
    } else if (xmlData[i3] === ">") {
      if (startChar === "") {
        tagClosed = true;
        break;
      }
    }
    attrStr += xmlData[i3];
  }
  if (startChar !== "") {
    return false;
  }
  return {
    value: attrStr,
    index: i3,
    tagClosed
  };
}
const validAttrStrRegxp = new RegExp(`(\\s*)([^\\s=]+)(\\s*=)?(\\s*(['"])(([\\s\\S])*?)\\5)?`, "g");
function validateAttributeString(attrStr, options) {
  const matches = getAllMatches(attrStr, validAttrStrRegxp);
  const attrNames = {};
  for (let i3 = 0; i3 < matches.length; i3++) {
    if (matches[i3][1].length === 0) {
      return getErrorObject("InvalidAttr", "Attribute '" + matches[i3][2] + "' has no space in starting.", getPositionFromMatch(matches[i3]));
    } else if (matches[i3][3] !== void 0 && matches[i3][4] === void 0) {
      return getErrorObject("InvalidAttr", "Attribute '" + matches[i3][2] + "' is without value.", getPositionFromMatch(matches[i3]));
    } else if (matches[i3][3] === void 0 && !options.allowBooleanAttributes) {
      return getErrorObject("InvalidAttr", "boolean attribute '" + matches[i3][2] + "' is not allowed.", getPositionFromMatch(matches[i3]));
    }
    const attrName = matches[i3][2];
    if (!validateAttrName(attrName)) {
      return getErrorObject("InvalidAttr", "Attribute '" + attrName + "' is an invalid name.", getPositionFromMatch(matches[i3]));
    }
    if (!attrNames.hasOwnProperty(attrName)) {
      attrNames[attrName] = 1;
    } else {
      return getErrorObject("InvalidAttr", "Attribute '" + attrName + "' is repeated.", getPositionFromMatch(matches[i3]));
    }
  }
  return true;
}
function validateNumberAmpersand(xmlData, i3) {
  let re = /\d/;
  if (xmlData[i3] === "x") {
    i3++;
    re = /[\da-fA-F]/;
  }
  for (; i3 < xmlData.length; i3++) {
    if (xmlData[i3] === ";")
      return i3;
    if (!xmlData[i3].match(re))
      break;
  }
  return -1;
}
function validateAmpersand(xmlData, i3) {
  i3++;
  if (xmlData[i3] === ";")
    return -1;
  if (xmlData[i3] === "#") {
    i3++;
    return validateNumberAmpersand(xmlData, i3);
  }
  let count = 0;
  for (; i3 < xmlData.length; i3++, count++) {
    if (xmlData[i3].match(/\w/) && count < 20)
      continue;
    if (xmlData[i3] === ";")
      break;
    return -1;
  }
  return i3;
}
function getErrorObject(code, message, lineNumber) {
  return {
    err: {
      code,
      msg: message,
      line: lineNumber.line || lineNumber,
      col: lineNumber.col
    }
  };
}
function validateAttrName(attrName) {
  return isName(attrName);
}
function validateTagName(tagname) {
  return isName(tagname);
}
function getLineNumberForPosition(xmlData, index) {
  const lines = xmlData.substring(0, index).split(/\r?\n/);
  return {
    line: lines.length,
    // column number is last line's length + 1, because column numbering starts at 1:
    col: lines[lines.length - 1].length + 1
  };
}
function getPositionFromMatch(match) {
  return match.startIndex + match[1].length;
}
const defaultOptions = {
  preserveOrder: false,
  attributeNamePrefix: "@_",
  attributesGroupName: false,
  textNodeName: "#text",
  ignoreAttributes: true,
  removeNSPrefix: false,
  // remove NS from tag name or attribute name if true
  allowBooleanAttributes: false,
  //a tag can have attributes without any value
  //ignoreRootElement : false,
  parseTagValue: true,
  parseAttributeValue: false,
  trimValues: true,
  //Trim string values of tag and attributes
  cdataPropName: false,
  numberParseOptions: {
    hex: true,
    leadingZeros: true,
    eNotation: true
  },
  tagValueProcessor: function(tagName, val) {
    return val;
  },
  attributeValueProcessor: function(attrName, val) {
    return val;
  },
  stopNodes: [],
  //nested tags will not be parsed even for errors
  alwaysCreateTextNode: false,
  isArray: () => false,
  commentPropName: false,
  unpairedTags: [],
  processEntities: true,
  htmlEntities: false,
  ignoreDeclaration: false,
  ignorePiTags: false,
  transformTagName: false,
  transformAttributeName: false,
  updateTag: function(tagName, jPath, attrs) {
    return tagName;
  },
  // skipEmptyListItem: false
  captureMetaData: false
};
const buildOptions = function(options) {
  return Object.assign({}, defaultOptions, options);
};
let METADATA_SYMBOL$1;
if (typeof Symbol !== "function") {
  METADATA_SYMBOL$1 = "@@xmlMetadata";
} else {
  METADATA_SYMBOL$1 = Symbol("XML Node Metadata");
}
class XmlNode {
  constructor(tagname) {
    this.tagname = tagname;
    this.child = [];
    this[":@"] = {};
  }
  add(key, val) {
    if (key === "__proto__") key = "#__proto__";
    this.child.push({ [key]: val });
  }
  addChild(node, startIndex) {
    if (node.tagname === "__proto__") node.tagname = "#__proto__";
    if (node[":@"] && Object.keys(node[":@"]).length > 0) {
      this.child.push({ [node.tagname]: node.child, [":@"]: node[":@"] });
    } else {
      this.child.push({ [node.tagname]: node.child });
    }
    if (startIndex !== void 0) {
      this.child[this.child.length - 1][METADATA_SYMBOL$1] = { startIndex };
    }
  }
  /** symbol used for metadata */
  static getMetaDataSymbol() {
    return METADATA_SYMBOL$1;
  }
}
function readDocType(xmlData, i3) {
  const entities = {};
  if (xmlData[i3 + 3] === "O" && xmlData[i3 + 4] === "C" && xmlData[i3 + 5] === "T" && xmlData[i3 + 6] === "Y" && xmlData[i3 + 7] === "P" && xmlData[i3 + 8] === "E") {
    i3 = i3 + 9;
    let angleBracketsCount = 1;
    let hasBody = false, comment = false;
    let exp = "";
    for (; i3 < xmlData.length; i3++) {
      if (xmlData[i3] === "<" && !comment) {
        if (hasBody && hasSeq(xmlData, "!ENTITY", i3)) {
          i3 += 7;
          let entityName, val;
          [entityName, val, i3] = readEntityExp(xmlData, i3 + 1);
          if (val.indexOf("&") === -1)
            entities[entityName] = {
              regx: RegExp(`&${entityName};`, "g"),
              val
            };
        } else if (hasBody && hasSeq(xmlData, "!ELEMENT", i3)) {
          i3 += 8;
          const { index } = readElementExp(xmlData, i3 + 1);
          i3 = index;
        } else if (hasBody && hasSeq(xmlData, "!ATTLIST", i3)) {
          i3 += 8;
        } else if (hasBody && hasSeq(xmlData, "!NOTATION", i3)) {
          i3 += 9;
          const { index } = readNotationExp(xmlData, i3 + 1);
          i3 = index;
        } else if (hasSeq(xmlData, "!--", i3)) comment = true;
        else throw new Error(`Invalid DOCTYPE`);
        angleBracketsCount++;
        exp = "";
      } else if (xmlData[i3] === ">") {
        if (comment) {
          if (xmlData[i3 - 1] === "-" && xmlData[i3 - 2] === "-") {
            comment = false;
            angleBracketsCount--;
          }
        } else {
          angleBracketsCount--;
        }
        if (angleBracketsCount === 0) {
          break;
        }
      } else if (xmlData[i3] === "[") {
        hasBody = true;
      } else {
        exp += xmlData[i3];
      }
    }
    if (angleBracketsCount !== 0) {
      throw new Error(`Unclosed DOCTYPE`);
    }
  } else {
    throw new Error(`Invalid Tag instead of DOCTYPE`);
  }
  return { entities, i: i3 };
}
const skipWhitespace = (data, index) => {
  while (index < data.length && /\s/.test(data[index])) {
    index++;
  }
  return index;
};
function readEntityExp(xmlData, i3) {
  i3 = skipWhitespace(xmlData, i3);
  let entityName = "";
  while (i3 < xmlData.length && !/\s/.test(xmlData[i3]) && xmlData[i3] !== '"' && xmlData[i3] !== "'") {
    entityName += xmlData[i3];
    i3++;
  }
  validateEntityName(entityName);
  i3 = skipWhitespace(xmlData, i3);
  if (xmlData.substring(i3, i3 + 6).toUpperCase() === "SYSTEM") {
    throw new Error("External entities are not supported");
  } else if (xmlData[i3] === "%") {
    throw new Error("Parameter entities are not supported");
  }
  let entityValue = "";
  [i3, entityValue] = readIdentifierVal(xmlData, i3, "entity");
  i3--;
  return [entityName, entityValue, i3];
}
function readNotationExp(xmlData, i3) {
  i3 = skipWhitespace(xmlData, i3);
  let notationName = "";
  while (i3 < xmlData.length && !/\s/.test(xmlData[i3])) {
    notationName += xmlData[i3];
    i3++;
  }
  validateEntityName(notationName);
  i3 = skipWhitespace(xmlData, i3);
  const identifierType = xmlData.substring(i3, i3 + 6).toUpperCase();
  if (identifierType !== "SYSTEM" && identifierType !== "PUBLIC") {
    throw new Error(`Expected SYSTEM or PUBLIC, found "${identifierType}"`);
  }
  i3 += identifierType.length;
  i3 = skipWhitespace(xmlData, i3);
  let publicIdentifier = null;
  let systemIdentifier = null;
  if (identifierType === "PUBLIC") {
    [i3, publicIdentifier] = readIdentifierVal(xmlData, i3, "publicIdentifier");
    i3 = skipWhitespace(xmlData, i3);
    if (xmlData[i3] === '"' || xmlData[i3] === "'") {
      [i3, systemIdentifier] = readIdentifierVal(xmlData, i3, "systemIdentifier");
    }
  } else if (identifierType === "SYSTEM") {
    [i3, systemIdentifier] = readIdentifierVal(xmlData, i3, "systemIdentifier");
    if (!systemIdentifier) {
      throw new Error("Missing mandatory system identifier for SYSTEM notation");
    }
  }
  return { notationName, publicIdentifier, systemIdentifier, index: --i3 };
}
function readIdentifierVal(xmlData, i3, type) {
  let identifierVal = "";
  const startChar = xmlData[i3];
  if (startChar !== '"' && startChar !== "'") {
    throw new Error(`Expected quoted string, found "${startChar}"`);
  }
  i3++;
  while (i3 < xmlData.length && xmlData[i3] !== startChar) {
    identifierVal += xmlData[i3];
    i3++;
  }
  if (xmlData[i3] !== startChar) {
    throw new Error(`Unterminated ${type} value`);
  }
  i3++;
  return [i3, identifierVal];
}
function readElementExp(xmlData, i3) {
  i3 = skipWhitespace(xmlData, i3);
  let elementName = "";
  while (i3 < xmlData.length && !/\s/.test(xmlData[i3])) {
    elementName += xmlData[i3];
    i3++;
  }
  if (!validateEntityName(elementName)) {
    throw new Error(`Invalid element name: "${elementName}"`);
  }
  i3 = skipWhitespace(xmlData, i3);
  let contentModel = "";
  if (xmlData[i3] === "E" && hasSeq(xmlData, "MPTY", i3)) i3 += 4;
  else if (xmlData[i3] === "A" && hasSeq(xmlData, "NY", i3)) i3 += 2;
  else if (xmlData[i3] === "(") {
    i3++;
    while (i3 < xmlData.length && xmlData[i3] !== ")") {
      contentModel += xmlData[i3];
      i3++;
    }
    if (xmlData[i3] !== ")") {
      throw new Error("Unterminated content model");
    }
  } else {
    throw new Error(`Invalid Element Expression, found "${xmlData[i3]}"`);
  }
  return {
    elementName,
    contentModel: contentModel.trim(),
    index: i3
  };
}
function hasSeq(data, seq, i3) {
  for (let j2 = 0; j2 < seq.length; j2++) {
    if (seq[j2] !== data[i3 + j2 + 1]) return false;
  }
  return true;
}
function validateEntityName(name2) {
  if (isName(name2))
    return name2;
  else
    throw new Error(`Invalid entity name ${name2}`);
}
const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;
const numRegex = /^([\-\+])?(0*)([0-9]*(\.[0-9]*)?)$/;
const consider = {
  hex: true,
  // oct: false,
  leadingZeros: true,
  decimalPoint: ".",
  eNotation: true
  //skipLike: /regex/
};
function toNumber(str, options = {}) {
  options = Object.assign({}, consider, options);
  if (!str || typeof str !== "string") return str;
  let trimmedStr = str.trim();
  if (options.skipLike !== void 0 && options.skipLike.test(trimmedStr)) return str;
  else if (str === "0") return 0;
  else if (options.hex && hexRegex.test(trimmedStr)) {
    return parse_int(trimmedStr, 16);
  } else if (trimmedStr.search(/.+[eE].+/) !== -1) {
    return resolveEnotation(str, trimmedStr, options);
  } else {
    const match = numRegex.exec(trimmedStr);
    if (match) {
      const sign = match[1] || "";
      const leadingZeros = match[2];
      let numTrimmedByZeros = trimZeros(match[3]);
      const decimalAdjacentToLeadingZeros = sign ? (
        // 0., -00., 000.
        str[leadingZeros.length + 1] === "."
      ) : str[leadingZeros.length] === ".";
      if (!options.leadingZeros && (leadingZeros.length > 1 || leadingZeros.length === 1 && !decimalAdjacentToLeadingZeros)) {
        return str;
      } else {
        const num = Number(trimmedStr);
        const parsedStr = String(num);
        if (num === 0) return num;
        if (parsedStr.search(/[eE]/) !== -1) {
          if (options.eNotation) return num;
          else return str;
        } else if (trimmedStr.indexOf(".") !== -1) {
          if (parsedStr === "0") return num;
          else if (parsedStr === numTrimmedByZeros) return num;
          else if (parsedStr === `${sign}${numTrimmedByZeros}`) return num;
          else return str;
        }
        let n2 = leadingZeros ? numTrimmedByZeros : trimmedStr;
        if (leadingZeros) {
          return n2 === parsedStr || sign + n2 === parsedStr ? num : str;
        } else {
          return n2 === parsedStr || n2 === sign + parsedStr ? num : str;
        }
      }
    } else {
      return str;
    }
  }
}
const eNotationRegx = /^([-+])?(0*)(\d*(\.\d*)?[eE][-\+]?\d+)$/;
function resolveEnotation(str, trimmedStr, options) {
  if (!options.eNotation) return str;
  const notation = trimmedStr.match(eNotationRegx);
  if (notation) {
    let sign = notation[1] || "";
    const eChar = notation[3].indexOf("e") === -1 ? "E" : "e";
    const leadingZeros = notation[2];
    const eAdjacentToLeadingZeros = sign ? (
      // 0E.
      str[leadingZeros.length + 1] === eChar
    ) : str[leadingZeros.length] === eChar;
    if (leadingZeros.length > 1 && eAdjacentToLeadingZeros) return str;
    else if (leadingZeros.length === 1 && (notation[3].startsWith(`.${eChar}`) || notation[3][0] === eChar)) {
      return Number(trimmedStr);
    } else if (options.leadingZeros && !eAdjacentToLeadingZeros) {
      trimmedStr = (notation[1] || "") + notation[3];
      return Number(trimmedStr);
    } else return str;
  } else {
    return str;
  }
}
function trimZeros(numStr) {
  if (numStr && numStr.indexOf(".") !== -1) {
    numStr = numStr.replace(/0+$/, "");
    if (numStr === ".") numStr = "0";
    else if (numStr[0] === ".") numStr = "0" + numStr;
    else if (numStr[numStr.length - 1] === ".") numStr = numStr.substring(0, numStr.length - 1);
    return numStr;
  }
  return numStr;
}
function parse_int(numStr, base) {
  if (parseInt) return parseInt(numStr, base);
  else if (Number.parseInt) return Number.parseInt(numStr, base);
  else if (window && window.parseInt) return window.parseInt(numStr, base);
  else throw new Error("parseInt, Number.parseInt, window.parseInt are not supported");
}
function getIgnoreAttributesFn(ignoreAttributes) {
  if (typeof ignoreAttributes === "function") {
    return ignoreAttributes;
  }
  if (Array.isArray(ignoreAttributes)) {
    return (attrName) => {
      for (const pattern of ignoreAttributes) {
        if (typeof pattern === "string" && attrName === pattern) {
          return true;
        }
        if (pattern instanceof RegExp && pattern.test(attrName)) {
          return true;
        }
      }
    };
  }
  return () => false;
}
class OrderedObjParser {
  constructor(options) {
    this.options = options;
    this.currentNode = null;
    this.tagsNodeStack = [];
    this.docTypeEntities = {};
    this.lastEntities = {
      "apos": { regex: /&(apos|#39|#x27);/g, val: "'" },
      "gt": { regex: /&(gt|#62|#x3E);/g, val: ">" },
      "lt": { regex: /&(lt|#60|#x3C);/g, val: "<" },
      "quot": { regex: /&(quot|#34|#x22);/g, val: '"' }
    };
    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val: "&" };
    this.htmlEntities = {
      "space": { regex: /&(nbsp|#160);/g, val: " " },
      // "lt" : { regex: /&(lt|#60);/g, val: "<" },
      // "gt" : { regex: /&(gt|#62);/g, val: ">" },
      // "amp" : { regex: /&(amp|#38);/g, val: "&" },
      // "quot" : { regex: /&(quot|#34);/g, val: "\"" },
      // "apos" : { regex: /&(apos|#39);/g, val: "'" },
      "cent": { regex: /&(cent|#162);/g, val: "¢" },
      "pound": { regex: /&(pound|#163);/g, val: "£" },
      "yen": { regex: /&(yen|#165);/g, val: "¥" },
      "euro": { regex: /&(euro|#8364);/g, val: "€" },
      "copyright": { regex: /&(copy|#169);/g, val: "©" },
      "reg": { regex: /&(reg|#174);/g, val: "®" },
      "inr": { regex: /&(inr|#8377);/g, val: "₹" },
      "num_dec": { regex: /&#([0-9]{1,7});/g, val: (_2, str) => String.fromCodePoint(Number.parseInt(str, 10)) },
      "num_hex": { regex: /&#x([0-9a-fA-F]{1,6});/g, val: (_2, str) => String.fromCodePoint(Number.parseInt(str, 16)) }
    };
    this.addExternalEntities = addExternalEntities;
    this.parseXml = parseXml;
    this.parseTextData = parseTextData;
    this.resolveNameSpace = resolveNameSpace;
    this.buildAttributesMap = buildAttributesMap;
    this.isItStopNode = isItStopNode;
    this.replaceEntitiesValue = replaceEntitiesValue;
    this.readStopNodeData = readStopNodeData;
    this.saveTextToParentTag = saveTextToParentTag;
    this.addChild = addChild;
    this.ignoreAttributesFn = getIgnoreAttributesFn(this.options.ignoreAttributes);
  }
}
function addExternalEntities(externalEntities) {
  const entKeys = Object.keys(externalEntities);
  for (let i3 = 0; i3 < entKeys.length; i3++) {
    const ent = entKeys[i3];
    this.lastEntities[ent] = {
      regex: new RegExp("&" + ent + ";", "g"),
      val: externalEntities[ent]
    };
  }
}
function parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {
  if (val !== void 0) {
    if (this.options.trimValues && !dontTrim) {
      val = val.trim();
    }
    if (val.length > 0) {
      if (!escapeEntities) val = this.replaceEntitiesValue(val);
      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);
      if (newval === null || newval === void 0) {
        return val;
      } else if (typeof newval !== typeof val || newval !== val) {
        return newval;
      } else if (this.options.trimValues) {
        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);
      } else {
        const trimmedVal = val.trim();
        if (trimmedVal === val) {
          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);
        } else {
          return val;
        }
      }
    }
  }
}
function resolveNameSpace(tagname) {
  if (this.options.removeNSPrefix) {
    const tags = tagname.split(":");
    const prefix = tagname.charAt(0) === "/" ? "/" : "";
    if (tags[0] === "xmlns") {
      return "";
    }
    if (tags.length === 2) {
      tagname = prefix + tags[1];
    }
  }
  return tagname;
}
const attrsRegx = new RegExp(`([^\\s=]+)\\s*(=\\s*(['"])([\\s\\S]*?)\\3)?`, "gm");
function buildAttributesMap(attrStr, jPath, tagName) {
  if (this.options.ignoreAttributes !== true && typeof attrStr === "string") {
    const matches = getAllMatches(attrStr, attrsRegx);
    const len = matches.length;
    const attrs = {};
    for (let i3 = 0; i3 < len; i3++) {
      const attrName = this.resolveNameSpace(matches[i3][1]);
      if (this.ignoreAttributesFn(attrName, jPath)) {
        continue;
      }
      let oldVal = matches[i3][4];
      let aName = this.options.attributeNamePrefix + attrName;
      if (attrName.length) {
        if (this.options.transformAttributeName) {
          aName = this.options.transformAttributeName(aName);
        }
        if (aName === "__proto__") aName = "#__proto__";
        if (oldVal !== void 0) {
          if (this.options.trimValues) {
            oldVal = oldVal.trim();
          }
          oldVal = this.replaceEntitiesValue(oldVal);
          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);
          if (newVal === null || newVal === void 0) {
            attrs[aName] = oldVal;
          } else if (typeof newVal !== typeof oldVal || newVal !== oldVal) {
            attrs[aName] = newVal;
          } else {
            attrs[aName] = parseValue(
              oldVal,
              this.options.parseAttributeValue,
              this.options.numberParseOptions
            );
          }
        } else if (this.options.allowBooleanAttributes) {
          attrs[aName] = true;
        }
      }
    }
    if (!Object.keys(attrs).length) {
      return;
    }
    if (this.options.attributesGroupName) {
      const attrCollection = {};
      attrCollection[this.options.attributesGroupName] = attrs;
      return attrCollection;
    }
    return attrs;
  }
}
const parseXml = function(xmlData) {
  xmlData = xmlData.replace(/\r\n?/g, "\n");
  const xmlObj = new XmlNode("!xml");
  let currentNode = xmlObj;
  let textData = "";
  let jPath = "";
  for (let i3 = 0; i3 < xmlData.length; i3++) {
    const ch = xmlData[i3];
    if (ch === "<") {
      if (xmlData[i3 + 1] === "/") {
        const closeIndex = findClosingIndex(xmlData, ">", i3, "Closing Tag is not closed.");
        let tagName = xmlData.substring(i3 + 2, closeIndex).trim();
        if (this.options.removeNSPrefix) {
          const colonIndex = tagName.indexOf(":");
          if (colonIndex !== -1) {
            tagName = tagName.substr(colonIndex + 1);
          }
        }
        if (this.options.transformTagName) {
          tagName = this.options.transformTagName(tagName);
        }
        if (currentNode) {
          textData = this.saveTextToParentTag(textData, currentNode, jPath);
        }
        const lastTagName = jPath.substring(jPath.lastIndexOf(".") + 1);
        if (tagName && this.options.unpairedTags.indexOf(tagName) !== -1) {
          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);
        }
        let propIndex = 0;
        if (lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1) {
          propIndex = jPath.lastIndexOf(".", jPath.lastIndexOf(".") - 1);
          this.tagsNodeStack.pop();
        } else {
          propIndex = jPath.lastIndexOf(".");
        }
        jPath = jPath.substring(0, propIndex);
        currentNode = this.tagsNodeStack.pop();
        textData = "";
        i3 = closeIndex;
      } else if (xmlData[i3 + 1] === "?") {
        let tagData = readTagExp(xmlData, i3, false, "?>");
        if (!tagData) throw new Error("Pi Tag is not closed.");
        textData = this.saveTextToParentTag(textData, currentNode, jPath);
        if (this.options.ignoreDeclaration && tagData.tagName === "?xml" || this.options.ignorePiTags) ;
        else {
          const childNode = new XmlNode(tagData.tagName);
          childNode.add(this.options.textNodeName, "");
          if (tagData.tagName !== tagData.tagExp && tagData.attrExpPresent) {
            childNode[":@"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);
          }
          this.addChild(currentNode, childNode, jPath, i3);
        }
        i3 = tagData.closeIndex + 1;
      } else if (xmlData.substr(i3 + 1, 3) === "!--") {
        const endIndex = findClosingIndex(xmlData, "-->", i3 + 4, "Comment is not closed.");
        if (this.options.commentPropName) {
          const comment = xmlData.substring(i3 + 4, endIndex - 2);
          textData = this.saveTextToParentTag(textData, currentNode, jPath);
          currentNode.add(this.options.commentPropName, [{ [this.options.textNodeName]: comment }]);
        }
        i3 = endIndex;
      } else if (xmlData.substr(i3 + 1, 2) === "!D") {
        const result = readDocType(xmlData, i3);
        this.docTypeEntities = result.entities;
        i3 = result.i;
      } else if (xmlData.substr(i3 + 1, 2) === "![") {
        const closeIndex = findClosingIndex(xmlData, "]]>", i3, "CDATA is not closed.") - 2;
        const tagExp = xmlData.substring(i3 + 9, closeIndex);
        textData = this.saveTextToParentTag(textData, currentNode, jPath);
        let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);
        if (val == void 0) val = "";
        if (this.options.cdataPropName) {
          currentNode.add(this.options.cdataPropName, [{ [this.options.textNodeName]: tagExp }]);
        } else {
          currentNode.add(this.options.textNodeName, val);
        }
        i3 = closeIndex + 2;
      } else {
        let result = readTagExp(xmlData, i3, this.options.removeNSPrefix);
        let tagName = result.tagName;
        const rawTagName = result.rawTagName;
        let tagExp = result.tagExp;
        let attrExpPresent = result.attrExpPresent;
        let closeIndex = result.closeIndex;
        if (this.options.transformTagName) {
          tagName = this.options.transformTagName(tagName);
        }
        if (currentNode && textData) {
          if (currentNode.tagname !== "!xml") {
            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);
          }
        }
        const lastTag = currentNode;
        if (lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1) {
          currentNode = this.tagsNodeStack.pop();
          jPath = jPath.substring(0, jPath.lastIndexOf("."));
        }
        if (tagName !== xmlObj.tagname) {
          jPath += jPath ? "." + tagName : tagName;
        }
        const startIndex = i3;
        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {
          let tagContent = "";
          if (tagExp.length > 0 && tagExp.lastIndexOf("/") === tagExp.length - 1) {
            if (tagName[tagName.length - 1] === "/") {
              tagName = tagName.substr(0, tagName.length - 1);
              jPath = jPath.substr(0, jPath.length - 1);
              tagExp = tagName;
            } else {
              tagExp = tagExp.substr(0, tagExp.length - 1);
            }
            i3 = result.closeIndex;
          } else if (this.options.unpairedTags.indexOf(tagName) !== -1) {
            i3 = result.closeIndex;
          } else {
            const result2 = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);
            if (!result2) throw new Error(`Unexpected end of ${rawTagName}`);
            i3 = result2.i;
            tagContent = result2.tagContent;
          }
          const childNode = new XmlNode(tagName);
          if (tagName !== tagExp && attrExpPresent) {
            childNode[":@"] = this.buildAttributesMap(tagExp, jPath, tagName);
          }
          if (tagContent) {
            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);
          }
          jPath = jPath.substr(0, jPath.lastIndexOf("."));
          childNode.add(this.options.textNodeName, tagContent);
          this.addChild(currentNode, childNode, jPath, startIndex);
        } else {
          if (tagExp.length > 0 && tagExp.lastIndexOf("/") === tagExp.length - 1) {
            if (tagName[tagName.length - 1] === "/") {
              tagName = tagName.substr(0, tagName.length - 1);
              jPath = jPath.substr(0, jPath.length - 1);
              tagExp = tagName;
            } else {
              tagExp = tagExp.substr(0, tagExp.length - 1);
            }
            if (this.options.transformTagName) {
              tagName = this.options.transformTagName(tagName);
            }
            const childNode = new XmlNode(tagName);
            if (tagName !== tagExp && attrExpPresent) {
              childNode[":@"] = this.buildAttributesMap(tagExp, jPath, tagName);
            }
            this.addChild(currentNode, childNode, jPath, startIndex);
            jPath = jPath.substr(0, jPath.lastIndexOf("."));
          } else {
            const childNode = new XmlNode(tagName);
            this.tagsNodeStack.push(currentNode);
            if (tagName !== tagExp && attrExpPresent) {
              childNode[":@"] = this.buildAttributesMap(tagExp, jPath, tagName);
            }
            this.addChild(currentNode, childNode, jPath, startIndex);
            currentNode = childNode;
          }
          textData = "";
          i3 = closeIndex;
        }
      }
    } else {
      textData += xmlData[i3];
    }
  }
  return xmlObj.child;
};
function addChild(currentNode, childNode, jPath, startIndex) {
  if (!this.options.captureMetaData) startIndex = void 0;
  const result = this.options.updateTag(childNode.tagname, jPath, childNode[":@"]);
  if (result === false) ;
  else if (typeof result === "string") {
    childNode.tagname = result;
    currentNode.addChild(childNode, startIndex);
  } else {
    currentNode.addChild(childNode, startIndex);
  }
}
const replaceEntitiesValue = function(val) {
  if (this.options.processEntities) {
    for (let entityName in this.docTypeEntities) {
      const entity = this.docTypeEntities[entityName];
      val = val.replace(entity.regx, entity.val);
    }
    for (let entityName in this.lastEntities) {
      const entity = this.lastEntities[entityName];
      val = val.replace(entity.regex, entity.val);
    }
    if (this.options.htmlEntities) {
      for (let entityName in this.htmlEntities) {
        const entity = this.htmlEntities[entityName];
        val = val.replace(entity.regex, entity.val);
      }
    }
    val = val.replace(this.ampEntity.regex, this.ampEntity.val);
  }
  return val;
};
function saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {
  if (textData) {
    if (isLeafNode === void 0) isLeafNode = currentNode.child.length === 0;
    textData = this.parseTextData(
      textData,
      currentNode.tagname,
      jPath,
      false,
      currentNode[":@"] ? Object.keys(currentNode[":@"]).length !== 0 : false,
      isLeafNode
    );
    if (textData !== void 0 && textData !== "")
      currentNode.add(this.options.textNodeName, textData);
    textData = "";
  }
  return textData;
}
function isItStopNode(stopNodes, jPath, currentTagName) {
  const allNodesExp = "*." + currentTagName;
  for (const stopNodePath in stopNodes) {
    const stopNodeExp = stopNodes[stopNodePath];
    if (allNodesExp === stopNodeExp || jPath === stopNodeExp) return true;
  }
  return false;
}
function tagExpWithClosingIndex(xmlData, i3, closingChar = ">") {
  let attrBoundary;
  let tagExp = "";
  for (let index = i3; index < xmlData.length; index++) {
    let ch = xmlData[index];
    if (attrBoundary) {
      if (ch === attrBoundary) attrBoundary = "";
    } else if (ch === '"' || ch === "'") {
      attrBoundary = ch;
    } else if (ch === closingChar[0]) {
      if (closingChar[1]) {
        if (xmlData[index + 1] === closingChar[1]) {
          return {
            data: tagExp,
            index
          };
        }
      } else {
        return {
          data: tagExp,
          index
        };
      }
    } else if (ch === "	") {
      ch = " ";
    }
    tagExp += ch;
  }
}
function findClosingIndex(xmlData, str, i3, errMsg) {
  const closingIndex = xmlData.indexOf(str, i3);
  if (closingIndex === -1) {
    throw new Error(errMsg);
  } else {
    return closingIndex + str.length - 1;
  }
}
function readTagExp(xmlData, i3, removeNSPrefix, closingChar = ">") {
  const result = tagExpWithClosingIndex(xmlData, i3 + 1, closingChar);
  if (!result) return;
  let tagExp = result.data;
  const closeIndex = result.index;
  const separatorIndex = tagExp.search(/\s/);
  let tagName = tagExp;
  let attrExpPresent = true;
  if (separatorIndex !== -1) {
    tagName = tagExp.substring(0, separatorIndex);
    tagExp = tagExp.substring(separatorIndex + 1).trimStart();
  }
  const rawTagName = tagName;
  if (removeNSPrefix) {
    const colonIndex = tagName.indexOf(":");
    if (colonIndex !== -1) {
      tagName = tagName.substr(colonIndex + 1);
      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);
    }
  }
  return {
    tagName,
    tagExp,
    closeIndex,
    attrExpPresent,
    rawTagName
  };
}
function readStopNodeData(xmlData, tagName, i3) {
  const startIndex = i3;
  let openTagCount = 1;
  for (; i3 < xmlData.length; i3++) {
    if (xmlData[i3] === "<") {
      if (xmlData[i3 + 1] === "/") {
        const closeIndex = findClosingIndex(xmlData, ">", i3, `${tagName} is not closed`);
        let closeTagName = xmlData.substring(i3 + 2, closeIndex).trim();
        if (closeTagName === tagName) {
          openTagCount--;
          if (openTagCount === 0) {
            return {
              tagContent: xmlData.substring(startIndex, i3),
              i: closeIndex
            };
          }
        }
        i3 = closeIndex;
      } else if (xmlData[i3 + 1] === "?") {
        const closeIndex = findClosingIndex(xmlData, "?>", i3 + 1, "StopNode is not closed.");
        i3 = closeIndex;
      } else if (xmlData.substr(i3 + 1, 3) === "!--") {
        const closeIndex = findClosingIndex(xmlData, "-->", i3 + 3, "StopNode is not closed.");
        i3 = closeIndex;
      } else if (xmlData.substr(i3 + 1, 2) === "![") {
        const closeIndex = findClosingIndex(xmlData, "]]>", i3, "StopNode is not closed.") - 2;
        i3 = closeIndex;
      } else {
        const tagData = readTagExp(xmlData, i3, ">");
        if (tagData) {
          const openTagName = tagData && tagData.tagName;
          if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length - 1] !== "/") {
            openTagCount++;
          }
          i3 = tagData.closeIndex;
        }
      }
    }
  }
}
function parseValue(val, shouldParse, options) {
  if (shouldParse && typeof val === "string") {
    const newval = val.trim();
    if (newval === "true") return true;
    else if (newval === "false") return false;
    else return toNumber(val, options);
  } else {
    if (isExist(val)) {
      return val;
    } else {
      return "";
    }
  }
}
const METADATA_SYMBOL = XmlNode.getMetaDataSymbol();
function prettify(node, options) {
  return compress(node, options);
}
function compress(arr, options, jPath) {
  let text;
  const compressedObj = {};
  for (let i3 = 0; i3 < arr.length; i3++) {
    const tagObj = arr[i3];
    const property = propName(tagObj);
    let newJpath = "";
    if (jPath === void 0) newJpath = property;
    else newJpath = jPath + "." + property;
    if (property === options.textNodeName) {
      if (text === void 0) text = tagObj[property];
      else text += "" + tagObj[property];
    } else if (property === void 0) {
      continue;
    } else if (tagObj[property]) {
      let val = compress(tagObj[property], options, newJpath);
      const isLeaf = isLeafTag(val, options);
      if (tagObj[METADATA_SYMBOL] !== void 0) {
        val[METADATA_SYMBOL] = tagObj[METADATA_SYMBOL];
      }
      if (tagObj[":@"]) {
        assignAttributes(val, tagObj[":@"], newJpath, options);
      } else if (Object.keys(val).length === 1 && val[options.textNodeName] !== void 0 && !options.alwaysCreateTextNode) {
        val = val[options.textNodeName];
      } else if (Object.keys(val).length === 0) {
        if (options.alwaysCreateTextNode) val[options.textNodeName] = "";
        else val = "";
      }
      if (compressedObj[property] !== void 0 && compressedObj.hasOwnProperty(property)) {
        if (!Array.isArray(compressedObj[property])) {
          compressedObj[property] = [compressedObj[property]];
        }
        compressedObj[property].push(val);
      } else {
        if (options.isArray(property, newJpath, isLeaf)) {
          compressedObj[property] = [val];
        } else {
          compressedObj[property] = val;
        }
      }
    }
  }
  if (typeof text === "string") {
    if (text.length > 0) compressedObj[options.textNodeName] = text;
  } else if (text !== void 0) compressedObj[options.textNodeName] = text;
  return compressedObj;
}
function propName(obj) {
  const keys = Object.keys(obj);
  for (let i3 = 0; i3 < keys.length; i3++) {
    const key = keys[i3];
    if (key !== ":@") return key;
  }
}
function assignAttributes(obj, attrMap, jpath, options) {
  if (attrMap) {
    const keys = Object.keys(attrMap);
    const len = keys.length;
    for (let i3 = 0; i3 < len; i3++) {
      const atrrName = keys[i3];
      if (options.isArray(atrrName, jpath + "." + atrrName, true, true)) {
        obj[atrrName] = [attrMap[atrrName]];
      } else {
        obj[atrrName] = attrMap[atrrName];
      }
    }
  }
}
function isLeafTag(obj, options) {
  const { textNodeName } = options;
  const propCount = Object.keys(obj).length;
  if (propCount === 0) {
    return true;
  }
  if (propCount === 1 && (obj[textNodeName] || typeof obj[textNodeName] === "boolean" || obj[textNodeName] === 0)) {
    return true;
  }
  return false;
}
class XMLParser {
  constructor(options) {
    this.externalEntities = {};
    this.options = buildOptions(options);
  }
  /**
   * Parse XML dats to JS object 
   * @param {string|Buffer} xmlData 
   * @param {boolean|Object} validationOption 
   */
  parse(xmlData, validationOption) {
    if (typeof xmlData === "string") ;
    else if (xmlData.toString) {
      xmlData = xmlData.toString();
    } else {
      throw new Error("XML data is accepted in String or Bytes[] form.");
    }
    if (validationOption) {
      if (validationOption === true) validationOption = {};
      const result = validate(xmlData, validationOption);
      if (result !== true) {
        throw Error(`${result.err.msg}:${result.err.line}:${result.err.col}`);
      }
    }
    const orderedObjParser = new OrderedObjParser(this.options);
    orderedObjParser.addExternalEntities(this.externalEntities);
    const orderedResult = orderedObjParser.parseXml(xmlData);
    if (this.options.preserveOrder || orderedResult === void 0) return orderedResult;
    else return prettify(orderedResult, this.options);
  }
  /**
   * Add Entity which is not by default supported by this library
   * @param {string} key 
   * @param {string} value 
   */
  addEntity(key, value) {
    if (value.indexOf("&") !== -1) {
      throw new Error("Entity value can't have '&'");
    } else if (key.indexOf("&") !== -1 || key.indexOf(";") !== -1) {
      throw new Error("An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'");
    } else if (value === "&") {
      throw new Error("An entity with value '&' is not permitted");
    } else {
      this.externalEntities[key] = value;
    }
  }
  /**
   * Returns a Symbol that can be used to access the metadata
   * property on a node.
   * 
   * If Symbol is not available in the environment, an ordinary property is used
   * and the name of the property is here returned.
   * 
   * The XMLMetaData property is only present when `captureMetaData`
   * is true in the options.
   */
  static getMetaDataSymbol() {
    return XmlNode.getMetaDataSymbol();
  }
}
function isDev() {
  try {
    return typeof window !== "undefined" && window.location?.protocol === "http:";
  } catch {
    return false;
  }
}
function parseSettingFromXml(xmlText) {
  const clean = (xmlText || "").replace(/^\uFEFF/, "").trim();
  if (!clean) return null;
  const parser = new XMLParser({
    ignoreAttributes: false,
    attributeNamePrefix: "",
    trimValues: true,
    parseTagValue: true
  });
  const parsed = parser.parse(clean);
  return parsed?.SETTING ?? parsed?.setting ?? null;
}
async function readConfigXmlTextDev() {
  const res = await axios.get(`/Config.xml?t=${Date.now()}`, {
    responseType: "text"
  });
  return res.data;
}
async function readSettingProd() {
  const w2 = window;
  try {
    const maybeGetXml = w2?.config?.getXml;
    if (typeof maybeGetXml === "function") {
      const xmlText = await maybeGetXml();
      const setting = parseSettingFromXml(xmlText);
      if (setting) return setting;
    }
  } catch (e2) {
    console.warn("[Config] preload window.config.getXml 실패:", e2);
  }
  try {
    const inv = w2?.electron?.invoke;
    if (typeof inv === "function") {
      const xmlText = await inv("config:getXml");
      if (typeof xmlText === "string" && xmlText.length > 0) {
        const setting = parseSettingFromXml(xmlText);
        if (setting) return setting;
      }
    }
  } catch (e2) {
    console.warn("[Config] electron.invoke('config:getXml') 실패:", e2);
  }
  try {
    const maybeGet = w2?.config?.get;
    if (typeof maybeGet === "function") {
      const cfgObj = await maybeGet();
      const setting = cfgObj?.SETTING ?? cfgObj?.setting ?? cfgObj;
      if (setting) return setting;
    }
  } catch (e2) {
    console.warn("[Config] preload window.config.get 실패:", e2);
  }
  throw new Error("[Config] prod에서 Config.xml을 읽을 브리지가 없습니다.");
}
async function getSetting() {
  if (isDev()) {
    const xmlText = await readConfigXmlTextDev();
    return parseSettingFromXml(xmlText);
  }
  return await readSettingProd();
}
async function loadConfigClient() {
  try {
    const setting = await getSetting();
    if (!setting) {
      console.warn("[Config] SETTING 노드 없음");
      return null;
    }
    const input = String(setting?.Common?.INPUT ?? "N").toUpperCase();
    const dbsql = setting.DBSQL ?? {};
    const host = setting.HOST ?? {};
    const commRoot = setting.Comm ?? setting.COMM ?? {};
    const passwordValue = setting.PASSWORD?.PASS ?? "";
    const commPorts = [
      { settings: String(commRoot.SETTINGS ?? ""), port: String(commRoot.COMMPORT ?? "") },
      { settings: String(commRoot.SETTINGS1 ?? ""), port: String(commRoot.COMMPORT1 ?? "") },
      { settings: String(commRoot.SETTINGS2 ?? ""), port: String(commRoot.COMMPORT2 ?? "") }
    ].filter((p3) => p3.settings || p3.port);
    const pass = setting?.PRINT?.PASSCARD ?? {};
    const previewYN = String(pass?.PREVIEW ?? "N").toUpperCase() === "Y" ? "Y" : "N";
    const passcard = {
      deviceName: String(pass?.DEVICE_NAME ?? ""),
      preview: previewYN,
      widthMM: Number(pass?.WIDTH_MM ?? 79),
      heightMM: Number(pass?.HEIGHT_MM ?? 60)
    };
    const config = {
      input,
      db: {
        user: String(dbsql.USR ?? ""),
        password: String(dbsql.PWD ?? ""),
        dataSource: String(dbsql.DATA_SOURCE ?? ""),
        dbName: String(dbsql.DB_NAME ?? "")
      },
      host: {
        mainHost: String(host.HOST ?? ""),
        mainPort: String(host.PORT ?? ""),
        subHost: String(host.HOST1 ?? ""),
        subPort: String(host.PORT1 ?? "")
      },
      comm: { portSettings: commPorts },
      password: String(passwordValue),
      print: { passcard }
    };
    return config;
  } catch (err) {
    console.error("❌ Config.xml 로드 실패(렌더러/typed):", err);
    return null;
  }
}
const backIcon = "" + new URL("Back-Icon-LaKR0QPg.png", import.meta.url).href;
const loadingIcon = "" + new URL("loading1-CE6j6MZi.png", import.meta.url).href;
function E_ScanOutgoing() {
  const navigate = useNavigate();
  reactExports.useEffect(() => {
    initI18n().catch(() => {
    });
  }, []);
  const [plantList, setPlantList] = reactExports.useState([]);
  const [storageList, setStorageList] = reactExports.useState([]);
  const [workcenterList, setWorkcenterList] = reactExports.useState([]);
  const [selectedPlant, setSelectedPlant] = reactExports.useState("C200");
  const [selectedStorage, setSelectedStorage] = reactExports.useState("512C");
  const [selectedWorkcenter, setSelectedWorkcenter] = reactExports.useState("2CFSS");
  const [selectedDate, setSelectedDate] = reactExports.useState("");
  const [plantTimezone, setPlantTimezone] = reactExports.useState(null);
  const [timeSource, setTimeSource] = reactExports.useState(null);
  const selectedPlantRef = reactExports.useRef(selectedPlant);
  const selectedStorageRef = reactExports.useRef(selectedStorage);
  const selectedWorkcenterRef = reactExports.useRef(selectedWorkcenter);
  const [autoRefresh, setAutoRefresh] = reactExports.useState(true);
  const intervalRef = reactExports.useRef(null);
  const [isLoading, setIsLoading] = reactExports.useState(false);
  const [loadingStartTime, setLoadingStartTime] = reactExports.useState(null);
  const [elapsedTime, setElapsedTime] = reactExports.useState("00:00:00");
  const [lineList, setLineList] = reactExports.useState([]);
  const [selectedLine, setSelectedLine] = reactExports.useState("ALL");
  const [selectedCell, setSelectedCell] = reactExports.useState(null);
  const [detailRows, setDetailRows] = reactExports.useState([]);
  const [tableData, setTableData] = reactExports.useState([]);
  const [config, setConfig] = reactExports.useState(null);
  const [pairInfo, setPairInfo] = reactExports.useState([]);
  const [pairSummary, setPairSummary] = reactExports.useState({ input: 0, production: 0 });
  const [nowTime, setNowTime] = reactExports.useState(/* @__PURE__ */ new Date());
  const [useInputY, setUseInputY] = reactExports.useState(null);
  const [selectedRow, setSelectedRow] = reactExports.useState(null);
  const [dialogOpen, setDialogOpen] = reactExports.useState(false);
  const [dialogClose, setDialogClose] = reactExports.useState(false);
  const [plantSpanMap, setPlantSpanMap] = reactExports.useState({});
  const [lineSpanMap, setLineSpanMap] = reactExports.useState({});
  const [modelSpanMap, setModelSpanMap] = reactExports.useState({});
  const [selectedPlantName, setSelectedPlantName] = reactExports.useState("");
  const [selectedLineName, setSelectedLineName] = reactExports.useState("");
  const [filteredData, setFilteredData] = reactExports.useState([]);
  const [firstLoadDone, setFirstLoadDone] = reactExports.useState(false);
  const [hasInitialAutoFetched, setHasInitialAutoFetched] = reactExports.useState(false);
  const formatYYYYMMDDInTZ = (d2, tz) => {
    return new Intl.DateTimeFormat("en-CA", {
      timeZone: tz,
      year: "numeric",
      month: "2-digit",
      day: "2-digit"
    }).format(d2);
  };
  const formatTimeInTZ = (d2, tz) => {
    return d2.toLocaleTimeString("ko-KR", {
      hour12: false,
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit",
      timeZone: tz
    });
  };
  reactExports.useEffect(() => {
    selectedPlantRef.current = selectedPlant;
  }, [selectedPlant]);
  reactExports.useEffect(() => {
    selectedStorageRef.current = selectedStorage;
  }, [selectedStorage]);
  reactExports.useEffect(() => {
    selectedWorkcenterRef.current = selectedWorkcenter;
  }, [selectedWorkcenter]);
  reactExports.useEffect(() => {
    loadConfigClient().then((cfg) => {
      if (cfg) setConfig(cfg);
      else console.warn("⚠️ config 로딩 실패");
    });
  }, []);
  reactExports.useEffect(() => {
    const time = window.time;
    if (!time) {
      console.warn("⚠ time bridge not found on window");
      const saved = localStorage.getItem("E_SCAN_DATE");
      if (saved) setSelectedDate(saved);
      return;
    }
    let alreadyApplied = false;
    const applyCtx = (ctx) => {
      if (!ctx) return;
      alreadyApplied = true;
      const tz = ctx?.timeZone ?? ctx?.timezone ?? ctx?.tz ?? null;
      const wd = ctx?.workDate ?? ctx?.workday ?? ctx?.currentWorkday ?? "";
      const src = ctx?.source ?? null;
      console.log("[TIME ctx]", { src, tz, wd });
      setPlantTimezone(tz);
      setSelectedDate(wd || localStorage.getItem("E_SCAN_DATE") || "");
      setTimeSource(src);
      if (wd) localStorage.setItem("E_SCAN_DATE", wd);
    };
    const off = time.onReadyOnce((ctx) => applyCtx(ctx));
    time.getContext().then((ctx) => {
      if (!alreadyApplied) applyCtx(ctx);
    }).catch(() => {
      const saved = localStorage.getItem("E_SCAN_DATE");
      if (saved) setSelectedDate(saved);
    });
    return () => {
      try {
        off?.();
      } catch {
      }
    };
  }, []);
  reactExports.useEffect(() => {
    const timer = setInterval(() => setNowTime(/* @__PURE__ */ new Date()), 1e3);
    return () => clearInterval(timer);
  }, []);
  reactExports.useEffect(() => {
    console.log("📊 테이블 데이터 확인:", tableData);
  }, [tableData]);
  reactExports.useEffect(() => {
    if (!autoRefresh) return;
    if (!selectedDate) return;
    const fixedDate = selectedDate.replace(/-/g, "");
    intervalRef.current = setInterval(() => {
      fetchTableDataWithParams(
        fixedDate,
        selectedPlantRef.current,
        selectedStorageRef.current,
        selectedWorkcenterRef.current
      );
      fetchSummaryData(
        fixedDate,
        selectedPlantRef.current,
        selectedStorageRef.current,
        selectedWorkcenterRef.current
      );
    }, 6e4);
    return () => {
      if (intervalRef.current) clearInterval(intervalRef.current);
    };
  }, [selectedDate, autoRefresh]);
  reactExports.useEffect(() => {
    let timerId;
    let startTime;
    if (isLoading) {
      const updateTimer = () => {
        const elapsedMs = Date.now() - startTime;
        const totalSeconds = Math.floor(elapsedMs / 1e3);
        const hours = String(Math.floor(totalSeconds / 3600)).padStart(2, "0");
        const minutes = String(Math.floor(totalSeconds % 3600 / 60)).padStart(2, "0");
        const seconds = String(totalSeconds % 60).padStart(2, "0");
        const timerEl = document.getElementById("loading-time");
        if (timerEl) {
          timerEl.textContent = `${hours}:${minutes}:${seconds}`;
        }
      };
      startTime = Date.now();
      updateTimer();
      timerId = setInterval(updateTimer, 1e3);
    }
    return () => {
      clearInterval(timerId);
      const timerEl = document.getElementById("loading-time");
      if (timerEl) {
        timerEl.textContent = "00:00:00";
      }
    };
  }, [isLoading]);
  reactExports.useEffect(() => {
    const initCombos = async () => {
      const plantData = await fetchCombo("PT");
      setPlantList(plantData);
      const slData = await fetchCombo("SL", selectedPlant);
      setStorageList(slData);
      const wcData = await fetchCombo("WC", selectedPlant);
      setWorkcenterList(wcData);
    };
    initCombos();
  }, []);
  const updateDependentCombos = async (plantCode) => {
    const sl = await fetchCombo("SL", plantCode);
    const wc = await fetchCombo("WC", plantCode);
    setStorageList(sl);
    setWorkcenterList(wc);
    const newStorage = sl.length > 0 ? sl[0].CODE : "";
    const newCenter = wc.length > 0 ? wc[0].CODE : "";
    setSelectedStorage(newStorage);
    setSelectedWorkcenter(newCenter);
  };
  reactExports.useEffect(() => {
    if (selectedPlant) {
      updateDependentCombos(selectedPlant);
    }
  }, [selectedPlant]);
  reactExports.useEffect(() => {
    if (!selectedDate) return;
    const fixedDate = selectedDate.replace(/-/g, "");
    if (selectedPlant && selectedStorage && selectedWorkcenter) {
      console.log("📡 API 호출 (확정된 상태값)", {
        plant: selectedPlant,
        storage: selectedStorage,
        center: selectedWorkcenter
      });
      fetchTableDataWithParams(fixedDate, selectedPlant, selectedStorage, selectedWorkcenter);
      fetchSummaryData(fixedDate, selectedPlant, selectedStorage, selectedWorkcenter);
    }
  }, [selectedDate, selectedPlant, selectedStorage, selectedWorkcenter]);
  reactExports.useEffect(() => {
    console.log("🧪 plantList 상태", plantList);
  }, [plantList]);
  reactExports.useEffect(() => {
    if (!hasInitialAutoFetched && selectedDate && selectedPlant && selectedLine) {
      console.log("📦 [초기 1회 자동조회 실행]", {
        selectedDate,
        selectedPlant,
        selectedLine
      });
      const fixedDate = selectedDate.replace(/-/g, "");
      fetchTableDataWithParams(fixedDate, selectedPlant, selectedStorage, selectedWorkcenter);
      fetchSummaryData(fixedDate, selectedPlant, selectedStorage, selectedWorkcenter);
      setHasInitialAutoFetched(true);
    }
  }, [selectedDate, selectedPlant, selectedLine]);
  const getRowSpanMap = (data, keyFn) => {
    const map = {};
    let prevKey = "";
    let count = 0;
    data.forEach((row, index) => {
      const currentKey = keyFn(row);
      if (currentKey === prevKey) {
        count++;
        map[index - count].span = (map[index - count].span || 1) + 1;
        map[index] = { span: 0 };
      } else {
        count = 0;
        map[index] = { span: 1 };
      }
      prevKey = currentKey;
    });
    return map;
  };
  const handleCellClick = async (row) => {
    console.log("[CLICK] order row =", row);
    try {
      const cfg = await window.config.get();
      console.log("[CLICK] cfg =", cfg);
      const raw = (cfg?.Common?.INPUT ?? cfg?.input ?? "").toString().toUpperCase();
      const inputYN = raw === "Y";
      console.log("[CLICK] inputYN =", inputYN);
      setSelectedRow(row);
      setSelectedCell(void 0);
      setDetailRows([]);
      setUseInputY(inputYN);
      setDialogOpen(true);
      console.log("[CLICK] setDialogOpen(true)");
    } catch (err) {
      console.error("❌ handleCellClick 오류:", err);
    }
  };
  reactExports.useEffect(() => {
    if (tableData.length > 0) {
      setPlantSpanMap(getRowSpanMap(tableData, (row) => row.PLANT));
      setLineSpanMap(getRowSpanMap(tableData, (row) => `${row.PLANT}_${row.LINE}`));
      setModelSpanMap(getRowSpanMap(tableData, (row) => `${row.PLANT}_${row.LINE}_${row.MODEL_NAME}`));
    }
  }, [tableData]);
  const handleSearch = () => {
    if (!selectedDate) {
      alert("날짜가 준비되지 않았습니다. 시간 정보를 다시 불러와 주세요.");
      return;
    }
    console.log("🔍 Search 수동조회", {
      selectedDate,
      selectedPlant,
      selectedStorage,
      selectedWorkcenter
    });
    setTableData([]);
    const fixedDate = selectedDate.replace(/-/g, "");
    fetchTableDataWithParams(fixedDate, selectedPlant, selectedStorage, selectedWorkcenter);
    fetchSummaryData(fixedDate, selectedPlant, selectedStorage, selectedWorkcenter);
  };
  const fetchTableDataWithParams = async (date, plant, storage, center) => {
    try {
      setIsLoading(true);
      setTableData([]);
      const ax = await getAxios();
      const res = await ax.get("/api/mssql/escan-main", {
        params: { plant, work_date: date, storage, center }
      });
      const newData = res.data;
      if (Array.isArray(newData) && newData.length > 0) {
        setTableData(newData);
      } else {
        setTableData([]);
      }
    } catch (err) {
      console.error("❌ 테이블 조회 실패:", err);
      setTableData([]);
    } finally {
      setIsLoading(false);
    }
  };
  const fetchCombo = async (type, plantCd = "C200") => {
    try {
      const ax = await getAxios();
      const res = await ax.get("/api/mssql/basic-info", {
        params: { type, plant_cd: plantCd }
      });
      const data = res.data;
      if (Array.isArray(data)) {
        return data;
      } else {
        console.warn(`⚠ ${type} 응답이 배열이 아님`, data);
        return [];
      }
    } catch (err) {
      console.error(`❌ ${type} 콤보 불러오기 실패:`, err);
      return [];
    }
  };
  const fetchSummaryData = async (date, plant, storage, center) => {
    try {
      const ax = await getAxios();
      const res = await ax.get("/api/mssql/escan-extra", {
        params: { plant, work_date: date, storage, center }
      });
      if (Array.isArray(res.data) && res.data.length > 0) {
        const { INPUT_QTY, PROD_QTY } = res.data[0];
        setPairSummary({
          input: INPUT_QTY ?? 0,
          production: PROD_QTY ?? 0
        });
      } else {
        setPairSummary({ input: 0, production: 0 });
      }
    } catch (err) {
      console.error("❌ escan-extra 요약 데이터 조회 실패:", err);
      setPairSummary({ input: 0, production: 0 });
    }
  };
  const handleDetailConfirm = () => {
    if (!selectedDate) {
      alert("날짜가 준비되지 않았습니다. 시간 정보를 다시 불러와 주세요.");
      return;
    }
    const fixedDate = selectedDate.replace(/-/g, "");
    fetchTableDataWithParams(fixedDate, selectedPlant, selectedStorage, selectedWorkcenter);
    fetchSummaryData(fixedDate, selectedPlant, selectedStorage, selectedWorkcenter);
  };
  const initResizable = (th) => {
    if (!th) return;
    const resizer = th.querySelector(".resizer");
    if (!resizer) return;
    let startX, startWidth;
    const onMouseMove = (e2) => {
      const newWidth = startWidth + e2.clientX - startX;
      th.style.width = `${newWidth}px`;
    };
    const onMouseUp = () => {
      document.removeEventListener("mousemove", onMouseMove);
      document.removeEventListener("mouseup", onMouseUp);
    };
    resizer.addEventListener("mousedown", (e2) => {
      startX = e2.clientX;
      startWidth = th.offsetWidth;
      document.addEventListener("mousemove", onMouseMove);
      document.addEventListener("mouseup", onMouseUp);
    });
  };
  function getRowStyle(row) {
    const color = row.COLOR?.toUpperCase();
    switch (color) {
      case "NOSET":
        return { backgroundColor: "lightgray", color: "black" };
      // 등록만 됨
      case "WHITE":
        return { backgroundColor: "white", color: "black" };
      // 생산 시작 전
      case "ORANGE":
        return { backgroundColor: "orange", color: "black" };
      // 일부 진행
      case "GREEN":
        return { backgroundColor: "limegreen", color: "black" };
      // 당일 완료
      case "GREY":
        return { backgroundColor: "gray", color: "white" };
      // 과거 완료
      default:
        return {};
    }
  }
  const sourceDotColor = timeSource === "plant" || timeSource === "local" ? "#18a558" : "#A9A9A9";
  const sourceDotTitle = (timeSource === "plant" ? "시간 소스: DMC/Plant 표준시간" : timeSource === "local" ? "시간 소스: 로컬 PC 시간" : "시간 소스: 미정") + (plantTimezone ? ` / TZ=${plantTimezone}` : "");
  const tzDisplay = plantTimezone || Intl.DateTimeFormat().resolvedOptions().timeZone;
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(FlexBox, { style: { backgroundColor: "#0F005F", height: "5rem" }, justifyContent: "SpaceBetween", alignItems: "Center", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { style: { fontSize: "2rem", fontWeight: "bold", color: "white" }, children: t2("app.page.escan.title") }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(FlexBox, { direction: "Row", alignItems: "Start", gap: "1rem", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "img",
          {
            src: backIcon,
            alt: "Back Icon",
            onClick: () => navigate("/"),
            style: {
              width: "60px",
              height: "70px",
              padding: "0",
              marginTop: "6px",
              // ✅ 위로 올림
              cursor: "pointer"
            }
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { position: "relative", width: 24, height: 24, marginTop: "12px" }, children: timeSource === "local" ? (
          // ⬇ 로컬: 동그라미 없이 삼각형만 표시
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              title: sourceDotTitle,
              style: {
                position: "absolute",
                top: 0,
                left: 3,
                width: 0,
                height: 0,
                borderLeft: "9px solid transparent",
                borderRight: "9px solid transparent",
                borderBottom: "16px solid #18a558",
                // 초록 삼각형
                filter: "drop-shadow(0 0 2px rgba(0,0,0,0.35))",
                pointerEvents: "none"
              }
            }
          )
        ) : (
          // ⬇ 타임존(plant) 또는 미정(null): 기존처럼 동그라미
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              title: sourceDotTitle,
              style: {
                position: "absolute",
                top: 3,
                left: 3,
                width: "18px",
                height: "18px",
                borderRadius: "50%",
                backgroundColor: sourceDotColor,
                // plant=초록, 미정=회색 (기존 로직 유지)
                border: "2px solid white"
              }
            }
          )
        ) }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(FlexBox, { direction: "Column", alignItems: "End", style: { lineHeight: "1.2" }, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            Label2,
            {
              style: {
                fontSize: "2rem",
                color: "white",
                fontWeight: "bold",
                marginRight: "0.5rem"
              },
              title: tzDisplay || void 0,
              children: tzDisplay ? formatYYYYMMDDInTZ(nowTime, tzDisplay) : ""
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            Label2,
            {
              style: {
                fontSize: "2rem",
                color: "white",
                fontWeight: "bold",
                marginRight: "0.5rem"
              },
              title: tzDisplay || void 0,
              children: tzDisplay ? formatTimeInTZ(nowTime, tzDisplay) : ""
            }
          )
        ] })
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(FlexBox, { gap: "2rem", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { className: "common-label", style: { width: 90 }, children: t2("app.detail.date") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          DatePicker2,
          {
            formatPattern: "yyyy-MM-dd",
            value: selectedDate,
            style: { width: "180px" },
            onChange: (e2) => {
              const newDate = e2.detail.value;
              setSelectedDate(newDate);
              localStorage.setItem("E_SCAN_DATE", newDate);
            }
          },
          "datepicker-" + selectedDate
        )
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { className: "common-label", style: { width: 90 }, children: t2("app.common.plant") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "select",
          {
            value: selectedPlant,
            style: {
              width: "110px",
              padding: "0.4rem 0.8rem",
              margin: "0.4rem",
              borderRadius: "4px",
              border: "1px solid #ccc",
              fontSize: "1rem"
            },
            onChange: (e2) => {
              setSelectedPlant(e2.target.value);
            },
            children: Array.isArray(plantList) && plantList.map((p3) => /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: p3.CODE, children: p3.CODE }, p3.CODE))
          }
        )
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { className: "common-label", style: { width: 150 }, children: t2("app.detail.storage") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "select",
          {
            value: selectedStorage,
            style: {
              width: "180px",
              padding: "0.4rem 0.8rem",
              margin: "0.4rem",
              borderRadius: "4px",
              border: "1px solid #ccc",
              fontSize: "1rem"
            },
            onChange: (e2) => {
              setSelectedStorage(e2.target.value);
            },
            children: storageList.map((s2) => /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: s2.CODE, children: s2.CODE }, s2.CODE))
          }
        )
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { className: "common-label", style: { width: 90 }, children: t2("app.detail.line") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "select",
          {
            value: selectedWorkcenter,
            style: {
              width: "180px",
              padding: "0.4rem 0.8rem",
              margin: "0.4rem",
              borderRadius: "4px",
              border: "1px solid #ccc",
              fontSize: "1rem"
            },
            onChange: (e2) => {
              setSelectedWorkcenter(e2.target.value);
            },
            children: workcenterList.map((w2) => /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: w2.CODE, children: w2.CODE }, w2.CODE))
          }
        )
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Button2, { className: "common-button", design: "Emphasized", onClick: handleSearch, children: t2("app.button.search") }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "div",
        {
          style: {
            display: "flex",
            alignItems: "center",
            gap: "0.5rem",
            fontSize: "1.5rem",
            fontWeight: "bold",
            padding: "0.5rem 1rem",
            borderRadius: "6px",
            marginTop: "-0.3rem"
          },
          children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "input",
              {
                type: "checkbox",
                checked: autoRefresh,
                style: {
                  transform: "scale(2)",
                  marginTop: "5px"
                },
                onChange: (e2) => setAutoRefresh(e2.target.checked)
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: t2("app.checkbox.autoRefresh") })
          ]
        }
      )
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(FlexBox, { direction: "Row", gap: "0.5rem", style: { marginTop: "0.5rem", justifyContent: "flex-end" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "div",
        {
          style: {
            backgroundColor: "#3A3AFF",
            color: "white",
            fontWeight: "bold",
            fontStyle: "italic",
            padding: "0.4rem 1rem",
            borderRadius: "4px"
          },
          children: [
            t2("app.summary.input"),
            " : ",
            pairSummary.input.toLocaleString(),
            " ",
            t2("app.common.pairs")
          ]
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "div",
        {
          style: {
            backgroundColor: "#3A3AFF",
            color: "white",
            fontWeight: "bold",
            fontStyle: "italic",
            padding: "0.4rem 1rem",
            borderRadius: "4px"
          },
          children: [
            t2("app.summary.production"),
            " : ",
            pairSummary.production.toLocaleString(),
            " ",
            t2("app.common.pairs")
          ]
        }
      )
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(FlexBox, { direction: "Row", alignItems: "Center", style: { padding: "0.5rem", gap: "1rem" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", alignItems: "center", gap: "0.25rem" }, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { width: "40px", height: "30px", backgroundColor: "gray" } }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Text2, { style: { fontSize: "1.1rem" }, children: t2("app.legend.yesterdayCompleted") })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", alignItems: "center", gap: "0.25rem" }, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { width: "40px", height: "30px", backgroundColor: "lightgray" } }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Text2, { style: { fontSize: "1.1rem" }, children: t2("app.legend.notInput") })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", alignItems: "center", gap: "0.25rem" }, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { width: "40px", height: "30px", backgroundColor: "white", border: "2px solid black" } }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Text2, { style: { fontSize: "1.1rem" }, children: t2("app.legend.inputOnly") })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", alignItems: "center", gap: "0.25rem" }, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { width: "40px", height: "30px", backgroundColor: "orange" } }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Text2, { style: { fontSize: "1.1rem" }, children: t2("app.legend.todayActive") })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", alignItems: "center", gap: "0.25rem" }, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { width: "40px", height: "30px", backgroundColor: "limegreen" } }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Text2, { style: { fontSize: "1.1rem" }, children: t2("app.legend.todayCompleted") })
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { height: "100vh", display: "flex", flexDirection: "column", overflow: "hidden" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { flexShrink: 0 } }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { flexGrow: 1, overflowY: "auto", maxHeight: "calc(100vh - 220px)" }, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { minWidth: "max-content" }, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "grid-table", children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("thead", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "th",
              {
                className: "sticky-header sticky-col sticky-col-1 resizable",
                style: { border: "1px solid black", backgroundColor: "gray", color: "white", width: "3%" },
                rowSpan: 2,
                ref: (el) => initResizable(el),
                children: [
                  t2("app.table.location"),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "th",
              {
                className: "sticky-header sticky-col sticky-col-1 resizable",
                style: { border: "1px solid black", backgroundColor: "gray", color: "white", width: "3%" },
                rowSpan: 2,
                ref: (el) => initResizable(el),
                children: [
                  t2("app.detail.line"),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "th",
              {
                className: "sticky-header sticky-col sticky-col-1 resizable",
                style: { border: "1px solid black", backgroundColor: "gray", color: "white", width: "8%" },
                rowSpan: 2,
                ref: (el) => initResizable(el),
                children: [
                  t2("app.table.model"),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "th",
              {
                className: "sticky-header sticky-col sticky-col-1 resizable",
                style: { border: "1px solid black", backgroundColor: "gray", color: "white", width: "6%" },
                rowSpan: 2,
                ref: (el) => initResizable(el),
                children: [
                  t2("app.table.styleCode"),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "th",
              {
                className: "sticky-header sticky-col sticky-col-1 resizable",
                style: { border: "1px solid black", backgroundColor: "gray", color: "white", width: "4%" },
                rowSpan: 2,
                ref: (el) => initResizable(el),
                children: [
                  t2("app.table.materialCode"),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "th",
              {
                className: "sticky-header sticky-col sticky-col-1 resizable",
                style: { border: "1px solid black", backgroundColor: "gray", color: "white", width: "10%" },
                rowSpan: 2,
                ref: (el) => initResizable(el),
                children: [
                  t2("app.table.materialName"),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "th",
              {
                className: "sticky-header sticky-col sticky-col-1 resizable",
                style: { border: "1px solid black", backgroundColor: "gray", color: "white", width: "10%" },
                rowSpan: 2,
                ref: (el) => initResizable(el),
                children: [
                  t2("app.table.sfc"),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "th",
              {
                className: "sticky-header sticky-col sticky-col-1 resizable",
                style: { border: "1px solid black", backgroundColor: "gray", color: "white", width: "10%" },
                rowSpan: 2,
                ref: (el) => initResizable(el),
                children: [
                  t2("app.table.inputQty"),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "th",
              {
                className: "sticky-header sticky-col sticky-col-1 resizable",
                style: { border: "1px solid black", backgroundColor: "gray", color: "white", width: "10%" },
                rowSpan: 2,
                ref: (el) => initResizable(el),
                children: [
                  t2("app.table.prodQty"),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "th",
              {
                className: "sticky-header sticky-col sticky-col-1 resizable",
                style: { border: "1px solid black", backgroundColor: "gray", color: "white", width: "10%" },
                rowSpan: 2,
                ref: (el) => initResizable(el),
                children: [
                  t2("app.table.quantity"),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "th",
              {
                className: "sticky-header sticky-col sticky-col-1 resizable",
                style: { border: "1px solid black", backgroundColor: "gray", color: "white", width: "10%" },
                rowSpan: 2,
                ref: (el) => initResizable(el),
                children: [
                  t2("app.detail.size"),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "th",
              {
                className: "sticky-header sticky-col sticky-col-1 resizable",
                style: { border: "1px solid black", backgroundColor: "gray", color: "white", width: "10%" },
                rowSpan: 2,
                ref: (el) => initResizable(el),
                children: [
                  t2("app.detail.date"),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
                ]
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "th",
              {
                className: "sticky-header sticky-col sticky-col-1 resizable",
                style: { border: "1px solid black", backgroundColor: "gray", color: "white", width: "10%" },
                rowSpan: 2,
                ref: (el) => initResizable(el),
                children: [
                  t2("app.detail.orderNo"),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
                ]
              }
            )
          ] }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", { children: tableData.map((row, idx) => /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { style: getRowStyle(row), children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { style: { border: "1px solid black", textAlign: "center" }, children: row.PUTAWAYSTORAGELOCATION }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { style: { border: "1px solid black", textAlign: "center" }, children: row.WORK_CENTER }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { style: { border: "1px solid black", textAlign: "center" }, children: row.MODEL_CD }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { style: { border: "1px solid black", textAlign: "center" }, children: row.STYLE_CD }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { style: { border: "1px solid black", textAlign: "center" }, children: row.MATERIAL_CODE }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { style: { border: "1px solid black", textAlign: "center" }, children: row.MATERIAL_DESCRIPTION }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { style: { border: "1px solid black", textAlign: "center" }, children: row.SFC }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { style: { border: "1px solid black", textAlign: "center" }, children: row.INPUT_QTY }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { style: { border: "1px solid black", textAlign: "center" }, children: row.PROD_QTY }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { style: { border: "1px solid black", textAlign: "center" }, children: row.QUANTITY }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { style: { border: "1px solid black", textAlign: "center" }, children: row.SIZE_CD }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("td", { style: { border: "1px solid black", textAlign: "center" }, children: row.WORK_DATE }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "td",
              {
                style: { border: "1px solid black", textAlign: "center", cursor: "pointer" },
                onClick: () => handleCellClick(row),
                children: row.ORDER_NUMBER
              }
            )
          ] }, idx)) })
        ] }),
        dialogOpen && selectedRow && useInputY !== null && (useInputY ? /* @__PURE__ */ jsxRuntimeExports.jsx(
          E_ScanOutgoing_Detail_Y,
          {
            open: dialogOpen,
            onClose: () => {
              setDialogOpen(false);
              handleSearch();
            },
            data: selectedRow,
            cellInfo: null,
            rows: detailRows,
            onConfirm: handleDetailConfirm,
            plant_cd: selectedPlant,
            work_date: selectedDate
          }
        ) : /* @__PURE__ */ jsxRuntimeExports.jsx(
          E_ScanOutgoing_Detail_N,
          {
            open: dialogOpen,
            onClose: () => {
              setDialogOpen(false);
              handleSearch();
            },
            data: selectedRow,
            cellInfo: null,
            rows: detailRows,
            onConfirm: handleDetailConfirm,
            plant_cd: selectedPlant,
            work_date: selectedDate
          }
        )),
        isLoading && /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "div",
          {
            style: {
              position: "fixed",
              top: "0",
              left: "0",
              width: "100%",
              height: "100%",
              backgroundColor: "rgba(255, 255, 255, 0.85)",
              zIndex: 9999,
              display: "flex",
              justifyContent: "center",
              alignItems: "center",
              fontFamily: "Malgun Gothic"
            },
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs(
                "div",
                {
                  style: {
                    display: "flex",
                    alignItems: "center",
                    gap: "30px",
                    padding: "20px",
                    border: "2px solid gray",
                    borderRadius: "16px",
                    backgroundColor: "#fff",
                    boxShadow: "0 0 10px rgba(0,0,0,0.1)"
                  },
                  children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", flexDirection: "column", alignItems: "flex-start" }, children: [
                      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { fontSize: "30px", fontWeight: "bold", marginBottom: "10px" }, children: t2("ui.loading") }),
                      /* @__PURE__ */ jsxRuntimeExports.jsx("div", { id: "loading-time", style: { fontSize: "28px", marginBottom: "12px", color: "#07D5F4" }, children: elapsedTime }),
                      /* @__PURE__ */ jsxRuntimeExports.jsx(
                        "div",
                        {
                          style: {
                            width: "200px",
                            height: "10px",
                            background: "#ddd",
                            borderRadius: "5px",
                            overflow: "hidden",
                            position: "relative"
                          },
                          children: /* @__PURE__ */ jsxRuntimeExports.jsx(
                            "div",
                            {
                              style: {
                                width: "12px",
                                height: "12px",
                                borderRadius: "50%",
                                background: "#0078D4",
                                position: "absolute",
                                top: "-1px",
                                animation: "move-dot 1.5s linear infinite"
                              }
                            }
                          )
                        }
                      )
                    ] }),
                    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { width: "300px", height: "200px" }, children: /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: loadingIcon, alt: "Loading", style: { width: "100%", height: "100%", objectFit: "contain" } }) })
                  ]
                }
              ),
              /* @__PURE__ */ jsxRuntimeExports.jsx("style", { children: `
                  @keyframes move-dot {
                    0% { left: 0; }
                    100% { left: 188px; }
                  }
                ` })
            ]
          }
        )
      ] }) })
    ] })
  ] });
}
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n2) {
    for (var e2 = 1; e2 < arguments.length; e2++) {
      var t3 = arguments[e2];
      for (var r3 in t3) ({}).hasOwnProperty.call(t3, r3) && (n2[r3] = t3[r3]);
    }
    return n2;
  }, _extends.apply(null, arguments);
}
function _assertThisInitialized(e2) {
  if (void 0 === e2) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return e2;
}
function _setPrototypeOf(t3, e2) {
  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t4, e3) {
    return t4.__proto__ = e3, t4;
  }, _setPrototypeOf(t3, e2);
}
function _inheritsLoose(t3, o2) {
  t3.prototype = Object.create(o2.prototype), t3.prototype.constructor = t3, _setPrototypeOf(t3, o2);
}
var safeIsNaN = Number.isNaN || function ponyfill(value) {
  return typeof value === "number" && value !== value;
};
function isEqual(first, second) {
  if (first === second) {
    return true;
  }
  if (safeIsNaN(first) && safeIsNaN(second)) {
    return true;
  }
  return false;
}
function areInputsEqual(newInputs, lastInputs) {
  if (newInputs.length !== lastInputs.length) {
    return false;
  }
  for (var i3 = 0; i3 < newInputs.length; i3++) {
    if (!isEqual(newInputs[i3], lastInputs[i3])) {
      return false;
    }
  }
  return true;
}
function memoizeOne(resultFn, isEqual2) {
  if (isEqual2 === void 0) {
    isEqual2 = areInputsEqual;
  }
  var lastThis;
  var lastArgs = [];
  var lastResult;
  var calledOnce = false;
  function memoized() {
    var newArgs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      newArgs[_i] = arguments[_i];
    }
    if (calledOnce && lastThis === this && isEqual2(newArgs, lastArgs)) {
      return lastResult;
    }
    lastResult = resultFn.apply(this, newArgs);
    calledOnce = true;
    lastThis = this;
    lastArgs = newArgs;
    return lastResult;
  }
  return memoized;
}
var hasNativePerformanceNow = typeof performance === "object" && typeof performance.now === "function";
var now = hasNativePerformanceNow ? function() {
  return performance.now();
} : function() {
  return Date.now();
};
function cancelTimeout(timeoutID) {
  cancelAnimationFrame(timeoutID.id);
}
function requestTimeout(callback, delay) {
  var start = now();
  function tick() {
    if (now() - start >= delay) {
      callback.call(null);
    } else {
      timeoutID.id = requestAnimationFrame(tick);
    }
  }
  var timeoutID = {
    id: requestAnimationFrame(tick)
  };
  return timeoutID;
}
var size = -1;
function getScrollbarSize(recalculate) {
  if (recalculate === void 0) {
    recalculate = false;
  }
  if (size === -1 || recalculate) {
    var div = document.createElement("div");
    var style = div.style;
    style.width = "50px";
    style.height = "50px";
    style.overflow = "scroll";
    document.body.appendChild(div);
    size = div.offsetWidth - div.clientWidth;
    document.body.removeChild(div);
  }
  return size;
}
var cachedRTLResult = null;
function getRTLOffsetType(recalculate) {
  if (recalculate === void 0) {
    recalculate = false;
  }
  if (cachedRTLResult === null || recalculate) {
    var outerDiv = document.createElement("div");
    var outerStyle = outerDiv.style;
    outerStyle.width = "50px";
    outerStyle.height = "50px";
    outerStyle.overflow = "scroll";
    outerStyle.direction = "rtl";
    var innerDiv = document.createElement("div");
    var innerStyle = innerDiv.style;
    innerStyle.width = "100px";
    innerStyle.height = "100px";
    outerDiv.appendChild(innerDiv);
    document.body.appendChild(outerDiv);
    if (outerDiv.scrollLeft > 0) {
      cachedRTLResult = "positive-descending";
    } else {
      outerDiv.scrollLeft = 1;
      if (outerDiv.scrollLeft === 0) {
        cachedRTLResult = "negative";
      } else {
        cachedRTLResult = "positive-ascending";
      }
    }
    document.body.removeChild(outerDiv);
    return cachedRTLResult;
  }
  return cachedRTLResult;
}
var IS_SCROLLING_DEBOUNCE_INTERVAL = 150;
var defaultItemKey = function defaultItemKey2(_ref) {
  var columnIndex = _ref.columnIndex;
  _ref.data;
  var rowIndex = _ref.rowIndex;
  return rowIndex + ":" + columnIndex;
};
function createGridComponent(_ref2) {
  var _class;
  var getColumnOffset3 = _ref2.getColumnOffset, getColumnStartIndexForOffset3 = _ref2.getColumnStartIndexForOffset, getColumnStopIndexForStartIndex3 = _ref2.getColumnStopIndexForStartIndex, getColumnWidth3 = _ref2.getColumnWidth, getEstimatedTotalHeight4 = _ref2.getEstimatedTotalHeight, getEstimatedTotalWidth4 = _ref2.getEstimatedTotalWidth, getOffsetForColumnAndAlignment3 = _ref2.getOffsetForColumnAndAlignment, getOffsetForRowAndAlignment3 = _ref2.getOffsetForRowAndAlignment, getRowHeight3 = _ref2.getRowHeight, getRowOffset3 = _ref2.getRowOffset, getRowStartIndexForOffset3 = _ref2.getRowStartIndexForOffset, getRowStopIndexForStartIndex3 = _ref2.getRowStopIndexForStartIndex, initInstanceProps5 = _ref2.initInstanceProps, shouldResetStyleCacheOnItemSizeChange = _ref2.shouldResetStyleCacheOnItemSizeChange, validateProps5 = _ref2.validateProps;
  return _class = /* @__PURE__ */ (function(_PureComponent) {
    _inheritsLoose(Grid, _PureComponent);
    function Grid(props) {
      var _this;
      _this = _PureComponent.call(this, props) || this;
      _this._instanceProps = initInstanceProps5(_this.props, _assertThisInitialized(_this));
      _this._resetIsScrollingTimeoutId = null;
      _this._outerRef = void 0;
      _this.state = {
        instance: _assertThisInitialized(_this),
        isScrolling: false,
        horizontalScrollDirection: "forward",
        scrollLeft: typeof _this.props.initialScrollLeft === "number" ? _this.props.initialScrollLeft : 0,
        scrollTop: typeof _this.props.initialScrollTop === "number" ? _this.props.initialScrollTop : 0,
        scrollUpdateWasRequested: false,
        verticalScrollDirection: "forward"
      };
      _this._callOnItemsRendered = void 0;
      _this._callOnItemsRendered = memoizeOne(function(overscanColumnStartIndex, overscanColumnStopIndex, overscanRowStartIndex, overscanRowStopIndex, visibleColumnStartIndex, visibleColumnStopIndex, visibleRowStartIndex, visibleRowStopIndex) {
        return _this.props.onItemsRendered({
          overscanColumnStartIndex,
          overscanColumnStopIndex,
          overscanRowStartIndex,
          overscanRowStopIndex,
          visibleColumnStartIndex,
          visibleColumnStopIndex,
          visibleRowStartIndex,
          visibleRowStopIndex
        });
      });
      _this._callOnScroll = void 0;
      _this._callOnScroll = memoizeOne(function(scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested) {
        return _this.props.onScroll({
          horizontalScrollDirection,
          scrollLeft,
          scrollTop,
          verticalScrollDirection,
          scrollUpdateWasRequested
        });
      });
      _this._getItemStyle = void 0;
      _this._getItemStyle = function(rowIndex, columnIndex) {
        var _this$props = _this.props, columnWidth = _this$props.columnWidth, direction = _this$props.direction, rowHeight = _this$props.rowHeight;
        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && columnWidth, shouldResetStyleCacheOnItemSizeChange && direction, shouldResetStyleCacheOnItemSizeChange && rowHeight);
        var key = rowIndex + ":" + columnIndex;
        var style;
        if (itemStyleCache.hasOwnProperty(key)) {
          style = itemStyleCache[key];
        } else {
          var _offset = getColumnOffset3(_this.props, columnIndex, _this._instanceProps);
          var isRtl = direction === "rtl";
          itemStyleCache[key] = style = {
            position: "absolute",
            left: isRtl ? void 0 : _offset,
            right: isRtl ? _offset : void 0,
            top: getRowOffset3(_this.props, rowIndex, _this._instanceProps),
            height: getRowHeight3(_this.props, rowIndex, _this._instanceProps),
            width: getColumnWidth3(_this.props, columnIndex, _this._instanceProps)
          };
        }
        return style;
      };
      _this._getItemStyleCache = void 0;
      _this._getItemStyleCache = memoizeOne(function(_2, __, ___) {
        return {};
      });
      _this._onScroll = function(event) {
        var _event$currentTarget = event.currentTarget, clientHeight = _event$currentTarget.clientHeight, clientWidth = _event$currentTarget.clientWidth, scrollLeft = _event$currentTarget.scrollLeft, scrollTop = _event$currentTarget.scrollTop, scrollHeight = _event$currentTarget.scrollHeight, scrollWidth = _event$currentTarget.scrollWidth;
        _this.setState(function(prevState) {
          if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {
            return null;
          }
          var direction = _this.props.direction;
          var calculatedScrollLeft = scrollLeft;
          if (direction === "rtl") {
            switch (getRTLOffsetType()) {
              case "negative":
                calculatedScrollLeft = -scrollLeft;
                break;
              case "positive-descending":
                calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;
                break;
            }
          }
          calculatedScrollLeft = Math.max(0, Math.min(calculatedScrollLeft, scrollWidth - clientWidth));
          var calculatedScrollTop = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));
          return {
            isScrolling: true,
            horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? "forward" : "backward",
            scrollLeft: calculatedScrollLeft,
            scrollTop: calculatedScrollTop,
            verticalScrollDirection: prevState.scrollTop < scrollTop ? "forward" : "backward",
            scrollUpdateWasRequested: false
          };
        }, _this._resetIsScrollingDebounced);
      };
      _this._outerRefSetter = function(ref) {
        var outerRef = _this.props.outerRef;
        _this._outerRef = ref;
        if (typeof outerRef === "function") {
          outerRef(ref);
        } else if (outerRef != null && typeof outerRef === "object" && outerRef.hasOwnProperty("current")) {
          outerRef.current = ref;
        }
      };
      _this._resetIsScrollingDebounced = function() {
        if (_this._resetIsScrollingTimeoutId !== null) {
          cancelTimeout(_this._resetIsScrollingTimeoutId);
        }
        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL);
      };
      _this._resetIsScrolling = function() {
        _this._resetIsScrollingTimeoutId = null;
        _this.setState({
          isScrolling: false
        }, function() {
          _this._getItemStyleCache(-1);
        });
      };
      return _this;
    }
    Grid.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {
      validateSharedProps(nextProps, prevState);
      validateProps5(nextProps);
      return null;
    };
    var _proto = Grid.prototype;
    _proto.scrollTo = function scrollTo(_ref3) {
      var scrollLeft = _ref3.scrollLeft, scrollTop = _ref3.scrollTop;
      if (scrollLeft !== void 0) {
        scrollLeft = Math.max(0, scrollLeft);
      }
      if (scrollTop !== void 0) {
        scrollTop = Math.max(0, scrollTop);
      }
      this.setState(function(prevState) {
        if (scrollLeft === void 0) {
          scrollLeft = prevState.scrollLeft;
        }
        if (scrollTop === void 0) {
          scrollTop = prevState.scrollTop;
        }
        if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {
          return null;
        }
        return {
          horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? "forward" : "backward",
          scrollLeft,
          scrollTop,
          scrollUpdateWasRequested: true,
          verticalScrollDirection: prevState.scrollTop < scrollTop ? "forward" : "backward"
        };
      }, this._resetIsScrollingDebounced);
    };
    _proto.scrollToItem = function scrollToItem(_ref4) {
      var _ref4$align = _ref4.align, align = _ref4$align === void 0 ? "auto" : _ref4$align, columnIndex = _ref4.columnIndex, rowIndex = _ref4.rowIndex;
      var _this$props2 = this.props, columnCount = _this$props2.columnCount, height = _this$props2.height, rowCount = _this$props2.rowCount, width = _this$props2.width;
      var _this$state = this.state, scrollLeft = _this$state.scrollLeft, scrollTop = _this$state.scrollTop;
      var scrollbarSize = getScrollbarSize();
      if (columnIndex !== void 0) {
        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));
      }
      if (rowIndex !== void 0) {
        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));
      }
      var estimatedTotalHeight = getEstimatedTotalHeight4(this.props, this._instanceProps);
      var estimatedTotalWidth = getEstimatedTotalWidth4(this.props, this._instanceProps);
      var horizontalScrollbarSize = estimatedTotalWidth > width ? scrollbarSize : 0;
      var verticalScrollbarSize = estimatedTotalHeight > height ? scrollbarSize : 0;
      this.scrollTo({
        scrollLeft: columnIndex !== void 0 ? getOffsetForColumnAndAlignment3(this.props, columnIndex, align, scrollLeft, this._instanceProps, verticalScrollbarSize) : scrollLeft,
        scrollTop: rowIndex !== void 0 ? getOffsetForRowAndAlignment3(this.props, rowIndex, align, scrollTop, this._instanceProps, horizontalScrollbarSize) : scrollTop
      });
    };
    _proto.componentDidMount = function componentDidMount() {
      var _this$props3 = this.props, initialScrollLeft = _this$props3.initialScrollLeft, initialScrollTop = _this$props3.initialScrollTop;
      if (this._outerRef != null) {
        var outerRef = this._outerRef;
        if (typeof initialScrollLeft === "number") {
          outerRef.scrollLeft = initialScrollLeft;
        }
        if (typeof initialScrollTop === "number") {
          outerRef.scrollTop = initialScrollTop;
        }
      }
      this._callPropsCallbacks();
    };
    _proto.componentDidUpdate = function componentDidUpdate() {
      var direction = this.props.direction;
      var _this$state2 = this.state, scrollLeft = _this$state2.scrollLeft, scrollTop = _this$state2.scrollTop, scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;
      if (scrollUpdateWasRequested && this._outerRef != null) {
        var outerRef = this._outerRef;
        if (direction === "rtl") {
          switch (getRTLOffsetType()) {
            case "negative":
              outerRef.scrollLeft = -scrollLeft;
              break;
            case "positive-ascending":
              outerRef.scrollLeft = scrollLeft;
              break;
            default:
              var clientWidth = outerRef.clientWidth, scrollWidth = outerRef.scrollWidth;
              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;
              break;
          }
        } else {
          outerRef.scrollLeft = Math.max(0, scrollLeft);
        }
        outerRef.scrollTop = Math.max(0, scrollTop);
      }
      this._callPropsCallbacks();
    };
    _proto.componentWillUnmount = function componentWillUnmount() {
      if (this._resetIsScrollingTimeoutId !== null) {
        cancelTimeout(this._resetIsScrollingTimeoutId);
      }
    };
    _proto.render = function render() {
      var _this$props4 = this.props, children = _this$props4.children, className = _this$props4.className, columnCount = _this$props4.columnCount, direction = _this$props4.direction, height = _this$props4.height, innerRef = _this$props4.innerRef, innerElementType = _this$props4.innerElementType, innerTagName = _this$props4.innerTagName, itemData = _this$props4.itemData, _this$props4$itemKey = _this$props4.itemKey, itemKey = _this$props4$itemKey === void 0 ? defaultItemKey : _this$props4$itemKey, outerElementType = _this$props4.outerElementType, outerTagName = _this$props4.outerTagName, rowCount = _this$props4.rowCount, style = _this$props4.style, useIsScrolling = _this$props4.useIsScrolling, width = _this$props4.width;
      var isScrolling = this.state.isScrolling;
      var _this$_getHorizontalR = this._getHorizontalRangeToRender(), columnStartIndex = _this$_getHorizontalR[0], columnStopIndex = _this$_getHorizontalR[1];
      var _this$_getVerticalRan = this._getVerticalRangeToRender(), rowStartIndex = _this$_getVerticalRan[0], rowStopIndex = _this$_getVerticalRan[1];
      var items = [];
      if (columnCount > 0 && rowCount) {
        for (var _rowIndex = rowStartIndex; _rowIndex <= rowStopIndex; _rowIndex++) {
          for (var _columnIndex = columnStartIndex; _columnIndex <= columnStopIndex; _columnIndex++) {
            items.push(reactExports.createElement(children, {
              columnIndex: _columnIndex,
              data: itemData,
              isScrolling: useIsScrolling ? isScrolling : void 0,
              key: itemKey({
                columnIndex: _columnIndex,
                data: itemData,
                rowIndex: _rowIndex
              }),
              rowIndex: _rowIndex,
              style: this._getItemStyle(_rowIndex, _columnIndex)
            }));
          }
        }
      }
      var estimatedTotalHeight = getEstimatedTotalHeight4(this.props, this._instanceProps);
      var estimatedTotalWidth = getEstimatedTotalWidth4(this.props, this._instanceProps);
      return reactExports.createElement(outerElementType || outerTagName || "div", {
        className,
        onScroll: this._onScroll,
        ref: this._outerRefSetter,
        style: _extends({
          position: "relative",
          height,
          width,
          overflow: "auto",
          WebkitOverflowScrolling: "touch",
          willChange: "transform",
          direction
        }, style)
      }, reactExports.createElement(innerElementType || innerTagName || "div", {
        children: items,
        ref: innerRef,
        style: {
          height: estimatedTotalHeight,
          pointerEvents: isScrolling ? "none" : void 0,
          width: estimatedTotalWidth
        }
      }));
    };
    _proto._callPropsCallbacks = function _callPropsCallbacks() {
      var _this$props5 = this.props, columnCount = _this$props5.columnCount, onItemsRendered = _this$props5.onItemsRendered, onScroll = _this$props5.onScroll, rowCount = _this$props5.rowCount;
      if (typeof onItemsRendered === "function") {
        if (columnCount > 0 && rowCount > 0) {
          var _this$_getHorizontalR2 = this._getHorizontalRangeToRender(), _overscanColumnStartIndex = _this$_getHorizontalR2[0], _overscanColumnStopIndex = _this$_getHorizontalR2[1], _visibleColumnStartIndex = _this$_getHorizontalR2[2], _visibleColumnStopIndex = _this$_getHorizontalR2[3];
          var _this$_getVerticalRan2 = this._getVerticalRangeToRender(), _overscanRowStartIndex = _this$_getVerticalRan2[0], _overscanRowStopIndex = _this$_getVerticalRan2[1], _visibleRowStartIndex = _this$_getVerticalRan2[2], _visibleRowStopIndex = _this$_getVerticalRan2[3];
          this._callOnItemsRendered(_overscanColumnStartIndex, _overscanColumnStopIndex, _overscanRowStartIndex, _overscanRowStopIndex, _visibleColumnStartIndex, _visibleColumnStopIndex, _visibleRowStartIndex, _visibleRowStopIndex);
        }
      }
      if (typeof onScroll === "function") {
        var _this$state3 = this.state, _horizontalScrollDirection = _this$state3.horizontalScrollDirection, _scrollLeft = _this$state3.scrollLeft, _scrollTop = _this$state3.scrollTop, _scrollUpdateWasRequested = _this$state3.scrollUpdateWasRequested, _verticalScrollDirection = _this$state3.verticalScrollDirection;
        this._callOnScroll(_scrollLeft, _scrollTop, _horizontalScrollDirection, _verticalScrollDirection, _scrollUpdateWasRequested);
      }
    };
    _proto._getHorizontalRangeToRender = function _getHorizontalRangeToRender() {
      var _this$props6 = this.props, columnCount = _this$props6.columnCount, overscanColumnCount = _this$props6.overscanColumnCount, overscanColumnsCount = _this$props6.overscanColumnsCount, overscanCount = _this$props6.overscanCount, rowCount = _this$props6.rowCount;
      var _this$state4 = this.state, horizontalScrollDirection = _this$state4.horizontalScrollDirection, isScrolling = _this$state4.isScrolling, scrollLeft = _this$state4.scrollLeft;
      var overscanCountResolved = overscanColumnCount || overscanColumnsCount || overscanCount || 1;
      if (columnCount === 0 || rowCount === 0) {
        return [0, 0, 0, 0];
      }
      var startIndex = getColumnStartIndexForOffset3(this.props, scrollLeft, this._instanceProps);
      var stopIndex = getColumnStopIndexForStartIndex3(this.props, startIndex, scrollLeft, this._instanceProps);
      var overscanBackward = !isScrolling || horizontalScrollDirection === "backward" ? Math.max(1, overscanCountResolved) : 1;
      var overscanForward = !isScrolling || horizontalScrollDirection === "forward" ? Math.max(1, overscanCountResolved) : 1;
      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];
    };
    _proto._getVerticalRangeToRender = function _getVerticalRangeToRender() {
      var _this$props7 = this.props, columnCount = _this$props7.columnCount, overscanCount = _this$props7.overscanCount, overscanRowCount = _this$props7.overscanRowCount, overscanRowsCount = _this$props7.overscanRowsCount, rowCount = _this$props7.rowCount;
      var _this$state5 = this.state, isScrolling = _this$state5.isScrolling, verticalScrollDirection = _this$state5.verticalScrollDirection, scrollTop = _this$state5.scrollTop;
      var overscanCountResolved = overscanRowCount || overscanRowsCount || overscanCount || 1;
      if (columnCount === 0 || rowCount === 0) {
        return [0, 0, 0, 0];
      }
      var startIndex = getRowStartIndexForOffset3(this.props, scrollTop, this._instanceProps);
      var stopIndex = getRowStopIndexForStartIndex3(this.props, startIndex, scrollTop, this._instanceProps);
      var overscanBackward = !isScrolling || verticalScrollDirection === "backward" ? Math.max(1, overscanCountResolved) : 1;
      var overscanForward = !isScrolling || verticalScrollDirection === "forward" ? Math.max(1, overscanCountResolved) : 1;
      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];
    };
    return Grid;
  })(reactExports.PureComponent), _class.defaultProps = {
    direction: "ltr",
    itemData: void 0,
    useIsScrolling: false
  }, _class;
}
var validateSharedProps = function validateSharedProps2(_ref5, _ref6) {
  _ref5.children;
  _ref5.direction;
  _ref5.height;
  _ref5.innerTagName;
  _ref5.outerTagName;
  _ref5.overscanColumnsCount;
  _ref5.overscanCount;
  _ref5.overscanRowsCount;
  _ref5.width;
  _ref6.instance;
};
var FixedSizeGrid = /* @__PURE__ */ createGridComponent({
  getColumnOffset: function getColumnOffset2(_ref, index) {
    var columnWidth = _ref.columnWidth;
    return index * columnWidth;
  },
  getColumnWidth: function getColumnWidth2(_ref2, index) {
    var columnWidth = _ref2.columnWidth;
    return columnWidth;
  },
  getRowOffset: function getRowOffset2(_ref3, index) {
    var rowHeight = _ref3.rowHeight;
    return index * rowHeight;
  },
  getRowHeight: function getRowHeight2(_ref4, index) {
    var rowHeight = _ref4.rowHeight;
    return rowHeight;
  },
  getEstimatedTotalHeight: function getEstimatedTotalHeight3(_ref5) {
    var rowCount = _ref5.rowCount, rowHeight = _ref5.rowHeight;
    return rowHeight * rowCount;
  },
  getEstimatedTotalWidth: function getEstimatedTotalWidth3(_ref6) {
    var columnCount = _ref6.columnCount, columnWidth = _ref6.columnWidth;
    return columnWidth * columnCount;
  },
  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment2(_ref7, columnIndex, align, scrollLeft, instanceProps, scrollbarSize) {
    var columnCount = _ref7.columnCount, columnWidth = _ref7.columnWidth, width = _ref7.width;
    var lastColumnOffset = Math.max(0, columnCount * columnWidth - width);
    var maxOffset = Math.min(lastColumnOffset, columnIndex * columnWidth);
    var minOffset = Math.max(0, columnIndex * columnWidth - width + scrollbarSize + columnWidth);
    if (align === "smart") {
      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {
        align = "auto";
      } else {
        align = "center";
      }
    }
    switch (align) {
      case "start":
        return maxOffset;
      case "end":
        return minOffset;
      case "center":
        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);
        if (middleOffset < Math.ceil(width / 2)) {
          return 0;
        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {
          return lastColumnOffset;
        } else {
          return middleOffset;
        }
      case "auto":
      default:
        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {
          return scrollLeft;
        } else if (minOffset > maxOffset) {
          return minOffset;
        } else if (scrollLeft < minOffset) {
          return minOffset;
        } else {
          return maxOffset;
        }
    }
  },
  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment2(_ref8, rowIndex, align, scrollTop, instanceProps, scrollbarSize) {
    var rowHeight = _ref8.rowHeight, height = _ref8.height, rowCount = _ref8.rowCount;
    var lastRowOffset = Math.max(0, rowCount * rowHeight - height);
    var maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);
    var minOffset = Math.max(0, rowIndex * rowHeight - height + scrollbarSize + rowHeight);
    if (align === "smart") {
      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {
        align = "auto";
      } else {
        align = "center";
      }
    }
    switch (align) {
      case "start":
        return maxOffset;
      case "end":
        return minOffset;
      case "center":
        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);
        if (middleOffset < Math.ceil(height / 2)) {
          return 0;
        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {
          return lastRowOffset;
        } else {
          return middleOffset;
        }
      case "auto":
      default:
        if (scrollTop >= minOffset && scrollTop <= maxOffset) {
          return scrollTop;
        } else if (minOffset > maxOffset) {
          return minOffset;
        } else if (scrollTop < minOffset) {
          return minOffset;
        } else {
          return maxOffset;
        }
    }
  },
  getColumnStartIndexForOffset: function getColumnStartIndexForOffset2(_ref9, scrollLeft) {
    var columnWidth = _ref9.columnWidth, columnCount = _ref9.columnCount;
    return Math.max(0, Math.min(columnCount - 1, Math.floor(scrollLeft / columnWidth)));
  },
  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex2(_ref10, startIndex, scrollLeft) {
    var columnWidth = _ref10.columnWidth, columnCount = _ref10.columnCount, width = _ref10.width;
    var left = startIndex * columnWidth;
    var numVisibleColumns = Math.ceil((width + scrollLeft - left) / columnWidth);
    return Math.max(0, Math.min(
      columnCount - 1,
      startIndex + numVisibleColumns - 1
      // -1 is because stop index is inclusive
    ));
  },
  getRowStartIndexForOffset: function getRowStartIndexForOffset2(_ref11, scrollTop) {
    var rowHeight = _ref11.rowHeight, rowCount = _ref11.rowCount;
    return Math.max(0, Math.min(rowCount - 1, Math.floor(scrollTop / rowHeight)));
  },
  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex2(_ref12, startIndex, scrollTop) {
    var rowHeight = _ref12.rowHeight, rowCount = _ref12.rowCount, height = _ref12.height;
    var top = startIndex * rowHeight;
    var numVisibleRows = Math.ceil((height + scrollTop - top) / rowHeight);
    return Math.max(0, Math.min(
      rowCount - 1,
      startIndex + numVisibleRows - 1
      // -1 is because stop index is inclusive
    ));
  },
  initInstanceProps: function initInstanceProps3(props) {
  },
  shouldResetStyleCacheOnItemSizeChange: true,
  validateProps: function validateProps3(_ref13) {
    _ref13.columnWidth;
    _ref13.rowHeight;
  }
});
const tag$1 = (order, sfc) => `[${order ?? ""}${order && sfc ? "/" : ""}${sfc ?? ""}]`;
function useConsoleLog() {
  const push = (level, text, ctx) => {
    const ts = (/* @__PURE__ */ new Date()).toLocaleTimeString();
    const line = `[${ts}] ${level.toUpperCase()} ${text}`;
    if (level === "error") console.error(line, ctx ?? "");
    else if (level === "warn") console.warn(line, ctx ?? "");
    else console.log(line, ctx ?? "");
  };
  return { push };
}
function useMeasureWidth$1() {
  const ref = reactExports.useRef(null);
  const [width, setWidth] = reactExports.useState(0);
  reactExports.useEffect(() => {
    const el = ref.current;
    if (!el) return;
    const ro2 = new ResizeObserver((entries) => {
      const w2 = entries[0].contentRect.width;
      setWidth(w2);
    });
    ro2.observe(el);
    return () => ro2.disconnect();
  }, []);
  return [ref, width];
}
const CARD_W$1 = 260;
const CARD_H$1 = 110;
const GAP$1 = 8;
function statusKeyFromLabel$1(s2) {
  switch (s2) {
    case "대기":
      return "waiting";
    case "실행중":
      return "running";
    case "완료":
      return "done";
    case "오류":
      return "error";
    default:
      return "waiting";
  }
}
function JobCard$1({ j: j2 }) {
  const color = j2.status === "완료" ? "#def7ec" : j2.status === "오류" ? "#fde2e2" : j2.status === "실행중" ? "#dbeafe" : "#f3f4f6";
  const border2 = j2.status === "완료" ? "1px solid #10b981" : j2.status === "오류" ? "1px solid #ef4444" : j2.status === "실행중" ? "1px solid #2563eb" : "1px solid #d1d5db";
  const statusKey = statusKeyFromLabel$1(j2.status);
  const statusLabel = t2(`app.status.${statusKey}`);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { background: color, border: border2, borderRadius: 8, padding: 10, height: "100%" }, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { fontWeight: 700, marginBottom: 6 }, children: j2.order }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { fontFamily: "monospace", fontSize: 14, marginBottom: 4 }, children: j2.sfc }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { fontSize: 13, display: "flex", justifyContent: "space-between" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { children: [
        t2("app.common.qtyShort"),
        ": ",
        j2.qty
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { children: [
        statusKey === "running" && "⏳",
        statusKey === "done" && "✅",
        statusKey === "error" && "❌",
        statusKey === "waiting" && "🟦",
        " ",
        statusLabel
      ] })
    ] })
  ] });
}
function VirtualJobGrid$1({ jobs, height }) {
  const [wrapRef, wrapWidth] = useMeasureWidth$1();
  const colCount = Math.max(1, Math.floor((wrapWidth + GAP$1) / (CARD_W$1 + GAP$1)));
  const rowCount = Math.ceil(jobs.length / colCount);
  const itemData = reactExports.useMemo(() => ({ jobs, colCount }), [jobs, colCount]);
  const Cell = ({ columnIndex, rowIndex, style, data }) => {
    const { jobs: jobs2, colCount: colCount2 } = data;
    const index = rowIndex * colCount2 + columnIndex;
    if (index >= jobs2.length) return null;
    const j2 = jobs2[index];
    return /* @__PURE__ */ jsxRuntimeExports.jsx(
      "div",
      {
        style: {
          ...style,
          left: style.left + GAP$1,
          top: style.top + GAP$1,
          width: CARD_W$1,
          height: CARD_H$1
        },
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(JobCard$1, { j: j2 })
      }
    );
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ref: wrapRef, style: { height, border: "1px solid #eee", borderRadius: 8 }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
    FixedSizeGrid,
    {
      columnCount: colCount,
      columnWidth: CARD_W$1 + GAP$1,
      height,
      rowCount,
      rowHeight: CARD_H$1 + GAP$1,
      width: wrapWidth || 800,
      itemData,
      children: Cell
    }
  ) });
}
function E_Interface_Prod() {
  reactExports.useEffect(() => {
    initI18n().catch(() => {
    });
  }, []);
  const navigate = useNavigate();
  const { push: uiLog } = useConsoleLog();
  const [plantList, setPlantList] = reactExports.useState([]);
  const [workcenterList, setWorkcenterList] = reactExports.useState([]);
  const [selectedPlant, setSelectedPlant] = reactExports.useState("C200");
  const [selectedWorkcenter, setSelectedWorkcenter] = reactExports.useState("");
  const [testMode, setTestMode] = reactExports.useState(true);
  const [testOrderNo, setTestOrderNo] = reactExports.useState("");
  const [testSfc, setTestSfc] = reactExports.useState("");
  const [jobs, setJobs] = reactExports.useState([]);
  const jobsDone = jobs.filter((j2) => j2.status === "완료").length;
  const jobsErr = jobs.filter((j2) => j2.status === "오류").length;
  const jobsRunning = jobs.filter((j2) => j2.status === "실행중").length;
  const [plannedTotal, setPlannedTotal] = reactExports.useState(null);
  const [finishedOrders, setFinishedOrders] = reactExports.useState(0);
  const denominator = plannedTotal ?? 0;
  const progressPct = reactExports.useMemo(() => {
    if (!denominator) return 0;
    return Math.round(finishedOrders / denominator * 100);
  }, [finishedOrders, denominator]);
  const updateJob = (key, patch) => {
    setJobs((prev) => prev.map((j2) => j2.key === key ? { ...j2, ...patch } : j2));
  };
  const resetJobs = () => setJobs([]);
  reactExports.useEffect(() => {
    fetchCombos();
  }, []);
  reactExports.useEffect(() => {
    (async () => {
      await fetchCombos();
      setSelectedWorkcenter("");
    })();
  }, [selectedPlant]);
  const fetchCombo = async (type, plantCd) => {
    try {
      const ax = await getAxios();
      const params = type === "PT" ? { type } : { type, plant_cd: plantCd };
      const res = await ax.get("/api/mssql/basic-info", { params });
      return Array.isArray(res.data) ? res.data : [];
    } catch (e2) {
      uiLog("warn", `❌ ${t2("app.log.combo.fail", { type })}`, e2);
      return [];
    }
  };
  const fetchCombos = async () => {
    const plants = await fetchCombo("PT");
    const wcs = await fetchCombo("WC", selectedPlant);
    setPlantList(plants);
    setWorkcenterList(wcs);
  };
  const handleSearch = async () => {
    try {
      resetJobs();
      setPlannedTotal(null);
      setFinishedOrders(0);
      uiLog("info", `🔵 ${t2("app.log.orderList.start")}`, { plant: selectedPlant, workCenter: selectedWorkcenter || "(auto?)", testMode });
      const ax = await getAxios();
      const params = { plant: selectedPlant, releaseStatuses: "RELEASABLE" };
      if (selectedWorkcenter) params.workCenter = selectedWorkcenter;
      if (testMode && testOrderNo) {
        params.order = testOrderNo;
        params.limit = 1;
      }
      uiLog("info", `🔵 ${t2("app.log.orderList.request")}`, params);
      const res = await ax.get("/api/sap/order-list2", { params });
      let orders = res.data || [];
      uiLog("info", `📦 ${t2("app.log.orderList.response")}`, { count: Array.isArray(orders) ? orders.length : 0 });
      if (!orders || orders.length === 0) {
        alert(t2("app.notice.noResult"));
        return;
      }
      if (testMode) {
        orders = testOrderNo ? orders.filter((o2) => String(o2.order) === testOrderNo).slice(0, 1) : orders.slice(0, 1);
      }
      if (!selectedWorkcenter) {
        const firstWc = orders.find((o2) => Array.isArray(o2.workCenters) && o2.workCenters.length)?.workCenters?.[0]?.workCenter || "";
        if (firstWc) {
          uiLog("info", `ℹ️ ${t2("app.log.autoSet.workCenter")}`, { workCenter: firstWc });
          setSelectedWorkcenter(firstWc);
        }
      }
      setPlannedTotal(orders.length);
      const placeholders = orders.map((o2) => ({
        key: `${o2.order}`,
        order: o2.order,
        sfc: "",
        qty: Number(o2.productionQuantity || 0),
        status: "대기"
      }));
      setJobs(placeholders);
      for (const order of orders) {
        const key = `${order.order}`;
        try {
          const wcFromOrder = order?.workCenters?.[0]?.workCenter || selectedWorkcenter || "";
          if (!wcFromOrder) {
            uiLog("warn", `[${order.order}] ${t2("app.log.skip.noWcForOrder")}`);
            updateJob(key, { status: "오류" });
            continue;
          }
          uiLog("info", `➡️ ${t2("app.log.order.prepare")} ${tag$1(order.order)}`, { wcFromOrder });
          uiLog("info", `🟢 ${t2("app.log.orderRelease.request")}`, { plant: selectedPlant, order: order.order });
          const releaseResp = await ax.post("/api/sap/order-release", { plant: selectedPlant, order: order.order });
          let sfcs = Array.isArray(releaseResp?.data?.data?.sfcs) ? releaseResp.data.data.sfcs : [];
          uiLog("info", `🟢 ${t2("app.log.orderRelease.response")}`, { order: order.order, sfcCount: sfcs.length });
          if (testMode && testSfc) {
            sfcs = sfcs.filter((s2) => s2.identifier === testSfc).slice(0, 1);
          } else {
            sfcs = sfcs.slice(0, 1);
          }
          const sfc = sfcs[0];
          if (!sfc) {
            uiLog("warn", t2("app.log.noSfcForOrder", { order: order.order }));
            updateJob(key, { status: "오류" });
            continue;
          }
          updateJob(key, { sfc: sfc.identifier, status: "실행중" });
          try {
            uiLog("info", `📝 ${t2("app.log.db.insertSfc.request")} ${tag$1(order.order, sfc.identifier)}`, { qty: sfc.quantity, wc: wcFromOrder });
            await ax.post("/api/mssql/interface-insert-sfc", {
              sfc: sfc.identifier,
              quantity: sfc.quantity,
              workCenter: wcFromOrder,
              plant: order.plant,
              materialCode: order.material?.material,
              materialVersion: order.material?.version,
              materialDescription: order.material?.description,
              bomNumber: order.bom?.bom,
              bomVersion: order.bom?.version,
              bomType: order.bom?.type,
              routingNumber: order.routing?.routing,
              routingVersion: order.routing?.version,
              routingType: order.routing?.routingType,
              orderNumber: order.order,
              orderType: order.orderType,
              status: order.status,
              plannedStartDate: order.plannedStartDate,
              plannedCompletionDate: order.plannedCompletionDate
            });
            uiLog("info", `✅ ${t2("app.log.db.insertSfc.success")} ${tag$1(order.order, sfc.identifier)}`);
            updateJob(key, { status: "완료" });
          } catch (sErr) {
            uiLog("error", `❌ ${t2("app.log.db.insertSfc.fail")} ${tag$1(order.order, sfc.identifier)}`, sErr?.response?.data || sErr?.message || sErr);
            updateJob(key, { status: "오류" });
          }
          try {
            uiLog("info", `📝 ${t2("app.log.db.insertOrder.request")} ${tag$1(order.order)}`, { wc: wcFromOrder });
            await ax.post("/api/mssql/interface-insert-order", {
              plant: order.plant,
              orderNumber: order.order,
              status: order.status,
              releaseStatus: order.releaseStatus,
              executionStatus: order.executionStatus,
              orderType: order.orderType,
              orderCategory: order.orderCategory,
              materialCode: order.material?.material,
              materialVersion: order.material?.version,
              materialDescription: order.material?.description,
              bomNumber: order.bom?.bom,
              bomVersion: order.bom?.version,
              bomType: order.bom?.type,
              routingNumber: order.routing?.routing,
              routingVersion: order.routing?.version,
              routingType: order.routing?.routingType,
              productionQuantity: order.productionQuantity,
              productionUnitOfMeasure: order.productionUnitOfMeasure,
              buildQuantity: order.buildQuantity,
              orderedQuantity: order.orderedQuantity,
              releasedQuantity: order.releasedQuantity,
              doneQuantity: order.doneQuantity,
              goodsReceiptQuantity: order.goodsReceiptQuantity,
              priority: order.priority,
              plannedStartDate: order.plannedStartDate,
              plannedCompletionDate: order.plannedCompletionDate,
              scheduledStartDate: order.scheduledStartDate,
              scheduledCompletionDate: order.scheduledCompletionDate,
              productionVersion: order.productionVersion,
              putawayStorageLocation: order.putawayStorageLocation,
              erpRoutingGroup: order.erpRoutingGroup,
              warehouseNumber: order.warehouseNumber,
              workCenter: wcFromOrder,
              workCenterDesc: workcenterList.find((w2) => w2.CODE === wcFromOrder)?.NAME ?? ""
            });
            uiLog("info", `✅ ${t2("app.log.db.insertOrder.success")} ${tag$1(order.order)}`);
          } catch (ordErr) {
            uiLog("warn", `❌ ${t2("app.log.db.insertOrder.fail")} ${tag$1(order.order)}`, ordErr?.response?.data || ordErr?.message || ordErr);
          }
        } catch (orderErr) {
          uiLog("error", `❌ ${t2("app.log.order.prepareFail", { order: order.order })}`, orderErr?.response?.data || orderErr?.message || orderErr);
          updateJob(key, { status: "오류" });
        } finally {
          setFinishedOrders((prev) => prev + 1);
        }
      }
      alert(t2("app.notice.chain.done"));
    } catch (err) {
      const detail = err?.response?.data || err?.message || err;
      uiLog("error", `❌ ${t2("app.log.process.fail")}`, detail);
      alert(`실패: ${typeof detail === "string" ? detail : detail?.message || "Unknown error"}`);
    }
  };
  const [renderMode, setRenderMode] = reactExports.useState("virtual");
  const TOPN_CHOICES = [50, 100, 200, 300, 500, 1e3, -1];
  const [topNCount, setTopNCount] = reactExports.useState(200);
  const [visibleCount, setVisibleCount] = reactExports.useState(200);
  reactExports.useEffect(() => {
    if (renderMode === "virtual") return;
    if (topNCount === -1) setVisibleCount(jobs.length);
    else setVisibleCount(Math.min(topNCount, jobs.length));
  }, [renderMode, topNCount, jobs.length]);
  const renderedJobs = reactExports.useMemo(() => {
    if (renderMode === "virtual") return jobs;
    return jobs.slice(0, visibleCount);
  }, [renderMode, jobs, visibleCount]);
  const hasMoreToShow = renderMode === "topN" && visibleCount < jobs.length;
  const handleShowMore = () => {
    if (topNCount === -1) setVisibleCount(jobs.length);
    else setVisibleCount((prev) => Math.min(prev + topNCount, jobs.length));
  };
  const progressText = t2("app.progress.displayValue", {
    done: finishedOrders.toLocaleString(),
    // ✅ 오더 완료 수
    total: denominator.toLocaleString(),
    // ✅ 확정된 총 오더 수
    pct: progressPct
  });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { padding: "1rem" }, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
      Bar2,
      {
        design: "Header",
        style: { backgroundColor: "#d0e5ff", padding: "0.5rem 1rem", border: "1px solid #ccc", position: "relative" },
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { style: { fontWeight: "bold", fontSize: "2.2rem" }, children: t2("app.page.prod.title") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "img",
            {
              src: backIcon,
              alt: t2("app.common.back"),
              title: t2("app.common.back"),
              onClick: () => navigate(-1),
              style: { position: "absolute", right: 16, top: 10, width: 48, height: 48, cursor: "pointer", userSelect: "none", opacity: 0.9 }
            }
          )
        ]
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { border: "1px solid #ccc", borderTop: "none", padding: "1rem 1.25rem", background: "#fafcff" }, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", alignItems: "center", gap: "1.25rem", flexWrap: "wrap" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(ProgressIndicator2, { value: progressPct, displayValue: progressText, style: { width: 420 } }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", gap: "1rem", color: "#333", fontWeight: 600 }, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { children: [
          t2("app.summary.total"),
          ": ",
          denominator
        ] }),
        " ",
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { style: { color: "#2563eb" }, children: [
          t2("app.summary.running"),
          ": ",
          jobsRunning
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { style: { color: "#16a34a" }, children: [
          t2("app.summary.done"),
          ": ",
          jobsDone
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { style: { color: "#dc2626" }, children: [
          t2("app.summary.error"),
          ": ",
          jobsErr
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { marginLeft: "auto", display: "flex", alignItems: "center", gap: 12 }, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { children: t2("app.render.mode") }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "select",
          {
            value: renderMode,
            onChange: (e2) => setRenderMode(e2.target.value),
            style: { width: 160, height: 36 },
            title: t2("app.render.modeTitle"),
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "virtual", children: t2("app.render.virtual") }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "topN", children: t2("app.render.topNMore") })
            ]
          }
        ),
        renderMode === "topN" && /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { children: t2("app.render.count") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "select",
            {
              value: topNCount,
              onChange: (e2) => setTopNCount(Number(e2.target.value)),
              style: { width: 160, height: 36 },
              title: t2("app.render.countTitle"),
              children: TOPN_CHOICES.map((n2) => /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: n2, children: n2 === -1 ? t2("app.render.all") : t2("app.render.nItems", { count: n2.toLocaleString() }) }, n2))
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { color: "#555" }, children: t2("app.render.currentShown", { shown: renderedJobs.length.toLocaleString(), total: jobs.length.toLocaleString() }) }),
          hasMoreToShow && /* @__PURE__ */ jsxRuntimeExports.jsx(Button2, { onClick: handleShowMore, design: "Transparent", style: { border: "1px solid #ddd" }, children: t2("app.render.showMore", { inc: topNCount === -1 ? t2("app.render.all") : topNCount.toLocaleString() }) })
        ] })
      ] })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(FlexBox, { direction: "Row", alignItems: "Center", style: { gap: "3rem", padding: "1.25rem", border: "1px solid #ccc", borderTop: "none" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { style: { fontWeight: "bold", fontSize: "1.3rem" }, children: t2("app.common.plant") }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "select",
        {
          value: selectedPlant,
          className: "common-select",
          style: { width: "150px", fontSize: "1.2rem", padding: "0.5rem" },
          onChange: (e2) => setSelectedPlant(e2.target.value),
          children: plantList.map((item) => /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: item.CODE, children: item.CODE }, item.CODE))
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { style: { fontWeight: "bold", fontSize: "1.3rem" }, children: t2("app.common.workCenter") }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "select",
        {
          value: selectedWorkcenter,
          className: "common-select",
          style: { width: "180px", fontSize: "1.2rem", padding: "0.5rem" },
          onChange: (e2) => setSelectedWorkcenter(e2.target.value),
          children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "", children: t2("app.common.selectPlaceholder") }),
            workcenterList.map((item) => /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: item.CODE, children: item.CODE }, item.CODE))
          ]
        }
      )
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { padding: "0 1.25rem 0.75rem 1.25rem", display: "flex", alignItems: "center", gap: "1rem", borderLeft: "1px solid #ccc", borderRight: "1px solid #ccc" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("label", { style: { display: "flex", alignItems: "center", gap: "0.5rem" }, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "checkbox", checked: testMode, onChange: (e2) => setTestMode(e2.target.checked) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { style: { fontWeight: 600 }, children: t2("app.common.testModeOneByOne") })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("input", { placeholder: t2("app.common.orderOptional"), value: testOrderNo, onChange: (e2) => setTestOrderNo(e2.target.value.trim()), style: { width: 200, height: 32 } }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("input", { placeholder: t2("app.common.sfcOptional"), value: testSfc, onChange: (e2) => setTestSfc(e2.target.value.trim()), style: { width: 200, height: 32 } }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { style: { color: "#666" }, children: t2("app.common.testModeHint") })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(FlexBox, { style: { padding: "0 1.25rem 1.25rem 1.25rem", borderLeft: "1px solid #ccc", borderRight: "1px solid #ccc", borderBottom: "1px solid #ccc" }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Button2, { design: "Emphasized", style: { width: "220px", height: "3rem", fontSize: "1.2rem" }, onClick: handleSearch, children: t2("app.button.prodOrder") }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { marginTop: "0.5rem" }, children: renderMode === "virtual" ? /* @__PURE__ */ jsxRuntimeExports.jsx(VirtualJobGrid$1, { jobs, height: 560 }) : /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { display: "grid", gap: "8px", gridTemplateColumns: "repeat(auto-fill, minmax(260px, 1fr))" }, children: renderedJobs.map((j2) => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { height: CARD_H$1 }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(JobCard$1, { j: j2 }) }, j2.key)) }) })
  ] });
}
const LOG_MAX = 500;
const tag = (order, sfc) => `[${order ?? ""}${order && sfc ? "/" : ""}${sfc ?? ""}]`;
function useUILog(max = LOG_MAX) {
  const [lines, setLines] = reactExports.useState([]);
  const boxRef = reactExports.useRef(null);
  const lastKeyRef = reactExports.useRef("");
  const push = (level, text, ctx) => {
    const ts = (/* @__PURE__ */ new Date()).toLocaleTimeString();
    if (level === "error") console.error(text, ctx ?? "");
    else if (level === "warn") console.warn(text, ctx ?? "");
    else console.log(text, ctx ?? "");
    const key = `${level}|${text}|${JSON.stringify(ctx ?? "")}`;
    if (lastKeyRef.current === key) return;
    lastKeyRef.current = key;
    setLines((prev) => {
      const next = [...prev, { ts, level, text, ctx }];
      if (next.length > max) next.splice(0, next.length - max);
      return next;
    });
    setTimeout(() => {
      if (boxRef.current) boxRef.current.scrollTop = boxRef.current.scrollHeight;
    }, 0);
  };
  return { lines, push, boxRef };
}
const mapLimit = async (items, limit, fn) => {
  const results = new Array(items.length);
  let i3 = 0;
  const worker = async () => {
    while (i3 < items.length) {
      const idx = i3++;
      results[idx] = await fn(items[idx], idx);
    }
  };
  const workers = Array.from({ length: Math.min(limit, items.length) }, worker);
  await Promise.all(workers);
  return results;
};
const CONCURRENCY_SFC_CHAIN = 8;
const POSTED_BY = "dmc_services_user";
const today = () => {
  const d2 = /* @__PURE__ */ new Date();
  const mm = String(d2.getMonth() + 1).padStart(2, "0");
  const dd = String(d2.getDate()).padStart(2, "0");
  return `${d2.getFullYear()}-${mm}-${dd}`;
};
const callSapStart = async (payload, uiLog) => {
  try {
    uiLog("info", `▶️ ${t2("app.log.start.request")}`, { op: payload.operation, res: payload.resource, sfcs: payload.sfcs });
    const ax = await getAxios();
    await ax.post("/api/sap-start", payload);
    uiLog("info", `✅ ${t2("app.log.start.success")}`, { op: payload.operation, res: payload.resource, sfcCount: payload.sfcs.length });
  } catch (e2) {
    uiLog("error", `❌ ${t2("app.log.start.fail")}`, e2?.response?.data || e2?.message || e2);
    throw e2;
  }
};
const fetchSfcDetail = async (plant, sfc, uiLog) => {
  try {
    uiLog("info", `🔎 ${t2("app.log.sfcDetail.request")}`, { plant, sfc });
    const ax = await getAxios();
    const res = await ax.get("/api/sap/sfc-detail", { params: { plant_cd: plant, sfc } });
    const steps = res?.data?.steps?.length ?? 0;
    const r0 = res?.data?.steps?.[0]?.resource;
    uiLog("info", `✅ ${t2("app.log.sfcDetail.success")}`, { steps, firstResource: r0, bom: res?.data?.bom?.bom });
    return res.data;
  } catch (e2) {
    uiLog("error", `❌ ${t2("app.log.sfcDetail.fail")}`, e2?.response?.data || e2?.message || e2);
    return null;
  }
};
const fetchBomBaseUom = async (plant, bom, rawType, uiLog) => {
  if (!bom || !rawType) return "";
  const type = rawType === "SHOPORDERBOM" ? "SHOP_ORDER" : rawType === "MASTERBOM" ? "MASTER" : rawType === "SFCBOM" ? "SFC" : void 0;
  if (!type) return "";
  try {
    uiLog?.("info", `🔎 ${t2("app.log.bomDetail.request")}`, { plant, bom, type });
    const ax = await getAxios();
    const res = await ax.get("/api/sap/bom-detail", { params: { plant, bom, type } });
    const uom = (Array.isArray(res.data) ? res.data[0] : res.data)?.baseUnitOfMeasure || "";
    uiLog?.("info", `✅ ${t2("app.log.bomDetail.success")}`, { baseUOM: uom });
    return uom;
  } catch (e2) {
    uiLog?.("warn", `❌ ${t2("app.log.bomDetail.fail")}`, e2?.response?.data || e2?.message || e2);
    return "";
  }
};
const fetchUom = async (unitCode, uiLog) => {
  if (!unitCode) return { unitCode: "EA", isoCode: "EA", internalCode: "EA", commercialCodes: [] };
  try {
    uiLog?.("info", `🔎 ${t2("app.log.uom.request")}`, { unitCode });
    const ax = await getAxios();
    const res = await ax.get("/api/sap/unit-codes", { params: { unitCode } });
    const data = Array.isArray(res.data) ? res.data[0] : res.data;
    uiLog?.("info", `✅ ${t2("app.log.uom.success")}`, { internal: data?.internalCode, iso: data?.isoCode });
    return data;
  } catch (e2) {
    uiLog?.("warn", `❌ ${t2("app.log.uom.failDefaultEA")}`, e2?.response?.data || e2?.message || e2);
    return { unitCode: "EA", isoCode: "EA", internalCode: "EA", commercialCodes: [] };
  }
};
const postGoodsReceipt = async (payload, uiLog) => {
  try {
    uiLog(
      "info",
      `📦 ${t2("app.log.gr.request")} ${tag(payload.order, payload.lineItems?.[0]?.sfc)}`,
      { plant: payload.plant, order: payload.order, items: payload.lineItems.map((li) => ({ mat: li.material, qty: li.quantity.value, sfc: li.sfc, sloc: li.storageLocation })) }
    );
    const ax = await getAxios();
    const res = await ax.post("/api/sap-goods-receipt", payload, { headers: { "Content-Type": "application/json" } });
    const txIds = (res?.data?.lineItems || []).filter((li) => li?.transactionId).map((li) => ({ tx: li.transactionId, hasError: !!li?.hasError }));
    uiLog("info", `✅ ${t2("app.log.gr.response")}`, { txIds });
    return res.data;
  } catch (e2) {
    uiLog("error", `❌ ${t2("app.log.gr.fail")}`, e2?.response?.data || e2?.message || e2);
    return null;
  }
};
const fetchPostedGoodsReceipts = async (plant, order, sfc, material, transactionIds, uiLog, maxRetries = 30, delayMs = 1e3) => {
  const ax = await getAxios();
  for (let attempt = 1; attempt <= maxRetries; attempt++) {
    try {
      const res = await ax.get("/api/sap/goodsreceipts", { params: { plant, order, sfc, material } });
      const data = res.data;
      const arr = Array.isArray(data) ? data : Array.isArray(data?.content) ? data.content : Array.isArray(data?.lineItems) ? data.lineItems : [];
      const postedOnly = arr.filter((d2) => d2.status === "POSTED_TO_TARGET_SYS");
      if (transactionIds.length > 0) {
        const matched = postedOnly.filter((d2) => transactionIds.includes(d2.transactionId?.trim?.()));
        if (matched.length > 0) {
          uiLog("info", `✅ ${t2("app.log.gr.txidMatched", { attempt })}`, matched.map((d2) => ({
            order: d2.order,
            sfc: d2.sfc,
            txId: d2.transactionId,
            qty: d2.quantityInBaseUnit?.value
          })));
          return postedOnly;
        }
        uiLog("info", `⏳ ${t2("app.log.gr.txidRetry", { attempt })}`);
        await new Promise((res2) => setTimeout(res2, delayMs));
      } else {
        uiLog("info", `✅ ${t2("app.log.gr.postedAllNoTx", { count: postedOnly.length })}`);
        return postedOnly;
      }
    } catch (err) {
      uiLog("warn", `🚨 ${t2("app.log.gr.postedFail", { attempt })}`, err);
      await new Promise((res) => setTimeout(res, delayMs));
    }
  }
  uiLog("warn", `❌ ${t2("app.log.gr.maxRetryExceeded")}`);
  return [];
};
const postQtyConfirm = async (payload, uiLog) => {
  try {
    uiLog("info", `🧮 ${t2("app.log.qty.request")} ${tag(payload.shopOrder, payload.sfc)}`, {
      op: payload.operationActivity,
      wc: payload.workCenter,
      qty: payload.yieldQuantity,
      final: payload.isFinalConfirmation
    });
    const ax = await getAxios();
    await ax.post("/api/sap-post-qty-confirm", payload);
    uiLog("info", `✅ ${t2("app.log.qty.success")} ${tag(payload.shopOrder, payload.sfc)}`);
  } catch (e2) {
    uiLog("error", `❌ ${t2("app.log.qty.fail")}`, e2?.response?.data || e2?.message || e2);
    throw e2;
  }
};
const fetchStandardValue = async (params, uiLog) => {
  try {
    uiLog("info", `🔎 ${t2("app.log.stdTime.request")}`, { op: params.operationActivity, wc: params.workCenter, obj: params.object });
    const ax = await getAxios();
    const res = await ax.get("/api/sap/standard-value", { params });
    const cnt = res?.data?.standardValueCollectionList?.length ?? 0;
    uiLog("info", `✅ ${t2("app.log.stdTime.success")}`, { count: cnt });
    return res.data;
  } catch (e2) {
    uiLog("warn", `❌ ${t2("app.log.stdTime.fail")}`, e2?.response?.data || e2?.message || e2);
    return null;
  }
};
const postActivityConfirm = async (payload, uiLog) => {
  try {
    uiLog("info", `📝 ${t2("app.log.activity.request")} ${tag(payload.shopOrder, payload.sfc)}`, {
      op: payload.operationActivity,
      wc: payload.workCenter,
      stepId: payload.stepId,
      actCount: payload.activities.length
    });
    const ax = await getAxios();
    await ax.post("/api/sap-post-activity-confirm", {
      plant: payload.plant,
      shopOrder: payload.shopOrder,
      sfc: payload.sfc,
      operationActivity: payload.operationActivity,
      stepId: payload.stepId,
      workCenter: payload.workCenter,
      finalConfirmation: true,
      allowPostingsAfterOperationActivityComplete: true,
      activities: payload.activities
    });
    uiLog("info", `✅ ${t2("app.log.activity.success")} ${tag(payload.shopOrder, payload.sfc)}`);
  } catch (e2) {
    uiLog("error", `❌ ${t2("app.log.activity.fail")}`, e2?.response?.data || e2?.message || e2);
    throw e2;
  }
};
const tryFetchRoutingFirstStep = async (plant, routingId, types, uiLog) => {
  const ax = await getAxios();
  for (const type of types) {
    try {
      uiLog("info", `🔎 ${t2("app.log.routingDetail.request")}`, { plant, routing: routingId, type });
      const res = await ax.get("/api/sap/routing-detail", { params: { plant, routing: routingId, type } });
      const first = Array.isArray(res?.data?.routingSteps) ? res.data.routingSteps[0] : null;
      if (first) {
        uiLog("info", `✅ ${t2("app.log.routingDetail.successFirstStep")}`, { operation: first.operationActivity, version: first.operationActivityVersion, stepId: first.stepId });
        return {
          operation: first.operationActivity || "",
          operationVersion: first.operationActivityVersion || "ERP001",
          stepId: first.stepId || ""
        };
      }
    } catch (e2) {
      uiLog("warn", `⚠️ ${t2("app.log.routingDetail.failTryNext")}`, { type, msg: e2?.response?.data || e2?.message || e2 });
    }
  }
  return null;
};
const resolveOpAndResource = async (params, uiLog) => {
  const { plant, order, sfc, selectedWorkcenter, row, wcFromOrder } = params;
  const sfcDetail = await fetchSfcDetail(plant, sfc, uiLog);
  const step0 = sfcDetail?.steps?.[0] || {};
  let resource = step0?.resource || row?.workCenter || wcFromOrder || selectedWorkcenter || "";
  let operation = row?.operation || step0?.operation?.operation || "";
  let operationVersion = row?.operationVersion || step0?.operation?.version || "ERP001";
  let stepId = row?.stepId || step0?.stepId || "";
  let routing = row?.routing || step0?.stepRouting?.routing || order?.routing?.routing || "";
  uiLog("info", `🧭 ${t2("app.log.resolve.pre")} ${tag(order.order, sfc)}`, { operation, stepId, routing, resource });
  if ((!operation || !stepId) && routing) {
    const fb = await tryFetchRoutingFirstStep(plant, routing, [order?.routing?.routingType || "SHOP_ORDER", "SHOP_ORDER", "SFC", "MASTER"], uiLog);
    if (fb) {
      operation = operation || fb.operation;
      operationVersion = operationVersion || fb.operationVersion || "ERP001";
      stepId = stepId || fb.stepId;
    }
  }
  if (!operation && routing) {
    const guess = `${routing}-0-0010`;
    uiLog("warn", t2("app.log.resolve.operationGuess"), { guess });
    operation = guess;
  }
  uiLog("info", `🧭 ${t2("app.log.resolve.post")} ${tag(order.order, sfc)}`, { operation, stepId, routing, resource });
  return { sfcDetail, operation, operationVersion, stepId, routing, resource };
};
function useMeasureWidth() {
  const ref = reactExports.useRef(null);
  const [width, setWidth] = reactExports.useState(0);
  reactExports.useEffect(() => {
    const el = ref.current;
    if (!el) return;
    const ro2 = new ResizeObserver((entries) => {
      const w2 = entries[0].contentRect.width;
      setWidth(w2);
    });
    ro2.observe(el);
    return () => ro2.disconnect();
  }, []);
  return [ref, width];
}
function useAvailableHeight(minHeight = 360, marginBottom = 16) {
  const ref = reactExports.useRef(null);
  const [height, setHeight] = reactExports.useState(minHeight);
  reactExports.useEffect(() => {
    const calc = () => {
      const el = ref.current;
      if (!el) return;
      const rect = el.getBoundingClientRect();
      const h2 = Math.max(minHeight, Math.floor(window.innerHeight - rect.top - marginBottom));
      setHeight(h2);
    };
    calc();
    window.addEventListener("resize", calc);
    window.addEventListener("scroll", calc, { passive: true });
    return () => {
      window.removeEventListener("resize", calc);
      window.removeEventListener("scroll", calc);
    };
  }, [minHeight, marginBottom]);
  return [ref, height];
}
const CARD_W = 260;
const CARD_H = 110;
const GAP = 8;
function statusKeyFromLabel(s2) {
  switch (s2) {
    case "대기":
      return "waiting";
    case "실행중":
      return "running";
    case "완료":
      return "done";
    case "오류":
      return "error";
    default:
      return "waiting";
  }
}
function JobCard({ j: j2 }) {
  const color = j2.status === "완료" ? "#def7ec" : j2.status === "오류" ? "#fde2e2" : j2.status === "실행중" ? "#dbeafe" : "#f3f4f6";
  const border2 = j2.status === "완료" ? "1px solid #10b981" : j2.status === "오류" ? "1px solid #ef4444" : j2.status === "실행중" ? "1px solid #2563eb" : "1px solid #d1d5db";
  const statusKey = statusKeyFromLabel(j2.status);
  const statusLabel = t2(`app.status.${statusKey}`);
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { background: color, border: border2, borderRadius: 8, padding: 10, height: "100%" }, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { fontWeight: 700, marginBottom: 6 }, children: j2.order }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { fontFamily: "monospace", fontSize: 14, marginBottom: 4 }, children: j2.sfc }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { fontSize: 13, display: "flex", justifyContent: "space-between" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { children: [
        t2("app.common.qtyShort"),
        ": ",
        j2.qty
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { children: [
        statusKey === "running" && "⏳",
        statusKey === "done" && "✅",
        statusKey === "error" && "❌",
        statusKey === "waiting" && "🟦",
        " ",
        statusLabel
      ] })
    ] })
  ] });
}
function VirtualJobGrid({ jobs, height }) {
  const [wrapRef, wrapWidth] = useMeasureWidth();
  const colCount = Math.max(1, Math.floor((wrapWidth + GAP) / (CARD_W + GAP)));
  const rowCount = Math.ceil(jobs.length / colCount);
  const itemData = reactExports.useMemo(() => ({ jobs, colCount }), [jobs, colCount]);
  const Cell = ({ columnIndex, rowIndex, style, data }) => {
    const { jobs: jobs2, colCount: colCount2 } = data;
    const index = rowIndex * colCount2 + columnIndex;
    if (index >= jobs2.length) return null;
    const j2 = jobs2[index];
    return /* @__PURE__ */ jsxRuntimeExports.jsx(
      "div",
      {
        style: {
          ...style,
          left: style.left + GAP,
          top: style.top + GAP,
          width: CARD_W,
          height: CARD_H
        },
        children: /* @__PURE__ */ jsxRuntimeExports.jsx(JobCard, { j: j2 })
      }
    );
  };
  return /* @__PURE__ */ jsxRuntimeExports.jsx("div", { ref: wrapRef, style: { height, border: "1px solid #eee", borderRadius: 8 }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
    FixedSizeGrid,
    {
      columnCount: colCount,
      columnWidth: CARD_W + GAP,
      height,
      rowCount,
      rowHeight: CARD_H + GAP,
      width: wrapWidth || 800,
      itemData,
      children: Cell
    }
  ) });
}
function E_Interface_Total() {
  reactExports.useEffect(() => {
    initI18n().catch(() => {
    });
  }, []);
  const navigate = useNavigate();
  const { lines: uiLines, push: uiLog, boxRef: logBoxRef } = useUILog(LOG_MAX);
  const [showLog, setShowLog] = reactExports.useState(true);
  const [layoutMode, setLayoutMode] = reactExports.useState("split");
  const [logWidthSplit, setLogWidthSplit] = reactExports.useState(() => {
    const saved = Number(localStorage.getItem("logWidthSplit"));
    return Number.isFinite(saved) && saved >= 240 ? saved : 360;
  });
  reactExports.useEffect(() => {
    localStorage.setItem("logWidthSplit", String(logWidthSplit));
  }, [logWidthSplit]);
  const hDraggingRef = reactExports.useRef(false);
  const hStartXRef = reactExports.useRef(0);
  const hStartWidthRef = reactExports.useRef(0);
  const onHDragStart = (e2) => {
    hDraggingRef.current = true;
    hStartXRef.current = e2.clientX;
    hStartWidthRef.current = logWidthSplit;
    document.body.style.cursor = "ew-resize";
  };
  reactExports.useEffect(() => {
    const onMove = (e2) => {
      if (!hDraggingRef.current) return;
      const dx = hStartXRef.current - e2.clientX;
      const next = Math.min(800, Math.max(240, hStartWidthRef.current + dx));
      setLogWidthSplit(next);
    };
    const onUp = () => {
      if (!hDraggingRef.current) return;
      hDraggingRef.current = false;
      document.body.style.cursor = "";
    };
    window.addEventListener("mousemove", onMove);
    window.addEventListener("mouseup", onUp);
    return () => {
      window.removeEventListener("mousemove", onMove);
      window.removeEventListener("mouseup", onUp);
    };
  }, [logWidthSplit]);
  const [plantList, setPlantList] = reactExports.useState([]);
  const [workcenterList, setWorkcenterList] = reactExports.useState([]);
  const [selectedPlant, setSelectedPlant] = reactExports.useState("C200");
  const [selectedWorkcenter, setSelectedWorkcenter] = reactExports.useState("");
  const [testMode, setTestMode] = reactExports.useState(true);
  const [testOrderNo, setTestOrderNo] = reactExports.useState("");
  const [testSfc, setTestSfc] = reactExports.useState("");
  const [jobs, setJobs] = reactExports.useState([]);
  const jobsTotal = jobs.length;
  const jobsDone = jobs.filter((j2) => j2.status === "완료").length;
  const jobsErr = jobs.filter((j2) => j2.status === "오류").length;
  const jobsRunning = jobs.filter((j2) => j2.status === "실행중").length;
  const progressPct = reactExports.useMemo(() => {
    if (jobsTotal === 0) return 0;
    const finished = jobsDone + jobsErr;
    return Math.round(finished / jobsTotal * 100);
  }, [jobsDone, jobsErr, jobsTotal]);
  const updateJob = (key, patch) => {
    setJobs((prev) => prev.map((j2) => j2.key === key ? { ...j2, ...patch } : j2));
  };
  const pushJobs = (items) => setJobs((prev) => [...prev, ...items]);
  const resetJobs = () => setJobs([]);
  reactExports.useEffect(() => {
    fetchCombos();
  }, []);
  reactExports.useEffect(() => {
    (async () => {
      await fetchCombos();
      setSelectedWorkcenter("");
    })();
  }, [selectedPlant]);
  const fetchCombo = async (type, plantCd) => {
    try {
      const ax = await getAxios();
      const params = type === "PT" ? { type } : { type, plant_cd: plantCd };
      const res = await ax.get("/api/mssql/basic-info", { params });
      return Array.isArray(res.data) ? res.data : [];
    } catch (e2) {
      uiLog("warn", `❌ ${t2("app.log.combo.fail", { type })}`, e2);
      return [];
    }
  };
  const fetchCombos = async () => {
    const plants = await fetchCombo("PT");
    const wcs = await fetchCombo("WC", selectedPlant);
    setPlantList(plants);
    setWorkcenterList(wcs);
  };
  const runChainsForTargets = async (order, targets, wcFromOrder, opts) => {
    const plant = order.plant || selectedPlant;
    const concurrency = opts?.testMode ? 1 : CONCURRENCY_SFC_CHAIN;
    await mapLimit(targets, concurrency, async (row) => {
      const jobKey = `${row.orderNumber}-${row.sfc}`;
      const tg = tag(row.orderNumber, row.sfc);
      console.time(`⏱️ chain ${tg}`);
      try {
        updateJob(jobKey, { status: "실행중" });
        const sfc = String(row.sfc).slice(0, 128);
        const qty = Number(row.qty || 0);
        if (!sfc || qty <= 0) {
          uiLog("warn", `⛔ ${t2("app.log.skip.invalidSfcQty")} ${tg}`);
          updateJob(jobKey, { status: "오류" });
          console.timeEnd(`⏱️ chain ${tg}`);
          return;
        }
        const { sfcDetail, operation, operationVersion, stepId, routing, resource: workCenterResolved } = await resolveOpAndResource({ plant, order, sfc, selectedWorkcenter, row, wcFromOrder }, uiLog);
        const sfcTotal = Number(row.sfcTotalQty ?? sfcDetail?.quantity ?? qty);
        if (!operation || !workCenterResolved) {
          uiLog("warn", `${tg} ${t2("app.log.skip.noOpOrRes")}`);
          updateJob(jobKey, { status: "오류" });
          console.timeEnd(`⏱️ chain ${tg}`);
          return;
        }
        const baseUOM = await fetchBomBaseUom(plant, sfcDetail?.bom?.bom, sfcDetail?.bom?.type, uiLog);
        const uomData = await fetchUom(baseUOM, uiLog);
        const internal = uomData?.internalCode || uomData?.unitCode || "EA";
        const iso = uomData?.isoCode || internal;
        const commercial = uomData?.commercialCodes?.find((c2) => ["ko", "en"].includes(c2.language))?.commercialCode || uomData?.commercialCodes?.[0]?.commercialCode || internal;
        const unitOfMeasure = {
          commercialUnitOfMeasure: commercial,
          internalUnitOfMeasure: internal,
          isoUnitOfMeasure: iso
        };
        uiLog("info", `🚀 START ${tg}`, { operation, workCenterResolved });
        await callSapStart({ plant, operation, resource: String(workCenterResolved).slice(0, 36), sfcs: [sfc] }, uiLog);
        uiLog("info", `🚚 ${t2("app.log.gr.try1")} ${tg}`, { qty, mat: row.materialCode, sloc: row.storageLocation });
        let grResp = await postGoodsReceipt({
          plant,
          order: row.orderNumber,
          postedBy: POSTED_BY,
          lineItems: [{
            material: row.materialCode,
            materialVersion: row.materialVersion || "ERP001",
            postingDate: row.workDate || today(),
            quantity: { unitOfMeasure, value: qty },
            sfc,
            storageLocation: String(row.storageLocation || "").slice(0, 10)
          }]
        }, uiLog);
        if (!grResp || !Array.isArray(grResp?.lineItems) || grResp.lineItems.length === 0) {
          uiLog("info", `🔁 ${t2("app.log.gr.fallbackTotalOnce")} ${tg}`, { totalQty: sfcTotal });
          grResp = await postGoodsReceipt({
            plant,
            order: row.orderNumber,
            postedBy: POSTED_BY,
            lineItems: [{
              material: row.materialCode,
              materialVersion: row.materialVersion || "ERP001",
              postingDate: row.workDate || today(),
              quantity: { unitOfMeasure, value: sfcTotal },
              sfc,
              storageLocation: String(row.storageLocation || "").slice(0, 10)
            }]
          }, uiLog);
        }
        const transactionIds = Array.isArray(grResp?.lineItems) ? grResp.lineItems.filter((li) => li?.transactionId && !li?.hasError).map((li) => li.transactionId) : [];
        if (!transactionIds.length) {
          uiLog("error", `❌ ${t2("app.log.noValidTxIdStop")}`, { order: row.orderNumber, sfc });
          updateJob(jobKey, { status: "오류" });
          console.timeEnd(`⏱️ chain ${tg}`);
          return;
        }
        const allPostedReceipts = await fetchPostedGoodsReceipts(
          plant,
          row.orderNumber,
          sfc,
          row.materialCode,
          transactionIds,
          uiLog
        );
        const postedMatchedTxIds = new Set(
          allPostedReceipts.filter((gr) => transactionIds.includes(gr.transactionId?.trim?.())).map((gr) => gr.transactionId?.trim?.())
        );
        const postedQty = allPostedReceipts.filter((gr) => !postedMatchedTxIds.has(gr.transactionId?.trim?.())).reduce((sum, gr) => sum + Number(gr.quantityInBaseUnit?.value ?? 0), 0);
        const currentProcessingQty = allPostedReceipts.filter((gr) => postedMatchedTxIds.has(gr.transactionId?.trim?.())).reduce((sum, gr) => sum + Number(gr.quantityInBaseUnit?.value ?? 0), 0);
        const totalDone = Math.round((postedQty + currentProcessingQty) * 1e3) / 1e3;
        const isFinal = Math.abs(sfcTotal - totalDone) < 1e-3;
        uiLog("info", `📦 ${t2("app.log.gr.accumulateCheck")}`, {
          sfcTotal,
          postedQty,
          currentProcessingQty,
          totalDone,
          remain: Math.max(0, sfcTotal - totalDone),
          isFinal
        });
        await postQtyConfirm({
          plant,
          shopOrder: row.orderNumber,
          sfc,
          operationActivity: operation,
          workCenter: workCenterResolved,
          yieldQuantity: qty,
          yieldQuantityUnit: internal,
          yieldQuantityIsoUnit: iso,
          isFinalConfirmation: isFinal
        }, uiLog);
        if (isFinal) {
          const std = await fetchStandardValue({
            plant,
            workCenter: workCenterResolved,
            operationActivity: operation,
            operationActivityVersion: operationVersion,
            object: row.orderNumber,
            objectType: "SHOP_ORDER_ROUTING",
            objectVersion: "ERP001"
          }, uiLog);
          const list = std?.standardValueCollectionList;
          if (Array.isArray(list) && list.length > 0) {
            const postingDateTime = (/* @__PURE__ */ new Date()).toISOString().replace(/\.\d{3}Z$/, ".000Z");
            const postedBy = "dongil.kang@changshininc.com";
            uiLog("info", `🧾 ${t2("app.log.activity.ready")} ${tg}`, { count: list.length });
            await postActivityConfirm({
              plant,
              shopOrder: row.orderNumber,
              sfc,
              operationActivity: operation,
              stepId,
              workCenter: workCenterResolved,
              activities: list.map((it2) => ({
                activityId: it2.standardVal,
                quantity: it2?.standardValueQuantity?.value || 0,
                unitOfMeasure: it2?.standardValueQuantity?.unitOfMeasure?.uom || "S",
                isoUnitOfMeasure: it2?.standardValueQuantity?.unitOfMeasure?.internalUom || "S",
                postedBy,
                postingDateTime
              }))
            }, uiLog);
          } else {
            uiLog("info", `ℹ️ ${t2("app.log.activity.none")} ${tg}`);
          }
        }
        updateJob(jobKey, { status: "완료" });
        console.timeEnd(`⏱️ chain ${tg}`);
      } catch (err) {
        updateJob(jobKey, { status: "오류" });
        console.timeEnd(`⏱️ chain ${tg}`);
        uiLog("error", `❌ ${t2("app.log.chain.fail")}`, err);
      }
    });
  };
  const handleSearch = async () => {
    try {
      resetJobs();
      uiLog("info", `🔵 ${t2("app.log.orderList.start")}`, { plant: selectedPlant, workCenter: selectedWorkcenter || "(auto?)", testMode });
      const ax = await getAxios();
      const params = { plant: selectedPlant, releaseStatuses: "RELEASABLE" };
      if (selectedWorkcenter) params.workCenter = selectedWorkcenter;
      if (testMode && testOrderNo) {
        params.order = testOrderNo;
        params.limit = 1;
      }
      uiLog("info", `🔵 ${t2("app.log.orderList.request")}`, params);
      const res = await ax.get("/api/sap/order-list2", { params });
      let orders = res.data || [];
      uiLog("info", `📦 ${t2("app.log.orderList.response")}`, { count: Array.isArray(orders) ? orders.length : 0 });
      if (!orders || Array.isArray(orders) && orders.length === 0) {
        alert(t2("app.notice.noResult"));
        return;
      }
      if (testMode) {
        orders = testOrderNo ? orders.filter((o2) => String(o2.order) === testOrderNo).slice(0, 1) : orders.slice(0, 1);
      }
      if (!selectedWorkcenter) {
        const firstWc = orders.find((o2) => Array.isArray(o2.workCenters) && o2.workCenters.length)?.workCenters?.[0]?.workCenter || "";
        if (firstWc) {
          uiLog("info", `ℹ️ ${t2("app.log.autoSet.workCenter")}`, { workCenter: firstWc });
          setSelectedWorkcenter(firstWc);
        }
      }
      const allTargets = [];
      for (const order of orders) {
        try {
          const wcFromOrder = order?.workCenters?.[0]?.workCenter || selectedWorkcenter || "";
          if (!wcFromOrder) {
            uiLog("warn", `[${order.order}] ${t2("app.log.skip.noWcForOrder")}`);
            continue;
          }
          uiLog("info", `➡️ ${t2("app.log.order.prepare")} ${tag(order.order)}`, { wcFromOrder });
          uiLog("info", `🟢 ${t2("app.log.orderRelease.request")}`, { plant: selectedPlant, order: order.order });
          const releaseResp = await ax.post("/api/sap/order-release", { plant: selectedPlant, order: order.order });
          let sfcs = Array.isArray(releaseResp?.data?.data?.sfcs) ? releaseResp.data.data.sfcs : [];
          uiLog("info", `🟢 ${t2("app.log.orderRelease.response")}`, { order: order.order, sfcCount: sfcs.length });
          if (sfcs.length === 0) {
            uiLog("warn", t2("app.log.noSfcForOrder", { order: order.order }));
            continue;
          }
          if (testMode) sfcs = testSfc ? sfcs.filter((s2) => s2.identifier === testSfc).slice(0, 1) : sfcs.slice(0, 1);
          const rows = [];
          for (const s2 of sfcs) {
            uiLog("info", `📝 ${t2("app.log.db.insertSfc.request")} ${tag(order.order, s2.identifier)}`, { qty: s2.quantity, wc: wcFromOrder });
            await ax.post("/api/mssql/interface-insert-sfc", {
              sfc: s2.identifier,
              quantity: s2.quantity,
              workCenter: wcFromOrder,
              plant: order.plant,
              materialCode: order.material?.material,
              materialVersion: order.material?.version,
              materialDescription: order.material?.description,
              bomNumber: order.bom?.bom,
              bomVersion: order.bom?.version,
              bomType: order.bom?.type,
              routingNumber: order.routing?.routing,
              routingVersion: order.routing?.version,
              routingType: order.routing?.routingType,
              orderNumber: order.order,
              orderType: order.orderType,
              status: order.status,
              plannedStartDate: order.plannedStartDate,
              plannedCompletionDate: order.plannedCompletionDate
            });
            uiLog("info", `✅ ${t2("app.log.db.insertSfc.success")} ${tag(order.order, s2.identifier)}`);
            rows.push({
              plant: order.plant,
              workCenter: wcFromOrder,
              orderNumber: order.order,
              sfc: s2.identifier,
              qty: Number(s2.quantity || 0),
              materialCode: order.material?.material || "",
              materialVersion: order.material?.version || "ERP001",
              storageLocation: order.putawayStorageLocation || "",
              workDate: void 0
            });
          }
          uiLog("info", `📝 ${t2("app.log.db.insertOrder.request")} ${tag(order.order)}`, { wc: wcFromOrder });
          await ax.post("/api/mssql/interface-insert-order", {
            plant: order.plant,
            orderNumber: order.order,
            status: order.status,
            releaseStatus: order.releaseStatus,
            executionStatus: order.executionStatus,
            orderType: order.orderType,
            orderCategory: order.orderCategory,
            materialCode: order.material?.material,
            materialVersion: order.material?.version,
            materialDescription: order.material?.description,
            bomNumber: order.bom?.bom,
            bomVersion: order.bom?.version,
            bomType: order.bom?.type,
            routingNumber: order.routing?.routing,
            routingVersion: order.routing?.version,
            routingType: order.routing?.routingType,
            productionQuantity: order.productionQuantity,
            productionUnitOfMeasure: order.productionUnitOfMeasure,
            buildQuantity: order.buildQuantity,
            orderedQuantity: order.orderedQuantity,
            releasedQuantity: order.releasedQuantity,
            doneQuantity: order.doneQuantity,
            goodsReceiptQuantity: order.goodsReceiptQuantity,
            priority: order.priority,
            plannedStartDate: order.plannedStartDate,
            plannedCompletionDate: order.plannedCompletionDate,
            scheduledStartDate: order.scheduledStartDate,
            scheduledCompletionDate: order.scheduledCompletionDate,
            productionVersion: order.productionVersion,
            putawayStorageLocation: order.putawayStorageLocation,
            erpRoutingGroup: order.erpRoutingGroup,
            warehouseNumber: order.warehouseNumber,
            workCenter: wcFromOrder,
            workCenterDesc: workcenterList.find((w2) => w2.CODE === wcFromOrder)?.NAME ?? ""
          });
          uiLog("info", `✅ ${t2("app.log.db.insertOrder.success")} ${tag(order.order)}`);
          allTargets.push({ order, wcFromOrder, rows });
        } catch (orderErr) {
          uiLog("error", `❌ ${t2("app.log.order.prepareFail", { order: order.order })}`, orderErr?.response?.data || orderErr?.message || orderErr);
        }
      }
      const jobItems = [];
      allTargets.forEach(({ rows }) => {
        rows.forEach((r3) => {
          jobItems.push({
            key: `${r3.orderNumber}-${r3.sfc}`,
            order: r3.orderNumber,
            sfc: r3.sfc,
            qty: r3.qty,
            status: "대기"
          });
        });
      });
      pushJobs(jobItems);
      for (const { order, wcFromOrder, rows } of allTargets) {
        uiLog("info", `⚙️ ${t2("app.log.chain.run")} ${tag(order.order)} (targets=${rows.length})`);
        await runChainsForTargets(order, rows, wcFromOrder, { testMode });
        uiLog("info", `✅ ${t2("app.log.chain.done")} ${tag(order.order)}`);
      }
      alert(t2("app.notice.chain.done"));
    } catch (err) {
      const detail = err?.response?.data || err?.message || err;
      uiLog("error", `❌ ${t2("app.log.process.fail")}`, detail);
      alert(`실패: ${typeof detail === "string" ? detail : detail?.message || "Unknown error"}`);
    }
  };
  const [renderMode, setRenderMode] = reactExports.useState("virtual");
  const TOPN_CHOICES = [50, 100, 200, 300, 500, 1e3, -1];
  const [topNCount, setTopNCount] = reactExports.useState(200);
  const [visibleCount, setVisibleCount] = reactExports.useState(200);
  reactExports.useEffect(() => {
    if (renderMode === "virtual") return;
    if (topNCount === -1) setVisibleCount(jobs.length);
    else setVisibleCount(Math.min(topNCount, jobs.length));
  }, [renderMode, topNCount, jobs.length]);
  const renderedJobs = reactExports.useMemo(() => {
    if (renderMode === "virtual") return jobs;
    return jobs.slice(0, visibleCount);
  }, [renderMode, jobs, visibleCount]);
  const hasMoreToShow = renderMode === "topN" && visibleCount < jobs.length;
  const handleShowMore = () => {
    if (topNCount === -1) setVisibleCount(jobs.length);
    else setVisibleCount((prev) => Math.min(prev + topNCount, jobs.length));
  };
  const [splitWrapRef, splitHeight] = useAvailableHeight(420, 16);
  const defaultGridHeight = 560;
  const progressText = t2("app.progress.displayValue", {
    done: (jobsDone + jobsErr).toLocaleString(),
    total: jobsTotal.toLocaleString(),
    pct: progressPct
  });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { padding: "1rem" }, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(Bar2, { design: "Header", style: { backgroundColor: "#d0e5ff", padding: "0.5rem 1rem", border: "1px solid #ccc", position: "relative" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { style: { fontWeight: "bold", fontSize: "2.2rem" }, children: t2("app.page.total.title") }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "img",
        {
          src: backIcon,
          alt: t2("app.common.back"),
          title: t2("app.common.back"),
          onClick: () => navigate(-1),
          style: { position: "absolute", right: 16, top: 10, width: 48, height: 48, cursor: "pointer", userSelect: "none", opacity: 0.9 }
        }
      )
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { border: "1px solid #ccc", borderTop: "none", padding: "1rem 1.25rem", background: "#fafcff" }, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", alignItems: "center", gap: "1.25rem", flexWrap: "wrap" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(ProgressIndicator2, { value: progressPct, displayValue: progressText, style: { width: 420 } }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", gap: "1rem", color: "#333", fontWeight: 600 }, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { children: [
          t2("app.summary.total"),
          ": ",
          jobsTotal
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { style: { color: "#2563eb" }, children: [
          t2("app.summary.running"),
          ": ",
          jobsRunning
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { style: { color: "#16a34a" }, children: [
          t2("app.summary.done"),
          ": ",
          jobsDone
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { style: { color: "#dc2626" }, children: [
          t2("app.summary.error"),
          ": ",
          jobsErr
        ] })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { marginLeft: "auto", display: "flex", alignItems: "center", gap: 12 }, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { children: t2("app.render.mode") }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "select",
          {
            value: renderMode,
            onChange: (e2) => setRenderMode(e2.target.value),
            style: { width: 160, height: 36 },
            title: t2("app.render.modeTitle"),
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "virtual", children: t2("app.render.virtual") }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "topN", children: t2("app.render.topNMore") })
            ]
          }
        ),
        renderMode === "topN" && /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { children: t2("app.render.count") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "select",
            {
              value: topNCount,
              onChange: (e2) => setTopNCount(Number(e2.target.value)),
              style: { width: 160, height: 36 },
              title: t2("app.render.countTitle"),
              children: TOPN_CHOICES.map((n2) => /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: n2, children: n2 === -1 ? t2("app.render.all") : t2("app.render.nItems", { count: n2.toLocaleString() }) }, n2))
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { color: "#555" }, children: t2("app.render.currentShown", { shown: renderedJobs.length.toLocaleString(), total: jobs.length.toLocaleString() }) }),
          hasMoreToShow && /* @__PURE__ */ jsxRuntimeExports.jsx(Button2, { onClick: handleShowMore, design: "Transparent", style: { border: "1px solid #ddd" }, children: t2("app.render.showMore", { inc: topNCount === -1 ? t2("app.render.all") : topNCount.toLocaleString() }) })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { children: t2("app.layout.mode") || "레이아웃" }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "select",
          {
            value: layoutMode,
            onChange: (e2) => setLayoutMode(e2.target.value),
            style: { width: 160, height: 36 },
            title: t2("app.layout.modeTitle") || "화면 배치 선택",
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "vertical", children: t2("app.layout.vertical") || "세로(현재)" }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "split", children: t2("app.layout.split") || "가로 분할" })
            ]
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", alignItems: "center", gap: 8 }, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { children: t2("app.log.show") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Switch2, { checked: showLog, onChange: (e2) => setShowLog(e2.target.checked) })
        ] })
      ] })
    ] }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(FlexBox, { direction: "Row", alignItems: "Center", style: { gap: "3rem", padding: "1.25rem", border: "1px solid #ccc", borderTop: "none" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { style: { fontWeight: "bold", fontSize: "1.3rem" }, children: t2("app.common.plant") }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        "select",
        {
          value: selectedPlant,
          className: "common-select",
          style: { width: "150px", fontSize: "1.2rem", padding: "0.5rem" },
          onChange: (e2) => setSelectedPlant(e2.target.value),
          children: plantList.map((item) => /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: item.CODE, children: item.CODE }, item.CODE))
        }
      ),
      /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { style: { fontWeight: "bold", fontSize: "1.3rem" }, children: t2("app.common.workCenter") }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "select",
        {
          value: selectedWorkcenter,
          className: "common-select",
          style: { width: "180px", fontSize: "1.2rem", padding: "0.5rem" },
          onChange: (e2) => setSelectedWorkcenter(e2.target.value),
          children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: "", children: t2("app.common.selectPlaceholder") }),
            workcenterList.map((item) => /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: item.CODE, children: item.CODE }, item.CODE))
          ]
        }
      )
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { padding: "0 1.25rem 0.75rem 1.25rem", display: "flex", alignItems: "center", gap: "1rem", borderLeft: "1px solid #ccc", borderRight: "1px solid #ccc" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("label", { style: { display: "flex", alignItems: "center", gap: "0.5rem" }, children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("input", { type: "checkbox", checked: testMode, onChange: (e2) => setTestMode(e2.target.checked) }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { style: { fontWeight: 600 }, children: t2("app.common.testModeOneByOne") })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("input", { placeholder: t2("app.common.orderOptional"), value: testOrderNo, onChange: (e2) => setTestOrderNo(e2.target.value.trim()), style: { width: 200, height: 32 } }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("input", { placeholder: t2("app.common.sfcOptional"), value: testSfc, onChange: (e2) => setTestSfc(e2.target.value.trim()), style: { width: 200, height: 32 } }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("span", { style: { color: "#666" }, children: t2("app.common.testModeHint") })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(FlexBox, { style: { padding: "0 1.25rem 1.25rem 1.25rem", borderLeft: "1px solid #ccc", borderRight: "1px solid #ccc", borderBottom: "1px solid #ccc" }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Button2, { design: "Emphasized", style: { width: "220px", height: "3rem", fontSize: "1.2rem" }, onClick: handleSearch, children: t2("app.button.integrationTest") }) }),
    layoutMode === "split" && showLog ? (
      // ── 가로 분할: 카드(좌, 가변) + 핸들 + 로그(우, 고정/리사이즈 가능) ──
      /* @__PURE__ */ jsxRuntimeExports.jsxs(
        "div",
        {
          ref: splitWrapRef,
          style: { display: "flex", alignItems: "stretch", gap: 0, marginTop: "0.75rem" },
          children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { flex: 1, minWidth: 360, paddingRight: 8 }, children: renderMode === "virtual" ? /* @__PURE__ */ jsxRuntimeExports.jsx(VirtualJobGrid, { jobs, height: splitHeight }) : /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { display: "grid", gap: "8px", gridTemplateColumns: "repeat(auto-fill, minmax(260px, 1fr))", height: splitHeight, overflow: "auto", border: "1px solid #eee", borderRadius: 8, padding: 8 }, children: renderedJobs.map((j2) => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { height: CARD_H }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(JobCard, { j: j2 }) }, j2.key)) }) }),
            /* @__PURE__ */ jsxRuntimeExports.jsx(
              "div",
              {
                onMouseDown: onHDragStart,
                title: "드래그하여 로그 패널 너비 조절",
                style: {
                  width: 6,
                  cursor: "ew-resize",
                  borderRadius: 3,
                  background: "linear-gradient(to right, rgba(0,0,0,0.08), rgba(0,0,0,0.12))",
                  marginRight: 8,
                  userSelect: "none"
                }
              }
            ),
            /* @__PURE__ */ jsxRuntimeExports.jsxs(
              "div",
              {
                style: {
                  flex: `0 0 ${logWidthSplit}px`,
                  minWidth: 240,
                  maxWidth: 800,
                  display: "flex",
                  flexDirection: "column"
                },
                children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { background: "#111827", color: "#d1d5db", padding: "8px 12px", borderTopLeftRadius: 8, borderTopRightRadius: 8, display: "flex", alignItems: "center", justifyContent: "space-between", border: "1px solid #e5e7eb", borderBottom: "none" }, children: [
                    /* @__PURE__ */ jsxRuntimeExports.jsx("span", { style: { fontWeight: 700 }, children: t2("app.log.panelTitle") }),
                    /* @__PURE__ */ jsxRuntimeExports.jsx("span", { style: { fontSize: 12, opacity: 0.8 }, children: t2("app.log.recentOfMax", { count: uiLines.length, max: LOG_MAX }) })
                  ] }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx(
                    "div",
                    {
                      ref: logBoxRef,
                      style: {
                        height: splitHeight - 38,
                        // 헤더 높이 보정
                        overflow: "auto",
                        background: "#0b1220",
                        color: "#e5e7eb",
                        fontFamily: "ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, monospace",
                        fontSize: 12,
                        padding: "8px 12px",
                        border: "1px solid #e5e7eb",
                        borderTop: "none",
                        borderBottomLeftRadius: 8,
                        borderBottomRightRadius: 8
                      },
                      children: uiLines.map((l3, idx) => /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { whiteSpace: "pre-wrap" }, children: [
                        /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { style: { color: "#9ca3af" }, children: [
                          "[",
                          l3.ts,
                          "]"
                        ] }),
                        " ",
                        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { style: {
                          color: l3.level === "error" ? "#ef4444" : l3.level === "warn" ? "#f59e0b" : "#93c5fd",
                          fontWeight: 600
                        }, children: l3.level.toUpperCase() }),
                        " ",
                        /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: l3.text }),
                        l3.ctx !== void 0 ? /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { children: [
                          " ",
                          typeof l3.ctx === "string" ? l3.ctx : JSON.stringify(l3.ctx)
                        ] }) : null
                      ] }, idx))
                    }
                  )
                ]
              }
            )
          ]
        }
      )
    ) : (
      // ── 세로 레이아웃(기존) ──
      /* @__PURE__ */ jsxRuntimeExports.jsxs(jsxRuntimeExports.Fragment, { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { marginTop: "0.5rem" }, children: renderMode === "virtual" ? /* @__PURE__ */ jsxRuntimeExports.jsx(VirtualJobGrid, { jobs, height: defaultGridHeight }) : /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { display: "grid", gap: "8px", gridTemplateColumns: "repeat(auto-fill, minmax(260px, 1fr))" }, children: renderedJobs.map((j2) => /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { height: CARD_H }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(JobCard, { j: j2 }) }, j2.key)) }) }),
        showLog && /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { marginTop: "0.75rem", border: "1px solid #e5e7eb", borderRadius: 8, overflow: "hidden" }, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { background: "#111827", color: "#d1d5db", padding: "8px 12px", display: "flex", alignItems: "center", justifyContent: "space-between" }, children: [
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { style: { fontWeight: 700 }, children: t2("app.log.panelTitle") }),
            /* @__PURE__ */ jsxRuntimeExports.jsx("span", { style: { fontSize: 12, opacity: 0.8 }, children: t2("app.log.recentOfMax", { count: uiLines.length, max: LOG_MAX }) })
          ] }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "div",
            {
              ref: logBoxRef,
              style: { height: 260, overflow: "auto", background: "#0b1220", color: "#e5e7eb", fontFamily: "ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, monospace", fontSize: 12, padding: "8px 12px" },
              children: uiLines.map((l3, idx) => /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { whiteSpace: "pre-wrap" }, children: [
                /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { style: { color: "#9ca3af" }, children: [
                  "[",
                  l3.ts,
                  "]"
                ] }),
                " ",
                /* @__PURE__ */ jsxRuntimeExports.jsx("span", { style: {
                  color: l3.level === "error" ? "#ef4444" : l3.level === "warn" ? "#f59e0b" : "#93c5fd",
                  fontWeight: 600
                }, children: l3.level.toUpperCase() }),
                " ",
                /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: l3.text }),
                l3.ctx !== void 0 ? /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { children: [
                  " ",
                  typeof l3.ctx === "string" ? l3.ctx : JSON.stringify(l3.ctx)
                ] }) : null
              ] }, idx))
            }
          )
        ] })
      ] })
    )
  ] });
}
async function loadResourceMapping() {
  try {
    const res = await fetch("/resource_mapping.json");
    if (!res.ok) throw new Error("Failed to load mapping file");
    return await res.json();
  } catch (err) {
    console.error("❌ 매핑 로딩 실패:", err);
    return {};
  }
}
function E_Interface_Base_Change() {
  reactExports.useEffect(() => {
    initI18n().catch(() => {
    });
  }, []);
  const navigate = useNavigate();
  const [plantList, setPlantList] = reactExports.useState([]);
  const [workcenterList, setWorkcenterList] = reactExports.useState([]);
  const [selectedPlant, setSelectedPlant] = reactExports.useState("C200");
  const [selectedWorkcenter, setSelectedWorkcenter] = reactExports.useState("2DUPC");
  const [detailDataBefore, setDetailDataBefore] = reactExports.useState([]);
  const [detailDataAfter, setDetailDataAfter] = reactExports.useState([]);
  const [resourceMap, setResourceMap] = reactExports.useState({});
  reactExports.useEffect(() => {
    fetchCombos();
  }, []);
  const fetchCombo = async (type, plantCd) => {
    try {
      const ax = await getAxios();
      const params = type === "PT" ? { type } : { type, plant_cd: plantCd };
      const res = await ax.get("/api/mssql/basic-info", { params });
      return Array.isArray(res.data) ? res.data : [];
    } catch (err) {
      console.error(`❌ ${type} 콤보 로딩 실패`, err);
      return [];
    }
  };
  const fetchCombos = async () => {
    const plants = await fetchCombo("PT");
    const workcenters = await fetchCombo("WC", selectedPlant);
    setPlantList(plants);
    setWorkcenterList(workcenters);
    if (!workcenters.some((wc) => wc.CODE === selectedWorkcenter)) {
      setSelectedWorkcenter(workcenters[0]?.CODE ?? "");
    }
  };
  reactExports.useEffect(() => {
    fetchCombos();
  }, [selectedPlant]);
  reactExports.useEffect(() => {
    const loadMapping = async () => {
      const map = await loadResourceMapping();
      setResourceMap(map);
    };
    loadMapping();
  }, []);
  const handleSearch = async () => {
    setDetailDataBefore([]);
    setDetailDataAfter([]);
    try {
      const ax = await getAxios();
      const res = await ax.get("/api/sap/order-list", {
        params: { plant: selectedPlant, releaseStatuses: "RELEASABLE", workCenter: selectedWorkcenter }
      });
      const orders = res.data;
      if (!Array.isArray(orders) || orders.length === 0) {
        alert(t2("app.err.noReleasableOrders"));
        return;
      }
      const beforeList = [];
      const afterList = [];
      for (let i3 = 0; i3 < orders.length; i3++) {
        const order = orders[i3];
        console.log(t2("app.log.iteration", { current: i3 + 1, total: orders.length, order: order.order }));
        const releaseResp = await ax.post("/api/sap/order-release", {
          plant: selectedPlant,
          order: order.order
        });
        const sfcs = Array.isArray(releaseResp.data?.data?.sfcs) ? releaseResp.data.data.sfcs : [];
        if (sfcs.length === 0) {
          console.warn(t2("app.log.noSfcForOrder", { order: order.order }));
          continue;
        }
        const sfc = sfcs[0].identifier;
        const tempDetail = await fetchSfcDetail2(selectedPlant, sfc, "before");
        const operation = tempDetail?.steps?.[0]?.operation?.operation ?? "";
        const workCenter = tempDetail?.steps?.[0]?.plannedWorkCenter ?? "";
        const beforeData = await fetchSfcDetail2(selectedPlant, sfc, "before");
        beforeList.push(beforeData);
        const materialCode = beforeData?.material?.material ?? "";
        const mappedResource = resourceMap[materialCode] || "";
        await callSapAlternateResourceChange({
          plant: selectedPlant,
          sfc,
          operationActivity: operation,
          resource: mappedResource,
          workCenter
        });
        const sapPayload = {
          plant: selectedPlant.slice(0, 6),
          operation,
          resource: mappedResource,
          sfcs: [sfc.slice(0, 128)],
          processLot: ""
        };
        await callSapStartApi(sapPayload);
        const afterData = await fetchSfcDetail2(selectedPlant, sfc, "after");
        afterList.push(afterData);
      }
      setDetailDataBefore(beforeList);
      setDetailDataAfter(afterList);
      alert(t2("app.notice.releaseAndResourceDone"));
    } catch (err) {
      console.error("❌ 전체 처리 실패:", err);
      alert(t2("app.err.processing"));
    }
  };
  const fetchSfcDetail2 = async (plant_cd, sfc, _type) => {
    try {
      const ax = await getAxios();
      const res = await ax.get("/api/sap/sfc-detail", { params: { plant_cd, sfc } });
      return res.data;
    } catch (err) {
      console.error("❌ SAP SFC 상태 조회 실패:", err.response?.data || err.message);
      throw err;
    }
  };
  const callSapAlternateResourceChange = async ({
    plant,
    sfc,
    operationActivity,
    resource,
    workCenter
  }) => {
    try {
      const ax = await getAxios();
      const res = await ax.put(
        "/api/sap/alternate-resource",
        { operationActivity, resource, sfc, workCenter },
        { params: { plant } }
      );
      console.log(t2("app.log.altResource.ok"), res.data);
    } catch (err) {
      console.error(t2("app.log.altResource.fail"), err.response?.data || err.message);
    }
  };
  const callSapStartApi = async (payload) => {
    try {
      console.log(t2("app.log.sapStart.prep"));
      if (!getAccessToken()) {
        console.warn(t2("app.log.token.missing"));
        await refreshToken();
      }
      const token = getAccessToken();
      if (!token) {
        console.error(t2("app.log.token.fail"));
        return;
      }
      console.log(t2("app.log.request.start"));
      console.log(t2("app.log.request.url", { url: SAP_CONFIG.SFC_START_API }));
      console.log(t2("app.log.request.payload", { json: JSON.stringify(payload) }));
      const ax = await getAxios();
      const res = await ax.post("/api/sap-start", payload);
      console.log(t2("app.log.response.ok"), res.data);
    } catch (err) {
      const apiErr = err.response?.data?.error;
      console.error(t2("app.log.response.error", { msg: apiErr?.message || err.message }));
      console.error(t2("app.log.response.body", { json: JSON.stringify(err.response?.data || {}) }));
    }
  };
  const renderGrid = (dataList, titleKey) => /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { flex: 1 }, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx("h3", { children: t2(titleKey) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "grid-table", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx("thead", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { children: t2("app.table.sfc") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { children: t2("app.table.material") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { children: t2("app.table.version") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { children: t2("app.table.bom") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { children: t2("app.table.routing") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { children: t2("app.table.quantity") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { children: t2("app.table.operation") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { children: t2("app.table.operationVersion") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { children: t2("app.table.resource") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("th", { children: t2("app.table.plannedWC") })
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", { children: dataList.length > 0 ? dataList.flatMap(
        (data, idx) => data.steps.map((step, stepIdx) => /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: data.sfc }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: data.material?.material }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: data.material?.version }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: data.bom?.bom }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: data.routing?.routing }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: data.quantity }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: step.operation?.operation || "" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: step.operation?.version || "" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: step.resource || step.plannedWorkCenter || "" }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: step.plannedWorkCenter || "" })
        ] }, `${idx}-${stepIdx}`))
      ) : /* @__PURE__ */ jsxRuntimeExports.jsx("tr", { children: /* @__PURE__ */ jsxRuntimeExports.jsx("td", { colSpan: 10, style: { textAlign: "center" }, children: t2("app.table.noData") }) }) })
    ] })
  ] });
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { padding: "1rem" }, children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
      Bar2,
      {
        design: "Header",
        style: {
          backgroundColor: "#d0e5ff",
          padding: "0.5rem 1rem",
          border: "1px solid #ccc",
          position: "relative"
          // ★ 추가: 우상단 배치용
        },
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { style: { fontWeight: "bold", fontSize: "2.2rem" }, children: t2("app.page.baseChange.title") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "img",
            {
              src: backIcon,
              alt: "Back",
              title: "Back",
              onClick: () => navigate(-1),
              style: {
                position: "absolute",
                right: 16,
                top: 10,
                width: 48,
                height: 48,
                cursor: "pointer",
                userSelect: "none",
                opacity: 0.9
              }
            }
          )
        ]
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsxs(
      FlexBox,
      {
        direction: "Row",
        alignItems: "Center",
        style: { gap: "3rem", padding: "2rem", border: "1px solid #ccc", borderTop: "none" },
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { style: { fontWeight: "bold", fontSize: "1.3rem" }, children: t2("app.common.plant") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "select",
            {
              value: selectedPlant,
              className: "common-select",
              style: { width: "150px", fontSize: "1.2rem", padding: "0.5rem" },
              onChange: (e2) => setSelectedPlant(e2.target.value),
              children: plantList.map((item) => /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: item.CODE, children: item.CODE }, item.CODE))
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { style: { fontWeight: "bold", fontSize: "1.3rem" }, children: t2("app.common.workCenter") }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(
            "select",
            {
              value: selectedWorkcenter,
              className: "common-select",
              style: { width: "180px", fontSize: "1.2rem", padding: "0.5rem" },
              onChange: (e2) => setSelectedWorkcenter(e2.target.value),
              children: workcenterList.map((item) => /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: item.CODE, children: item.CODE }, item.CODE))
            }
          )
        ]
      }
    ),
    /* @__PURE__ */ jsxRuntimeExports.jsx(FlexBox, { style: { padding: "0 2rem 2rem 2rem" }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(
      Button2,
      {
        design: "Emphasized",
        style: { width: "200px", height: "3rem", fontSize: "1.2rem" },
        onClick: handleSearch,
        children: t2("app.button.resourceChange")
      }
    ) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", flexWrap: "wrap", gap: "1rem", padding: "1rem" }, children: [
      renderGrid(detailDataBefore, "app.section.before"),
      renderGrid(detailDataAfter, "app.section.after")
    ] })
  ] });
}
function toYmd(s2) {
  if (!s2) return "";
  const d2 = typeof s2 === "string" ? new Date(s2) : s2;
  const y2 = d2.getFullYear();
  const m2 = String(d2.getMonth() + 1).padStart(2, "0");
  const dd = String(d2.getDate()).padStart(2, "0");
  return `${y2}${m2}${dd}`;
}
const todayStr = () => (/* @__PURE__ */ new Date()).toISOString().slice(0, 10);
function E_ScanOutgoing_Re_Print() {
  const navigate = useNavigate();
  reactExports.useEffect(() => {
    initI18n().catch(() => {
    });
  }, []);
  const [nowTime, setNowTime] = reactExports.useState(/* @__PURE__ */ new Date());
  reactExports.useEffect(() => {
    const timer = setInterval(() => setNowTime(/* @__PURE__ */ new Date()), 1e3);
    return () => clearInterval(timer);
  }, []);
  const [plantList, setPlantList] = reactExports.useState([]);
  const [selectedPlant, setSelectedPlant] = reactExports.useState("C200");
  const [dateFrom, setDateFrom] = reactExports.useState("");
  const [dateTo, setDateTo] = reactExports.useState("");
  const [orderLike, setOrderLike] = reactExports.useState("");
  const [barKeyLike, setBarKeyLike] = reactExports.useState("");
  const [styleLike, setStyleLike] = reactExports.useState("");
  reactExports.useEffect(() => {
    const savedFrom = localStorage.getItem("E_SCAN_REPRINT_FROM");
    const savedTo = localStorage.getItem("E_SCAN_REPRINT_TO");
    const today2 = todayStr();
    setDateFrom(savedFrom || today2);
    setDateTo(savedTo || today2);
  }, []);
  reactExports.useEffect(() => {
    if (dateFrom) localStorage.setItem("E_SCAN_REPRINT_FROM", dateFrom);
  }, [dateFrom]);
  reactExports.useEffect(() => {
    if (dateTo) localStorage.setItem("E_SCAN_REPRINT_TO", dateTo);
  }, [dateTo]);
  const [rows, setRows] = reactExports.useState([]);
  const [selectedKeys, setSelectedKeys] = reactExports.useState(/* @__PURE__ */ new Set());
  const [isLoading, setIsLoading] = reactExports.useState(false);
  const [elapsedTime, setElapsedTime] = reactExports.useState("00:00:00");
  reactExports.useEffect(() => {
    let timerId;
    let startTime = 0;
    if (isLoading) {
      const updateTimer = () => {
        const ms = Date.now() - startTime;
        const sec = Math.floor(ms / 1e3);
        const h2 = String(Math.floor(sec / 3600)).padStart(2, "0");
        const m2 = String(Math.floor(sec % 3600 / 60)).padStart(2, "0");
        const s2 = String(sec % 60).padStart(2, "0");
        const el = document.getElementById("loading-time");
        if (el) el.textContent = `${h2}:${m2}:${s2}`;
      };
      startTime = Date.now();
      updateTimer();
      timerId = setInterval(updateTimer, 1e3);
    }
    return () => {
      if (timerId) clearInterval(timerId);
      const el = document.getElementById("loading-time");
      if (el) el.textContent = "00:00:00";
    };
  }, [isLoading]);
  reactExports.useEffect(() => {
    (async () => {
      try {
        const ax = await getAxios();
        const res = await ax.get("/api/mssql/basic-info", {
          params: { type: "PT", plant_cd: selectedPlant }
        });
        const data = Array.isArray(res.data) ? res.data : [];
        setPlantList(data.length ? data : [{ CODE: "C200" }]);
      } catch {
        setPlantList([{ CODE: "C200" }]);
      }
    })();
  }, []);
  async function handleSearch() {
    if (!selectedPlant) {
      alert(t2("app.err.configRequired"));
      return;
    }
    setIsLoading(true);
    setRows([]);
    setSelectedKeys(/* @__PURE__ */ new Set());
    try {
      const ax = await getAxios();
      const body = {
        plant_cd: selectedPlant,
        print_from: dateFrom ? toYmd(dateFrom) : null,
        print_to: dateTo ? toYmd(dateTo) : null,
        order_like: orderLike || null,
        bar_key_like: barKeyLike || null,
        style_like: styleLike || null
      };
      const res = await ax.post("/api/mssql/epcard/reprint-search", body, {
        headers: { "Content-Type": "application/json" }
      });
      const list = res.data?.rows ?? [];
      setRows(list);
    } catch (err) {
      console.error("❌ 재출력 조회 실패:", err);
      const msg = err?.message || String(err);
      const txt = t2("reprint.err.searchFail", { msg }) || `${t2("ui.error")}: ${msg}`;
      alert(txt);
    } finally {
      setIsLoading(false);
    }
  }
  const keyOf = (r3) => `${r3.ORDER_NUMBER}_${r3.PCARD_SEQ}`;
  const selectedList = () => rows.filter((r3) => selectedKeys.has(keyOf(r3)));
  const allSelected = rows.length > 0 && selectedKeys.size === rows.length;
  const getChecked = (e2) => (e2?.detail && typeof e2.detail.checked === "boolean" ? e2.detail.checked : e2?.target?.checked) ?? false;
  const toggleRow = (key, checked) => {
    setSelectedKeys((prev) => {
      const next = new Set(prev);
      if (checked) next.add(key);
      else next.delete(key);
      return next;
    });
  };
  const toggleAll = (checked) => {
    if (checked) setSelectedKeys(new Set(rows.map(keyOf)));
    else setSelectedKeys(/* @__PURE__ */ new Set());
  };
  function buildPrintJob(r3) {
    return {
      PLANT_CD: selectedPlant,
      ORDER_NUMBER: r3.ORDER_NUMBER,
      BAR_KEY: r3.BAR_KEY,
      PCARD_SEQ: Number(r3.PCARD_SEQ ?? 1),
      PCARD_QTY: r3.PCARD_QTY,
      STYLE_CD: r3.STYLE_CD,
      STYLE_NAME: r3.STYLE_NAME,
      SFC_CD: r3.SFC_CD,
      SIZE_CD: r3.SIZE_CD ?? "",
      MATERIAL_CODE: r3.MATERIAL_CODE ?? "",
      WORK_CENTER: r3.WORK_CENTER ?? ""
    };
  }
  function buildCommitItems(list) {
    return list.map((r3) => ({
      ORDER_NUMBER: r3.ORDER_NUMBER,
      SFC_CD: r3.SFC_CD,
      BAR_KEY: r3.BAR_KEY,
      PCARD_SEQ: r3.PCARD_SEQ
    }));
  }
  async function handleReprint() {
    const selected = selectedList();
    if (selected.length === 0) {
      alert(t2("reprint.msg.selectRow") || t2("ui.select"));
      return;
    }
    const jobs = selected.map(buildPrintJob);
    const ipc = window?.electron?.ipcRenderer?.invoke || window?.api?.invoke || window?.ipcRenderer?.invoke;
    if (!ipc) {
      alert(t2("reprint.err.noIpc") || "ipcRenderer.invoke not found");
      return;
    }
    try {
      const payload = { jobs, options: {} };
      try {
        await ipc("passcard:print-batch", payload);
      } catch {
        await ipc("print:passcards", payload);
      }
      const ax = await getAxios();
      const commitItems = buildCommitItems(selected);
      const commitRes = await ax.post(
        "/api/mssql/epcard/reprint-commit",
        { plant_cd: selectedPlant, items: commitItems },
        { headers: { "Content-Type": "application/json" } }
      );
      console.info("[REPRINT] commit result:", commitRes.data);
      setSelectedKeys(/* @__PURE__ */ new Set());
    } catch (e2) {
      console.error("❌ 재출력/커밋 실패:", e2);
      const msg = e2?.message || String(e2);
      const txt = t2("reprint.err.printFail", { msg }) || `${t2("ui.error")}: ${msg}`;
      alert(txt);
    }
  }
  const initResizable = (th) => {
    if (!th) return;
    const resizer = th.querySelector(".resizer");
    if (!resizer) return;
    let startX = 0, startWidth = 0;
    const onMouseMove = (e2) => {
      const newWidth = Math.max(50, startWidth + e2.clientX - startX);
      th.style.width = `${newWidth}px`;
    };
    const onMouseUp = () => {
      document.removeEventListener("mousemove", onMouseMove);
      document.removeEventListener("mouseup", onMouseUp);
    };
    resizer.addEventListener("mousedown", (e2) => {
      startX = e2.clientX;
      startWidth = th.offsetWidth;
      document.addEventListener("mousemove", onMouseMove);
      document.addEventListener("mouseup", onMouseUp);
    });
  };
  const noWrap = { whiteSpace: "nowrap" };
  return /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { className: "density-compact", children: [
    /* @__PURE__ */ jsxRuntimeExports.jsxs(FlexBox, { style: { backgroundColor: "#0F005F", height: "5rem" }, justifyContent: "SpaceBetween", alignItems: "Center", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { style: { fontSize: "2rem", fontWeight: "bold", color: "white" }, children: t2("reprint.title") }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs(FlexBox, { direction: "Row", alignItems: "Start", gap: "1rem", children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "img",
          {
            src: backIcon,
            alt: "Back Icon",
            onClick: () => navigate("/"),
            style: { width: "48px", height: "52px", padding: "0", marginTop: "2px", cursor: "pointer" }
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsxs(FlexBox, { direction: "Column", alignItems: "End", style: { lineHeight: "1.2" }, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { style: { fontSize: "2rem", color: "white", marginRight: "0.5rem" }, children: nowTime.toISOString().slice(0, 10) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { style: { fontSize: "2rem", color: "white", marginRight: "0.5rem" }, children: nowTime.toLocaleTimeString("ko-KR", { hour12: false, hour: "2-digit", minute: "2-digit", second: "2-digit" }) })
        ] })
      ] })
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { padding: "0.75rem 0 0.25rem 0" }, children: /* @__PURE__ */ jsxRuntimeExports.jsx(Text2, { style: { color: "#5f738a" }, children: t2("reprint.desc") }) }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", alignItems: "center", gap: "2rem", paddingTop: "0.5rem", flexWrap: "nowrap" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs(Label2, { className: "common-label", style: { width: 130, ...noWrap }, children: [
          t2("app.detail.date"),
          " (From)"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          DatePicker2,
          {
            formatPattern: "yyyy-MM-dd",
            value: dateFrom,
            style: { width: "180px", marginTop: "-4px" },
            onChange: (e2) => setDateFrom(e2.detail.value)
          },
          "from-" + dateFrom
        )
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs(Label2, { className: "common-label", style: { width: 130, ...noWrap }, children: [
          t2("app.detail.date"),
          " (To)"
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          DatePicker2,
          {
            formatPattern: "yyyy-MM-dd",
            value: dateTo,
            style: { width: "180px", marginTop: "-4px" },
            onChange: (e2) => setDateTo(e2.detail.value)
          },
          "to-" + dateTo
        )
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { className: "common-label", style: { width: 110, ...noWrap }, children: t2("app.common.plant") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          "select",
          {
            value: selectedPlant,
            style: { width: "120px", padding: "0.4rem 0.8rem", margin: "0.4rem", borderRadius: "4px", border: "1px solid #ccc", fontSize: "1rem" },
            onChange: (e2) => setSelectedPlant(e2.target.value),
            children: (Array.isArray(plantList) ? plantList : [{ CODE: "C200" }]).map((p3) => /* @__PURE__ */ jsxRuntimeExports.jsx("option", { value: p3.CODE, children: p3.CODE }, p3.CODE))
          }
        )
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { className: "common-label", style: { width: 120, ...noWrap }, children: t2("app.detail.orderNo") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(Input2, { value: orderLike, onInput: (e2) => setOrderLike(e2.target.value), style: { width: "220px", marginTop: "-4px" } })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Button2,
        {
          className: "common-button",
          design: "Emphasized",
          onClick: handleSearch,
          style: { marginLeft: "12px" },
          children: t2("app.button.search")
        }
      )
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", alignItems: "center", gap: "2rem", paddingTop: "0.75rem", flexWrap: "nowrap" }, children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { className: "common-label", style: { width: 120, ...noWrap }, children: t2("reprint.filter.barKey") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          Input2,
          {
            value: barKeyLike,
            onInput: (e2) => setBarKeyLike(e2.target.value),
            style: { width: "280px", marginTop: "-4px" }
          }
        )
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx(Label2, { className: "common-label", style: { width: 120, ...noWrap }, children: t2("app.table.styleCode") }),
        /* @__PURE__ */ jsxRuntimeExports.jsx(
          Input2,
          {
            value: styleLike,
            onInput: (e2) => setStyleLike(e2.target.value),
            style: { width: "220px", marginTop: "-4px" }
          }
        )
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx(
        Button2,
        {
          className: "common-button",
          design: "Emphasized",
          onClick: handleReprint,
          disabled: selectedKeys.size === 0,
          children: t2("reprint.button.printAndCommit")
        }
      )
    ] }),
    /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { height: "100vh", display: "flex", flexDirection: "column", overflow: "hidden" }, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { flexGrow: 1, overflowY: "auto", maxHeight: "calc(100vh - 240px)" }, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { minWidth: "max-content" }, children: /* @__PURE__ */ jsxRuntimeExports.jsxs("table", { className: "grid-table reprint-table", children: [
      /* @__PURE__ */ jsxRuntimeExports.jsxs("colgroup", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsx("col", { style: { width: 140 } }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("col", { style: { width: 120 } }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("col", { style: { width: 160 } }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("col", { style: { width: 120 } }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("col", { style: { width: 80 } }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("col", { style: { width: 80 } }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("col", { style: { width: 240 } }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("col", { style: { width: 140 } }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("col", { style: { width: 240 } }),
        /* @__PURE__ */ jsxRuntimeExports.jsx("col", { style: { width: 90 } })
      ] }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("thead", { children: /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { children: [
        /* @__PURE__ */ jsxRuntimeExports.jsxs(
          "th",
          {
            className: `sticky-header resizable ${allSelected ? "select-all--active" : ""}`,
            ref: (el) => initResizable(el),
            onDoubleClick: () => toggleAll(!allSelected),
            title: "Double-click: Select/Deselect all",
            children: [
              /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", alignItems: "center", justifyContent: "center", gap: 6 }, children: [
                /* @__PURE__ */ jsxRuntimeExports.jsx(CheckBox2, { checked: allSelected, onChange: (e2) => toggleAll(getChecked(e2)), style: { transform: "scale(1.0)" } }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("span", { children: t2("reprint.grid.select") }),
                /* @__PURE__ */ jsxRuntimeExports.jsxs("span", { style: { fontWeight: "bold" }, children: [
                  "(",
                  selectedKeys.size,
                  "/",
                  rows.length || 0,
                  ")"
                ] })
              ] }),
              /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
            ]
          }
        ),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "sticky-header resizable", ref: (el) => initResizable(el), children: [
          t2("reprint.grid.printDate"),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "sticky-header resizable", ref: (el) => initResizable(el), children: [
          t2("reprint.grid.orderNumber"),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "sticky-header resizable", ref: (el) => initResizable(el), children: [
          t2("reprint.grid.sfc"),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "sticky-header resizable", ref: (el) => initResizable(el), children: [
          t2("reprint.grid.pcardSeq"),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "sticky-header resizable", ref: (el) => initResizable(el), children: [
          t2("reprint.grid.pcardQty"),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "sticky-header resizable", ref: (el) => initResizable(el), children: [
          t2("reprint.grid.barKey"),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "sticky-header resizable", ref: (el) => initResizable(el), children: [
          t2("reprint.grid.styleCode"),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "sticky-header resizable", ref: (el) => initResizable(el), children: [
          t2("reprint.grid.styleName"),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
        ] }),
        /* @__PURE__ */ jsxRuntimeExports.jsxs("th", { className: "sticky-header resizable", ref: (el) => initResizable(el), children: [
          t2("reprint.grid.size"),
          /* @__PURE__ */ jsxRuntimeExports.jsx("div", { className: "resizer" })
        ] })
      ] }) }),
      /* @__PURE__ */ jsxRuntimeExports.jsx("tbody", { children: rows.map((r3) => {
        const key = keyOf(r3);
        const selected = selectedKeys.has(key);
        return /* @__PURE__ */ jsxRuntimeExports.jsxs("tr", { className: selected ? "row-selected" : void 0, children: [
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: /* @__PURE__ */ jsxRuntimeExports.jsx(CheckBox2, { checked: selected, onChange: (e2) => toggleRow(key, getChecked(e2)) }) }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: r3.PRINT_DATE }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: r3.ORDER_NUMBER }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: r3.SFC_CD }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: r3.PCARD_SEQ }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: r3.PCARD_QTY }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: r3.BAR_KEY }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: r3.STYLE_CD }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: r3.STYLE_NAME }),
          /* @__PURE__ */ jsxRuntimeExports.jsx("td", { children: r3.SIZE_CD ?? "" })
        ] }, key);
      }) })
    ] }) }) }) }),
    isLoading && /* @__PURE__ */ jsxRuntimeExports.jsxs(
      "div",
      {
        style: {
          position: "fixed",
          top: 0,
          left: 0,
          width: "100%",
          height: "100%",
          backgroundColor: "rgba(255, 255, 255, 0.85)",
          zIndex: 9999,
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
          fontFamily: "Malgun Gothic"
        },
        children: [
          /* @__PURE__ */ jsxRuntimeExports.jsxs(
            "div",
            {
              style: {
                display: "flex",
                alignItems: "center",
                gap: "30px",
                padding: "20px",
                border: "2px solid gray",
                borderRadius: "16px",
                backgroundColor: "#fff",
                boxShadow: "0 0 10px rgba(0,0,0,0.1)"
              },
              children: [
                /* @__PURE__ */ jsxRuntimeExports.jsxs("div", { style: { display: "flex", flexDirection: "column", alignItems: "flex-start" }, children: [
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { fontSize: "30px", fontWeight: "bold", marginBottom: "10px" }, children: t2("ui.loading") }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { id: "loading-time", style: { fontSize: "28px", marginBottom: "12px", color: "#07D5F4" }, children: elapsedTime }),
                  /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { width: "200px", height: "10px", background: "#ddd", borderRadius: "5px", overflow: "hidden", position: "relative" }, children: /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { width: "12px", height: "12px", borderRadius: "50%", background: "#0078D4", position: "absolute", top: "-1px", animation: "move-dot 1.5s linear infinite" } }) })
                ] }),
                /* @__PURE__ */ jsxRuntimeExports.jsx("div", { style: { width: "300px", height: "200px" }, children: /* @__PURE__ */ jsxRuntimeExports.jsx("img", { src: loadingIcon, alt: "Loading", style: { width: "100%", height: "100%", objectFit: "contain" } }) })
              ]
            }
          ),
          /* @__PURE__ */ jsxRuntimeExports.jsx("style", { children: `@keyframes move-dot { 0% { left: 0; } 100% { left: 188px; } }` })
        ]
      }
    )
  ] });
}
let warmupClientPromise = null;
function runWarmupOnceFromRenderer() {
  if (warmupClientPromise) return warmupClientPromise;
  warmupClientPromise = (async () => {
    try {
      const ax = await getAxios();
      await Promise.race([
        ax.get("/api/healthz"),
        new Promise((_2, r3) => setTimeout(() => r3(new Error("warmup-timeout")), 1500))
      ]).catch(() => {
      });
      try {
        await window.config?.getPasscardOptions?.();
      } catch {
      }
    } catch {
    }
  })();
  return warmupClientPromise;
}
const ALLOWED = [
  "en",
  "ko-KR",
  "vi",
  "zh-Hans",
  "id"
];
function isLangCode(v2) {
  return ALLOWED.includes(v2);
}
function App() {
  const [ready, setReady] = React.useState(false);
  const [langKey, setLangKey] = React.useState("");
  React.useEffect(() => {
    (async () => {
      await initI18n();
      setLangKey(getCurrentLang());
      setReady(true);
    })();
  }, []);
  React.useEffect(() => {
    const api = window.langEvents;
    if (!api?.onChanged) return;
    const off = api.onChanged(async (code) => {
      if (!isLangCode(code)) {
        console.warn("[i18n] Unknown language code from menu:", code);
        return;
      }
      await setAppLanguage(code);
      setLangKey(code);
    });
    return () => {
      try {
        off && off();
      } catch {
      }
    };
  }, []);
  useI18nRerender();
  React.useEffect(() => {
    runWarmupOnceFromRenderer().catch(() => {
    });
  }, []);
  if (!ready) return null;
  return /* @__PURE__ */ jsxRuntimeExports.jsx(HashRouter, { children: /* @__PURE__ */ jsxRuntimeExports.jsxs(Routes, { children: [
    /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/", element: /* @__PURE__ */ jsxRuntimeExports.jsx(MyApp, {}) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/outgoing", element: /* @__PURE__ */ jsxRuntimeExports.jsx(E_ScanOutgoing, {}) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/outgoing/reprint", element: /* @__PURE__ */ jsxRuntimeExports.jsx(E_ScanOutgoing_Re_Print, {}) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/interface/order", element: /* @__PURE__ */ jsxRuntimeExports.jsx(E_Interface_Prod, {}) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/interface/change", element: /* @__PURE__ */ jsxRuntimeExports.jsx(E_Interface_Base_Change, {}) }),
    /* @__PURE__ */ jsxRuntimeExports.jsx(Route, { path: "/interface/total", element: /* @__PURE__ */ jsxRuntimeExports.jsx(E_Interface_Total, {}) }),
    " "
  ] }, langKey) });
}
async function bootstrap() {
  const container = document.getElementById("root");
  if (!container) throw new Error("Root container missing");
  const root = clientExports.createRoot(container);
  root.render(/* @__PURE__ */ jsxRuntimeExports.jsx(App, {}));
}
bootstrap();
export {
  A$3 as A,
  Button$2 as B,
  LINK_EMPHASIZED as C,
  DropIndicator$1 as D,
  LINK_SUBTLE as E,
  Fragment as F,
  n$7 as G,
  b$4 as H,
  Input$2 as I,
  A$2 as J,
  EXPANDABLE_TEXT_SHOW_LESS as K,
  ListItemBase$1 as L,
  EXPANDABLE_TEXT_SHOW_MORE as M,
  EXPANDABLE_TEXT_CLOSE as N,
  EXPANDABLE_TEXT_SHOW_LESS_POPOVER_ARIA_LABEL as O,
  EXPANDABLE_TEXT_SHOW_MORE_POPOVER_ARIA_LABEL as P,
  d$h as Q,
  ResponsivePopover$1 as R,
  Text$2 as T,
  jsxs as a,
  defaultTheme as b,
  ListItemAccessibleRole$1 as c,
  defaultThemeBase as d,
  ListItemGroupHeader$1 as e,
  f$i as f,
  fnEncodeXML as g,
  d$4 as h,
  ListItemGroup$1 as i,
  jsx as j,
  Icon$2 as k,
  ListAccessibleRole as l,
  m$7 as m,
  List as n,
  decline as o,
  p$8 as p,
  LIST_ITEM_GROUP_HEADER as q,
  LIST_ITEM_POSITION as r,
  s$7 as s,
  i$8 as t,
  l$b as u,
  b$6 as v,
  i$o as w,
  c$g as x,
  y$4 as y,
  a$m as z
};
