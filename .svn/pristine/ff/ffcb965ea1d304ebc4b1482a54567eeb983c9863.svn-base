import { a as jsxs, j as jsx, k as Icon, p, d as defaultThemeBase, b as defaultTheme, s, t as i, m, u as l, y, v as b, f, w as i$1, x as c, z as a, A, C as LINK_EMPHASIZED, E as LINK_SUBTLE, G as n, H as b$1, J as A$1, T as Text, F as Fragment, R as ResponsivePopover, B as Button, K as EXPANDABLE_TEXT_SHOW_LESS, M as EXPANDABLE_TEXT_SHOW_MORE, N as EXPANDABLE_TEXT_CLOSE, O as EXPANDABLE_TEXT_SHOW_LESS_POPOVER_ARIA_LABEL, P as EXPANDABLE_TEXT_SHOW_MORE_POPOVER_ARIA_LABEL, Q as d } from "./index-B__XUdVg.js";
var LinkDesign;
(function(LinkDesign2) {
  LinkDesign2["Default"] = "Default";
  LinkDesign2["Subtle"] = "Subtle";
  LinkDesign2["Emphasized"] = "Emphasized";
})(LinkDesign || (LinkDesign = {}));
const LinkDesign$1 = LinkDesign;
function LinkTemplate() {
  return jsxs("a", { part: "root", class: "ui5-link-root", role: this.effectiveAccRole, href: this.parsedRef, target: this.target, rel: this._rel, tabindex: this.effectiveTabIndex, title: this.tooltip, "aria-disabled": this.disabled, "aria-label": this.ariaLabelText, "aria-haspopup": this._hasPopup, "aria-expanded": this.accessibilityAttributes.expanded, "aria-current": this.accessibilityAttributes.current, "aria-description": this.ariaDescriptionText, onClick: this._onclick, onKeyDown: this._onkeydown, onKeyUp: this._onkeyup, children: [this.icon && jsx(Icon, { class: "ui5-link-icon", name: this.icon, mode: "Decorative", part: "icon" }), jsx("span", { class: "ui5-link-text", children: jsx("slot", {}) }), this.hasLinkType && jsx("span", { class: "ui5-hidden-text", children: this.linkTypeText }), this.endIcon && jsx(Icon, { class: "ui5-link-end-icon", name: this.endIcon, mode: "Decorative", part: "endIcon" })] });
}
p("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const linkCss = `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:inline-flex}:host{max-width:100%;color:var(--sapLinkColor);font-family:var(--sapFontFamily);font-size:var(--sapFontSize);cursor:pointer;outline:none;text-decoration:var(--_ui5-v2-14-0_link_text_decoration);text-shadow:var(--sapContent_TextShadow);white-space:normal;overflow-wrap:break-word}:host(:hover){color:var(--sapLink_Hover_Color);text-decoration:var(--_ui5-v2-14-0_link_hover_text_decoration)}:host(:active){color:var(--sapLink_Active_Color);text-decoration:var(--_ui5-v2-14-0_link_active_text_decoration)}:host([disabled]){pointer-events:none}:host([disabled]) .ui5-link-root{text-shadow:none;outline:none;cursor:default;pointer-events:none;opacity:var(--sapContent_DisabledOpacity)}:host([design="Emphasized"]) .ui5-link-root{font-family:var(--sapFontBoldFamily)}:host([design="Subtle"]){color:var(--sapLink_SubtleColor);text-decoration:var(--_ui5-v2-14-0_link_subtle_text_decoration)}:host([design="Subtle"]:hover:not(:active)){color:var(--sapLink_SubtleColor);text-decoration:var(--_ui5-v2-14-0_link_subtle_text_decoration_hover)}:host([wrapping-type="None"]){white-space:nowrap;overflow-wrap:normal}.ui5-link-root{max-width:100%;display:inline-block;position:relative;overflow:hidden;text-overflow:ellipsis;outline:none;white-space:inherit;overflow-wrap:inherit;text-decoration:inherit;color:inherit}:host([wrapping-type="None"][end-icon]) .ui5-link-root{display:inline-flex;align-items:end}:host .ui5-link-root{outline-offset:-.0625rem;border-radius:var(--_ui5-v2-14-0_link_focus_border-radius)}.ui5-link-icon,.ui5-link-end-icon{color:inherit;flex-shrink:0}.ui5-link-icon{float:inline-start;margin-inline-end:.125rem}.ui5-link-end-icon{margin-inline-start:.125rem;vertical-align:bottom}.ui5-link-text{overflow:hidden;text-overflow:ellipsis}.ui5-link-root:focus-visible,:host([desktop]) .ui5-link-root:focus-within,:host([design="Subtle"]) .ui5-link-root:focus-visible,:host([design="Subtle"][desktop]) .ui5-link-root:focus-within{background-color:var(--_ui5-v2-14-0_link_focus_background_color);outline:var(--_ui5-v2-14-0_link_outline);border-radius:var(--_ui5-v2-14-0_link_focus_border-radius);text-shadow:none;color:var(--_ui5-v2-14-0_link_focus_color)}:host(:not([desktop])) .ui5-link-root:focus-visible,:host([desktop]:focus-within),:host([design="Subtle"][desktop]:focus-within){text-decoration:var(--_ui5-v2-14-0_link_focus_text_decoration)}:host([desktop]:hover:not(:active):focus-within),:host([design="Subtle"][desktop]:hover:not(:active):focus-within){color:var(--_ui5-v2-14-0_link_focused_hover_text_color);text-decoration:var(--_ui5-v2-14-0_link_focused_hover_text_decoration)}:host([interactive-area-size="Large"]) .ui5-link-root{line-height:var(--_ui5-v2-14-0_link_large_interactive_area_height)}:host([interactive-area-size="Large"])::part(icon),:host([interactive-area-size="Large"])::part(endIcon){height:var(--_ui5-v2-14-0_link_large_interactive_area_height)}
`;
var __decorate$1 = function(decorators, target, key, desc) {
  var c2 = arguments.length, r = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i2 = decorators.length - 1; i2 >= 0; i2--) if (d2 = decorators[i2]) r = (c2 < 3 ? d2(r) : c2 > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c2 > 3 && r && Object.defineProperty(target, key, r), r;
};
var Link_1;
let Link = Link_1 = class Link2 extends b {
  constructor() {
    super();
    this.disabled = false;
    this.design = "Default";
    this.interactiveAreaSize = "Normal";
    this.wrappingType = "Normal";
    this.accessibleRole = "Link";
    this.accessibilityAttributes = {};
    this._dummyAnchor = document.createElement("a");
  }
  onEnterDOM() {
    if (f()) {
      this.setAttribute("desktop", "");
    }
  }
  onBeforeRendering() {
    const needsNoReferrer = this.target !== "_self" && this.href && this._isCrossOrigin(this.href);
    this._rel = needsNoReferrer ? "noreferrer noopener" : void 0;
  }
  _isCrossOrigin(href) {
    this._dummyAnchor.href = href;
    return !(this._dummyAnchor.hostname === i$1() && this._dummyAnchor.port === c() && this._dummyAnchor.protocol === a());
  }
  get effectiveTabIndex() {
    if (this.forcedTabIndex) {
      return Number.parseInt(this.forcedTabIndex);
    }
    return this.disabled || !this.textContent?.length ? -1 : 0;
  }
  get ariaLabelText() {
    return A(this);
  }
  get hasLinkType() {
    return this.design !== LinkDesign$1.Default;
  }
  static typeTextMappings() {
    return {
      "Subtle": LINK_SUBTLE,
      "Emphasized": LINK_EMPHASIZED
    };
  }
  get linkTypeText() {
    return Link_1.i18nBundle.getText(Link_1.typeTextMappings()[this.design]);
  }
  get parsedRef() {
    return this.href && this.href.length > 0 ? this.href : void 0;
  }
  get effectiveAccRole() {
    return n(this.accessibleRole);
  }
  get ariaDescriptionText() {
    return this.accessibleDescription === "" ? void 0 : this.accessibleDescription;
  }
  get _hasPopup() {
    return this.accessibilityAttributes.hasPopup;
  }
  _onclick(e) {
    const { altKey, ctrlKey, metaKey, shiftKey } = e;
    e.stopImmediatePropagation();
    const executeEvent = this.fireDecoratorEvent("click", {
      altKey,
      ctrlKey,
      metaKey,
      shiftKey
    });
    if (!executeEvent) {
      e.preventDefault();
    }
  }
  _onkeydown(e) {
    if (b$1(e) && !this.href) {
      this._onclick(e);
      e.preventDefault();
    } else if (A$1(e)) {
      e.preventDefault();
    }
  }
  _onkeyup(e) {
    if (!A$1(e)) {
      return;
    }
    this._onclick(e);
    if (this.href && !e.defaultPrevented) {
      const customEvent = new MouseEvent("click");
      customEvent.stopImmediatePropagation();
      this.getDomRef().dispatchEvent(customEvent);
    }
  }
};
__decorate$1([
  s({ type: Boolean })
], Link.prototype, "disabled", void 0);
__decorate$1([
  s()
], Link.prototype, "tooltip", void 0);
__decorate$1([
  s()
], Link.prototype, "href", void 0);
__decorate$1([
  s()
], Link.prototype, "target", void 0);
__decorate$1([
  s()
], Link.prototype, "design", void 0);
__decorate$1([
  s()
], Link.prototype, "interactiveAreaSize", void 0);
__decorate$1([
  s()
], Link.prototype, "wrappingType", void 0);
__decorate$1([
  s()
], Link.prototype, "accessibleName", void 0);
__decorate$1([
  s()
], Link.prototype, "accessibleNameRef", void 0);
__decorate$1([
  s()
], Link.prototype, "accessibleRole", void 0);
__decorate$1([
  s({ type: Object })
], Link.prototype, "accessibilityAttributes", void 0);
__decorate$1([
  s()
], Link.prototype, "accessibleDescription", void 0);
__decorate$1([
  s()
], Link.prototype, "icon", void 0);
__decorate$1([
  s()
], Link.prototype, "endIcon", void 0);
__decorate$1([
  s({ noAttribute: true })
], Link.prototype, "_rel", void 0);
__decorate$1([
  s({ noAttribute: true })
], Link.prototype, "forcedTabIndex", void 0);
__decorate$1([
  i("@ui5/webcomponents")
], Link, "i18nBundle", void 0);
Link = Link_1 = __decorate$1([
  m({
    tag: "ui5-link",
    languageAware: true,
    renderer: y,
    template: LinkTemplate,
    styles: linkCss
  }),
  l("click", {
    bubbles: true,
    cancelable: true
  })
], Link);
Link.define();
const Link$1 = Link;
var ExpandableTextOverflowMode;
(function(ExpandableTextOverflowMode2) {
  ExpandableTextOverflowMode2["InPlace"] = "InPlace";
  ExpandableTextOverflowMode2["Popover"] = "Popover";
})(ExpandableTextOverflowMode || (ExpandableTextOverflowMode = {}));
const ExpandableTextOverflowMode$1 = ExpandableTextOverflowMode;
function ExpandableTextTemplate() {
  return jsxs("div", { children: [jsx(Text, { class: "ui5-exp-text-text", emptyIndicatorMode: this.emptyIndicatorMode, children: this._displayedText }), this._maxCharactersExceeded && jsxs(Fragment, { children: [jsx("span", { class: "ui5-exp-text-ellipsis", children: this._ellipsisText }), jsx(Link$1, { id: "toggle", class: "ui5-exp-text-toggle", accessibleRole: "Button", accessibleName: this._accessibleNameForToggle, accessibilityAttributes: this._accessibilityAttributesForToggle, onClick: this._handleToggleClick, children: this._textForToggle }), this._usePopover && jsxs(ResponsivePopover, { open: this._expanded, opener: "toggle", accessibleNameRef: "popover-text", contentOnlyOnDesktop: true, _hideHeader: true, class: "ui5-exp-text-popover", onClose: this._handlePopoverClose, children: [jsx(Text, { id: "popover-text", children: this.text }), jsx("div", { slot: "footer", class: "ui5-exp-text-footer", children: jsx(Button, { design: "Transparent", onClick: this._handleCloseButtonClick, children: this._closeButtonText }) })] })] })] });
}
p("@ui5/webcomponents-theming", "sap_horizon", async () => defaultThemeBase);
p("@ui5/webcomponents", "sap_horizon", async () => defaultTheme);
const ExpandableTextCss = `:host{display:inline-block;font-family:var(--sapFontFamily);font-size:var(--sapFontSize);color:var(--sapTextColor)}:host([hidden]){display:none}.ui5-exp-text-text{display:inline}.ui5-exp-text-text,.ui5-exp-text-toggle{font-family:inherit;font-size:inherit}.ui5-exp-text-text,.ui5-exp-text-ellipsis{color:inherit}.ui5-exp-text-popover::part(content){padding-inline:1rem}.ui5-exp-text-footer{width:100%;display:flex;align-items:center;justify-content:flex-end}
`;
var __decorate = function(decorators, target, key, desc) {
  var c2 = arguments.length, r = c2 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i2 = decorators.length - 1; i2 >= 0; i2--) if (d2 = decorators[i2]) r = (c2 < 3 ? d2(r) : c2 > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c2 > 3 && r && Object.defineProperty(target, key, r), r;
};
var ExpandableText_1;
let ExpandableText = ExpandableText_1 = class ExpandableText2 extends b {
  constructor() {
    super(...arguments);
    this.maxCharacters = 100;
    this.overflowMode = "InPlace";
    this.emptyIndicatorMode = "Off";
    this._expanded = false;
  }
  getFocusDomRef() {
    if (this._usePopover) {
      return this.shadowRoot?.querySelector("[ui5-responsive-popover]");
    }
    return this.shadowRoot?.querySelector("[ui5-link]");
  }
  get _displayedText() {
    if (this._expanded && !this._usePopover) {
      return this.text;
    }
    return this.text?.substring(0, this.maxCharacters);
  }
  get _maxCharactersExceeded() {
    return (this.text?.length || 0) > this.maxCharacters;
  }
  get _usePopover() {
    return this.overflowMode === ExpandableTextOverflowMode$1.Popover;
  }
  get _ellipsisText() {
    if (this._expanded && !this._usePopover) {
      return " ";
    }
    return "... ";
  }
  get _textForToggle() {
    return this._expanded ? ExpandableText_1.i18nBundle.getText(EXPANDABLE_TEXT_SHOW_LESS) : ExpandableText_1.i18nBundle.getText(EXPANDABLE_TEXT_SHOW_MORE);
  }
  get _closeButtonText() {
    return ExpandableText_1.i18nBundle.getText(EXPANDABLE_TEXT_CLOSE);
  }
  get _accessibilityAttributesForToggle() {
    if (this._usePopover) {
      return {
        expanded: this._expanded,
        hasPopup: "dialog"
      };
    }
    return {
      expanded: this._expanded
    };
  }
  get _accessibleNameForToggle() {
    if (this._usePopover) {
      return this._expanded ? ExpandableText_1.i18nBundle.getText(EXPANDABLE_TEXT_SHOW_LESS_POPOVER_ARIA_LABEL) : ExpandableText_1.i18nBundle.getText(EXPANDABLE_TEXT_SHOW_MORE_POPOVER_ARIA_LABEL);
    }
    return void 0;
  }
  _handlePopoverClose() {
    if (!d()) {
      this._expanded = false;
    }
  }
  _handleToggleClick() {
    this._expanded = !this._expanded;
  }
  _handleCloseButtonClick(e) {
    this._expanded = false;
    e.stopPropagation();
  }
};
__decorate([
  s()
], ExpandableText.prototype, "text", void 0);
__decorate([
  s({ type: Number })
], ExpandableText.prototype, "maxCharacters", void 0);
__decorate([
  s()
], ExpandableText.prototype, "overflowMode", void 0);
__decorate([
  s()
], ExpandableText.prototype, "emptyIndicatorMode", void 0);
__decorate([
  s({ type: Boolean })
], ExpandableText.prototype, "_expanded", void 0);
__decorate([
  i("@ui5/webcomponents")
], ExpandableText, "i18nBundle", void 0);
ExpandableText = ExpandableText_1 = __decorate([
  m({
    tag: "ui5-expandable-text",
    renderer: y,
    styles: ExpandableTextCss,
    template: ExpandableTextTemplate
  })
], ExpandableText);
ExpandableText.define();
function ListItemStandardExpandableTextTemplate(injectedProps) {
  const { className, text, maxCharacters, part } = injectedProps;
  return jsx(ExpandableText, { part, class: className, text, maxCharacters });
}
export {
  ListItemStandardExpandableTextTemplate as default
};
